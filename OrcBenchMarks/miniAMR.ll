; ModuleID = 'miniAMR.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.block = type { i32, i32, i32, i32, i32, i32, i32, [6 x i32], [6 x i32], [6 x [2 x [2 x i32]]], [3 x i32], double**** }
%struct.parent = type { i32, i32, i32, i32, i32, i32, [8 x i32], [8 x i32], [3 x i32] }
%struct.sorted_block = type { i32, i32 }
%struct.object = type { i32, i32, [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double], [3 x double] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@cur_max_level = common dso_local global i32 0, align 4
@max_active_block = common dso_local global i32 0, align 4
@blocks = common dso_local global %struct.block* null, align 8
@block_start = common dso_local global i32* null, align 8
@p2 = common dso_local global i32* null, align 8
@npx = common dso_local global i32 0, align 4
@init_block_x = common dso_local global i32 0, align 4
@npy = common dso_local global i32 0, align 4
@init_block_y = common dso_local global i32 0, align 4
@num_active = common dso_local global i32 0, align 4
@max_num_blocks = common dso_local global i32 0, align 4
@my_pe = common dso_local global i32 0, align 4
@local_max_b = common dso_local global i32 0, align 4
@num_blocks = common dso_local global i32* null, align 8
@max_active_parent = common dso_local global i32 0, align 4
@parents = common dso_local global %struct.parent* null, align 8
@max_num_parents = common dso_local global i32 0, align 4
@num_parents = common dso_local global i32 0, align 4
@num_refined = common dso_local global i32 0, align 4
@num_refine = common dso_local global i32 0, align 4
@x_block_half = common dso_local global i32 0, align 4
@y_block_half = common dso_local global i32 0, align 4
@z_block_half = common dso_local global i32 0, align 4
@num_vars = common dso_local global i32 0, align 4
@stencil = common dso_local global i32 0, align 4
@num_reformed = common dso_local global i32 0, align 4
@sorted_index = common dso_local global i32* null, align 8
@sorted_list = common dso_local global %struct.sorted_block* null, align 8
@num_pes = common dso_local global i32 0, align 4
@target_active = common dso_local global i32 0, align 4
@target_max = common dso_local global i32 0, align 4
@target_min = common dso_local global i32 0, align 4
@uniform_refine = common dso_local global i32 0, align 4
@x_block_size = common dso_local global i32 0, align 4
@y_block_size = common dso_local global i32 0, align 4
@z_block_size = common dso_local global i32 0, align 4
@comm_vars = common dso_local global i32 0, align 4
@init_block_z = common dso_local global i32 0, align 4
@reorder = common dso_local global i32 0, align 4
@npz = common dso_local global i32 0, align 4
@inbalance = common dso_local global i32 0, align 4
@refine_freq = common dso_local global i32 0, align 4
@report_diffusion = common dso_local global i32 0, align 4
@checksum_freq = common dso_local global i32 0, align 4
@stages_per_ts = common dso_local global i32 0, align 4
@error_tol = common dso_local global i32 0, align 4
@num_tsteps = common dso_local global i32 0, align 4
@report_perf = common dso_local global i32 0, align 4
@plot_freq = common dso_local global i32 0, align 4
@lb_opt = common dso_local global i32 0, align 4
@block_change = common dso_local global i32 0, align 4
@code = common dso_local global i32 0, align 4
@permute = common dso_local global i32 0, align 4
@nonblocking = common dso_local global i32 0, align 4
@refine_ghost = common dso_local global i32 0, align 4
@global_active = common dso_local global i32 0, align 4
@tol = common dso_local global double 0.000000e+00, align 8
@grid_sum = common dso_local global double* null, align 8
@p8 = common dso_local global i32* null, align 8
@mesh_size = common dso_local global [3 x i32] zeroinitializer, align 4
@max_mesh_size = common dso_local global i32 0, align 4
@from = common dso_local global i32* null, align 8
@to = common dso_local global i32* null, align 8
@msg_len = common dso_local global [3 x [4 x i32]] zeroinitializer, align 16
@global_max_b = common dso_local global i32 0, align 4
@num_objects = common dso_local global i32 0, align 4
@objects = common dso_local global %struct.object* null, align 8
@average = common dso_local global [128 x double] zeroinitializer, align 16
@stddev = common dso_local global [128 x double] zeroinitializer, align 16
@minimum = common dso_local global [128 x double] zeroinitializer, align 16
@maximum = common dso_local global [128 x double] zeroinitializer, align 16
@timer_all = common dso_local global double 0.000000e+00, align 8
@timer_comm_all = common dso_local global double 0.000000e+00, align 8
@timer_comm_dir = common dso_local global [3 x double] zeroinitializer, align 16
@timer_comm_same = common dso_local global [3 x double] zeroinitializer, align 16
@timer_comm_diff = common dso_local global [3 x double] zeroinitializer, align 16
@timer_comm_bc = common dso_local global [3 x double] zeroinitializer, align 16
@timer_calc_all = common dso_local global double 0.000000e+00, align 8
@timer_cs_all = common dso_local global double 0.000000e+00, align 8
@timer_cs_calc = common dso_local global double 0.000000e+00, align 8
@timer_refine_all = common dso_local global double 0.000000e+00, align 8
@timer_refine_co = common dso_local global double 0.000000e+00, align 8
@timer_refine_mr = common dso_local global double 0.000000e+00, align 8
@timer_refine_sb = common dso_local global double 0.000000e+00, align 8
@timer_refine_cc = common dso_local global double 0.000000e+00, align 8
@timer_cb_all = common dso_local global double 0.000000e+00, align 8
@timer_target_all = common dso_local global double 0.000000e+00, align 8
@timer_target_rb = common dso_local global double 0.000000e+00, align 8
@timer_target_dc = common dso_local global double 0.000000e+00, align 8
@timer_target_cb = common dso_local global double 0.000000e+00, align 8
@timer_target_ab = common dso_local global double 0.000000e+00, align 8
@timer_target_da = common dso_local global double 0.000000e+00, align 8
@timer_target_sb = common dso_local global double 0.000000e+00, align 8
@timer_plot = common dso_local global double 0.000000e+00, align 8
@total_blocks = common dso_local global i64 0, align 8
@nb_min = common dso_local global i32 0, align 4
@nb_max = common dso_local global i32 0, align 4
@nrs = common dso_local global i32 0, align 4
@nps = common dso_local global i32 0, align 4
@counter_bc = common dso_local global [3 x i32] zeroinitializer, align 4
@counter_same = common dso_local global [3 x i32] zeroinitializer, align 4
@counter_diff = common dso_local global [3 x i32] zeroinitializer, align 4
@counter_malloc = common dso_local global i32 0, align 4
@size_malloc = common dso_local global double 0.000000e+00, align 8
@counter_malloc_init = common dso_local global i32 0, align 4
@size_malloc_init = common dso_local global double 0.000000e+00, align 8
@total_red = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"ERROR: Need more blocks %d %d on %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"ERROR: Need more parents\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"Error: No inactive blocks available %d %d %d\0A\00", align 1
@split_blocks.side = internal global [6 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 0, i32 2], [2 x i32] [i32 4, i32 6]], [2 x [2 x i32]] [[2 x i32] [i32 1, i32 3], [2 x i32] [i32 5, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 4, i32 5]], [2 x [2 x i32]] [[2 x i32] [i32 2, i32 3], [2 x i32] [i32 6, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 3]], [2 x [2 x i32]] [[2 x i32] [i32 4, i32 5], [2 x i32] [i32 6, i32 7]]], align 16
@split_blocks.off = internal global [6 x i32] [i32 1, i32 -1, i32 2, i32 -2, i32 4, i32 -4], align 16
@.str.3 = private unnamed_addr constant [55 x i8] c"%d ERROR: internal misconnect block %d num %d c %d %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"%d ERROR: misconnected b %d %d l %d nei[%d] %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"ERROR: del_sorted_list on %d - number %d not found\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"Out of free blocks in consolidate_blocks %d\0A\00", align 1
@consolidate_blocks.side = internal global [6 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 0, i32 2], [2 x i32] [i32 4, i32 6]], [2 x [2 x i32]] [[2 x i32] [i32 1, i32 3], [2 x i32] [i32 5, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 4, i32 5]], [2 x [2 x i32]] [[2 x i32] [i32 2, i32 3], [2 x i32] [i32 6, i32 7]], [2 x [2 x i32]] [[2 x i32] [i32 0, i32 1], [2 x i32] [i32 2, i32 3]], [2 x [2 x i32]] [[2 x i32] [i32 4, i32 5], [2 x i32] [i32 6, i32 7]]], align 16
@.str.6 = private unnamed_addr constant [50 x i8] c"%d ERROR: %d con %d block %d c %d wrong level %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [53 x i8] c"ERROR: find_sorted_list on %d - number %d not found\0A\00", align 1
@__const.comm.permutations = private unnamed_addr constant [6 x [3 x i32]] [[3 x i32] [i32 0, i32 1, i32 2], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] [i32 2, i32 0, i32 1], [3 x i32] [i32 0, i32 2, i32 1], [3 x i32] [i32 1, i32 0, i32 2], [3 x i32] [i32 2, i32 1, i32 0]], align 16
@.str.9 = private unnamed_addr constant [27 x i8] c"ERROR: misconnected block\0A\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"%d var %d sum %lf old %lf diff %lf tol %lf\0A\00", align 1
@.str.1.11 = private unnamed_addr constant [65 x i8] c"Time step %d sum %lf (old %lf) variable %d difference too large\0A\00", align 1
@next = internal global i32 0, align 4
@table = internal global [344 x i32] zeroinitializer, align 16
@.str.14 = private unnamed_addr constant [13 x i8] c"--max_blocks\00", align 1
@.str.1.15 = private unnamed_addr constant [16 x i8] c"--target_active\00", align 1
@.str.2.16 = private unnamed_addr constant [13 x i8] c"--target_max\00", align 1
@.str.3.17 = private unnamed_addr constant [13 x i8] c"--target_min\00", align 1
@.str.4.18 = private unnamed_addr constant [13 x i8] c"--num_refine\00", align 1
@.str.5.19 = private unnamed_addr constant [15 x i8] c"--block_change\00", align 1
@.str.6.20 = private unnamed_addr constant [17 x i8] c"--uniform_refine\00", align 1
@.str.7.21 = private unnamed_addr constant [5 x i8] c"--nx\00", align 1
@.str.8.22 = private unnamed_addr constant [5 x i8] c"--ny\00", align 1
@.str.9.23 = private unnamed_addr constant [5 x i8] c"--nz\00", align 1
@.str.10.24 = private unnamed_addr constant [11 x i8] c"--num_vars\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"--comm_vars\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"--init_x\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"--init_y\00", align 1
@.str.14.25 = private unnamed_addr constant [9 x i8] c"--init_z\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"--refine_freq\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"--report_diffusion\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"--error_tol\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--num_tsteps\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"--stages_per_ts\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"--checksum_freq\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"--stencil\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"--permute\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"--report_perf\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"--plot_freq\00", align 1
@.str.25 = private unnamed_addr constant [7 x i8] c"--code\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"--refine_ghost\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--num_objects\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"main.c\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"--object\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"object number greater than num_objects\0A\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.32 = private unnamed_addr constant [40 x i8] c"** Error ** Unknown input parameter %s\0A\00", align 1
@.str.66 = private unnamed_addr constant [46 x i8] c"initial blocks on processor must be positive\0A\00", align 1
@.str.67 = private unnamed_addr constant [33 x i8] c"max_num_blocks not large enough\0A\00", align 1
@.str.68 = private unnamed_addr constant [29 x i8] c"block size must be positive\0A\00", align 1
@.str.69 = private unnamed_addr constant [40 x i8] c"block size in x direction must be even\0A\00", align 1
@.str.70 = private unnamed_addr constant [40 x i8] c"block size in y direction must be even\0A\00", align 1
@.str.71 = private unnamed_addr constant [40 x i8] c"block size in z direction must be even\0A\00", align 1
@.str.72 = private unnamed_addr constant [54 x i8] c"Only one of target_active and target_max can be used\0A\00", align 1
@.str.73 = private unnamed_addr constant [54 x i8] c"Only one of target_active and target_min can be used\0A\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"illegal value for target_active\0A\00", align 1
@.str.75 = private unnamed_addr constant [30 x i8] c"illegal value for target_max\0A\00", align 1
@.str.76 = private unnamed_addr constant [30 x i8] c"illegal value for target_min\0A\00", align 1
@.str.77 = private unnamed_addr constant [50 x i8] c"number of refinement levels must be non-negative\0A\00", align 1
@.str.78 = private unnamed_addr constant [38 x i8] c"number of variables must be positive\0A\00", align 1
@.str.79 = private unnamed_addr constant [59 x i8] c"number of processors used does not match number allocated\0A\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"illegal value for stencil\0A\00", align 1
@.str.81 = private unnamed_addr constant [76 x i8] c"WARNING: 27 point stencil with non-uniform refinement: answers may diverge\0A\00", align 1
@.str.82 = private unnamed_addr constant [25 x i8] c"code must be 0, 1, or 2\0A\00", align 1
@.str.33 = private unnamed_addr constant [49 x i8] c"(Optional) command line input is of the form: \0A\0A\00", align 1
@.str.34 = private unnamed_addr constant [35 x i8] c"--nx - block size x (even && > 0)\0A\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c"--ny - block size y (even && > 0)\0A\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"--nz - block size z (even && > 0)\0A\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"--init_x - initial blocks in x (> 0)\0A\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"--init_y - initial blocks in y (> 0)\0A\00", align 1
@.str.39 = private unnamed_addr constant [38 x i8] c"--init_z - initial blocks in z (> 0)\0A\00", align 1
@.str.40 = private unnamed_addr constant [54 x i8] c"--reorder - ordering of blocks if initial number > 1\0A\00", align 1
@.str.41 = private unnamed_addr constant [50 x i8] c"--max_blocks - maximun number of blocks per core\0A\00", align 1
@.str.42 = private unnamed_addr constant [54 x i8] c"--num_refine - (>= 0) number of levels of refinement\0A\00", align 1
@.str.43 = private unnamed_addr constant [75 x i8] c"--block_change - (>= 0) number of levels a block can change in a timestep\0A\00", align 1
@.str.44 = private unnamed_addr constant [57 x i8] c"--uniform_refine - if 1, then grid is uniformly refined\0A\00", align 1
@.str.45 = private unnamed_addr constant [69 x i8] c"--refine_freq - frequency (in timesteps) of checking for refinement\0A\00", align 1
@.str.46 = private unnamed_addr constant [70 x i8] c"--target_active - (>= 0) target number of blocks per core, none if 0\0A\00", align 1
@.str.47 = private unnamed_addr constant [64 x i8] c"--target_max - (>= 0) max number of blocks per core, none if 0\0A\00", align 1
@.str.48 = private unnamed_addr constant [64 x i8] c"--target_min - (>= 0) min number of blocks per core, none if 0\0A\00", align 1
@.str.49 = private unnamed_addr constant [40 x i8] c"--num_vars - number of variables (> 0)\0A\00", align 1
@.str.50 = private unnamed_addr constant [54 x i8] c"--comm_vars - number of vars to communicate together\0A\00", align 1
@.str.51 = private unnamed_addr constant [42 x i8] c"--num_tsteps - number of timesteps (> 0)\0A\00", align 1
@.str.52 = private unnamed_addr constant [59 x i8] c"--stages_per_ts - number of comm/calc stages per timestep\0A\00", align 1
@.str.53 = private unnamed_addr constant [54 x i8] c"--checksum_freq - number of stages between checksums\0A\00", align 1
@.str.54 = private unnamed_addr constant [79 x i8] c"--stencil - 7 or 27 point (27 will not work with refinement (except uniform))\0A\00", align 1
@.str.55 = private unnamed_addr constant [40 x i8] c"--error_tol - (e^{-error_tol} ; >= 0) \0A\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"--report_diffusion - (>= 0) none if 0\0A\00", align 1
@.str.57 = private unnamed_addr constant [25 x i8] c"--report_perf - 0, 1, 2\0A\00", align 1
@.str.58 = private unnamed_addr constant [64 x i8] c"--refine_freq - frequency (timesteps) of plotting (0 for none)\0A\00", align 1
@.str.59 = private unnamed_addr constant [57 x i8] c"--code - closely minic communication of different codes\0A\00", align 1
@.str.60 = private unnamed_addr constant [76 x i8] c"         0 minimal sends, 1 send ghosts, 2 send ghosts and process on send\0A\00", align 1
@.str.61 = private unnamed_addr constant [51 x i8] c"--permute - altenates directions in communication\0A\00", align 1
@.str.62 = private unnamed_addr constant [95 x i8] c"--refine_ghost - use full extent of block (including ghosts) to determine if block is refined\0A\00", align 1
@.str.63 = private unnamed_addr constant [62 x i8] c"--num_objects - (>= 0) number of objects to cause refinement\0A\00", align 1
@.str.64 = private unnamed_addr constant [64 x i8] c"--object - type, position, movement, size, size rate of change\0A\00", align 1
@.str.65 = private unnamed_addr constant [57 x i8] c"All associated settings are integers except for objects\0A\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"undefined object %d\0A\00", align 1
@.str.86 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.1.87 = private unnamed_addr constant [16 x i8] c"%d %d %d %d %d\0A\00", align 1
@.str.2.88 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.3.89 = private unnamed_addr constant [13 x i8] c"%d %d %d %d\0A\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"1.0 provisional\00", align 1
@.str.1.93 = private unnamed_addr constant [13 x i8] c"results.yaml\00", align 1
@.str.2.94 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3.95 = private unnamed_addr constant [15 x i8] c"code: miniAMR\0A\00", align 1
@.str.4.96 = private unnamed_addr constant [13 x i8] c"version: %s\0A\00", align 1
@.str.5.97 = private unnamed_addr constant [11 x i8] c"ranks: %d\0A\00", align 1
@.str.6.98 = private unnamed_addr constant [18 x i8] c"init_block_x: %d\0A\00", align 1
@.str.7.99 = private unnamed_addr constant [18 x i8] c"init_block_y: %d\0A\00", align 1
@.str.8.100 = private unnamed_addr constant [18 x i8] c"init_block_z: %d\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [18 x i8] c"x_block_size: %d\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [18 x i8] c"y_block_size: %d\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [18 x i8] c"z_block_size: %d\0A\00", align 1
@.str.12.104 = private unnamed_addr constant [13 x i8] c"permute: %d\0A\00", align 1
@.str.13.105 = private unnamed_addr constant [24 x i8] c"max_blocks_allowed: %d\0A\00", align 1
@.str.14.106 = private unnamed_addr constant [10 x i8] c"code: %d\0A\00", align 1
@.str.15.107 = private unnamed_addr constant [16 x i8] c"num_refine: %d\0A\00", align 1
@.str.16.108 = private unnamed_addr constant [18 x i8] c"block_change: %d\0A\00", align 1
@.str.17.109 = private unnamed_addr constant [18 x i8] c"refine_ghost: %d\0A\00", align 1
@.str.18.110 = private unnamed_addr constant [20 x i8] c"uniform_refine: %d\0A\00", align 1
@.str.19.111 = private unnamed_addr constant [17 x i8] c"num_objects: %d\0A\00", align 1
@.str.20.112 = private unnamed_addr constant [15 x i8] c"obj%dtype: %d\0A\00", align 1
@.str.21.113 = private unnamed_addr constant [17 x i8] c"obj%dbounce: %d\0A\00", align 1
@.str.22.114 = private unnamed_addr constant [20 x i8] c"obj%dcenter_x: %lf\0A\00", align 1
@.str.23.115 = private unnamed_addr constant [20 x i8] c"obj%dcenter_y: %lf\0A\00", align 1
@.str.24.116 = private unnamed_addr constant [20 x i8] c"obj%dcenter_z: %lf\0A\00", align 1
@.str.25.117 = private unnamed_addr constant [18 x i8] c"obj%dmove_x: %lf\0A\00", align 1
@.str.26.118 = private unnamed_addr constant [18 x i8] c"obj%dmove_y: %lf\0A\00", align 1
@.str.27.119 = private unnamed_addr constant [18 x i8] c"obj%dmove_z: %lf\0A\00", align 1
@.str.28.120 = private unnamed_addr constant [18 x i8] c"obj%dsize_x: %lf\0A\00", align 1
@.str.29.121 = private unnamed_addr constant [18 x i8] c"obj%dsize_y: %lf\0A\00", align 1
@.str.30.122 = private unnamed_addr constant [18 x i8] c"obj%dsize_z: %lf\0A\00", align 1
@.str.31.123 = private unnamed_addr constant [17 x i8] c"obj%dinc_x: %lf\0A\00", align 1
@.str.32.124 = private unnamed_addr constant [17 x i8] c"obj%dinc_y: %lf\0A\00", align 1
@.str.33.125 = private unnamed_addr constant [17 x i8] c"obj%dinc_z: %lf\0A\00", align 1
@.str.34.126 = private unnamed_addr constant [16 x i8] c"num_tsteps: %d\0A\00", align 1
@.str.35.127 = private unnamed_addr constant [25 x i8] c"stages_per_timestep: %d\0A\00", align 1
@.str.36.128 = private unnamed_addr constant [19 x i8] c"checksum_freq: %d\0A\00", align 1
@.str.37.129 = private unnamed_addr constant [17 x i8] c"refine_freq: %d\0A\00", align 1
@.str.38.130 = private unnamed_addr constant [15 x i8] c"plot_freq: %d\0A\00", align 1
@.str.39.131 = private unnamed_addr constant [14 x i8] c"num_vars: %d\0A\00", align 1
@.str.40.132 = private unnamed_addr constant [13 x i8] c"stencil: %d\0A\00", align 1
@.str.41.133 = private unnamed_addr constant [15 x i8] c"comm_vars: %d\0A\00", align 1
@.str.42.134 = private unnamed_addr constant [15 x i8] c"error_tol: %d\0A\00", align 1
@.str.43.135 = private unnamed_addr constant [17 x i8] c"total_time: %lf\0A\00", align 1
@.str.44.136 = private unnamed_addr constant [18 x i8] c"memory_used: %lf\0A\00", align 1
@.str.45.137 = private unnamed_addr constant [19 x i8] c"compute_time: %lf\0A\00", align 1
@.str.46.138 = private unnamed_addr constant [19 x i8] c"total_gflops: %lf\0A\00", align 1
@.str.47.139 = private unnamed_addr constant [17 x i8] c"ave_gflops: %lf\0A\00", align 1
@.str.48.140 = private unnamed_addr constant [17 x i8] c"total_comm: %lf\0A\00", align 1
@.str.49.141 = private unnamed_addr constant [25 x i8] c"   total_exch_same: %lf\0A\00", align 1
@.str.50.142 = private unnamed_addr constant [25 x i8] c"   total_exch_diff: %lf\0A\00", align 1
@.str.51.143 = private unnamed_addr constant [24 x i8] c"   total_apply_bc: %lf\0A\00", align 1
@.str.52.144 = private unnamed_addr constant [30 x i8] c"   total_face_exch_same: %lf\0A\00", align 1
@.str.53.145 = private unnamed_addr constant [30 x i8] c"   total_face_exch_diff: %lf\0A\00", align 1
@.str.54.146 = private unnamed_addr constant [29 x i8] c"   total_face_bc_apply: %lf\0A\00", align 1
@.str.55.147 = private unnamed_addr constant [16 x i8] c"   x_comm: %lf\0A\00", align 1
@.str.56.148 = private unnamed_addr constant [24 x i8] c"      x_exch_same: %lf\0A\00", align 1
@.str.57.149 = private unnamed_addr constant [24 x i8] c"      x_exch_diff: %lf\0A\00", align 1
@.str.58.150 = private unnamed_addr constant [23 x i8] c"      x_apply_bc: %lf\0A\00", align 1
@.str.59.151 = private unnamed_addr constant [29 x i8] c"      x_face_exch_same: %lf\0A\00", align 1
@.str.60.152 = private unnamed_addr constant [29 x i8] c"      x_face_exch_diff: %lf\0A\00", align 1
@.str.61.153 = private unnamed_addr constant [28 x i8] c"      x_face_bc_apply: %lf\0A\00", align 1
@.str.62.154 = private unnamed_addr constant [16 x i8] c"   y_comm: %lf\0A\00", align 1
@.str.63.155 = private unnamed_addr constant [24 x i8] c"      y_exch_same: %lf\0A\00", align 1
@.str.64.156 = private unnamed_addr constant [24 x i8] c"      y_exch_diff: %lf\0A\00", align 1
@.str.65.157 = private unnamed_addr constant [23 x i8] c"      y_apply_bc: %lf\0A\00", align 1
@.str.66.158 = private unnamed_addr constant [29 x i8] c"      y_face_exch_same: %lf\0A\00", align 1
@.str.67.159 = private unnamed_addr constant [29 x i8] c"      y_face_exch_diff: %lf\0A\00", align 1
@.str.68.160 = private unnamed_addr constant [28 x i8] c"      y_face_bc_apply: %lf\0A\00", align 1
@.str.69.161 = private unnamed_addr constant [16 x i8] c"   z_comm: %lf\0A\00", align 1
@.str.70.162 = private unnamed_addr constant [24 x i8] c"      z_exch_same: %lf\0A\00", align 1
@.str.71.163 = private unnamed_addr constant [24 x i8] c"      z_exch_diff: %lf\0A\00", align 1
@.str.72.164 = private unnamed_addr constant [23 x i8] c"      z_apply_bc: %lf\0A\00", align 1
@.str.73.165 = private unnamed_addr constant [29 x i8] c"      z_face_exch_same: %lf\0A\00", align 1
@.str.74.166 = private unnamed_addr constant [29 x i8] c"      z_face_exch_diff: %lf\0A\00", align 1
@.str.75.167 = private unnamed_addr constant [28 x i8] c"      z_face_bc_apply: %lf\0A\00", align 1
@.str.76.168 = private unnamed_addr constant [19 x i8] c"gridsum_time: %lf\0A\00", align 1
@.str.77.169 = private unnamed_addr constant [22 x i8] c"   gridsum_calc: %lf\0A\00", align 1
@.str.78.170 = private unnamed_addr constant [18 x i8] c"refine_time: %lf\0A\00", align 1
@.str.79.171 = private unnamed_addr constant [25 x i8] c"   total_blocks_ts: %lf\0A\00", align 1
@.str.80.172 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_min: %d\0A\00", align 1
@.str.81.173 = private unnamed_addr constant [28 x i8] c"   total_blocks_ts_max: %d\0A\00", align 1
@.str.82.174 = private unnamed_addr constant [22 x i8] c"   blocks_split: %lf\0A\00", align 1
@.str.83.175 = private unnamed_addr constant [25 x i8] c"   blocks_reformed: %lf\0A\00", align 1
@.str.84 = private unnamed_addr constant [26 x i8] c"   time_compare_obj: %lf\0A\00", align 1
@.str.85 = private unnamed_addr constant [26 x i8] c"   time_mark_refine: %lf\0A\00", align 1
@.str.86.176 = private unnamed_addr constant [26 x i8] c"   time_split_block: %lf\0A\00", align 1
@.str.87 = private unnamed_addr constant [28 x i8] c"   time_total_coarsen: %lf\0A\00", align 1
@.str.88 = private unnamed_addr constant [19 x i8] c"   time_misc: %lf\0A\00", align 1
@.str.89 = private unnamed_addr constant [16 x i8] c"plot_time: %lf\0A\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"results.txt\00", align 1
@.str.91 = private unnamed_addr constant [54 x i8] c"\0A ================ Start report ===================\0A\0A\00", align 1
@.str.92.177 = private unnamed_addr constant [27 x i8] c"          Mantevo miniAMR\0A\00", align 1
@.str.93 = private unnamed_addr constant [23 x i8] c"          version %s\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [22 x i8] c"serial run on 1 rank\0A\00", align 1
@.str.95 = private unnamed_addr constant [38 x i8] c"initial blocks per rank %d x %d x %d\0A\00", align 1
@.str.96 = private unnamed_addr constant [25 x i8] c"block size %d x %d x %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [29 x i8] c"Order of exchanges permuted\0A\00", align 1
@.str.98 = private unnamed_addr constant [41 x i8] c"Maximum number of blocks per rank is %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [40 x i8] c"Target number of blocks per rank is %d\0A\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"Target max number of blocks per rank is %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [44 x i8] c"Target min number of blocks per rank is %d\0A\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"Code set to code %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"Number of levels of refinement is %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [52 x i8] c"Blocks can change by %d levels per refinement step\0A\00", align 1
@.str.105 = private unnamed_addr constant [56 x i8] c"Ghost cells will be used determine is block is refined\0A\00", align 1
@.str.106 = private unnamed_addr constant [35 x i8] c"\0ABlocks will be uniformly refined\0A\00", align 1
@.str.107 = private unnamed_addr constant [40 x i8] c"\0ABlocks will be refined by %d objects\0A\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c"Object %d is the surface of a rectangle\0A\00", align 1
@.str.109 = private unnamed_addr constant [40 x i8] c"Object %d is the volume of a rectangle\0A\00", align 1
@.str.110 = private unnamed_addr constant [40 x i8] c"Object %d is the surface of a spheroid\0A\00", align 1
@.str.111 = private unnamed_addr constant [39 x i8] c"Object %d is the volume of a spheroid\0A\00", align 1
@.str.112 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x+ hemispheroid\0A\00", align 1
@.str.113 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x+ hemispheroid\0A\00", align 1
@.str.114 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x- hemispheroid\0A\00", align 1
@.str.115 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of x- hemispheroid\0A\00", align 1
@.str.116 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y+ hemispheroid\0A\00", align 1
@.str.117 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y+ hemispheroid\0A\00", align 1
@.str.118 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y- hemispheroid\0A\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of y- hemispheroid\0A\00", align 1
@.str.120 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z+ hemispheroid\0A\00", align 1
@.str.121 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z+ hemispheroid\0A\00", align 1
@.str.122 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z- hemispheroid\0A\00", align 1
@.str.123 = private unnamed_addr constant [44 x i8] c"Object %d is the volume of z- hemispheroid\0A\00", align 1
@.str.124 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of x axis cylinder\0A\00", align 1
@.str.125 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of x axis cylinder\0A\00", align 1
@.str.126 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of y axis cylinder\0A\00", align 1
@.str.127 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of y axis cylinder\0A\00", align 1
@.str.128 = private unnamed_addr constant [45 x i8] c"Object %d is the surface of z axis cylinder\0A\00", align 1
@.str.129 = private unnamed_addr constant [44 x i8] c"Object %d is the volune of z axis cylinder\0A\00", align 1
@.str.130 = private unnamed_addr constant [22 x i8] c"Oject may leave mesh\0A\00", align 1
@.str.131 = private unnamed_addr constant [39 x i8] c"Oject center will bounce off of walls\0A\00", align 1
@.str.132 = private unnamed_addr constant [32 x i8] c"Center starting at %lf %lf %lf\0A\00", align 1
@.str.133 = private unnamed_addr constant [27 x i8] c"Center end at %lf %lf %lf\0A\00", align 1
@.str.134 = private unnamed_addr constant [36 x i8] c"Moving at %lf %lf %lf per timestep\0A\00", align 1
@.str.135 = private unnamed_addr constant [52 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\00", align 1
@.str.136 = private unnamed_addr constant [26 x i8] c"Initial size %lf %lf %lf\0A\00", align 1
@.str.137 = private unnamed_addr constant [24 x i8] c"Final size %lf %lf %lf\0A\00", align 1
@.str.138 = private unnamed_addr constant [42 x i8] c"Size increasing %lf %lf %lf per timestep\0A\00", align 1
@.str.139 = private unnamed_addr constant [53 x i8] c"   Rate relative to smallest cell size %lf %lf %lf\0A\0A\00", align 1
@.str.140 = private unnamed_addr constant [28 x i8] c"\0ANumber of timesteps is %d\0A\00", align 1
@.str.141 = private unnamed_addr constant [52 x i8] c"Communicaion/computation stages per timestep is %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [40 x i8] c"Will perform checksums every %d stages\0A\00", align 1
@.str.143 = private unnamed_addr constant [32 x i8] c"Will refine every %d timesteps\0A\00", align 1
@.str.144 = private unnamed_addr constant [38 x i8] c"Will plot results every %d timesteps\0A\00", align 1
@.str.145 = private unnamed_addr constant [23 x i8] c"Will not plot results\0A\00", align 1
@.str.146 = private unnamed_addr constant [49 x i8] c"Calculate on %d variables with %d point stencil\0A\00", align 1
@.str.147 = private unnamed_addr constant [36 x i8] c"Communicate %d variables at a time\0A\00", align 1
@.str.148 = private unnamed_addr constant [47 x i8] c"Error tolorance for variable sums is 10^(-%d)\0A\00", align 1
@.str.149 = private unnamed_addr constant [35 x i8] c"\0ATotal time for test: (sec): %lf\0A\0A\00", align 1
@.str.150 = private unnamed_addr constant [30 x i8] c"\0ANumber of malloc calls: %lf\0A\00", align 1
@.str.151 = private unnamed_addr constant [23 x i8] c"\0AAmount malloced: %lf\0A\00", align 1
@.str.152 = private unnamed_addr constant [47 x i8] c"---------------------------------------------\0A\00", align 1
@.str.153 = private unnamed_addr constant [37 x i8] c"          Computational Performance\0A\00", align 1
@.str.154 = private unnamed_addr constant [48 x i8] c"---------------------------------------------\0A\0A\00", align 1
@.str.155 = private unnamed_addr constant [46 x i8] c"     Time: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.156 = private unnamed_addr constant [36 x i8] c"     total GFLOPS:             %lf\0A\00", align 1
@.str.157 = private unnamed_addr constant [37 x i8] c"     Average GFLOPS per rank:  %lf\0A\0A\00", align 1
@.str.158 = private unnamed_addr constant [37 x i8] c"     Total floating point ops: %lf\0A\0A\00", align 1
@.str.159 = private unnamed_addr constant [36 x i8] c"        Adds:                  %lf\0A\00", align 1
@.str.160 = private unnamed_addr constant [37 x i8] c"        Divides:               %lf\0A\0A\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"           Interblock communication\0A\00", align 1
@.str.162 = private unnamed_addr constant [24 x i8] c"\0ATotal communication:\0A\0A\00", align 1
@.str.163 = private unnamed_addr constant [41 x i8] c"\0AX direction communication statistics:\0A\0A\00", align 1
@.str.164 = private unnamed_addr constant [41 x i8] c"\0AY direction communication statistics:\0A\0A\00", align 1
@.str.165 = private unnamed_addr constant [41 x i8] c"\0AZ direction communication statistics:\0A\0A\00", align 1
@.str.166 = private unnamed_addr constant [67 x i8] c"                              average    stddev  minimum  maximum\0A\00", align 1
@.str.167 = private unnamed_addr constant [35 x i8] c"     Total time             : %lf\0A\00", align 1
@.str.168 = private unnamed_addr constant [35 x i8] c"     Exchange same level    : %lf\0A\00", align 1
@.str.169 = private unnamed_addr constant [35 x i8] c"     Exchange diff level    : %lf\0A\00", align 1
@.str.170 = private unnamed_addr constant [35 x i8] c"     Apply BC               : %lf\0A\00", align 1
@.str.171 = private unnamed_addr constant [35 x i8] c"     Faces exchanged same   : %lf\0A\00", align 1
@.str.172 = private unnamed_addr constant [35 x i8] c"     Faces exchanged diff   : %lf\0A\00", align 1
@.str.173 = private unnamed_addr constant [35 x i8] c"     Faces with BC applied  : %lf\0A\00", align 1
@.str.174 = private unnamed_addr constant [48 x i8] c"\0A---------------------------------------------\0A\00", align 1
@.str.175 = private unnamed_addr constant [34 x i8] c"             Gridsum performance\0A\00", align 1
@.str.176 = private unnamed_addr constant [49 x i8] c"        calc: ave, stddev, min, max (sec): %lf\0A\0A\00", align 1
@.str.177 = private unnamed_addr constant [35 x i8] c"     total number:             %d\0A\00", align 1
@.str.178 = private unnamed_addr constant [36 x i8] c"     number per timestep:      %d\0A\0A\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"               Mesh Refinement\0A\00", align 1
@.str.180 = private unnamed_addr constant [38 x i8] c"     Number of refinement steps: %d\0A\0A\00", align 1
@.str.181 = private unnamed_addr constant [35 x i8] c"     Total blocks           : %ld\0A\00", align 1
@.str.182 = private unnamed_addr constant [48 x i8] c"     Blocks/timestep ave, min, max : %lf %d %d\0A\00", align 1
@.str.183 = private unnamed_addr constant [48 x i8] c"     Max blocks on a processor at any time: %d\0A\00", align 1
@.str.184 = private unnamed_addr constant [35 x i8] c"     total blocks split     : %lf\0A\00", align 1
@.str.185 = private unnamed_addr constant [36 x i8] c"     total blocks reformed  : %lf\0A\0A\00", align 1
@.str.186 = private unnamed_addr constant [12 x i8] c"     Time:\0A\00", align 1
@.str.187 = private unnamed_addr constant [35 x i8] c"        compare objects     : %lf\0A\00", align 1
@.str.188 = private unnamed_addr constant [35 x i8] c"        mark refine/coarsen : %lf\0A\00", align 1
@.str.189 = private unnamed_addr constant [35 x i8] c"        split blocks        : %lf\0A\00", align 1
@.str.190 = private unnamed_addr constant [35 x i8] c"        total coarsen blocks: %lf\0A\00", align 1
@.str.191 = private unnamed_addr constant [35 x i8] c"        misc time           : %lf\0A\00", align 1
@.str.192 = private unnamed_addr constant [35 x i8] c"        total target active : %lf\0A\00", align 1
@.str.193 = private unnamed_addr constant [35 x i8] c"          reduce blocks     : %lf\0A\00", align 1
@.str.194 = private unnamed_addr constant [35 x i8] c"            decide and comm : %lf\0A\00", align 1
@.str.195 = private unnamed_addr constant [35 x i8] c"            coarsen blocks  : %lf\0A\00", align 1
@.str.196 = private unnamed_addr constant [35 x i8] c"          add blocks        : %lf\0A\00", align 1
@.str.197 = private unnamed_addr constant [35 x i8] c"            split blocks    : %lf\0A\00", align 1
@.str.198 = private unnamed_addr constant [25 x i8] c"                   Plot\0A\00", align 1
@.str.199 = private unnamed_addr constant [31 x i8] c"     Number of plot steps: %d\0A\00", align 1
@.str.200 = private unnamed_addr constant [53 x i8] c"\0A ================== End report ===================\0A\00", align 1
@.str.201 = private unnamed_addr constant [53 x i8] c"Number of blocks at level %d before target %d is %d\0A\00", align 1
@.str.1.202 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2.203 = private unnamed_addr constant [51 x i8] c"Number of blocks at level %d at timestep %d is %d\0A\00", align 1
@.str.214 = private unnamed_addr constant [43 x i8] c"NULL pointer from malloc call in %s at %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @split_blocks() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %o = alloca i32, align 4
  %v = alloca i32, align 4
  %nl = alloca i32, align 4
  %xp = alloca i32, align 4
  %yp = alloca i32, align 4
  %zp = alloca i32, align 4
  %c = alloca i32, align 4
  %c1 = alloca i32, align 4
  %other = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %k1 = alloca i32, align 4
  %k2 = alloca i32, align 4
  %dir = alloca i32, align 4
  %fcase = alloca i32, align 4
  %pe = alloca i32, align 4
  %f = alloca i32, align 4
  %p = alloca i32, align 4
  %level = alloca i32, align 4
  %sib = alloca [8 x i32], align 16
  %offset = alloca i32, align 4
  %d = alloca i32, align 4
  %half_size = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %bp1 = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  store i32 0, i32* %level, align 4
  store i32 0, i32* %m, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc654, %entry
  %0 = load i32, i32* %level, align 4
  %1 = load i32, i32* @cur_max_level, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end656

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %n, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc651, %for.body
  %2 = load i32, i32* %n, align 4
  %3 = load i32, i32* @max_active_block, align 4
  %cmp2 = icmp slt i32 %2, %3
  br i1 %cmp2, label %for.body3, label %for.end653

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct.block*, %struct.block** @blocks, align 8
  %5 = load i32, i32* %n, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.block, %struct.block* %4, i64 %idxprom
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx, i32 0, i32 0
  %6 = load i32, i32* %number, align 8
  %cmp4 = icmp sge i32 %6, 0
  br i1 %cmp4, label %land.lhs.true, label %if.end650

land.lhs.true:                                    ; preds = %for.body3
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom5
  %level7 = getelementptr inbounds %struct.block, %struct.block* %arrayidx6, i32 0, i32 1
  %9 = load i32, i32* %level7, align 4
  %10 = load i32, i32* %level, align 4
  %cmp8 = icmp eq i32 %9, %10
  br i1 %cmp8, label %if.then, label %if.end650

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.block*, %struct.block** @blocks, align 8
  %12 = load i32, i32* %n, align 4
  %idxprom9 = sext i32 %12 to i64
  %arrayidx10 = getelementptr inbounds %struct.block, %struct.block* %11, i64 %idxprom9
  store %struct.block* %arrayidx10, %struct.block** %bp, align 8
  %13 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %13, i32 0, i32 2
  %14 = load i32, i32* %refine, align 8
  %cmp11 = icmp eq i32 %14, 1
  br i1 %cmp11, label %if.then12, label %if.end649

if.then12:                                        ; preds = %if.then
  %15 = load %struct.block*, %struct.block** %bp, align 8
  %number13 = getelementptr inbounds %struct.block, %struct.block* %15, i32 0, i32 0
  %16 = load i32, i32* %number13, align 8
  %17 = load i32*, i32** @block_start, align 8
  %18 = load i32, i32* %level, align 4
  %idxprom14 = sext i32 %18 to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %17, i64 %idxprom14
  %19 = load i32, i32* %arrayidx15, align 4
  %sub = sub nsw i32 %16, %19
  store i32 %sub, i32* %nl, align 4
  %20 = load i32, i32* %nl, align 4
  %21 = load i32*, i32** @p2, align 8
  %22 = load i32, i32* %level, align 4
  %idxprom16 = sext i32 %22 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %21, i64 %idxprom16
  %23 = load i32, i32* %arrayidx17, align 4
  %24 = load i32, i32* @npx, align 4
  %mul = mul nsw i32 %23, %24
  %25 = load i32, i32* @init_block_x, align 4
  %mul18 = mul nsw i32 %mul, %25
  %26 = load i32*, i32** @p2, align 8
  %27 = load i32, i32* %level, align 4
  %idxprom19 = sext i32 %27 to i64
  %arrayidx20 = getelementptr inbounds i32, i32* %26, i64 %idxprom19
  %28 = load i32, i32* %arrayidx20, align 4
  %29 = load i32, i32* @npy, align 4
  %mul21 = mul nsw i32 %28, %29
  %30 = load i32, i32* @init_block_y, align 4
  %mul22 = mul nsw i32 %mul21, %30
  %mul23 = mul nsw i32 %mul18, %mul22
  %div = sdiv i32 %20, %mul23
  store i32 %div, i32* %zp, align 4
  %31 = load i32, i32* %nl, align 4
  %32 = load i32*, i32** @p2, align 8
  %33 = load i32, i32* %level, align 4
  %idxprom24 = sext i32 %33 to i64
  %arrayidx25 = getelementptr inbounds i32, i32* %32, i64 %idxprom24
  %34 = load i32, i32* %arrayidx25, align 4
  %35 = load i32, i32* @npx, align 4
  %mul26 = mul nsw i32 %34, %35
  %36 = load i32, i32* @init_block_x, align 4
  %mul27 = mul nsw i32 %mul26, %36
  %37 = load i32*, i32** @p2, align 8
  %38 = load i32, i32* %level, align 4
  %idxprom28 = sext i32 %38 to i64
  %arrayidx29 = getelementptr inbounds i32, i32* %37, i64 %idxprom28
  %39 = load i32, i32* %arrayidx29, align 4
  %40 = load i32, i32* @npy, align 4
  %mul30 = mul nsw i32 %39, %40
  %41 = load i32, i32* @init_block_y, align 4
  %mul31 = mul nsw i32 %mul30, %41
  %mul32 = mul nsw i32 %mul27, %mul31
  %rem = srem i32 %31, %mul32
  %42 = load i32*, i32** @p2, align 8
  %43 = load i32, i32* %level, align 4
  %idxprom33 = sext i32 %43 to i64
  %arrayidx34 = getelementptr inbounds i32, i32* %42, i64 %idxprom33
  %44 = load i32, i32* %arrayidx34, align 4
  %45 = load i32, i32* @npx, align 4
  %mul35 = mul nsw i32 %44, %45
  %46 = load i32, i32* @init_block_x, align 4
  %mul36 = mul nsw i32 %mul35, %46
  %div37 = sdiv i32 %rem, %mul36
  store i32 %div37, i32* %yp, align 4
  %47 = load i32, i32* %nl, align 4
  %48 = load i32*, i32** @p2, align 8
  %49 = load i32, i32* %level, align 4
  %idxprom38 = sext i32 %49 to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %48, i64 %idxprom38
  %50 = load i32, i32* %arrayidx39, align 4
  %51 = load i32, i32* @npx, align 4
  %mul40 = mul nsw i32 %50, %51
  %52 = load i32, i32* @init_block_x, align 4
  %mul41 = mul nsw i32 %mul40, %52
  %rem42 = srem i32 %47, %mul41
  store i32 %rem42, i32* %xp, align 4
  %53 = load i32, i32* @num_active, align 4
  %add = add nsw i32 %53, 8
  %54 = load i32, i32* @max_num_blocks, align 4
  %cmp43 = icmp sgt i32 %add, %54
  br i1 %cmp43, label %if.then44, label %if.end

if.then44:                                        ; preds = %if.then12
  %55 = load i32, i32* @num_active, align 4
  %56 = load i32, i32* @max_num_blocks, align 4
  %57 = load i32, i32* @my_pe, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 %55, i32 %56, i32 %57)
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %if.then12
  %58 = load i32, i32* @num_active, align 4
  %add45 = add nsw i32 %58, 8
  %59 = load i32, i32* @local_max_b, align 4
  %cmp46 = icmp sgt i32 %add45, %59
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end
  %60 = load i32, i32* @num_active, align 4
  %add48 = add nsw i32 %60, 8
  store i32 %add48, i32* @local_max_b, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end
  %61 = load %struct.block*, %struct.block** %bp, align 8
  %number50 = getelementptr inbounds %struct.block, %struct.block* %61, i32 0, i32 0
  %62 = load i32, i32* %number50, align 8
  %63 = load i32, i32* %level, align 4
  call void @del_sorted_list(i32 %62, i32 %63)
  %64 = load i32, i32* @num_active, align 4
  %add51 = add nsw i32 %64, 7
  store i32 %add51, i32* @num_active, align 4
  %65 = load i32*, i32** @num_blocks, align 8
  %66 = load i32, i32* %level, align 4
  %idxprom52 = sext i32 %66 to i64
  %arrayidx53 = getelementptr inbounds i32, i32* %65, i64 %idxprom52
  %67 = load i32, i32* %arrayidx53, align 4
  %dec = add nsw i32 %67, -1
  store i32 %dec, i32* %arrayidx53, align 4
  %68 = load i32*, i32** @num_blocks, align 8
  %69 = load i32, i32* %level, align 4
  %add54 = add nsw i32 %69, 1
  %idxprom55 = sext i32 %add54 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %68, i64 %idxprom55
  %70 = load i32, i32* %arrayidx56, align 4
  %add57 = add nsw i32 %70, 8
  store i32 %add57, i32* %arrayidx56, align 4
  store i32 0, i32* %p, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc, %if.end49
  %71 = load i32, i32* %p, align 4
  %72 = load i32, i32* @max_active_parent, align 4
  %cmp59 = icmp slt i32 %71, %72
  br i1 %cmp59, label %for.body60, label %for.end

for.body60:                                       ; preds = %for.cond58
  %73 = load %struct.parent*, %struct.parent** @parents, align 8
  %74 = load i32, i32* %p, align 4
  %idxprom61 = sext i32 %74 to i64
  %arrayidx62 = getelementptr inbounds %struct.parent, %struct.parent* %73, i64 %idxprom61
  %number63 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx62, i32 0, i32 0
  %75 = load i32, i32* %number63, align 4
  %cmp64 = icmp slt i32 %75, 0
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %for.body60
  br label %for.end

if.end66:                                         ; preds = %for.body60
  br label %for.inc

for.inc:                                          ; preds = %if.end66
  %76 = load i32, i32* %p, align 4
  %inc = add nsw i32 %76, 1
  store i32 %inc, i32* %p, align 4
  br label %for.cond58

for.end:                                          ; preds = %if.then65, %for.cond58
  %77 = load i32, i32* %p, align 4
  %78 = load i32, i32* @max_num_parents, align 4
  %cmp67 = icmp eq i32 %77, %78
  br i1 %cmp67, label %if.then68, label %if.end70

if.then68:                                        ; preds = %for.end
  %call69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0))
  call void @exit(i32 -1) #8
  unreachable

if.end70:                                         ; preds = %for.end
  %79 = load i32, i32* %p, align 4
  %80 = load i32, i32* @max_active_parent, align 4
  %cmp71 = icmp eq i32 %79, %80
  br i1 %cmp71, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.end70
  %81 = load i32, i32* @max_active_parent, align 4
  %inc73 = add nsw i32 %81, 1
  store i32 %inc73, i32* @max_active_parent, align 4
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.end70
  %82 = load i32, i32* @num_parents, align 4
  %inc75 = add nsw i32 %82, 1
  store i32 %inc75, i32* @num_parents, align 4
  %83 = load i32, i32* @num_refined, align 4
  %inc76 = add nsw i32 %83, 1
  store i32 %inc76, i32* @num_refined, align 4
  %84 = load %struct.parent*, %struct.parent** @parents, align 8
  %85 = load i32, i32* %p, align 4
  %idxprom77 = sext i32 %85 to i64
  %arrayidx78 = getelementptr inbounds %struct.parent, %struct.parent* %84, i64 %idxprom77
  store %struct.parent* %arrayidx78, %struct.parent** %pp, align 8
  %86 = load %struct.block*, %struct.block** %bp, align 8
  %number79 = getelementptr inbounds %struct.block, %struct.block* %86, i32 0, i32 0
  %87 = load i32, i32* %number79, align 8
  %88 = load %struct.parent*, %struct.parent** %pp, align 8
  %number80 = getelementptr inbounds %struct.parent, %struct.parent* %88, i32 0, i32 0
  store i32 %87, i32* %number80, align 4
  %89 = load %struct.block*, %struct.block** %bp, align 8
  %level81 = getelementptr inbounds %struct.block, %struct.block* %89, i32 0, i32 1
  %90 = load i32, i32* %level81, align 4
  %91 = load %struct.parent*, %struct.parent** %pp, align 8
  %level82 = getelementptr inbounds %struct.parent, %struct.parent* %91, i32 0, i32 1
  store i32 %90, i32* %level82, align 4
  %92 = load %struct.block*, %struct.block** %bp, align 8
  %parent = getelementptr inbounds %struct.block, %struct.block* %92, i32 0, i32 4
  %93 = load i32, i32* %parent, align 8
  %94 = load %struct.parent*, %struct.parent** %pp, align 8
  %parent83 = getelementptr inbounds %struct.parent, %struct.parent* %94, i32 0, i32 2
  store i32 %93, i32* %parent83, align 4
  %95 = load %struct.block*, %struct.block** %bp, align 8
  %parent_node = getelementptr inbounds %struct.block, %struct.block* %95, i32 0, i32 5
  %96 = load i32, i32* %parent_node, align 4
  %97 = load %struct.parent*, %struct.parent** %pp, align 8
  %parent_node84 = getelementptr inbounds %struct.parent, %struct.parent* %97, i32 0, i32 3
  store i32 %96, i32* %parent_node84, align 4
  %98 = load %struct.block*, %struct.block** %bp, align 8
  %child_number = getelementptr inbounds %struct.block, %struct.block* %98, i32 0, i32 6
  %99 = load i32, i32* %child_number, align 8
  %100 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_number85 = getelementptr inbounds %struct.parent, %struct.parent* %100, i32 0, i32 4
  store i32 %99, i32* %child_number85, align 4
  %101 = load i32, i32* %p, align 4
  %sub86 = sub nsw i32 -1, %101
  %102 = load %struct.parent*, %struct.parent** @parents, align 8
  %103 = load %struct.parent*, %struct.parent** %pp, align 8
  %parent87 = getelementptr inbounds %struct.parent, %struct.parent* %103, i32 0, i32 2
  %104 = load i32, i32* %parent87, align 4
  %idxprom88 = sext i32 %104 to i64
  %arrayidx89 = getelementptr inbounds %struct.parent, %struct.parent* %102, i64 %idxprom88
  %child = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx89, i32 0, i32 6
  %105 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_number90 = getelementptr inbounds %struct.parent, %struct.parent* %105, i32 0, i32 4
  %106 = load i32, i32* %child_number90, align 4
  %idxprom91 = sext i32 %106 to i64
  %arrayidx92 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom91
  store i32 %sub86, i32* %arrayidx92, align 4
  %107 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine93 = getelementptr inbounds %struct.parent, %struct.parent* %107, i32 0, i32 5
  store i32 0, i32* %refine93, align 4
  %108 = load %struct.block*, %struct.block** %bp, align 8
  %cen = getelementptr inbounds %struct.block, %struct.block* %108, i32 0, i32 10
  %arrayidx94 = getelementptr inbounds [3 x i32], [3 x i32]* %cen, i64 0, i64 0
  %109 = load i32, i32* %arrayidx94, align 4
  %110 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen95 = getelementptr inbounds %struct.parent, %struct.parent* %110, i32 0, i32 8
  %arrayidx96 = getelementptr inbounds [3 x i32], [3 x i32]* %cen95, i64 0, i64 0
  store i32 %109, i32* %arrayidx96, align 4
  %111 = load %struct.block*, %struct.block** %bp, align 8
  %cen97 = getelementptr inbounds %struct.block, %struct.block* %111, i32 0, i32 10
  %arrayidx98 = getelementptr inbounds [3 x i32], [3 x i32]* %cen97, i64 0, i64 1
  %112 = load i32, i32* %arrayidx98, align 4
  %113 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen99 = getelementptr inbounds %struct.parent, %struct.parent* %113, i32 0, i32 8
  %arrayidx100 = getelementptr inbounds [3 x i32], [3 x i32]* %cen99, i64 0, i64 1
  store i32 %112, i32* %arrayidx100, align 4
  %114 = load %struct.block*, %struct.block** %bp, align 8
  %cen101 = getelementptr inbounds %struct.block, %struct.block* %114, i32 0, i32 10
  %arrayidx102 = getelementptr inbounds [3 x i32], [3 x i32]* %cen101, i64 0, i64 2
  %115 = load i32, i32* %arrayidx102, align 4
  %116 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen103 = getelementptr inbounds %struct.parent, %struct.parent* %116, i32 0, i32 8
  %arrayidx104 = getelementptr inbounds [3 x i32], [3 x i32]* %cen103, i64 0, i64 2
  store i32 %115, i32* %arrayidx104, align 4
  store i32 0, i32* %o, align 4
  br label %for.cond105

for.cond105:                                      ; preds = %for.inc341, %if.end74
  %117 = load i32, i32* %o, align 4
  %cmp106 = icmp slt i32 %117, 8
  br i1 %cmp106, label %for.body107, label %for.end343

for.body107:                                      ; preds = %for.cond105
  br label %for.cond108

for.cond108:                                      ; preds = %for.inc117, %for.body107
  %118 = load i32, i32* %m, align 4
  %119 = load i32, i32* @max_num_blocks, align 4
  %cmp109 = icmp slt i32 %118, %119
  br i1 %cmp109, label %for.body110, label %for.end119

for.body110:                                      ; preds = %for.cond108
  %120 = load %struct.block*, %struct.block** @blocks, align 8
  %121 = load i32, i32* %m, align 4
  %idxprom111 = sext i32 %121 to i64
  %arrayidx112 = getelementptr inbounds %struct.block, %struct.block* %120, i64 %idxprom111
  %number113 = getelementptr inbounds %struct.block, %struct.block* %arrayidx112, i32 0, i32 0
  %122 = load i32, i32* %number113, align 8
  %cmp114 = icmp slt i32 %122, 0
  br i1 %cmp114, label %if.then115, label %if.end116

if.then115:                                       ; preds = %for.body110
  br label %for.end119

if.end116:                                        ; preds = %for.body110
  br label %for.inc117

for.inc117:                                       ; preds = %if.end116
  %123 = load i32, i32* %m, align 4
  %inc118 = add nsw i32 %123, 1
  store i32 %inc118, i32* %m, align 4
  br label %for.cond108

for.end119:                                       ; preds = %if.then115, %for.cond108
  %124 = load i32, i32* %m, align 4
  %125 = load i32, i32* @max_num_blocks, align 4
  %cmp120 = icmp eq i32 %124, %125
  br i1 %cmp120, label %if.then121, label %if.end123

if.then121:                                       ; preds = %for.end119
  %126 = load i32, i32* %m, align 4
  %127 = load i32, i32* @num_active, align 4
  %128 = load i32, i32* @max_num_blocks, align 4
  %call122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 %126, i32 %127, i32 %128)
  call void @exit(i32 -1) #8
  unreachable

if.end123:                                        ; preds = %for.end119
  %129 = load i32, i32* %m, align 4
  %add124 = add nsw i32 %129, 1
  %130 = load i32, i32* @max_active_block, align 4
  %cmp125 = icmp sgt i32 %add124, %130
  br i1 %cmp125, label %if.then126, label %if.end128

if.then126:                                       ; preds = %if.end123
  %131 = load i32, i32* %m, align 4
  %add127 = add nsw i32 %131, 1
  store i32 %add127, i32* @max_active_block, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then126, %if.end123
  %132 = load %struct.block*, %struct.block** @blocks, align 8
  %133 = load i32, i32* %m, align 4
  %idxprom129 = sext i32 %133 to i64
  %arrayidx130 = getelementptr inbounds %struct.block, %struct.block* %132, i64 %idxprom129
  store %struct.block* %arrayidx130, %struct.block** %bp1, align 8
  %134 = load i32, i32* %m, align 4
  %135 = load i32, i32* %o, align 4
  %idxprom131 = sext i32 %135 to i64
  %arrayidx132 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom131
  store i32 %134, i32* %arrayidx132, align 4
  %136 = load i32, i32* %m, align 4
  %137 = load %struct.parent*, %struct.parent** %pp, align 8
  %child133 = getelementptr inbounds %struct.parent, %struct.parent* %137, i32 0, i32 6
  %138 = load i32, i32* %o, align 4
  %idxprom134 = sext i32 %138 to i64
  %arrayidx135 = getelementptr inbounds [8 x i32], [8 x i32]* %child133, i64 0, i64 %idxprom134
  store i32 %136, i32* %arrayidx135, align 4
  %139 = load i32, i32* @my_pe, align 4
  %140 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node = getelementptr inbounds %struct.parent, %struct.parent* %140, i32 0, i32 7
  %141 = load i32, i32* %o, align 4
  %idxprom136 = sext i32 %141 to i64
  %arrayidx137 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node, i64 0, i64 %idxprom136
  store i32 %139, i32* %arrayidx137, align 4
  %142 = load %struct.block*, %struct.block** %bp1, align 8
  %refine138 = getelementptr inbounds %struct.block, %struct.block* %142, i32 0, i32 2
  store i32 0, i32* %refine138, align 8
  %143 = load i32, i32* %level, align 4
  %add139 = add nsw i32 %143, 1
  %144 = load %struct.block*, %struct.block** %bp1, align 8
  %level140 = getelementptr inbounds %struct.block, %struct.block* %144, i32 0, i32 1
  store i32 %add139, i32* %level140, align 4
  %145 = load i32, i32* %p, align 4
  %146 = load %struct.block*, %struct.block** %bp1, align 8
  %parent141 = getelementptr inbounds %struct.block, %struct.block* %146, i32 0, i32 4
  store i32 %145, i32* %parent141, align 8
  %147 = load i32, i32* @my_pe, align 4
  %148 = load %struct.block*, %struct.block** %bp1, align 8
  %parent_node142 = getelementptr inbounds %struct.block, %struct.block* %148, i32 0, i32 5
  store i32 %147, i32* %parent_node142, align 4
  %149 = load i32, i32* %o, align 4
  %150 = load %struct.block*, %struct.block** %bp1, align 8
  %child_number143 = getelementptr inbounds %struct.block, %struct.block* %150, i32 0, i32 6
  store i32 %149, i32* %child_number143, align 8
  %151 = load i32, i32* %o, align 4
  %rem144 = srem i32 %151, 2
  store i32 %rem144, i32* %i1, align 4
  %152 = load i32, i32* %o, align 4
  %div145 = sdiv i32 %152, 2
  %rem146 = srem i32 %div145, 2
  store i32 %rem146, i32* %j1, align 4
  %153 = load i32, i32* %o, align 4
  %div147 = sdiv i32 %153, 4
  store i32 %div147, i32* %k1, align 4
  %154 = load i32, i32* %zp, align 4
  %mul148 = mul nsw i32 2, %154
  %155 = load i32, i32* %k1, align 4
  %add149 = add nsw i32 %mul148, %155
  %156 = load i32*, i32** @p2, align 8
  %157 = load i32, i32* %level, align 4
  %add150 = add nsw i32 %157, 1
  %idxprom151 = sext i32 %add150 to i64
  %arrayidx152 = getelementptr inbounds i32, i32* %156, i64 %idxprom151
  %158 = load i32, i32* %arrayidx152, align 4
  %159 = load i32, i32* @npy, align 4
  %mul153 = mul nsw i32 %158, %159
  %160 = load i32, i32* @init_block_y, align 4
  %mul154 = mul nsw i32 %mul153, %160
  %mul155 = mul nsw i32 %add149, %mul154
  %161 = load i32, i32* %yp, align 4
  %mul156 = mul nsw i32 2, %161
  %162 = load i32, i32* %j1, align 4
  %add157 = add nsw i32 %mul156, %162
  %add158 = add nsw i32 %mul155, %add157
  %163 = load i32*, i32** @p2, align 8
  %164 = load i32, i32* %level, align 4
  %add159 = add nsw i32 %164, 1
  %idxprom160 = sext i32 %add159 to i64
  %arrayidx161 = getelementptr inbounds i32, i32* %163, i64 %idxprom160
  %165 = load i32, i32* %arrayidx161, align 4
  %166 = load i32, i32* @npx, align 4
  %mul162 = mul nsw i32 %165, %166
  %167 = load i32, i32* @init_block_x, align 4
  %mul163 = mul nsw i32 %mul162, %167
  %mul164 = mul nsw i32 %add158, %mul163
  %168 = load i32, i32* %xp, align 4
  %mul165 = mul nsw i32 2, %168
  %add166 = add nsw i32 %mul164, %mul165
  %169 = load i32, i32* %i1, align 4
  %add167 = add nsw i32 %add166, %169
  %170 = load i32*, i32** @block_start, align 8
  %171 = load i32, i32* %level, align 4
  %add168 = add nsw i32 %171, 1
  %idxprom169 = sext i32 %add168 to i64
  %arrayidx170 = getelementptr inbounds i32, i32* %170, i64 %idxprom169
  %172 = load i32, i32* %arrayidx170, align 4
  %add171 = add nsw i32 %add167, %172
  %173 = load %struct.block*, %struct.block** %bp1, align 8
  %number172 = getelementptr inbounds %struct.block, %struct.block* %173, i32 0, i32 0
  store i32 %add171, i32* %number172, align 8
  %174 = load i32, i32* %m, align 4
  %175 = load %struct.block*, %struct.block** %bp1, align 8
  %number173 = getelementptr inbounds %struct.block, %struct.block* %175, i32 0, i32 0
  %176 = load i32, i32* %number173, align 8
  %177 = load i32, i32* %level, align 4
  %add174 = add nsw i32 %177, 1
  call void @add_sorted_list(i32 %174, i32 %176, i32 %add174)
  %178 = load %struct.block*, %struct.block** %bp, align 8
  %cen175 = getelementptr inbounds %struct.block, %struct.block* %178, i32 0, i32 10
  %arrayidx176 = getelementptr inbounds [3 x i32], [3 x i32]* %cen175, i64 0, i64 0
  %179 = load i32, i32* %arrayidx176, align 4
  %180 = load i32, i32* %i1, align 4
  %mul177 = mul nsw i32 2, %180
  %sub178 = sub nsw i32 %mul177, 1
  %181 = load i32*, i32** @p2, align 8
  %182 = load i32, i32* @num_refine, align 4
  %183 = load i32, i32* %level, align 4
  %sub179 = sub nsw i32 %182, %183
  %sub180 = sub nsw i32 %sub179, 1
  %idxprom181 = sext i32 %sub180 to i64
  %arrayidx182 = getelementptr inbounds i32, i32* %181, i64 %idxprom181
  %184 = load i32, i32* %arrayidx182, align 4
  %mul183 = mul nsw i32 %sub178, %184
  %add184 = add nsw i32 %179, %mul183
  %185 = load %struct.block*, %struct.block** %bp1, align 8
  %cen185 = getelementptr inbounds %struct.block, %struct.block* %185, i32 0, i32 10
  %arrayidx186 = getelementptr inbounds [3 x i32], [3 x i32]* %cen185, i64 0, i64 0
  store i32 %add184, i32* %arrayidx186, align 4
  %186 = load %struct.block*, %struct.block** %bp, align 8
  %cen187 = getelementptr inbounds %struct.block, %struct.block* %186, i32 0, i32 10
  %arrayidx188 = getelementptr inbounds [3 x i32], [3 x i32]* %cen187, i64 0, i64 1
  %187 = load i32, i32* %arrayidx188, align 4
  %188 = load i32, i32* %j1, align 4
  %mul189 = mul nsw i32 2, %188
  %sub190 = sub nsw i32 %mul189, 1
  %189 = load i32*, i32** @p2, align 8
  %190 = load i32, i32* @num_refine, align 4
  %191 = load i32, i32* %level, align 4
  %sub191 = sub nsw i32 %190, %191
  %sub192 = sub nsw i32 %sub191, 1
  %idxprom193 = sext i32 %sub192 to i64
  %arrayidx194 = getelementptr inbounds i32, i32* %189, i64 %idxprom193
  %192 = load i32, i32* %arrayidx194, align 4
  %mul195 = mul nsw i32 %sub190, %192
  %add196 = add nsw i32 %187, %mul195
  %193 = load %struct.block*, %struct.block** %bp1, align 8
  %cen197 = getelementptr inbounds %struct.block, %struct.block* %193, i32 0, i32 10
  %arrayidx198 = getelementptr inbounds [3 x i32], [3 x i32]* %cen197, i64 0, i64 1
  store i32 %add196, i32* %arrayidx198, align 4
  %194 = load %struct.block*, %struct.block** %bp, align 8
  %cen199 = getelementptr inbounds %struct.block, %struct.block* %194, i32 0, i32 10
  %arrayidx200 = getelementptr inbounds [3 x i32], [3 x i32]* %cen199, i64 0, i64 2
  %195 = load i32, i32* %arrayidx200, align 4
  %196 = load i32, i32* %k1, align 4
  %mul201 = mul nsw i32 2, %196
  %sub202 = sub nsw i32 %mul201, 1
  %197 = load i32*, i32** @p2, align 8
  %198 = load i32, i32* @num_refine, align 4
  %199 = load i32, i32* %level, align 4
  %sub203 = sub nsw i32 %198, %199
  %sub204 = sub nsw i32 %sub203, 1
  %idxprom205 = sext i32 %sub204 to i64
  %arrayidx206 = getelementptr inbounds i32, i32* %197, i64 %idxprom205
  %200 = load i32, i32* %arrayidx206, align 4
  %mul207 = mul nsw i32 %sub202, %200
  %add208 = add nsw i32 %195, %mul207
  %201 = load %struct.block*, %struct.block** %bp1, align 8
  %cen209 = getelementptr inbounds %struct.block, %struct.block* %201, i32 0, i32 10
  %arrayidx210 = getelementptr inbounds [3 x i32], [3 x i32]* %cen209, i64 0, i64 2
  store i32 %add208, i32* %arrayidx210, align 4
  %202 = load i32*, i32** @p2, align 8
  %203 = load i32, i32* @num_refine, align 4
  %204 = load i32, i32* %level, align 4
  %sub211 = sub nsw i32 %203, %204
  %sub212 = sub nsw i32 %sub211, 1
  %idxprom213 = sext i32 %sub212 to i64
  %arrayidx214 = getelementptr inbounds i32, i32* %202, i64 %idxprom213
  %205 = load i32, i32* %arrayidx214, align 4
  store i32 %205, i32* %half_size, align 4
  %206 = load i32, i32* @x_block_half, align 4
  %207 = load i32, i32* %i1, align 4
  %mul215 = mul nsw i32 %207, %206
  store i32 %mul215, i32* %i1, align 4
  %208 = load i32, i32* @y_block_half, align 4
  %209 = load i32, i32* %j1, align 4
  %mul216 = mul nsw i32 %209, %208
  store i32 %mul216, i32* %j1, align 4
  %210 = load i32, i32* @z_block_half, align 4
  %211 = load i32, i32* %k1, align 4
  %mul217 = mul nsw i32 %211, %210
  store i32 %mul217, i32* %k1, align 4
  store i32 0, i32* %v, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %for.inc338, %if.end128
  %212 = load i32, i32* %v, align 4
  %213 = load i32, i32* @num_vars, align 4
  %cmp219 = icmp slt i32 %212, %213
  br i1 %cmp219, label %for.body220, label %for.end340

for.body220:                                      ; preds = %for.cond218
  store i32 1, i32* %i, align 4
  store i32 1, i32* %i2, align 4
  br label %for.cond221

for.cond221:                                      ; preds = %for.inc334, %for.body220
  %214 = load i32, i32* %i, align 4
  %215 = load i32, i32* @x_block_half, align 4
  %cmp222 = icmp sle i32 %214, %215
  br i1 %cmp222, label %for.body223, label %for.end337

for.body223:                                      ; preds = %for.cond221
  store i32 1, i32* %j, align 4
  store i32 1, i32* %j2, align 4
  br label %for.cond224

for.cond224:                                      ; preds = %for.inc330, %for.body223
  %216 = load i32, i32* %j, align 4
  %217 = load i32, i32* @y_block_half, align 4
  %cmp225 = icmp sle i32 %216, %217
  br i1 %cmp225, label %for.body226, label %for.end333

for.body226:                                      ; preds = %for.cond224
  store i32 1, i32* %k, align 4
  store i32 1, i32* %k2, align 4
  br label %for.cond227

for.cond227:                                      ; preds = %for.inc326, %for.body226
  %218 = load i32, i32* %k, align 4
  %219 = load i32, i32* @z_block_half, align 4
  %cmp228 = icmp sle i32 %218, %219
  br i1 %cmp228, label %for.body229, label %for.end329

for.body229:                                      ; preds = %for.cond227
  %220 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %220, i32 0, i32 11
  %221 = load double****, double***** %array, align 8
  %222 = load i32, i32* %v, align 4
  %idxprom230 = sext i32 %222 to i64
  %arrayidx231 = getelementptr inbounds double***, double**** %221, i64 %idxprom230
  %223 = load double***, double**** %arrayidx231, align 8
  %224 = load i32, i32* %i, align 4
  %225 = load i32, i32* %i1, align 4
  %add232 = add nsw i32 %224, %225
  %idxprom233 = sext i32 %add232 to i64
  %arrayidx234 = getelementptr inbounds double**, double*** %223, i64 %idxprom233
  %226 = load double**, double*** %arrayidx234, align 8
  %227 = load i32, i32* %j, align 4
  %228 = load i32, i32* %j1, align 4
  %add235 = add nsw i32 %227, %228
  %idxprom236 = sext i32 %add235 to i64
  %arrayidx237 = getelementptr inbounds double*, double** %226, i64 %idxprom236
  %229 = load double*, double** %arrayidx237, align 8
  %230 = load i32, i32* %k, align 4
  %231 = load i32, i32* %k1, align 4
  %add238 = add nsw i32 %230, %231
  %idxprom239 = sext i32 %add238 to i64
  %arrayidx240 = getelementptr inbounds double, double* %229, i64 %idxprom239
  %232 = load double, double* %arrayidx240, align 8
  %div241 = fdiv double %232, 8.000000e+00
  %233 = load %struct.block*, %struct.block** %bp1, align 8
  %array242 = getelementptr inbounds %struct.block, %struct.block* %233, i32 0, i32 11
  %234 = load double****, double***** %array242, align 8
  %235 = load i32, i32* %v, align 4
  %idxprom243 = sext i32 %235 to i64
  %arrayidx244 = getelementptr inbounds double***, double**** %234, i64 %idxprom243
  %236 = load double***, double**** %arrayidx244, align 8
  %237 = load i32, i32* %i2, align 4
  %add245 = add nsw i32 %237, 1
  %idxprom246 = sext i32 %add245 to i64
  %arrayidx247 = getelementptr inbounds double**, double*** %236, i64 %idxprom246
  %238 = load double**, double*** %arrayidx247, align 8
  %239 = load i32, i32* %j2, align 4
  %add248 = add nsw i32 %239, 1
  %idxprom249 = sext i32 %add248 to i64
  %arrayidx250 = getelementptr inbounds double*, double** %238, i64 %idxprom249
  %240 = load double*, double** %arrayidx250, align 8
  %241 = load i32, i32* %k2, align 4
  %add251 = add nsw i32 %241, 1
  %idxprom252 = sext i32 %add251 to i64
  %arrayidx253 = getelementptr inbounds double, double* %240, i64 %idxprom252
  store double %div241, double* %arrayidx253, align 8
  %242 = load %struct.block*, %struct.block** %bp1, align 8
  %array254 = getelementptr inbounds %struct.block, %struct.block* %242, i32 0, i32 11
  %243 = load double****, double***** %array254, align 8
  %244 = load i32, i32* %v, align 4
  %idxprom255 = sext i32 %244 to i64
  %arrayidx256 = getelementptr inbounds double***, double**** %243, i64 %idxprom255
  %245 = load double***, double**** %arrayidx256, align 8
  %246 = load i32, i32* %i2, align 4
  %idxprom257 = sext i32 %246 to i64
  %arrayidx258 = getelementptr inbounds double**, double*** %245, i64 %idxprom257
  %247 = load double**, double*** %arrayidx258, align 8
  %248 = load i32, i32* %j2, align 4
  %add259 = add nsw i32 %248, 1
  %idxprom260 = sext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds double*, double** %247, i64 %idxprom260
  %249 = load double*, double** %arrayidx261, align 8
  %250 = load i32, i32* %k2, align 4
  %add262 = add nsw i32 %250, 1
  %idxprom263 = sext i32 %add262 to i64
  %arrayidx264 = getelementptr inbounds double, double* %249, i64 %idxprom263
  store double %div241, double* %arrayidx264, align 8
  %251 = load %struct.block*, %struct.block** %bp1, align 8
  %array265 = getelementptr inbounds %struct.block, %struct.block* %251, i32 0, i32 11
  %252 = load double****, double***** %array265, align 8
  %253 = load i32, i32* %v, align 4
  %idxprom266 = sext i32 %253 to i64
  %arrayidx267 = getelementptr inbounds double***, double**** %252, i64 %idxprom266
  %254 = load double***, double**** %arrayidx267, align 8
  %255 = load i32, i32* %i2, align 4
  %add268 = add nsw i32 %255, 1
  %idxprom269 = sext i32 %add268 to i64
  %arrayidx270 = getelementptr inbounds double**, double*** %254, i64 %idxprom269
  %256 = load double**, double*** %arrayidx270, align 8
  %257 = load i32, i32* %j2, align 4
  %idxprom271 = sext i32 %257 to i64
  %arrayidx272 = getelementptr inbounds double*, double** %256, i64 %idxprom271
  %258 = load double*, double** %arrayidx272, align 8
  %259 = load i32, i32* %k2, align 4
  %add273 = add nsw i32 %259, 1
  %idxprom274 = sext i32 %add273 to i64
  %arrayidx275 = getelementptr inbounds double, double* %258, i64 %idxprom274
  store double %div241, double* %arrayidx275, align 8
  %260 = load %struct.block*, %struct.block** %bp1, align 8
  %array276 = getelementptr inbounds %struct.block, %struct.block* %260, i32 0, i32 11
  %261 = load double****, double***** %array276, align 8
  %262 = load i32, i32* %v, align 4
  %idxprom277 = sext i32 %262 to i64
  %arrayidx278 = getelementptr inbounds double***, double**** %261, i64 %idxprom277
  %263 = load double***, double**** %arrayidx278, align 8
  %264 = load i32, i32* %i2, align 4
  %idxprom279 = sext i32 %264 to i64
  %arrayidx280 = getelementptr inbounds double**, double*** %263, i64 %idxprom279
  %265 = load double**, double*** %arrayidx280, align 8
  %266 = load i32, i32* %j2, align 4
  %idxprom281 = sext i32 %266 to i64
  %arrayidx282 = getelementptr inbounds double*, double** %265, i64 %idxprom281
  %267 = load double*, double** %arrayidx282, align 8
  %268 = load i32, i32* %k2, align 4
  %add283 = add nsw i32 %268, 1
  %idxprom284 = sext i32 %add283 to i64
  %arrayidx285 = getelementptr inbounds double, double* %267, i64 %idxprom284
  store double %div241, double* %arrayidx285, align 8
  %269 = load %struct.block*, %struct.block** %bp1, align 8
  %array286 = getelementptr inbounds %struct.block, %struct.block* %269, i32 0, i32 11
  %270 = load double****, double***** %array286, align 8
  %271 = load i32, i32* %v, align 4
  %idxprom287 = sext i32 %271 to i64
  %arrayidx288 = getelementptr inbounds double***, double**** %270, i64 %idxprom287
  %272 = load double***, double**** %arrayidx288, align 8
  %273 = load i32, i32* %i2, align 4
  %add289 = add nsw i32 %273, 1
  %idxprom290 = sext i32 %add289 to i64
  %arrayidx291 = getelementptr inbounds double**, double*** %272, i64 %idxprom290
  %274 = load double**, double*** %arrayidx291, align 8
  %275 = load i32, i32* %j2, align 4
  %add292 = add nsw i32 %275, 1
  %idxprom293 = sext i32 %add292 to i64
  %arrayidx294 = getelementptr inbounds double*, double** %274, i64 %idxprom293
  %276 = load double*, double** %arrayidx294, align 8
  %277 = load i32, i32* %k2, align 4
  %idxprom295 = sext i32 %277 to i64
  %arrayidx296 = getelementptr inbounds double, double* %276, i64 %idxprom295
  store double %div241, double* %arrayidx296, align 8
  %278 = load %struct.block*, %struct.block** %bp1, align 8
  %array297 = getelementptr inbounds %struct.block, %struct.block* %278, i32 0, i32 11
  %279 = load double****, double***** %array297, align 8
  %280 = load i32, i32* %v, align 4
  %idxprom298 = sext i32 %280 to i64
  %arrayidx299 = getelementptr inbounds double***, double**** %279, i64 %idxprom298
  %281 = load double***, double**** %arrayidx299, align 8
  %282 = load i32, i32* %i2, align 4
  %idxprom300 = sext i32 %282 to i64
  %arrayidx301 = getelementptr inbounds double**, double*** %281, i64 %idxprom300
  %283 = load double**, double*** %arrayidx301, align 8
  %284 = load i32, i32* %j2, align 4
  %add302 = add nsw i32 %284, 1
  %idxprom303 = sext i32 %add302 to i64
  %arrayidx304 = getelementptr inbounds double*, double** %283, i64 %idxprom303
  %285 = load double*, double** %arrayidx304, align 8
  %286 = load i32, i32* %k2, align 4
  %idxprom305 = sext i32 %286 to i64
  %arrayidx306 = getelementptr inbounds double, double* %285, i64 %idxprom305
  store double %div241, double* %arrayidx306, align 8
  %287 = load %struct.block*, %struct.block** %bp1, align 8
  %array307 = getelementptr inbounds %struct.block, %struct.block* %287, i32 0, i32 11
  %288 = load double****, double***** %array307, align 8
  %289 = load i32, i32* %v, align 4
  %idxprom308 = sext i32 %289 to i64
  %arrayidx309 = getelementptr inbounds double***, double**** %288, i64 %idxprom308
  %290 = load double***, double**** %arrayidx309, align 8
  %291 = load i32, i32* %i2, align 4
  %add310 = add nsw i32 %291, 1
  %idxprom311 = sext i32 %add310 to i64
  %arrayidx312 = getelementptr inbounds double**, double*** %290, i64 %idxprom311
  %292 = load double**, double*** %arrayidx312, align 8
  %293 = load i32, i32* %j2, align 4
  %idxprom313 = sext i32 %293 to i64
  %arrayidx314 = getelementptr inbounds double*, double** %292, i64 %idxprom313
  %294 = load double*, double** %arrayidx314, align 8
  %295 = load i32, i32* %k2, align 4
  %idxprom315 = sext i32 %295 to i64
  %arrayidx316 = getelementptr inbounds double, double* %294, i64 %idxprom315
  store double %div241, double* %arrayidx316, align 8
  %296 = load %struct.block*, %struct.block** %bp1, align 8
  %array317 = getelementptr inbounds %struct.block, %struct.block* %296, i32 0, i32 11
  %297 = load double****, double***** %array317, align 8
  %298 = load i32, i32* %v, align 4
  %idxprom318 = sext i32 %298 to i64
  %arrayidx319 = getelementptr inbounds double***, double**** %297, i64 %idxprom318
  %299 = load double***, double**** %arrayidx319, align 8
  %300 = load i32, i32* %i2, align 4
  %idxprom320 = sext i32 %300 to i64
  %arrayidx321 = getelementptr inbounds double**, double*** %299, i64 %idxprom320
  %301 = load double**, double*** %arrayidx321, align 8
  %302 = load i32, i32* %j2, align 4
  %idxprom322 = sext i32 %302 to i64
  %arrayidx323 = getelementptr inbounds double*, double** %301, i64 %idxprom322
  %303 = load double*, double** %arrayidx323, align 8
  %304 = load i32, i32* %k2, align 4
  %idxprom324 = sext i32 %304 to i64
  %arrayidx325 = getelementptr inbounds double, double* %303, i64 %idxprom324
  store double %div241, double* %arrayidx325, align 8
  br label %for.inc326

for.inc326:                                       ; preds = %for.body229
  %305 = load i32, i32* %k, align 4
  %inc327 = add nsw i32 %305, 1
  store i32 %inc327, i32* %k, align 4
  %306 = load i32, i32* %k2, align 4
  %add328 = add nsw i32 %306, 2
  store i32 %add328, i32* %k2, align 4
  br label %for.cond227

for.end329:                                       ; preds = %for.cond227
  br label %for.inc330

for.inc330:                                       ; preds = %for.end329
  %307 = load i32, i32* %j, align 4
  %inc331 = add nsw i32 %307, 1
  store i32 %inc331, i32* %j, align 4
  %308 = load i32, i32* %j2, align 4
  %add332 = add nsw i32 %308, 2
  store i32 %add332, i32* %j2, align 4
  br label %for.cond224

for.end333:                                       ; preds = %for.cond224
  br label %for.inc334

for.inc334:                                       ; preds = %for.end333
  %309 = load i32, i32* %i, align 4
  %inc335 = add nsw i32 %309, 1
  store i32 %inc335, i32* %i, align 4
  %310 = load i32, i32* %i2, align 4
  %add336 = add nsw i32 %310, 2
  store i32 %add336, i32* %i2, align 4
  br label %for.cond221

for.end337:                                       ; preds = %for.cond221
  br label %for.inc338

for.inc338:                                       ; preds = %for.end337
  %311 = load i32, i32* %v, align 4
  %inc339 = add nsw i32 %311, 1
  store i32 %inc339, i32* %v, align 4
  br label %for.cond218

for.end340:                                       ; preds = %for.cond218
  br label %for.inc341

for.inc341:                                       ; preds = %for.end340
  %312 = load i32, i32* %o, align 4
  %inc342 = add nsw i32 %312, 1
  store i32 %inc342, i32* %o, align 4
  br label %for.cond105

for.end343:                                       ; preds = %for.cond105
  store i32 0, i32* %c, align 4
  br label %for.cond344

for.cond344:                                      ; preds = %for.inc642, %for.end343
  %313 = load i32, i32* %c, align 4
  %cmp345 = icmp slt i32 %313, 6
  br i1 %cmp345, label %for.body346, label %for.end644

for.body346:                                      ; preds = %for.cond344
  store i32 0, i32* %i, align 4
  br label %for.cond347

for.cond347:                                      ; preds = %for.inc397, %for.body346
  %314 = load i32, i32* %i, align 4
  %cmp348 = icmp slt i32 %314, 2
  br i1 %cmp348, label %for.body349, label %for.end399

for.body349:                                      ; preds = %for.cond347
  store i32 0, i32* %j, align 4
  br label %for.cond350

for.cond350:                                      ; preds = %for.inc394, %for.body349
  %315 = load i32, i32* %j, align 4
  %cmp351 = icmp slt i32 %315, 2
  br i1 %cmp351, label %for.body352, label %for.end396

for.body352:                                      ; preds = %for.cond350
  %316 = load i32, i32* %level, align 4
  %add353 = add nsw i32 %316, 1
  %317 = load %struct.block*, %struct.block** @blocks, align 8
  %318 = load i32, i32* %c, align 4
  %idxprom354 = sext i32 %318 to i64
  %arrayidx355 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom354
  %319 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %319 to i64
  %arrayidx357 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx355, i64 0, i64 %idxprom356
  %320 = load i32, i32* %j, align 4
  %idxprom358 = sext i32 %320 to i64
  %arrayidx359 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx357, i64 0, i64 %idxprom358
  %321 = load i32, i32* %arrayidx359, align 4
  %322 = load i32, i32* %c, align 4
  %idxprom360 = sext i32 %322 to i64
  %arrayidx361 = getelementptr inbounds [6 x i32], [6 x i32]* @split_blocks.off, i64 0, i64 %idxprom360
  %323 = load i32, i32* %arrayidx361, align 4
  %add362 = add nsw i32 %321, %323
  %idxprom363 = sext i32 %add362 to i64
  %arrayidx364 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom363
  %324 = load i32, i32* %arrayidx364, align 4
  %idxprom365 = sext i32 %324 to i64
  %arrayidx366 = getelementptr inbounds %struct.block, %struct.block* %317, i64 %idxprom365
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %arrayidx366, i32 0, i32 8
  %325 = load i32, i32* %c, align 4
  %idxprom367 = sext i32 %325 to i64
  %arrayidx368 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 %idxprom367
  store i32 %add353, i32* %arrayidx368, align 4
  %326 = load i32, i32* %c, align 4
  %idxprom369 = sext i32 %326 to i64
  %arrayidx370 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom369
  %327 = load i32, i32* %i, align 4
  %idxprom371 = sext i32 %327 to i64
  %arrayidx372 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx370, i64 0, i64 %idxprom371
  %328 = load i32, i32* %j, align 4
  %idxprom373 = sext i32 %328 to i64
  %arrayidx374 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx372, i64 0, i64 %idxprom373
  %329 = load i32, i32* %arrayidx374, align 4
  %idxprom375 = sext i32 %329 to i64
  %arrayidx376 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom375
  %330 = load i32, i32* %arrayidx376, align 4
  %331 = load %struct.block*, %struct.block** @blocks, align 8
  %332 = load i32, i32* %c, align 4
  %idxprom377 = sext i32 %332 to i64
  %arrayidx378 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom377
  %333 = load i32, i32* %i, align 4
  %idxprom379 = sext i32 %333 to i64
  %arrayidx380 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx378, i64 0, i64 %idxprom379
  %334 = load i32, i32* %j, align 4
  %idxprom381 = sext i32 %334 to i64
  %arrayidx382 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx380, i64 0, i64 %idxprom381
  %335 = load i32, i32* %arrayidx382, align 4
  %336 = load i32, i32* %c, align 4
  %idxprom383 = sext i32 %336 to i64
  %arrayidx384 = getelementptr inbounds [6 x i32], [6 x i32]* @split_blocks.off, i64 0, i64 %idxprom383
  %337 = load i32, i32* %arrayidx384, align 4
  %add385 = add nsw i32 %335, %337
  %idxprom386 = sext i32 %add385 to i64
  %arrayidx387 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom386
  %338 = load i32, i32* %arrayidx387, align 4
  %idxprom388 = sext i32 %338 to i64
  %arrayidx389 = getelementptr inbounds %struct.block, %struct.block* %331, i64 %idxprom388
  %nei = getelementptr inbounds %struct.block, %struct.block* %arrayidx389, i32 0, i32 9
  %339 = load i32, i32* %c, align 4
  %idxprom390 = sext i32 %339 to i64
  %arrayidx391 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei, i64 0, i64 %idxprom390
  %arrayidx392 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx391, i64 0, i64 0
  %arrayidx393 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx392, i64 0, i64 0
  store i32 %330, i32* %arrayidx393, align 4
  br label %for.inc394

for.inc394:                                       ; preds = %for.body352
  %340 = load i32, i32* %j, align 4
  %inc395 = add nsw i32 %340, 1
  store i32 %inc395, i32* %j, align 4
  br label %for.cond350

for.end396:                                       ; preds = %for.cond350
  br label %for.inc397

for.inc397:                                       ; preds = %for.end396
  %341 = load i32, i32* %i, align 4
  %inc398 = add nsw i32 %341, 1
  store i32 %inc398, i32* %i, align 4
  br label %for.cond347

for.end399:                                       ; preds = %for.cond347
  %342 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level400 = getelementptr inbounds %struct.block, %struct.block* %342, i32 0, i32 8
  %343 = load i32, i32* %c, align 4
  %idxprom401 = sext i32 %343 to i64
  %arrayidx402 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level400, i64 0, i64 %idxprom401
  %344 = load i32, i32* %arrayidx402, align 4
  %cmp403 = icmp eq i32 %344, -2
  br i1 %cmp403, label %if.then404, label %if.else

if.then404:                                       ; preds = %for.end399
  store i32 0, i32* %i, align 4
  br label %for.cond405

for.cond405:                                      ; preds = %for.inc442, %if.then404
  %345 = load i32, i32* %i, align 4
  %cmp406 = icmp slt i32 %345, 2
  br i1 %cmp406, label %for.body407, label %for.end444

for.body407:                                      ; preds = %for.cond405
  store i32 0, i32* %j, align 4
  br label %for.cond408

for.cond408:                                      ; preds = %for.inc439, %for.body407
  %346 = load i32, i32* %j, align 4
  %cmp409 = icmp slt i32 %346, 2
  br i1 %cmp409, label %for.body410, label %for.end441

for.body410:                                      ; preds = %for.cond408
  %347 = load %struct.block*, %struct.block** @blocks, align 8
  %348 = load i32, i32* %c, align 4
  %idxprom411 = sext i32 %348 to i64
  %arrayidx412 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom411
  %349 = load i32, i32* %i, align 4
  %idxprom413 = sext i32 %349 to i64
  %arrayidx414 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx412, i64 0, i64 %idxprom413
  %350 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %350 to i64
  %arrayidx416 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx414, i64 0, i64 %idxprom415
  %351 = load i32, i32* %arrayidx416, align 4
  %idxprom417 = sext i32 %351 to i64
  %arrayidx418 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom417
  %352 = load i32, i32* %arrayidx418, align 4
  %idxprom419 = sext i32 %352 to i64
  %arrayidx420 = getelementptr inbounds %struct.block, %struct.block* %347, i64 %idxprom419
  %nei_level421 = getelementptr inbounds %struct.block, %struct.block* %arrayidx420, i32 0, i32 8
  %353 = load i32, i32* %c, align 4
  %idxprom422 = sext i32 %353 to i64
  %arrayidx423 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level421, i64 0, i64 %idxprom422
  store i32 -2, i32* %arrayidx423, align 4
  %354 = load %struct.block*, %struct.block** @blocks, align 8
  %355 = load i32, i32* %c, align 4
  %idxprom424 = sext i32 %355 to i64
  %arrayidx425 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom424
  %356 = load i32, i32* %i, align 4
  %idxprom426 = sext i32 %356 to i64
  %arrayidx427 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx425, i64 0, i64 %idxprom426
  %357 = load i32, i32* %j, align 4
  %idxprom428 = sext i32 %357 to i64
  %arrayidx429 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx427, i64 0, i64 %idxprom428
  %358 = load i32, i32* %arrayidx429, align 4
  %idxprom430 = sext i32 %358 to i64
  %arrayidx431 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom430
  %359 = load i32, i32* %arrayidx431, align 4
  %idxprom432 = sext i32 %359 to i64
  %arrayidx433 = getelementptr inbounds %struct.block, %struct.block* %354, i64 %idxprom432
  %nei434 = getelementptr inbounds %struct.block, %struct.block* %arrayidx433, i32 0, i32 9
  %360 = load i32, i32* %c, align 4
  %idxprom435 = sext i32 %360 to i64
  %arrayidx436 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei434, i64 0, i64 %idxprom435
  %arrayidx437 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx436, i64 0, i64 0
  %arrayidx438 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx437, i64 0, i64 0
  store i32 0, i32* %arrayidx438, align 4
  br label %for.inc439

for.inc439:                                       ; preds = %for.body410
  %361 = load i32, i32* %j, align 4
  %inc440 = add nsw i32 %361, 1
  store i32 %inc440, i32* %j, align 4
  br label %for.cond408

for.end441:                                       ; preds = %for.cond408
  br label %for.inc442

for.inc442:                                       ; preds = %for.end441
  %362 = load i32, i32* %i, align 4
  %inc443 = add nsw i32 %362, 1
  store i32 %inc443, i32* %i, align 4
  br label %for.cond405

for.end444:                                       ; preds = %for.cond405
  br label %if.end641

if.else:                                          ; preds = %for.end399
  %363 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level445 = getelementptr inbounds %struct.block, %struct.block* %363, i32 0, i32 8
  %364 = load i32, i32* %c, align 4
  %idxprom446 = sext i32 %364 to i64
  %arrayidx447 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level445, i64 0, i64 %idxprom446
  %365 = load i32, i32* %arrayidx447, align 4
  %366 = load i32, i32* %level, align 4
  %sub448 = sub nsw i32 %366, 1
  %cmp449 = icmp eq i32 %365, %sub448
  br i1 %cmp449, label %if.then450, label %if.else466

if.then450:                                       ; preds = %if.else
  %367 = load %struct.block*, %struct.block** %bp, align 8
  %nei451 = getelementptr inbounds %struct.block, %struct.block* %367, i32 0, i32 9
  %368 = load i32, i32* %c, align 4
  %idxprom452 = sext i32 %368 to i64
  %arrayidx453 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei451, i64 0, i64 %idxprom452
  %arrayidx454 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx453, i64 0, i64 0
  %arrayidx455 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx454, i64 0, i64 0
  %369 = load i32, i32* %arrayidx455, align 4
  %cmp456 = icmp sge i32 %369, 0
  br i1 %cmp456, label %if.then457, label %if.end465

if.then457:                                       ; preds = %if.then450
  %370 = load i32, i32* @my_pe, align 4
  %371 = load i32, i32* %n, align 4
  %372 = load %struct.block*, %struct.block** %bp, align 8
  %number458 = getelementptr inbounds %struct.block, %struct.block* %372, i32 0, i32 0
  %373 = load i32, i32* %number458, align 8
  %374 = load i32, i32* %c, align 4
  %375 = load %struct.block*, %struct.block** %bp, align 8
  %nei459 = getelementptr inbounds %struct.block, %struct.block* %375, i32 0, i32 9
  %376 = load i32, i32* %c, align 4
  %idxprom460 = sext i32 %376 to i64
  %arrayidx461 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei459, i64 0, i64 %idxprom460
  %arrayidx462 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx461, i64 0, i64 0
  %arrayidx463 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx462, i64 0, i64 0
  %377 = load i32, i32* %arrayidx463, align 4
  %call464 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 %370, i32 %371, i32 %373, i32 %374, i32 %377)
  call void @exit(i32 -1) #8
  unreachable

if.end465:                                        ; preds = %if.then450
  br label %if.end640

if.else466:                                       ; preds = %if.else
  %378 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level467 = getelementptr inbounds %struct.block, %struct.block* %378, i32 0, i32 8
  %379 = load i32, i32* %c, align 4
  %idxprom468 = sext i32 %379 to i64
  %arrayidx469 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level467, i64 0, i64 %idxprom468
  %380 = load i32, i32* %arrayidx469, align 4
  %381 = load i32, i32* %level, align 4
  %cmp470 = icmp eq i32 %380, %381
  br i1 %cmp470, label %if.then471, label %if.else543

if.then471:                                       ; preds = %if.else466
  %382 = load %struct.block*, %struct.block** %bp, align 8
  %nei472 = getelementptr inbounds %struct.block, %struct.block* %382, i32 0, i32 9
  %383 = load i32, i32* %c, align 4
  %idxprom473 = sext i32 %383 to i64
  %arrayidx474 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei472, i64 0, i64 %idxprom473
  %arrayidx475 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx474, i64 0, i64 0
  %arrayidx476 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx475, i64 0, i64 0
  %384 = load i32, i32* %arrayidx476, align 4
  %cmp477 = icmp sge i32 %384, 0
  br i1 %cmp477, label %if.then478, label %if.end542

if.then478:                                       ; preds = %if.then471
  %385 = load %struct.block*, %struct.block** %bp, align 8
  %nei479 = getelementptr inbounds %struct.block, %struct.block* %385, i32 0, i32 9
  %386 = load i32, i32* %c, align 4
  %idxprom480 = sext i32 %386 to i64
  %arrayidx481 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei479, i64 0, i64 %idxprom480
  %arrayidx482 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx481, i64 0, i64 0
  %arrayidx483 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx482, i64 0, i64 0
  %387 = load i32, i32* %arrayidx483, align 4
  store i32 %387, i32* %other, align 4
  %388 = load i32, i32* %c, align 4
  %div484 = sdiv i32 %388, 2
  %mul485 = mul nsw i32 %div484, 2
  %389 = load i32, i32* %c, align 4
  %add486 = add nsw i32 %389, 1
  %rem487 = srem i32 %add486, 2
  %add488 = add nsw i32 %mul485, %rem487
  store i32 %add488, i32* %c1, align 4
  %390 = load i32, i32* %level, align 4
  %add489 = add nsw i32 %390, 1
  %391 = load %struct.block*, %struct.block** @blocks, align 8
  %392 = load i32, i32* %other, align 4
  %idxprom490 = sext i32 %392 to i64
  %arrayidx491 = getelementptr inbounds %struct.block, %struct.block* %391, i64 %idxprom490
  %nei_level492 = getelementptr inbounds %struct.block, %struct.block* %arrayidx491, i32 0, i32 8
  %393 = load i32, i32* %c1, align 4
  %idxprom493 = sext i32 %393 to i64
  %arrayidx494 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level492, i64 0, i64 %idxprom493
  store i32 %add489, i32* %arrayidx494, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond495

for.cond495:                                      ; preds = %for.inc539, %if.then478
  %394 = load i32, i32* %i, align 4
  %cmp496 = icmp slt i32 %394, 2
  br i1 %cmp496, label %for.body497, label %for.end541

for.body497:                                      ; preds = %for.cond495
  store i32 0, i32* %j, align 4
  br label %for.cond498

for.cond498:                                      ; preds = %for.inc536, %for.body497
  %395 = load i32, i32* %j, align 4
  %cmp499 = icmp slt i32 %395, 2
  br i1 %cmp499, label %for.body500, label %for.end538

for.body500:                                      ; preds = %for.cond498
  %396 = load %struct.block*, %struct.block** @blocks, align 8
  %397 = load i32, i32* %c, align 4
  %idxprom501 = sext i32 %397 to i64
  %arrayidx502 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom501
  %398 = load i32, i32* %i, align 4
  %idxprom503 = sext i32 %398 to i64
  %arrayidx504 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx502, i64 0, i64 %idxprom503
  %399 = load i32, i32* %j, align 4
  %idxprom505 = sext i32 %399 to i64
  %arrayidx506 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx504, i64 0, i64 %idxprom505
  %400 = load i32, i32* %arrayidx506, align 4
  %idxprom507 = sext i32 %400 to i64
  %arrayidx508 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom507
  %401 = load i32, i32* %arrayidx508, align 4
  %idxprom509 = sext i32 %401 to i64
  %arrayidx510 = getelementptr inbounds %struct.block, %struct.block* %396, i64 %idxprom509
  store %struct.block* %arrayidx510, %struct.block** %bp1, align 8
  %402 = load i32, i32* %level, align 4
  %403 = load %struct.block*, %struct.block** %bp1, align 8
  %nei_level511 = getelementptr inbounds %struct.block, %struct.block* %403, i32 0, i32 8
  %404 = load i32, i32* %c, align 4
  %idxprom512 = sext i32 %404 to i64
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level511, i64 0, i64 %idxprom512
  store i32 %402, i32* %arrayidx513, align 4
  %405 = load i32, i32* %other, align 4
  %406 = load %struct.block*, %struct.block** %bp1, align 8
  %nei514 = getelementptr inbounds %struct.block, %struct.block* %406, i32 0, i32 9
  %407 = load i32, i32* %c, align 4
  %idxprom515 = sext i32 %407 to i64
  %arrayidx516 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei514, i64 0, i64 %idxprom515
  %arrayidx517 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx516, i64 0, i64 0
  %arrayidx518 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx517, i64 0, i64 0
  store i32 %405, i32* %arrayidx518, align 4
  %408 = load i32, i32* %c, align 4
  %idxprom519 = sext i32 %408 to i64
  %arrayidx520 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom519
  %409 = load i32, i32* %i, align 4
  %idxprom521 = sext i32 %409 to i64
  %arrayidx522 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx520, i64 0, i64 %idxprom521
  %410 = load i32, i32* %j, align 4
  %idxprom523 = sext i32 %410 to i64
  %arrayidx524 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx522, i64 0, i64 %idxprom523
  %411 = load i32, i32* %arrayidx524, align 4
  %idxprom525 = sext i32 %411 to i64
  %arrayidx526 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom525
  %412 = load i32, i32* %arrayidx526, align 4
  %413 = load %struct.block*, %struct.block** @blocks, align 8
  %414 = load i32, i32* %other, align 4
  %idxprom527 = sext i32 %414 to i64
  %arrayidx528 = getelementptr inbounds %struct.block, %struct.block* %413, i64 %idxprom527
  %nei529 = getelementptr inbounds %struct.block, %struct.block* %arrayidx528, i32 0, i32 9
  %415 = load i32, i32* %c1, align 4
  %idxprom530 = sext i32 %415 to i64
  %arrayidx531 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei529, i64 0, i64 %idxprom530
  %416 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %416 to i64
  %arrayidx533 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx531, i64 0, i64 %idxprom532
  %417 = load i32, i32* %j, align 4
  %idxprom534 = sext i32 %417 to i64
  %arrayidx535 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx533, i64 0, i64 %idxprom534
  store i32 %412, i32* %arrayidx535, align 4
  br label %for.inc536

for.inc536:                                       ; preds = %for.body500
  %418 = load i32, i32* %j, align 4
  %inc537 = add nsw i32 %418, 1
  store i32 %inc537, i32* %j, align 4
  br label %for.cond498

for.end538:                                       ; preds = %for.cond498
  br label %for.inc539

for.inc539:                                       ; preds = %for.end538
  %419 = load i32, i32* %i, align 4
  %inc540 = add nsw i32 %419, 1
  store i32 %inc540, i32* %i, align 4
  br label %for.cond495

for.end541:                                       ; preds = %for.cond495
  br label %if.end542

if.end542:                                        ; preds = %for.end541, %if.then471
  br label %if.end639

if.else543:                                       ; preds = %if.else466
  %420 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level544 = getelementptr inbounds %struct.block, %struct.block* %420, i32 0, i32 8
  %421 = load i32, i32* %c, align 4
  %idxprom545 = sext i32 %421 to i64
  %arrayidx546 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level544, i64 0, i64 %idxprom545
  %422 = load i32, i32* %arrayidx546, align 4
  %423 = load i32, i32* %level, align 4
  %add547 = add nsw i32 %423, 1
  %cmp548 = icmp eq i32 %422, %add547
  br i1 %cmp548, label %if.then549, label %if.else632

if.then549:                                       ; preds = %if.else543
  %424 = load i32, i32* %c, align 4
  %div550 = sdiv i32 %424, 2
  store i32 %div550, i32* %dir, align 4
  %425 = load i32, i32* %c, align 4
  %rem551 = srem i32 %425, 2
  %mul552 = mul nsw i32 %rem551, 10
  store i32 %mul552, i32* %fcase, align 4
  %426 = load i32, i32* %c, align 4
  %div553 = sdiv i32 %426, 2
  %mul554 = mul nsw i32 %div553, 2
  %427 = load i32, i32* %c, align 4
  %add555 = add nsw i32 %427, 1
  %rem556 = srem i32 %add555, 2
  %add557 = add nsw i32 %mul554, %rem556
  store i32 %add557, i32* %c1, align 4
  %428 = load i32, i32* %c, align 4
  %rem558 = srem i32 %428, 2
  %mul559 = mul nsw i32 2, %rem558
  %sub560 = sub nsw i32 %mul559, 1
  store i32 %sub560, i32* %d, align 4
  %429 = load i32, i32* %fcase, align 4
  %add561 = add nsw i32 %429, 6
  store i32 %add561, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond562

for.cond562:                                      ; preds = %for.inc629, %if.then549
  %430 = load i32, i32* %i, align 4
  %cmp563 = icmp slt i32 %430, 2
  br i1 %cmp563, label %for.body564, label %for.end631

for.body564:                                      ; preds = %for.cond562
  store i32 0, i32* %j, align 4
  br label %for.cond565

for.cond565:                                      ; preds = %for.inc625, %for.body564
  %431 = load i32, i32* %j, align 4
  %cmp566 = icmp slt i32 %431, 2
  br i1 %cmp566, label %for.body567, label %for.end628

for.body567:                                      ; preds = %for.cond565
  %432 = load %struct.block*, %struct.block** %bp, align 8
  %nei568 = getelementptr inbounds %struct.block, %struct.block* %432, i32 0, i32 9
  %433 = load i32, i32* %c, align 4
  %idxprom569 = sext i32 %433 to i64
  %arrayidx570 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei568, i64 0, i64 %idxprom569
  %434 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %434 to i64
  %arrayidx572 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx570, i64 0, i64 %idxprom571
  %435 = load i32, i32* %j, align 4
  %idxprom573 = sext i32 %435 to i64
  %arrayidx574 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx572, i64 0, i64 %idxprom573
  %436 = load i32, i32* %arrayidx574, align 4
  %cmp575 = icmp sge i32 %436, 0
  br i1 %cmp575, label %if.then576, label %if.end624

if.then576:                                       ; preds = %for.body567
  %437 = load %struct.block*, %struct.block** %bp, align 8
  %nei577 = getelementptr inbounds %struct.block, %struct.block* %437, i32 0, i32 9
  %438 = load i32, i32* %c, align 4
  %idxprom578 = sext i32 %438 to i64
  %arrayidx579 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei577, i64 0, i64 %idxprom578
  %439 = load i32, i32* %i, align 4
  %idxprom580 = sext i32 %439 to i64
  %arrayidx581 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx579, i64 0, i64 %idxprom580
  %440 = load i32, i32* %j, align 4
  %idxprom582 = sext i32 %440 to i64
  %arrayidx583 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx581, i64 0, i64 %idxprom582
  %441 = load i32, i32* %arrayidx583, align 4
  store i32 %441, i32* %other, align 4
  %442 = load %struct.block*, %struct.block** @blocks, align 8
  %443 = load i32, i32* %c, align 4
  %idxprom584 = sext i32 %443 to i64
  %arrayidx585 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom584
  %444 = load i32, i32* %i, align 4
  %idxprom586 = sext i32 %444 to i64
  %arrayidx587 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx585, i64 0, i64 %idxprom586
  %445 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %445 to i64
  %arrayidx589 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx587, i64 0, i64 %idxprom588
  %446 = load i32, i32* %arrayidx589, align 4
  %idxprom590 = sext i32 %446 to i64
  %arrayidx591 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom590
  %447 = load i32, i32* %arrayidx591, align 4
  %idxprom592 = sext i32 %447 to i64
  %arrayidx593 = getelementptr inbounds %struct.block, %struct.block* %442, i64 %idxprom592
  store %struct.block* %arrayidx593, %struct.block** %bp1, align 8
  %448 = load i32, i32* %level, align 4
  %add594 = add nsw i32 %448, 1
  %449 = load %struct.block*, %struct.block** %bp1, align 8
  %nei_level595 = getelementptr inbounds %struct.block, %struct.block* %449, i32 0, i32 8
  %450 = load i32, i32* %c, align 4
  %idxprom596 = sext i32 %450 to i64
  %arrayidx597 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level595, i64 0, i64 %idxprom596
  store i32 %add594, i32* %arrayidx597, align 4
  %451 = load i32, i32* %other, align 4
  %452 = load %struct.block*, %struct.block** %bp1, align 8
  %nei598 = getelementptr inbounds %struct.block, %struct.block* %452, i32 0, i32 9
  %453 = load i32, i32* %c, align 4
  %idxprom599 = sext i32 %453 to i64
  %arrayidx600 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei598, i64 0, i64 %idxprom599
  %arrayidx601 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx600, i64 0, i64 0
  %arrayidx602 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx601, i64 0, i64 0
  store i32 %451, i32* %arrayidx602, align 4
  %454 = load i32, i32* %level, align 4
  %add603 = add nsw i32 %454, 1
  %455 = load %struct.block*, %struct.block** @blocks, align 8
  %456 = load i32, i32* %other, align 4
  %idxprom604 = sext i32 %456 to i64
  %arrayidx605 = getelementptr inbounds %struct.block, %struct.block* %455, i64 %idxprom604
  %nei_level606 = getelementptr inbounds %struct.block, %struct.block* %arrayidx605, i32 0, i32 8
  %457 = load i32, i32* %c1, align 4
  %idxprom607 = sext i32 %457 to i64
  %arrayidx608 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level606, i64 0, i64 %idxprom607
  store i32 %add603, i32* %arrayidx608, align 4
  %458 = load i32, i32* %c, align 4
  %idxprom609 = sext i32 %458 to i64
  %arrayidx610 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @split_blocks.side, i64 0, i64 %idxprom609
  %459 = load i32, i32* %i, align 4
  %idxprom611 = sext i32 %459 to i64
  %arrayidx612 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx610, i64 0, i64 %idxprom611
  %460 = load i32, i32* %j, align 4
  %idxprom613 = sext i32 %460 to i64
  %arrayidx614 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx612, i64 0, i64 %idxprom613
  %461 = load i32, i32* %arrayidx614, align 4
  %idxprom615 = sext i32 %461 to i64
  %arrayidx616 = getelementptr inbounds [8 x i32], [8 x i32]* %sib, i64 0, i64 %idxprom615
  %462 = load i32, i32* %arrayidx616, align 4
  %463 = load %struct.block*, %struct.block** @blocks, align 8
  %464 = load i32, i32* %other, align 4
  %idxprom617 = sext i32 %464 to i64
  %arrayidx618 = getelementptr inbounds %struct.block, %struct.block* %463, i64 %idxprom617
  %nei619 = getelementptr inbounds %struct.block, %struct.block* %arrayidx618, i32 0, i32 9
  %465 = load i32, i32* %c1, align 4
  %idxprom620 = sext i32 %465 to i64
  %arrayidx621 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei619, i64 0, i64 %idxprom620
  %arrayidx622 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx621, i64 0, i64 0
  %arrayidx623 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx622, i64 0, i64 0
  store i32 %462, i32* %arrayidx623, align 4
  br label %if.end624

if.end624:                                        ; preds = %if.then576, %for.body567
  br label %for.inc625

for.inc625:                                       ; preds = %if.end624
  %466 = load i32, i32* %j, align 4
  %inc626 = add nsw i32 %466, 1
  store i32 %inc626, i32* %j, align 4
  %467 = load i32, i32* %k, align 4
  %inc627 = add nsw i32 %467, 1
  store i32 %inc627, i32* %k, align 4
  br label %for.cond565

for.end628:                                       ; preds = %for.cond565
  br label %for.inc629

for.inc629:                                       ; preds = %for.end628
  %468 = load i32, i32* %i, align 4
  %inc630 = add nsw i32 %468, 1
  store i32 %inc630, i32* %i, align 4
  br label %for.cond562

for.end631:                                       ; preds = %for.cond562
  br label %if.end638

if.else632:                                       ; preds = %if.else543
  %469 = load i32, i32* @my_pe, align 4
  %470 = load i32, i32* %n, align 4
  %471 = load %struct.block*, %struct.block** %bp, align 8
  %number633 = getelementptr inbounds %struct.block, %struct.block* %471, i32 0, i32 0
  %472 = load i32, i32* %number633, align 8
  %473 = load i32, i32* %level, align 4
  %474 = load i32, i32* %c, align 4
  %475 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level634 = getelementptr inbounds %struct.block, %struct.block* %475, i32 0, i32 8
  %476 = load i32, i32* %c, align 4
  %idxprom635 = sext i32 %476 to i64
  %arrayidx636 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level634, i64 0, i64 %idxprom635
  %477 = load i32, i32* %arrayidx636, align 4
  %call637 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i32 %469, i32 %470, i32 %472, i32 %473, i32 %474, i32 %477)
  call void @exit(i32 -1) #8
  unreachable

if.end638:                                        ; preds = %for.end631
  br label %if.end639

if.end639:                                        ; preds = %if.end638, %if.end542
  br label %if.end640

if.end640:                                        ; preds = %if.end639, %if.end465
  br label %if.end641

if.end641:                                        ; preds = %if.end640, %for.end444
  br label %for.inc642

for.inc642:                                       ; preds = %if.end641
  %478 = load i32, i32* %c, align 4
  %inc643 = add nsw i32 %478, 1
  store i32 %inc643, i32* %c, align 4
  br label %for.cond344

for.end644:                                       ; preds = %for.cond344
  %479 = load %struct.block*, %struct.block** %bp, align 8
  %number645 = getelementptr inbounds %struct.block, %struct.block* %479, i32 0, i32 0
  store i32 -1, i32* %number645, align 8
  %480 = load i32, i32* %n, align 4
  %481 = load i32, i32* %m, align 4
  %cmp646 = icmp slt i32 %480, %481
  br i1 %cmp646, label %if.then647, label %if.end648

if.then647:                                       ; preds = %for.end644
  %482 = load i32, i32* %n, align 4
  store i32 %482, i32* %m, align 4
  br label %if.end648

if.end648:                                        ; preds = %if.then647, %for.end644
  br label %if.end649

if.end649:                                        ; preds = %if.end648, %if.then
  br label %if.end650

if.end650:                                        ; preds = %if.end649, %land.lhs.true, %for.body3
  br label %for.inc651

for.inc651:                                       ; preds = %if.end650
  %483 = load i32, i32* %n, align 4
  %inc652 = add nsw i32 %483, 1
  store i32 %inc652, i32* %n, align 4
  br label %for.cond1

for.end653:                                       ; preds = %for.cond1
  br label %for.inc654

for.inc654:                                       ; preds = %for.end653
  %484 = load i32, i32* %level, align 4
  %inc655 = add nsw i32 %484, 1
  store i32 %inc655, i32* %level, align 4
  br label %for.cond

for.end656:                                       ; preds = %for.cond
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @del_sorted_list(i32 %number, i32 %level) #0 {
entry:
  %number.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  store i32 %level, i32* %level.addr, align 4
  %0 = load i32*, i32** @sorted_index, align 8
  %1 = load i32, i32* %level.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32*, i32** @sorted_index, align 8
  %5 = load i32, i32* %level.addr, align 4
  %add = add nsw i32 %5, 1
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1
  %6 = load i32, i32* %arrayidx2, align 4
  %cmp = icmp slt i32 %3, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %number.addr, align 4
  %8 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %9 to i64
  %arrayidx4 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %8, i64 %idxprom3
  %number5 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx4, i32 0, i32 0
  %10 = load i32, i32* %number5, align 4
  %cmp6 = icmp eq i32 %7, %10
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32, i32* %number.addr, align 4
  %13 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %14 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %13, i64 %idxprom7
  %number9 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx8, i32 0, i32 0
  %15 = load i32, i32* %number9, align 4
  %cmp10 = icmp ne i32 %12, %15
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.end
  %16 = load i32, i32* @my_pe, align 4
  %17 = load i32, i32* %number.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i32 %16, i32 %17)
  call void @exit(i32 -1) #8
  unreachable

if.end12:                                         ; preds = %for.end
  %18 = load i32, i32* %level.addr, align 4
  %add13 = add nsw i32 %18, 1
  store i32 %add13, i32* %j, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc20, %if.end12
  %19 = load i32, i32* %j, align 4
  %20 = load i32, i32* @num_refine, align 4
  %add15 = add nsw i32 %20, 1
  %cmp16 = icmp sle i32 %19, %add15
  br i1 %cmp16, label %for.body17, label %for.end22

for.body17:                                       ; preds = %for.cond14
  %21 = load i32*, i32** @sorted_index, align 8
  %22 = load i32, i32* %j, align 4
  %idxprom18 = sext i32 %22 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %21, i64 %idxprom18
  %23 = load i32, i32* %arrayidx19, align 4
  %dec = add nsw i32 %23, -1
  store i32 %dec, i32* %arrayidx19, align 4
  br label %for.inc20

for.inc20:                                        ; preds = %for.body17
  %24 = load i32, i32* %j, align 4
  %inc21 = add nsw i32 %24, 1
  store i32 %inc21, i32* %j, align 4
  br label %for.cond14

for.end22:                                        ; preds = %for.cond14
  %25 = load i32, i32* %i, align 4
  store i32 %25, i32* %j, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc42, %for.end22
  %26 = load i32, i32* %j, align 4
  %27 = load i32*, i32** @sorted_index, align 8
  %28 = load i32, i32* @num_refine, align 4
  %add24 = add nsw i32 %28, 1
  %idxprom25 = sext i32 %add24 to i64
  %arrayidx26 = getelementptr inbounds i32, i32* %27, i64 %idxprom25
  %29 = load i32, i32* %arrayidx26, align 4
  %cmp27 = icmp slt i32 %26, %29
  br i1 %cmp27, label %for.body28, label %for.end44

for.body28:                                       ; preds = %for.cond23
  %30 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %31 = load i32, i32* %j, align 4
  %add29 = add nsw i32 %31, 1
  %idxprom30 = sext i32 %add29 to i64
  %arrayidx31 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %30, i64 %idxprom30
  %number32 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx31, i32 0, i32 0
  %32 = load i32, i32* %number32, align 4
  %33 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %34 = load i32, i32* %j, align 4
  %idxprom33 = sext i32 %34 to i64
  %arrayidx34 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %33, i64 %idxprom33
  %number35 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx34, i32 0, i32 0
  store i32 %32, i32* %number35, align 4
  %35 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %36 = load i32, i32* %j, align 4
  %add36 = add nsw i32 %36, 1
  %idxprom37 = sext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %35, i64 %idxprom37
  %n = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx38, i32 0, i32 1
  %37 = load i32, i32* %n, align 4
  %38 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %39 = load i32, i32* %j, align 4
  %idxprom39 = sext i32 %39 to i64
  %arrayidx40 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %38, i64 %idxprom39
  %n41 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx40, i32 0, i32 1
  store i32 %37, i32* %n41, align 4
  br label %for.inc42

for.inc42:                                        ; preds = %for.body28
  %40 = load i32, i32* %j, align 4
  %inc43 = add nsw i32 %40, 1
  store i32 %inc43, i32* %j, align 4
  br label %for.cond23

for.end44:                                        ; preds = %for.cond23
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @add_sorted_list(i32 %n, i32 %number, i32 %level) #0 {
entry:
  %n.addr = alloca i32, align 4
  %number.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  store i32 %number, i32* %number.addr, align 4
  store i32 %level, i32* %level.addr, align 4
  %0 = load i32*, i32** @sorted_index, align 8
  %1 = load i32, i32* %level.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32*, i32** @sorted_index, align 8
  %5 = load i32, i32* %level.addr, align 4
  %add = add nsw i32 %5, 1
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1
  %6 = load i32, i32* %arrayidx2, align 4
  %cmp = icmp slt i32 %3, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %number.addr, align 4
  %8 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %9 to i64
  %arrayidx4 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %8, i64 %idxprom3
  %number5 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx4, i32 0, i32 0
  %10 = load i32, i32* %number5, align 4
  %cmp6 = icmp sgt i32 %7, %10
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  br label %for.end

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %12 = load i32*, i32** @sorted_index, align 8
  %13 = load i32, i32* @num_refine, align 4
  %add7 = add nsw i32 %13, 1
  %idxprom8 = sext i32 %add7 to i64
  %arrayidx9 = getelementptr inbounds i32, i32* %12, i64 %idxprom8
  %14 = load i32, i32* %arrayidx9, align 4
  store i32 %14, i32* %j, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc26, %for.end
  %15 = load i32, i32* %j, align 4
  %16 = load i32, i32* %i, align 4
  %cmp11 = icmp sgt i32 %15, %16
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; preds = %for.cond10
  %17 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %18 = load i32, i32* %j, align 4
  %sub = sub nsw i32 %18, 1
  %idxprom13 = sext i32 %sub to i64
  %arrayidx14 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %17, i64 %idxprom13
  %number15 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx14, i32 0, i32 0
  %19 = load i32, i32* %number15, align 4
  %20 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %21 = load i32, i32* %j, align 4
  %idxprom16 = sext i32 %21 to i64
  %arrayidx17 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %20, i64 %idxprom16
  %number18 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx17, i32 0, i32 0
  store i32 %19, i32* %number18, align 4
  %22 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %23 = load i32, i32* %j, align 4
  %sub19 = sub nsw i32 %23, 1
  %idxprom20 = sext i32 %sub19 to i64
  %arrayidx21 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %22, i64 %idxprom20
  %n22 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx21, i32 0, i32 1
  %24 = load i32, i32* %n22, align 4
  %25 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %26 = load i32, i32* %j, align 4
  %idxprom23 = sext i32 %26 to i64
  %arrayidx24 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %25, i64 %idxprom23
  %n25 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx24, i32 0, i32 1
  store i32 %24, i32* %n25, align 4
  br label %for.inc26

for.inc26:                                        ; preds = %for.body12
  %27 = load i32, i32* %j, align 4
  %dec = add nsw i32 %27, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond10

for.end27:                                        ; preds = %for.cond10
  %28 = load i32, i32* %number.addr, align 4
  %29 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %30 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %30 to i64
  %arrayidx29 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %29, i64 %idxprom28
  %number30 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx29, i32 0, i32 0
  store i32 %28, i32* %number30, align 4
  %31 = load i32, i32* %n.addr, align 4
  %32 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %33 to i64
  %arrayidx32 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %32, i64 %idxprom31
  %n33 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx32, i32 0, i32 1
  store i32 %31, i32* %n33, align 4
  %34 = load i32, i32* %level.addr, align 4
  %add34 = add nsw i32 %34, 1
  store i32 %add34, i32* %i, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc42, %for.end27
  %35 = load i32, i32* %i, align 4
  %36 = load i32, i32* @num_refine, align 4
  %add36 = add nsw i32 %36, 1
  %cmp37 = icmp sle i32 %35, %add36
  br i1 %cmp37, label %for.body38, label %for.end44

for.body38:                                       ; preds = %for.cond35
  %37 = load i32*, i32** @sorted_index, align 8
  %38 = load i32, i32* %i, align 4
  %idxprom39 = sext i32 %38 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %37, i64 %idxprom39
  %39 = load i32, i32* %arrayidx40, align 4
  %inc41 = add nsw i32 %39, 1
  store i32 %inc41, i32* %arrayidx40, align 4
  br label %for.inc42

for.inc42:                                        ; preds = %for.body38
  %40 = load i32, i32* %i, align 4
  %inc43 = add nsw i32 %40, 1
  store i32 %inc43, i32* %i, align 4
  br label %for.cond35

for.end44:                                        ; preds = %for.cond35
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @consolidate_blocks() #0 {
entry:
  %n = alloca i32, align 4
  %p = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %i1 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %k1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %k2 = alloca i32, align 4
  %level = alloca i32, align 4
  %o = alloca i32, align 4
  %v = alloca i32, align 4
  %f = alloca i32, align 4
  %c = alloca i32, align 4
  %offset = alloca i32, align 4
  %other = alloca i32, align 4
  %c1 = alloca i32, align 4
  %dir = alloca i32, align 4
  %fcase = alloca i32, align 4
  %pe = alloca i32, align 4
  %nl = alloca i32, align 4
  %pos = alloca [3 x i32], align 4
  %d = alloca i32, align 4
  %in = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %bp1 = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  %0 = load i32, i32* @stencil, align 4
  %cmp = icmp eq i32 %0, 7
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %f, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 1, i32* %f, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* @cur_max_level, align 4
  store i32 %1, i32* %level, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc440, %if.end
  %2 = load i32, i32* %level, align 4
  %cmp1 = icmp sge i32 %2, 0
  br i1 %cmp1, label %for.body, label %for.end441

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %p, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc437, %for.body
  %3 = load i32, i32* %p, align 4
  %4 = load i32, i32* @max_active_parent, align 4
  %cmp3 = icmp slt i32 %3, %4
  br i1 %cmp3, label %for.body4, label %for.end439

for.body4:                                        ; preds = %for.cond2
  %5 = load %struct.parent*, %struct.parent** @parents, align 8
  %6 = load i32, i32* %p, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %struct.parent, %struct.parent* %5, i64 %idxprom
  store %struct.parent* %arrayidx, %struct.parent** %pp, align 8
  %number = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx, i32 0, i32 0
  %7 = load i32, i32* %number, align 4
  %cmp5 = icmp sge i32 %7, 0
  br i1 %cmp5, label %land.lhs.true, label %if.end436

land.lhs.true:                                    ; preds = %for.body4
  %8 = load %struct.parent*, %struct.parent** %pp, align 8
  %level6 = getelementptr inbounds %struct.parent, %struct.parent* %8, i32 0, i32 1
  %9 = load i32, i32* %level6, align 4
  %10 = load i32, i32* %level, align 4
  %cmp7 = icmp eq i32 %9, %10
  br i1 %cmp7, label %land.lhs.true8, label %if.end436

land.lhs.true8:                                   ; preds = %land.lhs.true
  %11 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine = getelementptr inbounds %struct.parent, %struct.parent* %11, i32 0, i32 5
  %12 = load i32, i32* %refine, align 4
  %cmp9 = icmp eq i32 %12, -1
  br i1 %cmp9, label %if.then10, label %if.end436

if.then10:                                        ; preds = %land.lhs.true8
  store i32 0, i32* %n, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc, %if.then10
  %13 = load i32, i32* %n, align 4
  %14 = load i32, i32* @max_num_blocks, align 4
  %cmp12 = icmp slt i32 %13, %14
  br i1 %cmp12, label %for.body13, label %for.end

for.body13:                                       ; preds = %for.cond11
  %15 = load %struct.block*, %struct.block** @blocks, align 8
  %16 = load i32, i32* %n, align 4
  %idxprom14 = sext i32 %16 to i64
  %arrayidx15 = getelementptr inbounds %struct.block, %struct.block* %15, i64 %idxprom14
  %number16 = getelementptr inbounds %struct.block, %struct.block* %arrayidx15, i32 0, i32 0
  %17 = load i32, i32* %number16, align 8
  %cmp17 = icmp slt i32 %17, 0
  br i1 %cmp17, label %if.then18, label %if.end19

if.then18:                                        ; preds = %for.body13
  br label %for.end

if.end19:                                         ; preds = %for.body13
  br label %for.inc

for.inc:                                          ; preds = %if.end19
  %18 = load i32, i32* %n, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %n, align 4
  br label %for.cond11

for.end:                                          ; preds = %if.then18, %for.cond11
  %19 = load i32, i32* %n, align 4
  %20 = load i32, i32* @max_num_blocks, align 4
  %cmp20 = icmp eq i32 %19, %20
  br i1 %cmp20, label %if.then21, label %if.else22

if.then21:                                        ; preds = %for.end
  %21 = load i32, i32* @my_pe, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 %21)
  call void @exit(i32 -1) #8
  unreachable

if.else22:                                        ; preds = %for.end
  %22 = load %struct.block*, %struct.block** @blocks, align 8
  %23 = load i32, i32* %n, align 4
  %idxprom23 = sext i32 %23 to i64
  %arrayidx24 = getelementptr inbounds %struct.block, %struct.block* %22, i64 %idxprom23
  store %struct.block* %arrayidx24, %struct.block** %bp, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.else22
  %24 = load i32, i32* %n, align 4
  %add = add nsw i32 %24, 1
  %25 = load i32, i32* @max_active_block, align 4
  %cmp26 = icmp sgt i32 %add, %25
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %if.end25
  %26 = load i32, i32* %n, align 4
  %add28 = add nsw i32 %26, 1
  store i32 %add28, i32* @max_active_block, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %if.end25
  %27 = load i32, i32* @num_active, align 4
  %add30 = add nsw i32 %27, 1
  %28 = load i32, i32* @local_max_b, align 4
  %cmp31 = icmp sgt i32 %add30, %28
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end29
  %29 = load i32, i32* @num_active, align 4
  %add33 = add nsw i32 %29, 1
  store i32 %add33, i32* @local_max_b, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end29
  %30 = load i32, i32* @num_active, align 4
  %sub = sub nsw i32 %30, 7
  store i32 %sub, i32* @num_active, align 4
  %31 = load i32, i32* @num_reformed, align 4
  %inc35 = add nsw i32 %31, 1
  store i32 %inc35, i32* @num_reformed, align 4
  %32 = load i32*, i32** @num_blocks, align 8
  %33 = load i32, i32* %level, align 4
  %idxprom36 = sext i32 %33 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %32, i64 %idxprom36
  %34 = load i32, i32* %arrayidx37, align 4
  %inc38 = add nsw i32 %34, 1
  store i32 %inc38, i32* %arrayidx37, align 4
  %35 = load i32*, i32** @num_blocks, align 8
  %36 = load i32, i32* %level, align 4
  %add39 = add nsw i32 %36, 1
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds i32, i32* %35, i64 %idxprom40
  %37 = load i32, i32* %arrayidx41, align 4
  %sub42 = sub nsw i32 %37, 8
  store i32 %sub42, i32* %arrayidx41, align 4
  %38 = load %struct.parent*, %struct.parent** %pp, align 8
  %number43 = getelementptr inbounds %struct.parent, %struct.parent* %38, i32 0, i32 0
  %39 = load i32, i32* %number43, align 4
  %40 = load %struct.block*, %struct.block** %bp, align 8
  %number44 = getelementptr inbounds %struct.block, %struct.block* %40, i32 0, i32 0
  store i32 %39, i32* %number44, align 8
  %41 = load %struct.parent*, %struct.parent** %pp, align 8
  %number45 = getelementptr inbounds %struct.parent, %struct.parent* %41, i32 0, i32 0
  store i32 -1, i32* %number45, align 4
  %42 = load %struct.parent*, %struct.parent** %pp, align 8
  %level46 = getelementptr inbounds %struct.parent, %struct.parent* %42, i32 0, i32 1
  %43 = load i32, i32* %level46, align 4
  %44 = load %struct.block*, %struct.block** %bp, align 8
  %level47 = getelementptr inbounds %struct.block, %struct.block* %44, i32 0, i32 1
  store i32 %43, i32* %level47, align 4
  %45 = load %struct.parent*, %struct.parent** %pp, align 8
  %parent = getelementptr inbounds %struct.parent, %struct.parent* %45, i32 0, i32 2
  %46 = load i32, i32* %parent, align 4
  %47 = load %struct.block*, %struct.block** %bp, align 8
  %parent48 = getelementptr inbounds %struct.block, %struct.block* %47, i32 0, i32 4
  store i32 %46, i32* %parent48, align 8
  %48 = load %struct.parent*, %struct.parent** %pp, align 8
  %parent_node = getelementptr inbounds %struct.parent, %struct.parent* %48, i32 0, i32 3
  %49 = load i32, i32* %parent_node, align 4
  %50 = load %struct.block*, %struct.block** %bp, align 8
  %parent_node49 = getelementptr inbounds %struct.block, %struct.block* %50, i32 0, i32 5
  store i32 %49, i32* %parent_node49, align 4
  %51 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_number = getelementptr inbounds %struct.parent, %struct.parent* %51, i32 0, i32 4
  %52 = load i32, i32* %child_number, align 4
  %53 = load %struct.block*, %struct.block** %bp, align 8
  %child_number50 = getelementptr inbounds %struct.block, %struct.block* %53, i32 0, i32 6
  store i32 %52, i32* %child_number50, align 8
  %54 = load i32, i32* %n, align 4
  %55 = load %struct.parent*, %struct.parent** @parents, align 8
  %56 = load %struct.block*, %struct.block** %bp, align 8
  %parent51 = getelementptr inbounds %struct.block, %struct.block* %56, i32 0, i32 4
  %57 = load i32, i32* %parent51, align 8
  %idxprom52 = sext i32 %57 to i64
  %arrayidx53 = getelementptr inbounds %struct.parent, %struct.parent* %55, i64 %idxprom52
  %child = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx53, i32 0, i32 6
  %58 = load %struct.block*, %struct.block** %bp, align 8
  %child_number54 = getelementptr inbounds %struct.block, %struct.block* %58, i32 0, i32 6
  %59 = load i32, i32* %child_number54, align 8
  %idxprom55 = sext i32 %59 to i64
  %arrayidx56 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom55
  store i32 %54, i32* %arrayidx56, align 4
  %60 = load i32, i32* %n, align 4
  %61 = load %struct.block*, %struct.block** %bp, align 8
  %number57 = getelementptr inbounds %struct.block, %struct.block* %61, i32 0, i32 0
  %62 = load i32, i32* %number57, align 8
  %63 = load i32, i32* %level, align 4
  call void @add_sorted_list(i32 %60, i32 %62, i32 %63)
  %64 = load %struct.block*, %struct.block** %bp, align 8
  %refine58 = getelementptr inbounds %struct.block, %struct.block* %64, i32 0, i32 2
  store i32 0, i32* %refine58, align 8
  %65 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen = getelementptr inbounds %struct.parent, %struct.parent* %65, i32 0, i32 8
  %arrayidx59 = getelementptr inbounds [3 x i32], [3 x i32]* %cen, i64 0, i64 0
  %66 = load i32, i32* %arrayidx59, align 4
  %67 = load %struct.block*, %struct.block** %bp, align 8
  %cen60 = getelementptr inbounds %struct.block, %struct.block* %67, i32 0, i32 10
  %arrayidx61 = getelementptr inbounds [3 x i32], [3 x i32]* %cen60, i64 0, i64 0
  store i32 %66, i32* %arrayidx61, align 4
  %68 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen62 = getelementptr inbounds %struct.parent, %struct.parent* %68, i32 0, i32 8
  %arrayidx63 = getelementptr inbounds [3 x i32], [3 x i32]* %cen62, i64 0, i64 1
  %69 = load i32, i32* %arrayidx63, align 4
  %70 = load %struct.block*, %struct.block** %bp, align 8
  %cen64 = getelementptr inbounds %struct.block, %struct.block* %70, i32 0, i32 10
  %arrayidx65 = getelementptr inbounds [3 x i32], [3 x i32]* %cen64, i64 0, i64 1
  store i32 %69, i32* %arrayidx65, align 4
  %71 = load %struct.parent*, %struct.parent** %pp, align 8
  %cen66 = getelementptr inbounds %struct.parent, %struct.parent* %71, i32 0, i32 8
  %arrayidx67 = getelementptr inbounds [3 x i32], [3 x i32]* %cen66, i64 0, i64 2
  %72 = load i32, i32* %arrayidx67, align 4
  %73 = load %struct.block*, %struct.block** %bp, align 8
  %cen68 = getelementptr inbounds %struct.block, %struct.block* %73, i32 0, i32 10
  %arrayidx69 = getelementptr inbounds [3 x i32], [3 x i32]* %cen68, i64 0, i64 2
  store i32 %72, i32* %arrayidx69, align 4
  store i32 0, i32* %o, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc214, %if.end34
  %74 = load i32, i32* %o, align 4
  %cmp71 = icmp slt i32 %74, 8
  br i1 %cmp71, label %for.body72, label %for.end216

for.body72:                                       ; preds = %for.cond70
  %75 = load %struct.block*, %struct.block** @blocks, align 8
  %76 = load %struct.parent*, %struct.parent** %pp, align 8
  %child73 = getelementptr inbounds %struct.parent, %struct.parent* %76, i32 0, i32 6
  %77 = load i32, i32* %o, align 4
  %idxprom74 = sext i32 %77 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %child73, i64 0, i64 %idxprom74
  %78 = load i32, i32* %arrayidx75, align 4
  %idxprom76 = sext i32 %78 to i64
  %arrayidx77 = getelementptr inbounds %struct.block, %struct.block* %75, i64 %idxprom76
  store %struct.block* %arrayidx77, %struct.block** %bp1, align 8
  %79 = load %struct.block*, %struct.block** %bp1, align 8
  %number78 = getelementptr inbounds %struct.block, %struct.block* %79, i32 0, i32 0
  %80 = load i32, i32* %number78, align 8
  %81 = load i32, i32* %level, align 4
  %add79 = add nsw i32 %81, 1
  call void @del_sorted_list(i32 %80, i32 %add79)
  %82 = load %struct.block*, %struct.block** %bp1, align 8
  %number80 = getelementptr inbounds %struct.block, %struct.block* %82, i32 0, i32 0
  store i32 -1, i32* %number80, align 8
  %83 = load i32, i32* %o, align 4
  %rem = srem i32 %83, 2
  %84 = load i32, i32* @x_block_half, align 4
  %mul = mul nsw i32 %rem, %84
  store i32 %mul, i32* %i1, align 4
  %85 = load i32, i32* %o, align 4
  %div = sdiv i32 %85, 2
  %rem81 = srem i32 %div, 2
  %86 = load i32, i32* @y_block_half, align 4
  %mul82 = mul nsw i32 %rem81, %86
  store i32 %mul82, i32* %j1, align 4
  %87 = load i32, i32* %o, align 4
  %div83 = sdiv i32 %87, 4
  %88 = load i32, i32* @z_block_half, align 4
  %mul84 = mul nsw i32 %div83, %88
  store i32 %mul84, i32* %k1, align 4
  store i32 0, i32* %v, align 4
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc211, %for.body72
  %89 = load i32, i32* %v, align 4
  %90 = load i32, i32* @num_vars, align 4
  %cmp86 = icmp slt i32 %89, %90
  br i1 %cmp86, label %for.body87, label %for.end213

for.body87:                                       ; preds = %for.cond85
  store i32 1, i32* %i, align 4
  store i32 1, i32* %i2, align 4
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc207, %for.body87
  %91 = load i32, i32* %i, align 4
  %92 = load i32, i32* @x_block_half, align 4
  %cmp89 = icmp sle i32 %91, %92
  br i1 %cmp89, label %for.body90, label %for.end210

for.body90:                                       ; preds = %for.cond88
  store i32 1, i32* %j, align 4
  store i32 1, i32* %j2, align 4
  br label %for.cond91

for.cond91:                                       ; preds = %for.inc203, %for.body90
  %93 = load i32, i32* %j, align 4
  %94 = load i32, i32* @y_block_half, align 4
  %cmp92 = icmp sle i32 %93, %94
  br i1 %cmp92, label %for.body93, label %for.end206

for.body93:                                       ; preds = %for.cond91
  store i32 1, i32* %k, align 4
  store i32 1, i32* %k2, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc199, %for.body93
  %95 = load i32, i32* %k, align 4
  %96 = load i32, i32* @z_block_half, align 4
  %cmp95 = icmp sle i32 %95, %96
  br i1 %cmp95, label %for.body96, label %for.end202

for.body96:                                       ; preds = %for.cond94
  %97 = load %struct.block*, %struct.block** %bp1, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %97, i32 0, i32 11
  %98 = load double****, double***** %array, align 8
  %99 = load i32, i32* %v, align 4
  %idxprom97 = sext i32 %99 to i64
  %arrayidx98 = getelementptr inbounds double***, double**** %98, i64 %idxprom97
  %100 = load double***, double**** %arrayidx98, align 8
  %101 = load i32, i32* %i2, align 4
  %idxprom99 = sext i32 %101 to i64
  %arrayidx100 = getelementptr inbounds double**, double*** %100, i64 %idxprom99
  %102 = load double**, double*** %arrayidx100, align 8
  %103 = load i32, i32* %j2, align 4
  %idxprom101 = sext i32 %103 to i64
  %arrayidx102 = getelementptr inbounds double*, double** %102, i64 %idxprom101
  %104 = load double*, double** %arrayidx102, align 8
  %105 = load i32, i32* %k2, align 4
  %idxprom103 = sext i32 %105 to i64
  %arrayidx104 = getelementptr inbounds double, double* %104, i64 %idxprom103
  %106 = load double, double* %arrayidx104, align 8
  %107 = load %struct.block*, %struct.block** %bp1, align 8
  %array105 = getelementptr inbounds %struct.block, %struct.block* %107, i32 0, i32 11
  %108 = load double****, double***** %array105, align 8
  %109 = load i32, i32* %v, align 4
  %idxprom106 = sext i32 %109 to i64
  %arrayidx107 = getelementptr inbounds double***, double**** %108, i64 %idxprom106
  %110 = load double***, double**** %arrayidx107, align 8
  %111 = load i32, i32* %i2, align 4
  %add108 = add nsw i32 %111, 1
  %idxprom109 = sext i32 %add108 to i64
  %arrayidx110 = getelementptr inbounds double**, double*** %110, i64 %idxprom109
  %112 = load double**, double*** %arrayidx110, align 8
  %113 = load i32, i32* %j2, align 4
  %idxprom111 = sext i32 %113 to i64
  %arrayidx112 = getelementptr inbounds double*, double** %112, i64 %idxprom111
  %114 = load double*, double** %arrayidx112, align 8
  %115 = load i32, i32* %k2, align 4
  %idxprom113 = sext i32 %115 to i64
  %arrayidx114 = getelementptr inbounds double, double* %114, i64 %idxprom113
  %116 = load double, double* %arrayidx114, align 8
  %add115 = fadd double %106, %116
  %117 = load %struct.block*, %struct.block** %bp1, align 8
  %array116 = getelementptr inbounds %struct.block, %struct.block* %117, i32 0, i32 11
  %118 = load double****, double***** %array116, align 8
  %119 = load i32, i32* %v, align 4
  %idxprom117 = sext i32 %119 to i64
  %arrayidx118 = getelementptr inbounds double***, double**** %118, i64 %idxprom117
  %120 = load double***, double**** %arrayidx118, align 8
  %121 = load i32, i32* %i2, align 4
  %idxprom119 = sext i32 %121 to i64
  %arrayidx120 = getelementptr inbounds double**, double*** %120, i64 %idxprom119
  %122 = load double**, double*** %arrayidx120, align 8
  %123 = load i32, i32* %j2, align 4
  %add121 = add nsw i32 %123, 1
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds double*, double** %122, i64 %idxprom122
  %124 = load double*, double** %arrayidx123, align 8
  %125 = load i32, i32* %k2, align 4
  %idxprom124 = sext i32 %125 to i64
  %arrayidx125 = getelementptr inbounds double, double* %124, i64 %idxprom124
  %126 = load double, double* %arrayidx125, align 8
  %add126 = fadd double %add115, %126
  %127 = load %struct.block*, %struct.block** %bp1, align 8
  %array127 = getelementptr inbounds %struct.block, %struct.block* %127, i32 0, i32 11
  %128 = load double****, double***** %array127, align 8
  %129 = load i32, i32* %v, align 4
  %idxprom128 = sext i32 %129 to i64
  %arrayidx129 = getelementptr inbounds double***, double**** %128, i64 %idxprom128
  %130 = load double***, double**** %arrayidx129, align 8
  %131 = load i32, i32* %i2, align 4
  %add130 = add nsw i32 %131, 1
  %idxprom131 = sext i32 %add130 to i64
  %arrayidx132 = getelementptr inbounds double**, double*** %130, i64 %idxprom131
  %132 = load double**, double*** %arrayidx132, align 8
  %133 = load i32, i32* %j2, align 4
  %add133 = add nsw i32 %133, 1
  %idxprom134 = sext i32 %add133 to i64
  %arrayidx135 = getelementptr inbounds double*, double** %132, i64 %idxprom134
  %134 = load double*, double** %arrayidx135, align 8
  %135 = load i32, i32* %k2, align 4
  %idxprom136 = sext i32 %135 to i64
  %arrayidx137 = getelementptr inbounds double, double* %134, i64 %idxprom136
  %136 = load double, double* %arrayidx137, align 8
  %add138 = fadd double %add126, %136
  %137 = load %struct.block*, %struct.block** %bp1, align 8
  %array139 = getelementptr inbounds %struct.block, %struct.block* %137, i32 0, i32 11
  %138 = load double****, double***** %array139, align 8
  %139 = load i32, i32* %v, align 4
  %idxprom140 = sext i32 %139 to i64
  %arrayidx141 = getelementptr inbounds double***, double**** %138, i64 %idxprom140
  %140 = load double***, double**** %arrayidx141, align 8
  %141 = load i32, i32* %i2, align 4
  %idxprom142 = sext i32 %141 to i64
  %arrayidx143 = getelementptr inbounds double**, double*** %140, i64 %idxprom142
  %142 = load double**, double*** %arrayidx143, align 8
  %143 = load i32, i32* %j2, align 4
  %idxprom144 = sext i32 %143 to i64
  %arrayidx145 = getelementptr inbounds double*, double** %142, i64 %idxprom144
  %144 = load double*, double** %arrayidx145, align 8
  %145 = load i32, i32* %k2, align 4
  %add146 = add nsw i32 %145, 1
  %idxprom147 = sext i32 %add146 to i64
  %arrayidx148 = getelementptr inbounds double, double* %144, i64 %idxprom147
  %146 = load double, double* %arrayidx148, align 8
  %add149 = fadd double %add138, %146
  %147 = load %struct.block*, %struct.block** %bp1, align 8
  %array150 = getelementptr inbounds %struct.block, %struct.block* %147, i32 0, i32 11
  %148 = load double****, double***** %array150, align 8
  %149 = load i32, i32* %v, align 4
  %idxprom151 = sext i32 %149 to i64
  %arrayidx152 = getelementptr inbounds double***, double**** %148, i64 %idxprom151
  %150 = load double***, double**** %arrayidx152, align 8
  %151 = load i32, i32* %i2, align 4
  %add153 = add nsw i32 %151, 1
  %idxprom154 = sext i32 %add153 to i64
  %arrayidx155 = getelementptr inbounds double**, double*** %150, i64 %idxprom154
  %152 = load double**, double*** %arrayidx155, align 8
  %153 = load i32, i32* %j2, align 4
  %idxprom156 = sext i32 %153 to i64
  %arrayidx157 = getelementptr inbounds double*, double** %152, i64 %idxprom156
  %154 = load double*, double** %arrayidx157, align 8
  %155 = load i32, i32* %k2, align 4
  %add158 = add nsw i32 %155, 1
  %idxprom159 = sext i32 %add158 to i64
  %arrayidx160 = getelementptr inbounds double, double* %154, i64 %idxprom159
  %156 = load double, double* %arrayidx160, align 8
  %add161 = fadd double %add149, %156
  %157 = load %struct.block*, %struct.block** %bp1, align 8
  %array162 = getelementptr inbounds %struct.block, %struct.block* %157, i32 0, i32 11
  %158 = load double****, double***** %array162, align 8
  %159 = load i32, i32* %v, align 4
  %idxprom163 = sext i32 %159 to i64
  %arrayidx164 = getelementptr inbounds double***, double**** %158, i64 %idxprom163
  %160 = load double***, double**** %arrayidx164, align 8
  %161 = load i32, i32* %i2, align 4
  %idxprom165 = sext i32 %161 to i64
  %arrayidx166 = getelementptr inbounds double**, double*** %160, i64 %idxprom165
  %162 = load double**, double*** %arrayidx166, align 8
  %163 = load i32, i32* %j2, align 4
  %add167 = add nsw i32 %163, 1
  %idxprom168 = sext i32 %add167 to i64
  %arrayidx169 = getelementptr inbounds double*, double** %162, i64 %idxprom168
  %164 = load double*, double** %arrayidx169, align 8
  %165 = load i32, i32* %k2, align 4
  %add170 = add nsw i32 %165, 1
  %idxprom171 = sext i32 %add170 to i64
  %arrayidx172 = getelementptr inbounds double, double* %164, i64 %idxprom171
  %166 = load double, double* %arrayidx172, align 8
  %add173 = fadd double %add161, %166
  %167 = load %struct.block*, %struct.block** %bp1, align 8
  %array174 = getelementptr inbounds %struct.block, %struct.block* %167, i32 0, i32 11
  %168 = load double****, double***** %array174, align 8
  %169 = load i32, i32* %v, align 4
  %idxprom175 = sext i32 %169 to i64
  %arrayidx176 = getelementptr inbounds double***, double**** %168, i64 %idxprom175
  %170 = load double***, double**** %arrayidx176, align 8
  %171 = load i32, i32* %i2, align 4
  %add177 = add nsw i32 %171, 1
  %idxprom178 = sext i32 %add177 to i64
  %arrayidx179 = getelementptr inbounds double**, double*** %170, i64 %idxprom178
  %172 = load double**, double*** %arrayidx179, align 8
  %173 = load i32, i32* %j2, align 4
  %add180 = add nsw i32 %173, 1
  %idxprom181 = sext i32 %add180 to i64
  %arrayidx182 = getelementptr inbounds double*, double** %172, i64 %idxprom181
  %174 = load double*, double** %arrayidx182, align 8
  %175 = load i32, i32* %k2, align 4
  %add183 = add nsw i32 %175, 1
  %idxprom184 = sext i32 %add183 to i64
  %arrayidx185 = getelementptr inbounds double, double* %174, i64 %idxprom184
  %176 = load double, double* %arrayidx185, align 8
  %add186 = fadd double %add173, %176
  %177 = load %struct.block*, %struct.block** %bp, align 8
  %array187 = getelementptr inbounds %struct.block, %struct.block* %177, i32 0, i32 11
  %178 = load double****, double***** %array187, align 8
  %179 = load i32, i32* %v, align 4
  %idxprom188 = sext i32 %179 to i64
  %arrayidx189 = getelementptr inbounds double***, double**** %178, i64 %idxprom188
  %180 = load double***, double**** %arrayidx189, align 8
  %181 = load i32, i32* %i, align 4
  %182 = load i32, i32* %i1, align 4
  %add190 = add nsw i32 %181, %182
  %idxprom191 = sext i32 %add190 to i64
  %arrayidx192 = getelementptr inbounds double**, double*** %180, i64 %idxprom191
  %183 = load double**, double*** %arrayidx192, align 8
  %184 = load i32, i32* %j, align 4
  %185 = load i32, i32* %j1, align 4
  %add193 = add nsw i32 %184, %185
  %idxprom194 = sext i32 %add193 to i64
  %arrayidx195 = getelementptr inbounds double*, double** %183, i64 %idxprom194
  %186 = load double*, double** %arrayidx195, align 8
  %187 = load i32, i32* %k, align 4
  %188 = load i32, i32* %k1, align 4
  %add196 = add nsw i32 %187, %188
  %idxprom197 = sext i32 %add196 to i64
  %arrayidx198 = getelementptr inbounds double, double* %186, i64 %idxprom197
  store double %add186, double* %arrayidx198, align 8
  br label %for.inc199

for.inc199:                                       ; preds = %for.body96
  %189 = load i32, i32* %k, align 4
  %inc200 = add nsw i32 %189, 1
  store i32 %inc200, i32* %k, align 4
  %190 = load i32, i32* %k2, align 4
  %add201 = add nsw i32 %190, 2
  store i32 %add201, i32* %k2, align 4
  br label %for.cond94

for.end202:                                       ; preds = %for.cond94
  br label %for.inc203

for.inc203:                                       ; preds = %for.end202
  %191 = load i32, i32* %j, align 4
  %inc204 = add nsw i32 %191, 1
  store i32 %inc204, i32* %j, align 4
  %192 = load i32, i32* %j2, align 4
  %add205 = add nsw i32 %192, 2
  store i32 %add205, i32* %j2, align 4
  br label %for.cond91

for.end206:                                       ; preds = %for.cond91
  br label %for.inc207

for.inc207:                                       ; preds = %for.end206
  %193 = load i32, i32* %i, align 4
  %inc208 = add nsw i32 %193, 1
  store i32 %inc208, i32* %i, align 4
  %194 = load i32, i32* %i2, align 4
  %add209 = add nsw i32 %194, 2
  store i32 %add209, i32* %i2, align 4
  br label %for.cond88

for.end210:                                       ; preds = %for.cond88
  br label %for.inc211

for.inc211:                                       ; preds = %for.end210
  %195 = load i32, i32* %v, align 4
  %inc212 = add nsw i32 %195, 1
  store i32 %inc212, i32* %v, align 4
  br label %for.cond85

for.end213:                                       ; preds = %for.cond85
  br label %for.inc214

for.inc214:                                       ; preds = %for.end213
  %196 = load i32, i32* %o, align 4
  %inc215 = add nsw i32 %196, 1
  store i32 %inc215, i32* %o, align 4
  br label %for.cond70

for.end216:                                       ; preds = %for.cond70
  store i32 0, i32* %c, align 4
  br label %for.cond217

for.cond217:                                      ; preds = %for.inc433, %for.end216
  %197 = load i32, i32* %c, align 4
  %cmp218 = icmp slt i32 %197, 6
  br i1 %cmp218, label %for.body219, label %for.end435

for.body219:                                      ; preds = %for.cond217
  %198 = load %struct.parent*, %struct.parent** %pp, align 8
  %child220 = getelementptr inbounds %struct.parent, %struct.parent* %198, i32 0, i32 6
  %199 = load i32, i32* %c, align 4
  %idxprom221 = sext i32 %199 to i64
  %arrayidx222 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @consolidate_blocks.side, i64 0, i64 %idxprom221
  %arrayidx223 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx222, i64 0, i64 0
  %arrayidx224 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx223, i64 0, i64 0
  %200 = load i32, i32* %arrayidx224, align 16
  %idxprom225 = sext i32 %200 to i64
  %arrayidx226 = getelementptr inbounds [8 x i32], [8 x i32]* %child220, i64 0, i64 %idxprom225
  %201 = load i32, i32* %arrayidx226, align 4
  store i32 %201, i32* %other, align 4
  %202 = load %struct.block*, %struct.block** @blocks, align 8
  %203 = load i32, i32* %other, align 4
  %idxprom227 = sext i32 %203 to i64
  %arrayidx228 = getelementptr inbounds %struct.block, %struct.block* %202, i64 %idxprom227
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %arrayidx228, i32 0, i32 8
  %204 = load i32, i32* %c, align 4
  %idxprom229 = sext i32 %204 to i64
  %arrayidx230 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 %idxprom229
  %205 = load i32, i32* %arrayidx230, align 4
  %cmp231 = icmp eq i32 %205, -2
  br i1 %cmp231, label %if.then232, label %if.else238

if.then232:                                       ; preds = %for.body219
  %206 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level233 = getelementptr inbounds %struct.block, %struct.block* %206, i32 0, i32 8
  %207 = load i32, i32* %c, align 4
  %idxprom234 = sext i32 %207 to i64
  %arrayidx235 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level233, i64 0, i64 %idxprom234
  store i32 -2, i32* %arrayidx235, align 4
  %208 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine = getelementptr inbounds %struct.block, %struct.block* %208, i32 0, i32 7
  %209 = load i32, i32* %c, align 4
  %idxprom236 = sext i32 %209 to i64
  %arrayidx237 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine, i64 0, i64 %idxprom236
  store i32 0, i32* %arrayidx237, align 4
  br label %if.end432

if.else238:                                       ; preds = %for.body219
  %210 = load %struct.block*, %struct.block** @blocks, align 8
  %211 = load i32, i32* %other, align 4
  %idxprom239 = sext i32 %211 to i64
  %arrayidx240 = getelementptr inbounds %struct.block, %struct.block* %210, i64 %idxprom239
  %nei_level241 = getelementptr inbounds %struct.block, %struct.block* %arrayidx240, i32 0, i32 8
  %212 = load i32, i32* %c, align 4
  %idxprom242 = sext i32 %212 to i64
  %arrayidx243 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level241, i64 0, i64 %idxprom242
  %213 = load i32, i32* %arrayidx243, align 4
  %214 = load i32, i32* %level, align 4
  %cmp244 = icmp eq i32 %213, %214
  br i1 %cmp244, label %if.then245, label %if.else316

if.then245:                                       ; preds = %if.else238
  %215 = load %struct.block*, %struct.block** @blocks, align 8
  %216 = load i32, i32* %other, align 4
  %idxprom246 = sext i32 %216 to i64
  %arrayidx247 = getelementptr inbounds %struct.block, %struct.block* %215, i64 %idxprom246
  %nei = getelementptr inbounds %struct.block, %struct.block* %arrayidx247, i32 0, i32 9
  %217 = load i32, i32* %c, align 4
  %idxprom248 = sext i32 %217 to i64
  %arrayidx249 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei, i64 0, i64 %idxprom248
  %arrayidx250 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx249, i64 0, i64 0
  %arrayidx251 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx250, i64 0, i64 0
  %218 = load i32, i32* %arrayidx251, align 4
  %cmp252 = icmp sge i32 %218, 0
  br i1 %cmp252, label %if.then253, label %if.end315

if.then253:                                       ; preds = %if.then245
  %219 = load i32, i32* %c, align 4
  %div254 = sdiv i32 %219, 2
  %mul255 = mul nsw i32 %div254, 2
  %220 = load i32, i32* %c, align 4
  %add256 = add nsw i32 %220, 1
  %rem257 = srem i32 %add256, 2
  %add258 = add nsw i32 %mul255, %rem257
  store i32 %add258, i32* %c1, align 4
  %221 = load %struct.block*, %struct.block** @blocks, align 8
  %222 = load i32, i32* %other, align 4
  %idxprom259 = sext i32 %222 to i64
  %arrayidx260 = getelementptr inbounds %struct.block, %struct.block* %221, i64 %idxprom259
  %nei261 = getelementptr inbounds %struct.block, %struct.block* %arrayidx260, i32 0, i32 9
  %223 = load i32, i32* %c, align 4
  %idxprom262 = sext i32 %223 to i64
  %arrayidx263 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei261, i64 0, i64 %idxprom262
  %arrayidx264 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx263, i64 0, i64 0
  %arrayidx265 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx264, i64 0, i64 0
  %224 = load i32, i32* %arrayidx265, align 4
  %225 = load %struct.block*, %struct.block** %bp, align 8
  %nei266 = getelementptr inbounds %struct.block, %struct.block* %225, i32 0, i32 9
  %226 = load i32, i32* %c, align 4
  %idxprom267 = sext i32 %226 to i64
  %arrayidx268 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei266, i64 0, i64 %idxprom267
  %arrayidx269 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx268, i64 0, i64 0
  %arrayidx270 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx269, i64 0, i64 0
  store i32 %224, i32* %arrayidx270, align 4
  %227 = load i32, i32* %level, align 4
  %228 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level271 = getelementptr inbounds %struct.block, %struct.block* %228, i32 0, i32 8
  %229 = load i32, i32* %c, align 4
  %idxprom272 = sext i32 %229 to i64
  %arrayidx273 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level271, i64 0, i64 %idxprom272
  store i32 %227, i32* %arrayidx273, align 4
  %230 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine274 = getelementptr inbounds %struct.block, %struct.block* %230, i32 0, i32 7
  %231 = load i32, i32* %c, align 4
  %idxprom275 = sext i32 %231 to i64
  %arrayidx276 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine274, i64 0, i64 %idxprom275
  store i32 0, i32* %arrayidx276, align 4
  %232 = load i32, i32* %n, align 4
  %233 = load %struct.block*, %struct.block** @blocks, align 8
  %234 = load %struct.block*, %struct.block** @blocks, align 8
  %235 = load i32, i32* %other, align 4
  %idxprom277 = sext i32 %235 to i64
  %arrayidx278 = getelementptr inbounds %struct.block, %struct.block* %234, i64 %idxprom277
  %nei279 = getelementptr inbounds %struct.block, %struct.block* %arrayidx278, i32 0, i32 9
  %236 = load i32, i32* %c, align 4
  %idxprom280 = sext i32 %236 to i64
  %arrayidx281 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei279, i64 0, i64 %idxprom280
  %arrayidx282 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx281, i64 0, i64 0
  %arrayidx283 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx282, i64 0, i64 0
  %237 = load i32, i32* %arrayidx283, align 4
  %idxprom284 = sext i32 %237 to i64
  %arrayidx285 = getelementptr inbounds %struct.block, %struct.block* %233, i64 %idxprom284
  %nei286 = getelementptr inbounds %struct.block, %struct.block* %arrayidx285, i32 0, i32 9
  %238 = load i32, i32* %c1, align 4
  %idxprom287 = sext i32 %238 to i64
  %arrayidx288 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei286, i64 0, i64 %idxprom287
  %arrayidx289 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx288, i64 0, i64 0
  %arrayidx290 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx289, i64 0, i64 0
  store i32 %232, i32* %arrayidx290, align 4
  %239 = load i32, i32* %level, align 4
  %240 = load %struct.block*, %struct.block** @blocks, align 8
  %241 = load %struct.block*, %struct.block** @blocks, align 8
  %242 = load i32, i32* %other, align 4
  %idxprom291 = sext i32 %242 to i64
  %arrayidx292 = getelementptr inbounds %struct.block, %struct.block* %241, i64 %idxprom291
  %nei293 = getelementptr inbounds %struct.block, %struct.block* %arrayidx292, i32 0, i32 9
  %243 = load i32, i32* %c, align 4
  %idxprom294 = sext i32 %243 to i64
  %arrayidx295 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei293, i64 0, i64 %idxprom294
  %arrayidx296 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx295, i64 0, i64 0
  %arrayidx297 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx296, i64 0, i64 0
  %244 = load i32, i32* %arrayidx297, align 4
  %idxprom298 = sext i32 %244 to i64
  %arrayidx299 = getelementptr inbounds %struct.block, %struct.block* %240, i64 %idxprom298
  %nei_level300 = getelementptr inbounds %struct.block, %struct.block* %arrayidx299, i32 0, i32 8
  %245 = load i32, i32* %c1, align 4
  %idxprom301 = sext i32 %245 to i64
  %arrayidx302 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level300, i64 0, i64 %idxprom301
  store i32 %239, i32* %arrayidx302, align 4
  %246 = load %struct.block*, %struct.block** @blocks, align 8
  %247 = load %struct.block*, %struct.block** @blocks, align 8
  %248 = load i32, i32* %other, align 4
  %idxprom303 = sext i32 %248 to i64
  %arrayidx304 = getelementptr inbounds %struct.block, %struct.block* %247, i64 %idxprom303
  %nei305 = getelementptr inbounds %struct.block, %struct.block* %arrayidx304, i32 0, i32 9
  %249 = load i32, i32* %c, align 4
  %idxprom306 = sext i32 %249 to i64
  %arrayidx307 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei305, i64 0, i64 %idxprom306
  %arrayidx308 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx307, i64 0, i64 0
  %arrayidx309 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx308, i64 0, i64 0
  %250 = load i32, i32* %arrayidx309, align 4
  %idxprom310 = sext i32 %250 to i64
  %arrayidx311 = getelementptr inbounds %struct.block, %struct.block* %246, i64 %idxprom310
  %nei_refine312 = getelementptr inbounds %struct.block, %struct.block* %arrayidx311, i32 0, i32 7
  %251 = load i32, i32* %c1, align 4
  %idxprom313 = sext i32 %251 to i64
  %arrayidx314 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine312, i64 0, i64 %idxprom313
  store i32 0, i32* %arrayidx314, align 4
  br label %if.end315

if.end315:                                        ; preds = %if.then253, %if.then245
  br label %if.end431

if.else316:                                       ; preds = %if.else238
  %252 = load i32, i32* %c, align 4
  %div317 = sdiv i32 %252, 2
  store i32 %div317, i32* %dir, align 4
  %253 = load i32, i32* %c, align 4
  %rem318 = srem i32 %253, 2
  %mul319 = mul nsw i32 %rem318, 10
  store i32 %mul319, i32* %fcase, align 4
  %254 = load i32*, i32** @p2, align 8
  %255 = load i32, i32* @num_refine, align 4
  %256 = load i32, i32* %level, align 4
  %sub320 = sub nsw i32 %255, %256
  %sub321 = sub nsw i32 %sub320, 1
  %idxprom322 = sext i32 %sub321 to i64
  %arrayidx323 = getelementptr inbounds i32, i32* %254, i64 %idxprom322
  %257 = load i32, i32* %arrayidx323, align 4
  store i32 %257, i32* %offset, align 4
  %258 = load i32, i32* %fcase, align 4
  %add324 = add nsw i32 %258, 6
  store i32 %add324, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond325

for.cond325:                                      ; preds = %for.inc428, %if.else316
  %259 = load i32, i32* %i, align 4
  %cmp326 = icmp slt i32 %259, 2
  br i1 %cmp326, label %for.body327, label %for.end430

for.body327:                                      ; preds = %for.cond325
  store i32 0, i32* %j, align 4
  br label %for.cond328

for.cond328:                                      ; preds = %for.inc424, %for.body327
  %260 = load i32, i32* %j, align 4
  %cmp329 = icmp slt i32 %260, 2
  br i1 %cmp329, label %for.body330, label %for.end427

for.body330:                                      ; preds = %for.cond328
  %261 = load %struct.parent*, %struct.parent** %pp, align 8
  %child331 = getelementptr inbounds %struct.parent, %struct.parent* %261, i32 0, i32 6
  %262 = load i32, i32* %c, align 4
  %idxprom332 = sext i32 %262 to i64
  %arrayidx333 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* @consolidate_blocks.side, i64 0, i64 %idxprom332
  %263 = load i32, i32* %i, align 4
  %idxprom334 = sext i32 %263 to i64
  %arrayidx335 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx333, i64 0, i64 %idxprom334
  %264 = load i32, i32* %j, align 4
  %idxprom336 = sext i32 %264 to i64
  %arrayidx337 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx335, i64 0, i64 %idxprom336
  %265 = load i32, i32* %arrayidx337, align 4
  %idxprom338 = sext i32 %265 to i64
  %arrayidx339 = getelementptr inbounds [8 x i32], [8 x i32]* %child331, i64 0, i64 %idxprom338
  %266 = load i32, i32* %arrayidx339, align 4
  store i32 %266, i32* %other, align 4
  %267 = load %struct.block*, %struct.block** @blocks, align 8
  %268 = load i32, i32* %other, align 4
  %idxprom340 = sext i32 %268 to i64
  %arrayidx341 = getelementptr inbounds %struct.block, %struct.block* %267, i64 %idxprom340
  %nei342 = getelementptr inbounds %struct.block, %struct.block* %arrayidx341, i32 0, i32 9
  %269 = load i32, i32* %c, align 4
  %idxprom343 = sext i32 %269 to i64
  %arrayidx344 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei342, i64 0, i64 %idxprom343
  %arrayidx345 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx344, i64 0, i64 0
  %arrayidx346 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx345, i64 0, i64 0
  %270 = load i32, i32* %arrayidx346, align 4
  %cmp347 = icmp sge i32 %270, 0
  br i1 %cmp347, label %if.then348, label %if.end423

if.then348:                                       ; preds = %for.body330
  %271 = load %struct.block*, %struct.block** @blocks, align 8
  %272 = load i32, i32* %other, align 4
  %idxprom349 = sext i32 %272 to i64
  %arrayidx350 = getelementptr inbounds %struct.block, %struct.block* %271, i64 %idxprom349
  %nei_level351 = getelementptr inbounds %struct.block, %struct.block* %arrayidx350, i32 0, i32 8
  %273 = load i32, i32* %c, align 4
  %idxprom352 = sext i32 %273 to i64
  %arrayidx353 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level351, i64 0, i64 %idxprom352
  %274 = load i32, i32* %arrayidx353, align 4
  %275 = load i32, i32* %level, align 4
  %add354 = add nsw i32 %275, 2
  %cmp355 = icmp eq i32 %274, %add354
  br i1 %cmp355, label %if.then356, label %if.end358

if.then356:                                       ; preds = %if.then348
  %276 = load i32, i32* @my_pe, align 4
  %277 = load i32, i32* %p, align 4
  %278 = load i32, i32* %n, align 4
  %279 = load i32, i32* %other, align 4
  %280 = load i32, i32* %c, align 4
  %281 = load i32, i32* %level, align 4
  %call357 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i32 %276, i32 %277, i32 %278, i32 %279, i32 %280, i32 %281)
  call void @exit(i32 -1) #8
  unreachable

if.end358:                                        ; preds = %if.then348
  %282 = load i32, i32* %c, align 4
  %div359 = sdiv i32 %282, 2
  %mul360 = mul nsw i32 %div359, 2
  %283 = load i32, i32* %c, align 4
  %add361 = add nsw i32 %283, 1
  %rem362 = srem i32 %add361, 2
  %add363 = add nsw i32 %mul360, %rem362
  store i32 %add363, i32* %c1, align 4
  %284 = load %struct.block*, %struct.block** @blocks, align 8
  %285 = load i32, i32* %other, align 4
  %idxprom364 = sext i32 %285 to i64
  %arrayidx365 = getelementptr inbounds %struct.block, %struct.block* %284, i64 %idxprom364
  %nei366 = getelementptr inbounds %struct.block, %struct.block* %arrayidx365, i32 0, i32 9
  %286 = load i32, i32* %c, align 4
  %idxprom367 = sext i32 %286 to i64
  %arrayidx368 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei366, i64 0, i64 %idxprom367
  %arrayidx369 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx368, i64 0, i64 0
  %arrayidx370 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx369, i64 0, i64 0
  %287 = load i32, i32* %arrayidx370, align 4
  %288 = load %struct.block*, %struct.block** %bp, align 8
  %nei371 = getelementptr inbounds %struct.block, %struct.block* %288, i32 0, i32 9
  %289 = load i32, i32* %c, align 4
  %idxprom372 = sext i32 %289 to i64
  %arrayidx373 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei371, i64 0, i64 %idxprom372
  %290 = load i32, i32* %i, align 4
  %idxprom374 = sext i32 %290 to i64
  %arrayidx375 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx373, i64 0, i64 %idxprom374
  %291 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %291 to i64
  %arrayidx377 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx375, i64 0, i64 %idxprom376
  store i32 %287, i32* %arrayidx377, align 4
  %292 = load i32, i32* %level, align 4
  %add378 = add nsw i32 %292, 1
  %293 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level379 = getelementptr inbounds %struct.block, %struct.block* %293, i32 0, i32 8
  %294 = load i32, i32* %c, align 4
  %idxprom380 = sext i32 %294 to i64
  %arrayidx381 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level379, i64 0, i64 %idxprom380
  store i32 %add378, i32* %arrayidx381, align 4
  %295 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine382 = getelementptr inbounds %struct.block, %struct.block* %295, i32 0, i32 7
  %296 = load i32, i32* %c, align 4
  %idxprom383 = sext i32 %296 to i64
  %arrayidx384 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine382, i64 0, i64 %idxprom383
  store i32 0, i32* %arrayidx384, align 4
  %297 = load i32, i32* %n, align 4
  %298 = load %struct.block*, %struct.block** @blocks, align 8
  %299 = load %struct.block*, %struct.block** @blocks, align 8
  %300 = load i32, i32* %other, align 4
  %idxprom385 = sext i32 %300 to i64
  %arrayidx386 = getelementptr inbounds %struct.block, %struct.block* %299, i64 %idxprom385
  %nei387 = getelementptr inbounds %struct.block, %struct.block* %arrayidx386, i32 0, i32 9
  %301 = load i32, i32* %c, align 4
  %idxprom388 = sext i32 %301 to i64
  %arrayidx389 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei387, i64 0, i64 %idxprom388
  %arrayidx390 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx389, i64 0, i64 0
  %arrayidx391 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx390, i64 0, i64 0
  %302 = load i32, i32* %arrayidx391, align 4
  %idxprom392 = sext i32 %302 to i64
  %arrayidx393 = getelementptr inbounds %struct.block, %struct.block* %298, i64 %idxprom392
  %nei394 = getelementptr inbounds %struct.block, %struct.block* %arrayidx393, i32 0, i32 9
  %303 = load i32, i32* %c1, align 4
  %idxprom395 = sext i32 %303 to i64
  %arrayidx396 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei394, i64 0, i64 %idxprom395
  %arrayidx397 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx396, i64 0, i64 0
  %arrayidx398 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx397, i64 0, i64 0
  store i32 %297, i32* %arrayidx398, align 4
  %304 = load i32, i32* %level, align 4
  %305 = load %struct.block*, %struct.block** @blocks, align 8
  %306 = load %struct.block*, %struct.block** @blocks, align 8
  %307 = load i32, i32* %other, align 4
  %idxprom399 = sext i32 %307 to i64
  %arrayidx400 = getelementptr inbounds %struct.block, %struct.block* %306, i64 %idxprom399
  %nei401 = getelementptr inbounds %struct.block, %struct.block* %arrayidx400, i32 0, i32 9
  %308 = load i32, i32* %c, align 4
  %idxprom402 = sext i32 %308 to i64
  %arrayidx403 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei401, i64 0, i64 %idxprom402
  %arrayidx404 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx403, i64 0, i64 0
  %arrayidx405 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx404, i64 0, i64 0
  %309 = load i32, i32* %arrayidx405, align 4
  %idxprom406 = sext i32 %309 to i64
  %arrayidx407 = getelementptr inbounds %struct.block, %struct.block* %305, i64 %idxprom406
  %nei_level408 = getelementptr inbounds %struct.block, %struct.block* %arrayidx407, i32 0, i32 8
  %310 = load i32, i32* %c1, align 4
  %idxprom409 = sext i32 %310 to i64
  %arrayidx410 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level408, i64 0, i64 %idxprom409
  store i32 %304, i32* %arrayidx410, align 4
  %311 = load %struct.block*, %struct.block** @blocks, align 8
  %312 = load %struct.block*, %struct.block** @blocks, align 8
  %313 = load i32, i32* %other, align 4
  %idxprom411 = sext i32 %313 to i64
  %arrayidx412 = getelementptr inbounds %struct.block, %struct.block* %312, i64 %idxprom411
  %nei413 = getelementptr inbounds %struct.block, %struct.block* %arrayidx412, i32 0, i32 9
  %314 = load i32, i32* %c, align 4
  %idxprom414 = sext i32 %314 to i64
  %arrayidx415 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei413, i64 0, i64 %idxprom414
  %arrayidx416 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx415, i64 0, i64 0
  %arrayidx417 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx416, i64 0, i64 0
  %315 = load i32, i32* %arrayidx417, align 4
  %idxprom418 = sext i32 %315 to i64
  %arrayidx419 = getelementptr inbounds %struct.block, %struct.block* %311, i64 %idxprom418
  %nei_refine420 = getelementptr inbounds %struct.block, %struct.block* %arrayidx419, i32 0, i32 7
  %316 = load i32, i32* %c1, align 4
  %idxprom421 = sext i32 %316 to i64
  %arrayidx422 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine420, i64 0, i64 %idxprom421
  store i32 0, i32* %arrayidx422, align 4
  br label %if.end423

if.end423:                                        ; preds = %if.end358, %for.body330
  br label %for.inc424

for.inc424:                                       ; preds = %if.end423
  %317 = load i32, i32* %j, align 4
  %inc425 = add nsw i32 %317, 1
  store i32 %inc425, i32* %j, align 4
  %318 = load i32, i32* %k, align 4
  %inc426 = add nsw i32 %318, 1
  store i32 %inc426, i32* %k, align 4
  br label %for.cond328

for.end427:                                       ; preds = %for.cond328
  br label %for.inc428

for.inc428:                                       ; preds = %for.end427
  %319 = load i32, i32* %i, align 4
  %inc429 = add nsw i32 %319, 1
  store i32 %inc429, i32* %i, align 4
  br label %for.cond325

for.end430:                                       ; preds = %for.cond325
  br label %if.end431

if.end431:                                        ; preds = %for.end430, %if.end315
  br label %if.end432

if.end432:                                        ; preds = %if.end431, %if.then232
  br label %for.inc433

for.inc433:                                       ; preds = %if.end432
  %320 = load i32, i32* %c, align 4
  %inc434 = add nsw i32 %320, 1
  store i32 %inc434, i32* %c, align 4
  br label %for.cond217

for.end435:                                       ; preds = %for.cond217
  br label %if.end436

if.end436:                                        ; preds = %for.end435, %land.lhs.true8, %land.lhs.true, %for.body4
  br label %for.inc437

for.inc437:                                       ; preds = %if.end436
  %321 = load i32, i32* %p, align 4
  %inc438 = add nsw i32 %321, 1
  store i32 %inc438, i32* %p, align 4
  br label %for.cond2

for.end439:                                       ; preds = %for.cond2
  br label %for.inc440

for.inc440:                                       ; preds = %for.end439
  %322 = load i32, i32* %level, align 4
  %dec = add nsw i32 %322, -1
  store i32 %dec, i32* %level, align 4
  br label %for.cond

for.end441:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @find_sorted_list(i32 %number, i32 %level) #0 {
entry:
  %number.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  store i32 %level, i32* %level.addr, align 4
  %0 = load i32*, i32** @sorted_index, align 8
  %1 = load i32, i32* %level.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  %2 = load i32, i32* %arrayidx, align 4
  store i32 %2, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4
  %4 = load i32*, i32** @sorted_index, align 8
  %5 = load i32, i32* %level.addr, align 4
  %add = add nsw i32 %5, 1
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom1
  %6 = load i32, i32* %arrayidx2, align 4
  %cmp = icmp slt i32 %3, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %number.addr, align 4
  %8 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %9 to i64
  %arrayidx4 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %8, i64 %idxprom3
  %number5 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx4, i32 0, i32 0
  %10 = load i32, i32* %number5, align 4
  %cmp6 = icmp eq i32 %7, %10
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %11 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %12 to i64
  %arrayidx8 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %11, i64 %idxprom7
  %n = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx8, i32 0, i32 1
  %13 = load i32, i32* %n, align 4
  ret i32 %13

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* @my_pe, align 4
  %16 = load i32, i32* %number.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0), i32 %15, i32 %16)
  call void @exit(i32 -1) #8
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @check_sum(i32 %var) #0 {
entry:
  %var.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %in = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %sum = alloca double, align 8
  %block_sum = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %bp = alloca %struct.block*, align 8
  store i32 %var, i32* %var.addr, align 4
  %call = call double @timer()
  store double %call, double* %t1, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %in, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc32, %entry
  %0 = load i32, i32* %in, align 4
  %1 = load i32*, i32** @sorted_index, align 8
  %2 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %2, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %cmp = icmp slt i32 %0, %3
  br i1 %cmp, label %for.body, label %for.end34

for.body:                                         ; preds = %for.cond
  %4 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %5 = load i32, i32* %in, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %4, i64 %idxprom1
  %n3 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx2, i32 0, i32 1
  %6 = load i32, i32* %n3, align 4
  store i32 %6, i32* %n, align 4
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom4
  store %struct.block* %arrayidx5, %struct.block** %bp, align 8
  %9 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %9, i32 0, i32 0
  %10 = load i32, i32* %number, align 8
  %cmp6 = icmp sge i32 %10, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store double 0.000000e+00, double* %block_sum, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc28, %if.then
  %11 = load i32, i32* %i, align 4
  %12 = load i32, i32* @x_block_size, align 4
  %cmp8 = icmp sle i32 %11, %12
  br i1 %cmp8, label %for.body9, label %for.end30

for.body9:                                        ; preds = %for.cond7
  store i32 1, i32* %j, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc25, %for.body9
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* @y_block_size, align 4
  %cmp11 = icmp sle i32 %13, %14
  br i1 %cmp11, label %for.body12, label %for.end27

for.body12:                                       ; preds = %for.cond10
  store i32 1, i32* %k, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc, %for.body12
  %15 = load i32, i32* %k, align 4
  %16 = load i32, i32* @z_block_size, align 4
  %cmp14 = icmp sle i32 %15, %16
  br i1 %cmp14, label %for.body15, label %for.end

for.body15:                                       ; preds = %for.cond13
  %17 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %17, i32 0, i32 11
  %18 = load double****, double***** %array, align 8
  %19 = load i32, i32* %var.addr, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds double***, double**** %18, i64 %idxprom16
  %20 = load double***, double**** %arrayidx17, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds double**, double*** %20, i64 %idxprom18
  %22 = load double**, double*** %arrayidx19, align 8
  %23 = load i32, i32* %j, align 4
  %idxprom20 = sext i32 %23 to i64
  %arrayidx21 = getelementptr inbounds double*, double** %22, i64 %idxprom20
  %24 = load double*, double** %arrayidx21, align 8
  %25 = load i32, i32* %k, align 4
  %idxprom22 = sext i32 %25 to i64
  %arrayidx23 = getelementptr inbounds double, double* %24, i64 %idxprom22
  %26 = load double, double* %arrayidx23, align 8
  %27 = load double, double* %block_sum, align 8
  %add24 = fadd double %27, %26
  store double %add24, double* %block_sum, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body15
  %28 = load i32, i32* %k, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond13

for.end:                                          ; preds = %for.cond13
  br label %for.inc25

for.inc25:                                        ; preds = %for.end
  %29 = load i32, i32* %j, align 4
  %inc26 = add nsw i32 %29, 1
  store i32 %inc26, i32* %j, align 4
  br label %for.cond10

for.end27:                                        ; preds = %for.cond10
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  %30 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %30, 1
  store i32 %inc29, i32* %i, align 4
  br label %for.cond7

for.end30:                                        ; preds = %for.cond7
  %31 = load double, double* %block_sum, align 8
  %32 = load double, double* %sum, align 8
  %add31 = fadd double %32, %31
  store double %add31, double* %sum, align 8
  br label %if.end

if.end:                                           ; preds = %for.end30, %for.body
  br label %for.inc32

for.inc32:                                        ; preds = %if.end
  %33 = load i32, i32* %in, align 4
  %inc33 = add nsw i32 %33, 1
  store i32 %inc33, i32* %in, align 4
  br label %for.cond

for.end34:                                        ; preds = %for.cond
  %call35 = call double @timer()
  store double %call35, double* %t2, align 8
  %34 = load double, double* %t2, align 8
  %35 = load double, double* %t1, align 8
  %sub = fsub double %34, %35
  %36 = load double, double* @timer_cs_calc, align 8
  %add36 = fadd double %36, %sub
  store double %add36, double* @timer_cs_calc, align 8
  %37 = load i32, i32* @total_red, align 4
  %inc37 = add nsw i32 %37, 1
  store i32 %inc37, i32* @total_red, align 4
  %38 = load double, double* %sum, align 8
  ret double %38
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @comm(i32 %start, i32 %num_comm, i32 %stage) #0 {
entry:
  %start.addr = alloca i32, align 4
  %num_comm.addr = alloca i32, align 4
  %stage.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %dir = alloca i32, align 4
  %o = alloca i32, align 4
  %in = alloca i32, align 4
  %which = alloca i32, align 4
  %offset = alloca i32, align 4
  %type = alloca i32, align 4
  %permutations = alloca [6 x [3 x i32]], align 16
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %bp = alloca %struct.block*, align 8
  store i32 %start, i32* %start.addr, align 4
  store i32 %num_comm, i32* %num_comm.addr, align 4
  store i32 %stage, i32* %stage.addr, align 4
  %0 = bitcast [6 x [3 x i32]]* %permutations to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([6 x [3 x i32]]* @__const.comm.permutations to i8*), i64 72, i1 false)
  store i32 0, i32* %o, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc161, %entry
  %1 = load i32, i32* %o, align 4
  %cmp = icmp slt i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end163

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* @permute, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %3 = load i32, i32* %stage.addr, align 4
  %rem = srem i32 %3, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x [3 x i32]], [6 x [3 x i32]]* %permutations, i64 0, i64 %idxprom
  %4 = load i32, i32* %o, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [3 x i32], [3 x i32]* %arrayidx, i64 0, i64 %idxprom1
  %5 = load i32, i32* %arrayidx2, align 4
  store i32 %5, i32* %dir, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %6 = load i32, i32* %o, align 4
  store i32 %6, i32* %dir, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %dir, align 4
  store i32 %7, i32* %type, align 4
  %call = call double @timer()
  store double %call, double* %t1, align 8
  store i32 0, i32* %in, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc153, %if.end
  %8 = load i32, i32* %in, align 4
  %9 = load i32*, i32** @sorted_index, align 8
  %10 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %10, 1
  %idxprom4 = sext i32 %add to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %9, i64 %idxprom4
  %11 = load i32, i32* %arrayidx5, align 4
  %cmp6 = icmp slt i32 %8, %11
  br i1 %cmp6, label %for.body7, label %for.end155

for.body7:                                        ; preds = %for.cond3
  %12 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %13 = load i32, i32* %in, align 4
  %idxprom8 = sext i32 %13 to i64
  %arrayidx9 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %12, i64 %idxprom8
  %n10 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx9, i32 0, i32 1
  %14 = load i32, i32* %n10, align 4
  store i32 %14, i32* %n, align 4
  %15 = load %struct.block*, %struct.block** @blocks, align 8
  %16 = load i32, i32* %n, align 4
  %idxprom11 = sext i32 %16 to i64
  %arrayidx12 = getelementptr inbounds %struct.block, %struct.block* %15, i64 %idxprom11
  store %struct.block* %arrayidx12, %struct.block** %bp, align 8
  %17 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %17, i32 0, i32 0
  %18 = load i32, i32* %number, align 8
  %cmp13 = icmp sge i32 %18, 0
  br i1 %cmp13, label %if.then14, label %if.end152

if.then14:                                        ; preds = %for.body7
  %19 = load i32, i32* %dir, align 4
  %mul = mul nsw i32 %19, 2
  store i32 %mul, i32* %l, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc149, %if.then14
  %20 = load i32, i32* %l, align 4
  %21 = load i32, i32* %dir, align 4
  %mul16 = mul nsw i32 %21, 2
  %add17 = add nsw i32 %mul16, 2
  %cmp18 = icmp slt i32 %20, %add17
  br i1 %cmp18, label %for.body19, label %for.end151

for.body19:                                       ; preds = %for.cond15
  %22 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %22, i32 0, i32 8
  %23 = load i32, i32* %l, align 4
  %idxprom20 = sext i32 %23 to i64
  %arrayidx21 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 %idxprom20
  %24 = load i32, i32* %arrayidx21, align 4
  %25 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %25, i32 0, i32 1
  %26 = load i32, i32* %level, align 4
  %cmp22 = icmp eq i32 %24, %26
  br i1 %cmp22, label %if.then23, label %if.else39

if.then23:                                        ; preds = %for.body19
  %call24 = call double @timer()
  store double %call24, double* %t2, align 8
  %27 = load %struct.block*, %struct.block** %bp, align 8
  %nei = getelementptr inbounds %struct.block, %struct.block* %27, i32 0, i32 9
  %28 = load i32, i32* %l, align 4
  %idxprom25 = sext i32 %28 to i64
  %arrayidx26 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei, i64 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx26, i64 0, i64 0
  %arrayidx28 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx27, i64 0, i64 0
  %29 = load i32, i32* %arrayidx28, align 4
  store i32 %29, i32* %m, align 4
  %30 = load i32, i32* %n, align 4
  %cmp29 = icmp sgt i32 %29, %30
  br i1 %cmp29, label %if.then30, label %if.end34

if.then30:                                        ; preds = %if.then23
  %31 = load i32, i32* %n, align 4
  %32 = load i32, i32* %m, align 4
  %33 = load i32, i32* %l, align 4
  %34 = load i32, i32* %start.addr, align 4
  %35 = load i32, i32* %num_comm.addr, align 4
  call void @on_proc_comm(i32 %31, i32 %32, i32 %33, i32 %34, i32 %35)
  %36 = load i32, i32* %dir, align 4
  %idxprom31 = sext i32 %36 to i64
  %arrayidx32 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %idxprom31
  %37 = load i32, i32* %arrayidx32, align 4
  %add33 = add nsw i32 %37, 2
  store i32 %add33, i32* %arrayidx32, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.then23
  %call35 = call double @timer()
  %38 = load double, double* %t2, align 8
  %sub = fsub double %call35, %38
  %39 = load i32, i32* %dir, align 4
  %idxprom36 = sext i32 %39 to i64
  %arrayidx37 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %idxprom36
  %40 = load double, double* %arrayidx37, align 8
  %add38 = fadd double %40, %sub
  store double %add38, double* %arrayidx37, align 8
  br label %if.end148

if.else39:                                        ; preds = %for.body19
  %41 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level40 = getelementptr inbounds %struct.block, %struct.block* %41, i32 0, i32 8
  %42 = load i32, i32* %l, align 4
  %idxprom41 = sext i32 %42 to i64
  %arrayidx42 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level40, i64 0, i64 %idxprom41
  %43 = load i32, i32* %arrayidx42, align 4
  %44 = load %struct.block*, %struct.block** %bp, align 8
  %level43 = getelementptr inbounds %struct.block, %struct.block* %44, i32 0, i32 1
  %45 = load i32, i32* %level43, align 4
  %add44 = add nsw i32 %45, 1
  %cmp45 = icmp eq i32 %43, %add44
  br i1 %cmp45, label %if.then46, label %if.else75

if.then46:                                        ; preds = %if.else39
  %call47 = call double @timer()
  store double %call47, double* %t2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond48

for.cond48:                                       ; preds = %for.inc67, %if.then46
  %46 = load i32, i32* %i, align 4
  %cmp49 = icmp slt i32 %46, 2
  br i1 %cmp49, label %for.body50, label %for.end69

for.body50:                                       ; preds = %for.cond48
  store i32 0, i32* %j, align 4
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc, %for.body50
  %47 = load i32, i32* %j, align 4
  %cmp52 = icmp slt i32 %47, 2
  br i1 %cmp52, label %for.body53, label %for.end

for.body53:                                       ; preds = %for.cond51
  %48 = load %struct.block*, %struct.block** %bp, align 8
  %nei54 = getelementptr inbounds %struct.block, %struct.block* %48, i32 0, i32 9
  %49 = load i32, i32* %l, align 4
  %idxprom55 = sext i32 %49 to i64
  %arrayidx56 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei54, i64 0, i64 %idxprom55
  %50 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %50 to i64
  %arrayidx58 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %51 = load i32, i32* %j, align 4
  %idxprom59 = sext i32 %51 to i64
  %arrayidx60 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %52 = load i32, i32* %arrayidx60, align 4
  store i32 %52, i32* %m, align 4
  %53 = load i32, i32* %n, align 4
  %cmp61 = icmp sgt i32 %52, %53
  br i1 %cmp61, label %if.then62, label %if.end66

if.then62:                                        ; preds = %for.body53
  %54 = load i32, i32* %n, align 4
  %55 = load i32, i32* %m, align 4
  %56 = load i32, i32* %l, align 4
  %57 = load i32, i32* %i, align 4
  %58 = load i32, i32* %j, align 4
  %59 = load i32, i32* %start.addr, align 4
  %60 = load i32, i32* %num_comm.addr, align 4
  call void @on_proc_comm_diff(i32 %54, i32 %55, i32 %56, i32 %57, i32 %58, i32 %59, i32 %60)
  %61 = load i32, i32* %dir, align 4
  %idxprom63 = sext i32 %61 to i64
  %arrayidx64 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %idxprom63
  %62 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %62, 2
  store i32 %add65, i32* %arrayidx64, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.then62, %for.body53
  br label %for.inc

for.inc:                                          ; preds = %if.end66
  %63 = load i32, i32* %j, align 4
  %inc = add nsw i32 %63, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond51

for.end:                                          ; preds = %for.cond51
  br label %for.inc67

for.inc67:                                        ; preds = %for.end
  %64 = load i32, i32* %i, align 4
  %inc68 = add nsw i32 %64, 1
  store i32 %inc68, i32* %i, align 4
  br label %for.cond48

for.end69:                                        ; preds = %for.cond48
  %call70 = call double @timer()
  %65 = load double, double* %t2, align 8
  %sub71 = fsub double %call70, %65
  %66 = load i32, i32* %dir, align 4
  %idxprom72 = sext i32 %66 to i64
  %arrayidx73 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %idxprom72
  %67 = load double, double* %arrayidx73, align 8
  %add74 = fadd double %67, %sub71
  store double %add74, double* %arrayidx73, align 8
  br label %if.end147

if.else75:                                        ; preds = %if.else39
  %68 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level76 = getelementptr inbounds %struct.block, %struct.block* %68, i32 0, i32 8
  %69 = load i32, i32* %l, align 4
  %idxprom77 = sext i32 %69 to i64
  %arrayidx78 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level76, i64 0, i64 %idxprom77
  %70 = load i32, i32* %arrayidx78, align 4
  %71 = load %struct.block*, %struct.block** %bp, align 8
  %level79 = getelementptr inbounds %struct.block, %struct.block* %71, i32 0, i32 1
  %72 = load i32, i32* %level79, align 4
  %sub80 = sub nsw i32 %72, 1
  %cmp81 = icmp eq i32 %70, %sub80
  br i1 %cmp81, label %if.then82, label %if.else128

if.then82:                                        ; preds = %if.else75
  %call83 = call double @timer()
  store double %call83, double* %t2, align 8
  %73 = load %struct.block*, %struct.block** %bp, align 8
  %nei84 = getelementptr inbounds %struct.block, %struct.block* %73, i32 0, i32 9
  %74 = load i32, i32* %l, align 4
  %idxprom85 = sext i32 %74 to i64
  %arrayidx86 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei84, i64 0, i64 %idxprom85
  %arrayidx87 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx86, i64 0, i64 0
  %arrayidx88 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx87, i64 0, i64 0
  %75 = load i32, i32* %arrayidx88, align 4
  store i32 %75, i32* %m, align 4
  %76 = load i32, i32* %n, align 4
  %cmp89 = icmp sgt i32 %75, %76
  br i1 %cmp89, label %if.then90, label %if.end122

if.then90:                                        ; preds = %if.then82
  %77 = load i32, i32* %dir, align 4
  %mul91 = mul nsw i32 %77, 2
  %add92 = add nsw i32 %mul91, 1
  %78 = load i32, i32* %l, align 4
  %rem93 = srem i32 %78, 2
  %sub94 = sub nsw i32 %add92, %rem93
  store i32 %sub94, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc119, %if.then90
  %79 = load i32, i32* %i, align 4
  %cmp96 = icmp slt i32 %79, 2
  br i1 %cmp96, label %for.body97, label %for.end121

for.body97:                                       ; preds = %for.cond95
  store i32 0, i32* %j, align 4
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc116, %for.body97
  %80 = load i32, i32* %j, align 4
  %cmp99 = icmp slt i32 %80, 2
  br i1 %cmp99, label %for.body100, label %for.end118

for.body100:                                      ; preds = %for.cond98
  %81 = load %struct.block*, %struct.block** @blocks, align 8
  %82 = load i32, i32* %m, align 4
  %idxprom101 = sext i32 %82 to i64
  %arrayidx102 = getelementptr inbounds %struct.block, %struct.block* %81, i64 %idxprom101
  %nei103 = getelementptr inbounds %struct.block, %struct.block* %arrayidx102, i32 0, i32 9
  %83 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %83 to i64
  %arrayidx105 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei103, i64 0, i64 %idxprom104
  %84 = load i32, i32* %i, align 4
  %idxprom106 = sext i32 %84 to i64
  %arrayidx107 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %85 = load i32, i32* %j, align 4
  %idxprom108 = sext i32 %85 to i64
  %arrayidx109 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %86 = load i32, i32* %arrayidx109, align 4
  %87 = load i32, i32* %n, align 4
  %cmp110 = icmp eq i32 %86, %87
  br i1 %cmp110, label %if.then111, label %if.end115

if.then111:                                       ; preds = %for.body100
  %88 = load i32, i32* %m, align 4
  %89 = load i32, i32* %n, align 4
  %90 = load i32, i32* %k, align 4
  %91 = load i32, i32* %i, align 4
  %92 = load i32, i32* %j, align 4
  %93 = load i32, i32* %start.addr, align 4
  %94 = load i32, i32* %num_comm.addr, align 4
  call void @on_proc_comm_diff(i32 %88, i32 %89, i32 %90, i32 %91, i32 %92, i32 %93, i32 %94)
  %95 = load i32, i32* %dir, align 4
  %idxprom112 = sext i32 %95 to i64
  %arrayidx113 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %idxprom112
  %96 = load i32, i32* %arrayidx113, align 4
  %add114 = add nsw i32 %96, 2
  store i32 %add114, i32* %arrayidx113, align 4
  br label %if.end115

if.end115:                                        ; preds = %if.then111, %for.body100
  br label %for.inc116

for.inc116:                                       ; preds = %if.end115
  %97 = load i32, i32* %j, align 4
  %inc117 = add nsw i32 %97, 1
  store i32 %inc117, i32* %j, align 4
  br label %for.cond98

for.end118:                                       ; preds = %for.cond98
  br label %for.inc119

for.inc119:                                       ; preds = %for.end118
  %98 = load i32, i32* %i, align 4
  %inc120 = add nsw i32 %98, 1
  store i32 %inc120, i32* %i, align 4
  br label %for.cond95

for.end121:                                       ; preds = %for.cond95
  br label %if.end122

if.end122:                                        ; preds = %for.end121, %if.then82
  %call123 = call double @timer()
  %99 = load double, double* %t2, align 8
  %sub124 = fsub double %call123, %99
  %100 = load i32, i32* %dir, align 4
  %idxprom125 = sext i32 %100 to i64
  %arrayidx126 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %idxprom125
  %101 = load double, double* %arrayidx126, align 8
  %add127 = fadd double %101, %sub124
  store double %add127, double* %arrayidx126, align 8
  br label %if.end146

if.else128:                                       ; preds = %if.else75
  %102 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level129 = getelementptr inbounds %struct.block, %struct.block* %102, i32 0, i32 8
  %103 = load i32, i32* %l, align 4
  %idxprom130 = sext i32 %103 to i64
  %arrayidx131 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level129, i64 0, i64 %idxprom130
  %104 = load i32, i32* %arrayidx131, align 4
  %cmp132 = icmp eq i32 %104, -2
  br i1 %cmp132, label %if.then133, label %if.else143

if.then133:                                       ; preds = %if.else128
  %call134 = call double @timer()
  store double %call134, double* %t2, align 8
  %105 = load i32, i32* %l, align 4
  %106 = load %struct.block*, %struct.block** %bp, align 8
  %107 = load i32, i32* %start.addr, align 4
  %108 = load i32, i32* %num_comm.addr, align 4
  call void @apply_bc(i32 %105, %struct.block* %106, i32 %107, i32 %108)
  %109 = load i32, i32* %dir, align 4
  %idxprom135 = sext i32 %109 to i64
  %arrayidx136 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %idxprom135
  %110 = load i32, i32* %arrayidx136, align 4
  %inc137 = add nsw i32 %110, 1
  store i32 %inc137, i32* %arrayidx136, align 4
  %call138 = call double @timer()
  %111 = load double, double* %t2, align 8
  %sub139 = fsub double %call138, %111
  %112 = load i32, i32* %dir, align 4
  %idxprom140 = sext i32 %112 to i64
  %arrayidx141 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %idxprom140
  %113 = load double, double* %arrayidx141, align 8
  %add142 = fadd double %113, %sub139
  store double %add142, double* %arrayidx141, align 8
  br label %if.end145

if.else143:                                       ; preds = %if.else128
  %call144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))
  call void @exit(i32 -1) #8
  unreachable

if.end145:                                        ; preds = %if.then133
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end122
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %for.end69
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.end34
  br label %for.inc149

for.inc149:                                       ; preds = %if.end148
  %114 = load i32, i32* %l, align 4
  %inc150 = add nsw i32 %114, 1
  store i32 %inc150, i32* %l, align 4
  br label %for.cond15

for.end151:                                       ; preds = %for.cond15
  br label %if.end152

if.end152:                                        ; preds = %for.end151, %for.body7
  br label %for.inc153

for.inc153:                                       ; preds = %if.end152
  %115 = load i32, i32* %in, align 4
  %inc154 = add nsw i32 %115, 1
  store i32 %inc154, i32* %in, align 4
  br label %for.cond3

for.end155:                                       ; preds = %for.cond3
  %call156 = call double @timer()
  %116 = load double, double* %t1, align 8
  %sub157 = fsub double %call156, %116
  %117 = load i32, i32* %dir, align 4
  %idxprom158 = sext i32 %117 to i64
  %arrayidx159 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %idxprom158
  %118 = load double, double* %arrayidx159, align 8
  %add160 = fadd double %118, %sub157
  store double %add160, double* %arrayidx159, align 8
  br label %for.inc161

for.inc161:                                       ; preds = %for.end155
  %119 = load i32, i32* %o, align 4
  %inc162 = add nsw i32 %119, 1
  store i32 %inc162, i32* %o, align 4
  br label %for.cond

for.end163:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @on_proc_comm(i32 %n, i32 %n1, i32 %l, i32 %start, i32 %num_comm) #0 {
entry:
  %n.addr = alloca i32, align 4
  %n1.addr = alloca i32, align 4
  %l.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %num_comm.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %is = alloca i32, align 4
  %ie = alloca i32, align 4
  %js = alloca i32, align 4
  %je = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %bp1 = alloca %struct.block*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i32 %n1, i32* %n1.addr, align 4
  store i32 %l, i32* %l.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i32 %num_comm, i32* %num_comm.addr, align 4
  %0 = load i32, i32* @code, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.else213, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %l.addr, align 4
  %div = sdiv i32 %1, 2
  %cmp = icmp eq i32 %div, 0
  br i1 %cmp, label %if.then1, label %if.else57

if.then1:                                         ; preds = %if.then
  %2 = load i32, i32* %l.addr, align 4
  %rem = srem i32 %2, 2
  %cmp2 = icmp eq i32 %rem, 0
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %3 = load %struct.block*, %struct.block** @blocks, align 8
  %4 = load i32, i32* %n.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.block, %struct.block* %3, i64 %idxprom
  store %struct.block* %arrayidx, %struct.block** %bp, align 8
  %5 = load %struct.block*, %struct.block** @blocks, align 8
  %6 = load i32, i32* %n1.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds %struct.block, %struct.block* %5, i64 %idxprom4
  store %struct.block* %arrayidx5, %struct.block** %bp1, align 8
  br label %if.end

if.else:                                          ; preds = %if.then1
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n.addr, align 4
  %idxprom6 = sext i32 %8 to i64
  %arrayidx7 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom6
  store %struct.block* %arrayidx7, %struct.block** %bp1, align 8
  %9 = load %struct.block*, %struct.block** @blocks, align 8
  %10 = load i32, i32* %n1.addr, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds %struct.block, %struct.block* %9, i64 %idxprom8
  store %struct.block* %arrayidx9, %struct.block** %bp, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %11 = load i32, i32* %start.addr, align 4
  store i32 %11, i32* %m, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc54, %if.end
  %12 = load i32, i32* %m, align 4
  %13 = load i32, i32* %start.addr, align 4
  %14 = load i32, i32* %num_comm.addr, align 4
  %add = add nsw i32 %13, %14
  %cmp10 = icmp slt i32 %12, %add
  br i1 %cmp10, label %for.body, label %for.end56

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %j, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc51, %for.body
  %15 = load i32, i32* %j, align 4
  %16 = load i32, i32* @y_block_size, align 4
  %cmp12 = icmp sle i32 %15, %16
  br i1 %cmp12, label %for.body13, label %for.end53

for.body13:                                       ; preds = %for.cond11
  store i32 1, i32* %k, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %for.body13
  %17 = load i32, i32* %k, align 4
  %18 = load i32, i32* @z_block_size, align 4
  %cmp15 = icmp sle i32 %17, %18
  br i1 %cmp15, label %for.body16, label %for.end

for.body16:                                       ; preds = %for.cond14
  %19 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 11
  %20 = load double****, double***** %array, align 8
  %21 = load i32, i32* %m, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds double***, double**** %20, i64 %idxprom17
  %22 = load double***, double**** %arrayidx18, align 8
  %arrayidx19 = getelementptr inbounds double**, double*** %22, i64 1
  %23 = load double**, double*** %arrayidx19, align 8
  %24 = load i32, i32* %j, align 4
  %idxprom20 = sext i32 %24 to i64
  %arrayidx21 = getelementptr inbounds double*, double** %23, i64 %idxprom20
  %25 = load double*, double** %arrayidx21, align 8
  %26 = load i32, i32* %k, align 4
  %idxprom22 = sext i32 %26 to i64
  %arrayidx23 = getelementptr inbounds double, double* %25, i64 %idxprom22
  %27 = load double, double* %arrayidx23, align 8
  %28 = load %struct.block*, %struct.block** %bp1, align 8
  %array24 = getelementptr inbounds %struct.block, %struct.block* %28, i32 0, i32 11
  %29 = load double****, double***** %array24, align 8
  %30 = load i32, i32* %m, align 4
  %idxprom25 = sext i32 %30 to i64
  %arrayidx26 = getelementptr inbounds double***, double**** %29, i64 %idxprom25
  %31 = load double***, double**** %arrayidx26, align 8
  %32 = load i32, i32* @x_block_size, align 4
  %add27 = add nsw i32 %32, 1
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds double**, double*** %31, i64 %idxprom28
  %33 = load double**, double*** %arrayidx29, align 8
  %34 = load i32, i32* %j, align 4
  %idxprom30 = sext i32 %34 to i64
  %arrayidx31 = getelementptr inbounds double*, double** %33, i64 %idxprom30
  %35 = load double*, double** %arrayidx31, align 8
  %36 = load i32, i32* %k, align 4
  %idxprom32 = sext i32 %36 to i64
  %arrayidx33 = getelementptr inbounds double, double* %35, i64 %idxprom32
  store double %27, double* %arrayidx33, align 8
  %37 = load %struct.block*, %struct.block** %bp1, align 8
  %array34 = getelementptr inbounds %struct.block, %struct.block* %37, i32 0, i32 11
  %38 = load double****, double***** %array34, align 8
  %39 = load i32, i32* %m, align 4
  %idxprom35 = sext i32 %39 to i64
  %arrayidx36 = getelementptr inbounds double***, double**** %38, i64 %idxprom35
  %40 = load double***, double**** %arrayidx36, align 8
  %41 = load i32, i32* @x_block_size, align 4
  %idxprom37 = sext i32 %41 to i64
  %arrayidx38 = getelementptr inbounds double**, double*** %40, i64 %idxprom37
  %42 = load double**, double*** %arrayidx38, align 8
  %43 = load i32, i32* %j, align 4
  %idxprom39 = sext i32 %43 to i64
  %arrayidx40 = getelementptr inbounds double*, double** %42, i64 %idxprom39
  %44 = load double*, double** %arrayidx40, align 8
  %45 = load i32, i32* %k, align 4
  %idxprom41 = sext i32 %45 to i64
  %arrayidx42 = getelementptr inbounds double, double* %44, i64 %idxprom41
  %46 = load double, double* %arrayidx42, align 8
  %47 = load %struct.block*, %struct.block** %bp, align 8
  %array43 = getelementptr inbounds %struct.block, %struct.block* %47, i32 0, i32 11
  %48 = load double****, double***** %array43, align 8
  %49 = load i32, i32* %m, align 4
  %idxprom44 = sext i32 %49 to i64
  %arrayidx45 = getelementptr inbounds double***, double**** %48, i64 %idxprom44
  %50 = load double***, double**** %arrayidx45, align 8
  %arrayidx46 = getelementptr inbounds double**, double*** %50, i64 0
  %51 = load double**, double*** %arrayidx46, align 8
  %52 = load i32, i32* %j, align 4
  %idxprom47 = sext i32 %52 to i64
  %arrayidx48 = getelementptr inbounds double*, double** %51, i64 %idxprom47
  %53 = load double*, double** %arrayidx48, align 8
  %54 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %54 to i64
  %arrayidx50 = getelementptr inbounds double, double* %53, i64 %idxprom49
  store double %46, double* %arrayidx50, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body16
  %55 = load i32, i32* %k, align 4
  %inc = add nsw i32 %55, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond14

for.end:                                          ; preds = %for.cond14
  br label %for.inc51

for.inc51:                                        ; preds = %for.end
  %56 = load i32, i32* %j, align 4
  %inc52 = add nsw i32 %56, 1
  store i32 %inc52, i32* %j, align 4
  br label %for.cond11

for.end53:                                        ; preds = %for.cond11
  br label %for.inc54

for.inc54:                                        ; preds = %for.end53
  %57 = load i32, i32* %m, align 4
  %inc55 = add nsw i32 %57, 1
  store i32 %inc55, i32* %m, align 4
  br label %for.cond

for.end56:                                        ; preds = %for.cond
  br label %if.end212

if.else57:                                        ; preds = %if.then
  %58 = load i32, i32* %l.addr, align 4
  %div58 = sdiv i32 %58, 2
  %cmp59 = icmp eq i32 %div58, 1
  br i1 %cmp59, label %if.then60, label %if.else133

if.then60:                                        ; preds = %if.else57
  %59 = load i32, i32* %l.addr, align 4
  %rem61 = srem i32 %59, 2
  %cmp62 = icmp eq i32 %rem61, 0
  br i1 %cmp62, label %if.then63, label %if.else68

if.then63:                                        ; preds = %if.then60
  %60 = load %struct.block*, %struct.block** @blocks, align 8
  %61 = load i32, i32* %n.addr, align 4
  %idxprom64 = sext i32 %61 to i64
  %arrayidx65 = getelementptr inbounds %struct.block, %struct.block* %60, i64 %idxprom64
  store %struct.block* %arrayidx65, %struct.block** %bp, align 8
  %62 = load %struct.block*, %struct.block** @blocks, align 8
  %63 = load i32, i32* %n1.addr, align 4
  %idxprom66 = sext i32 %63 to i64
  %arrayidx67 = getelementptr inbounds %struct.block, %struct.block* %62, i64 %idxprom66
  store %struct.block* %arrayidx67, %struct.block** %bp1, align 8
  br label %if.end73

if.else68:                                        ; preds = %if.then60
  %64 = load %struct.block*, %struct.block** @blocks, align 8
  %65 = load i32, i32* %n.addr, align 4
  %idxprom69 = sext i32 %65 to i64
  %arrayidx70 = getelementptr inbounds %struct.block, %struct.block* %64, i64 %idxprom69
  store %struct.block* %arrayidx70, %struct.block** %bp1, align 8
  %66 = load %struct.block*, %struct.block** @blocks, align 8
  %67 = load i32, i32* %n1.addr, align 4
  %idxprom71 = sext i32 %67 to i64
  %arrayidx72 = getelementptr inbounds %struct.block, %struct.block* %66, i64 %idxprom71
  store %struct.block* %arrayidx72, %struct.block** %bp, align 8
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.then63
  %68 = load i32, i32* @stencil, align 4
  %cmp74 = icmp eq i32 %68, 7
  br i1 %cmp74, label %if.then75, label %if.else76

if.then75:                                        ; preds = %if.end73
  store i32 1, i32* %is, align 4
  %69 = load i32, i32* @x_block_size, align 4
  store i32 %69, i32* %ie, align 4
  br label %if.end78

if.else76:                                        ; preds = %if.end73
  store i32 0, i32* %is, align 4
  %70 = load i32, i32* @x_block_size, align 4
  %add77 = add nsw i32 %70, 1
  store i32 %add77, i32* %ie, align 4
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then75
  %71 = load i32, i32* %start.addr, align 4
  store i32 %71, i32* %m, align 4
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc130, %if.end78
  %72 = load i32, i32* %m, align 4
  %73 = load i32, i32* %start.addr, align 4
  %74 = load i32, i32* %num_comm.addr, align 4
  %add80 = add nsw i32 %73, %74
  %cmp81 = icmp slt i32 %72, %add80
  br i1 %cmp81, label %for.body82, label %for.end132

for.body82:                                       ; preds = %for.cond79
  %75 = load i32, i32* %is, align 4
  store i32 %75, i32* %i, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc127, %for.body82
  %76 = load i32, i32* %i, align 4
  %77 = load i32, i32* %ie, align 4
  %cmp84 = icmp sle i32 %76, %77
  br i1 %cmp84, label %for.body85, label %for.end129

for.body85:                                       ; preds = %for.cond83
  store i32 1, i32* %k, align 4
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc124, %for.body85
  %78 = load i32, i32* %k, align 4
  %79 = load i32, i32* @z_block_size, align 4
  %cmp87 = icmp sle i32 %78, %79
  br i1 %cmp87, label %for.body88, label %for.end126

for.body88:                                       ; preds = %for.cond86
  %80 = load %struct.block*, %struct.block** %bp, align 8
  %array89 = getelementptr inbounds %struct.block, %struct.block* %80, i32 0, i32 11
  %81 = load double****, double***** %array89, align 8
  %82 = load i32, i32* %m, align 4
  %idxprom90 = sext i32 %82 to i64
  %arrayidx91 = getelementptr inbounds double***, double**** %81, i64 %idxprom90
  %83 = load double***, double**** %arrayidx91, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %84 to i64
  %arrayidx93 = getelementptr inbounds double**, double*** %83, i64 %idxprom92
  %85 = load double**, double*** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds double*, double** %85, i64 1
  %86 = load double*, double** %arrayidx94, align 8
  %87 = load i32, i32* %k, align 4
  %idxprom95 = sext i32 %87 to i64
  %arrayidx96 = getelementptr inbounds double, double* %86, i64 %idxprom95
  %88 = load double, double* %arrayidx96, align 8
  %89 = load %struct.block*, %struct.block** %bp1, align 8
  %array97 = getelementptr inbounds %struct.block, %struct.block* %89, i32 0, i32 11
  %90 = load double****, double***** %array97, align 8
  %91 = load i32, i32* %m, align 4
  %idxprom98 = sext i32 %91 to i64
  %arrayidx99 = getelementptr inbounds double***, double**** %90, i64 %idxprom98
  %92 = load double***, double**** %arrayidx99, align 8
  %93 = load i32, i32* %i, align 4
  %idxprom100 = sext i32 %93 to i64
  %arrayidx101 = getelementptr inbounds double**, double*** %92, i64 %idxprom100
  %94 = load double**, double*** %arrayidx101, align 8
  %95 = load i32, i32* @y_block_size, align 4
  %add102 = add nsw i32 %95, 1
  %idxprom103 = sext i32 %add102 to i64
  %arrayidx104 = getelementptr inbounds double*, double** %94, i64 %idxprom103
  %96 = load double*, double** %arrayidx104, align 8
  %97 = load i32, i32* %k, align 4
  %idxprom105 = sext i32 %97 to i64
  %arrayidx106 = getelementptr inbounds double, double* %96, i64 %idxprom105
  store double %88, double* %arrayidx106, align 8
  %98 = load %struct.block*, %struct.block** %bp1, align 8
  %array107 = getelementptr inbounds %struct.block, %struct.block* %98, i32 0, i32 11
  %99 = load double****, double***** %array107, align 8
  %100 = load i32, i32* %m, align 4
  %idxprom108 = sext i32 %100 to i64
  %arrayidx109 = getelementptr inbounds double***, double**** %99, i64 %idxprom108
  %101 = load double***, double**** %arrayidx109, align 8
  %102 = load i32, i32* %i, align 4
  %idxprom110 = sext i32 %102 to i64
  %arrayidx111 = getelementptr inbounds double**, double*** %101, i64 %idxprom110
  %103 = load double**, double*** %arrayidx111, align 8
  %104 = load i32, i32* @y_block_size, align 4
  %idxprom112 = sext i32 %104 to i64
  %arrayidx113 = getelementptr inbounds double*, double** %103, i64 %idxprom112
  %105 = load double*, double** %arrayidx113, align 8
  %106 = load i32, i32* %k, align 4
  %idxprom114 = sext i32 %106 to i64
  %arrayidx115 = getelementptr inbounds double, double* %105, i64 %idxprom114
  %107 = load double, double* %arrayidx115, align 8
  %108 = load %struct.block*, %struct.block** %bp, align 8
  %array116 = getelementptr inbounds %struct.block, %struct.block* %108, i32 0, i32 11
  %109 = load double****, double***** %array116, align 8
  %110 = load i32, i32* %m, align 4
  %idxprom117 = sext i32 %110 to i64
  %arrayidx118 = getelementptr inbounds double***, double**** %109, i64 %idxprom117
  %111 = load double***, double**** %arrayidx118, align 8
  %112 = load i32, i32* %i, align 4
  %idxprom119 = sext i32 %112 to i64
  %arrayidx120 = getelementptr inbounds double**, double*** %111, i64 %idxprom119
  %113 = load double**, double*** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds double*, double** %113, i64 0
  %114 = load double*, double** %arrayidx121, align 8
  %115 = load i32, i32* %k, align 4
  %idxprom122 = sext i32 %115 to i64
  %arrayidx123 = getelementptr inbounds double, double* %114, i64 %idxprom122
  store double %107, double* %arrayidx123, align 8
  br label %for.inc124

for.inc124:                                       ; preds = %for.body88
  %116 = load i32, i32* %k, align 4
  %inc125 = add nsw i32 %116, 1
  store i32 %inc125, i32* %k, align 4
  br label %for.cond86

for.end126:                                       ; preds = %for.cond86
  br label %for.inc127

for.inc127:                                       ; preds = %for.end126
  %117 = load i32, i32* %i, align 4
  %inc128 = add nsw i32 %117, 1
  store i32 %inc128, i32* %i, align 4
  br label %for.cond83

for.end129:                                       ; preds = %for.cond83
  br label %for.inc130

for.inc130:                                       ; preds = %for.end129
  %118 = load i32, i32* %m, align 4
  %inc131 = add nsw i32 %118, 1
  store i32 %inc131, i32* %m, align 4
  br label %for.cond79

for.end132:                                       ; preds = %for.cond79
  br label %if.end211

if.else133:                                       ; preds = %if.else57
  %119 = load i32, i32* %l.addr, align 4
  %div134 = sdiv i32 %119, 2
  %cmp135 = icmp eq i32 %div134, 2
  br i1 %cmp135, label %if.then136, label %if.end210

if.then136:                                       ; preds = %if.else133
  %120 = load i32, i32* %l.addr, align 4
  %rem137 = srem i32 %120, 2
  %cmp138 = icmp eq i32 %rem137, 0
  br i1 %cmp138, label %if.then139, label %if.else144

if.then139:                                       ; preds = %if.then136
  %121 = load %struct.block*, %struct.block** @blocks, align 8
  %122 = load i32, i32* %n.addr, align 4
  %idxprom140 = sext i32 %122 to i64
  %arrayidx141 = getelementptr inbounds %struct.block, %struct.block* %121, i64 %idxprom140
  store %struct.block* %arrayidx141, %struct.block** %bp, align 8
  %123 = load %struct.block*, %struct.block** @blocks, align 8
  %124 = load i32, i32* %n1.addr, align 4
  %idxprom142 = sext i32 %124 to i64
  %arrayidx143 = getelementptr inbounds %struct.block, %struct.block* %123, i64 %idxprom142
  store %struct.block* %arrayidx143, %struct.block** %bp1, align 8
  br label %if.end149

if.else144:                                       ; preds = %if.then136
  %125 = load %struct.block*, %struct.block** @blocks, align 8
  %126 = load i32, i32* %n.addr, align 4
  %idxprom145 = sext i32 %126 to i64
  %arrayidx146 = getelementptr inbounds %struct.block, %struct.block* %125, i64 %idxprom145
  store %struct.block* %arrayidx146, %struct.block** %bp1, align 8
  %127 = load %struct.block*, %struct.block** @blocks, align 8
  %128 = load i32, i32* %n1.addr, align 4
  %idxprom147 = sext i32 %128 to i64
  %arrayidx148 = getelementptr inbounds %struct.block, %struct.block* %127, i64 %idxprom147
  store %struct.block* %arrayidx148, %struct.block** %bp, align 8
  br label %if.end149

if.end149:                                        ; preds = %if.else144, %if.then139
  %129 = load i32, i32* @stencil, align 4
  %cmp150 = icmp eq i32 %129, 7
  br i1 %cmp150, label %if.then151, label %if.else152

if.then151:                                       ; preds = %if.end149
  store i32 1, i32* %is, align 4
  %130 = load i32, i32* @x_block_size, align 4
  store i32 %130, i32* %ie, align 4
  store i32 1, i32* %js, align 4
  %131 = load i32, i32* @y_block_size, align 4
  store i32 %131, i32* %je, align 4
  br label %if.end155

if.else152:                                       ; preds = %if.end149
  store i32 0, i32* %is, align 4
  %132 = load i32, i32* @x_block_size, align 4
  %add153 = add nsw i32 %132, 1
  store i32 %add153, i32* %ie, align 4
  store i32 0, i32* %js, align 4
  %133 = load i32, i32* @y_block_size, align 4
  %add154 = add nsw i32 %133, 1
  store i32 %add154, i32* %je, align 4
  br label %if.end155

if.end155:                                        ; preds = %if.else152, %if.then151
  %134 = load i32, i32* %start.addr, align 4
  store i32 %134, i32* %m, align 4
  br label %for.cond156

for.cond156:                                      ; preds = %for.inc207, %if.end155
  %135 = load i32, i32* %m, align 4
  %136 = load i32, i32* %start.addr, align 4
  %137 = load i32, i32* %num_comm.addr, align 4
  %add157 = add nsw i32 %136, %137
  %cmp158 = icmp slt i32 %135, %add157
  br i1 %cmp158, label %for.body159, label %for.end209

for.body159:                                      ; preds = %for.cond156
  %138 = load i32, i32* %is, align 4
  store i32 %138, i32* %i, align 4
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc204, %for.body159
  %139 = load i32, i32* %i, align 4
  %140 = load i32, i32* %ie, align 4
  %cmp161 = icmp sle i32 %139, %140
  br i1 %cmp161, label %for.body162, label %for.end206

for.body162:                                      ; preds = %for.cond160
  %141 = load i32, i32* %js, align 4
  store i32 %141, i32* %j, align 4
  br label %for.cond163

for.cond163:                                      ; preds = %for.inc201, %for.body162
  %142 = load i32, i32* %j, align 4
  %143 = load i32, i32* %je, align 4
  %cmp164 = icmp sle i32 %142, %143
  br i1 %cmp164, label %for.body165, label %for.end203

for.body165:                                      ; preds = %for.cond163
  %144 = load %struct.block*, %struct.block** %bp, align 8
  %array166 = getelementptr inbounds %struct.block, %struct.block* %144, i32 0, i32 11
  %145 = load double****, double***** %array166, align 8
  %146 = load i32, i32* %m, align 4
  %idxprom167 = sext i32 %146 to i64
  %arrayidx168 = getelementptr inbounds double***, double**** %145, i64 %idxprom167
  %147 = load double***, double**** %arrayidx168, align 8
  %148 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %148 to i64
  %arrayidx170 = getelementptr inbounds double**, double*** %147, i64 %idxprom169
  %149 = load double**, double*** %arrayidx170, align 8
  %150 = load i32, i32* %j, align 4
  %idxprom171 = sext i32 %150 to i64
  %arrayidx172 = getelementptr inbounds double*, double** %149, i64 %idxprom171
  %151 = load double*, double** %arrayidx172, align 8
  %arrayidx173 = getelementptr inbounds double, double* %151, i64 1
  %152 = load double, double* %arrayidx173, align 8
  %153 = load %struct.block*, %struct.block** %bp1, align 8
  %array174 = getelementptr inbounds %struct.block, %struct.block* %153, i32 0, i32 11
  %154 = load double****, double***** %array174, align 8
  %155 = load i32, i32* %m, align 4
  %idxprom175 = sext i32 %155 to i64
  %arrayidx176 = getelementptr inbounds double***, double**** %154, i64 %idxprom175
  %156 = load double***, double**** %arrayidx176, align 8
  %157 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %157 to i64
  %arrayidx178 = getelementptr inbounds double**, double*** %156, i64 %idxprom177
  %158 = load double**, double*** %arrayidx178, align 8
  %159 = load i32, i32* %j, align 4
  %idxprom179 = sext i32 %159 to i64
  %arrayidx180 = getelementptr inbounds double*, double** %158, i64 %idxprom179
  %160 = load double*, double** %arrayidx180, align 8
  %161 = load i32, i32* @z_block_size, align 4
  %add181 = add nsw i32 %161, 1
  %idxprom182 = sext i32 %add181 to i64
  %arrayidx183 = getelementptr inbounds double, double* %160, i64 %idxprom182
  store double %152, double* %arrayidx183, align 8
  %162 = load %struct.block*, %struct.block** %bp1, align 8
  %array184 = getelementptr inbounds %struct.block, %struct.block* %162, i32 0, i32 11
  %163 = load double****, double***** %array184, align 8
  %164 = load i32, i32* %m, align 4
  %idxprom185 = sext i32 %164 to i64
  %arrayidx186 = getelementptr inbounds double***, double**** %163, i64 %idxprom185
  %165 = load double***, double**** %arrayidx186, align 8
  %166 = load i32, i32* %i, align 4
  %idxprom187 = sext i32 %166 to i64
  %arrayidx188 = getelementptr inbounds double**, double*** %165, i64 %idxprom187
  %167 = load double**, double*** %arrayidx188, align 8
  %168 = load i32, i32* %j, align 4
  %idxprom189 = sext i32 %168 to i64
  %arrayidx190 = getelementptr inbounds double*, double** %167, i64 %idxprom189
  %169 = load double*, double** %arrayidx190, align 8
  %170 = load i32, i32* @z_block_size, align 4
  %idxprom191 = sext i32 %170 to i64
  %arrayidx192 = getelementptr inbounds double, double* %169, i64 %idxprom191
  %171 = load double, double* %arrayidx192, align 8
  %172 = load %struct.block*, %struct.block** %bp, align 8
  %array193 = getelementptr inbounds %struct.block, %struct.block* %172, i32 0, i32 11
  %173 = load double****, double***** %array193, align 8
  %174 = load i32, i32* %m, align 4
  %idxprom194 = sext i32 %174 to i64
  %arrayidx195 = getelementptr inbounds double***, double**** %173, i64 %idxprom194
  %175 = load double***, double**** %arrayidx195, align 8
  %176 = load i32, i32* %i, align 4
  %idxprom196 = sext i32 %176 to i64
  %arrayidx197 = getelementptr inbounds double**, double*** %175, i64 %idxprom196
  %177 = load double**, double*** %arrayidx197, align 8
  %178 = load i32, i32* %j, align 4
  %idxprom198 = sext i32 %178 to i64
  %arrayidx199 = getelementptr inbounds double*, double** %177, i64 %idxprom198
  %179 = load double*, double** %arrayidx199, align 8
  %arrayidx200 = getelementptr inbounds double, double* %179, i64 0
  store double %171, double* %arrayidx200, align 8
  br label %for.inc201

for.inc201:                                       ; preds = %for.body165
  %180 = load i32, i32* %j, align 4
  %inc202 = add nsw i32 %180, 1
  store i32 %inc202, i32* %j, align 4
  br label %for.cond163

for.end203:                                       ; preds = %for.cond163
  br label %for.inc204

for.inc204:                                       ; preds = %for.end203
  %181 = load i32, i32* %i, align 4
  %inc205 = add nsw i32 %181, 1
  store i32 %inc205, i32* %i, align 4
  br label %for.cond160

for.end206:                                       ; preds = %for.cond160
  br label %for.inc207

for.inc207:                                       ; preds = %for.end206
  %182 = load i32, i32* %m, align 4
  %inc208 = add nsw i32 %182, 1
  store i32 %inc208, i32* %m, align 4
  br label %for.cond156

for.end209:                                       ; preds = %for.cond156
  br label %if.end210

if.end210:                                        ; preds = %for.end209, %if.else133
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %for.end132
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %for.end56
  br label %if.end435

if.else213:                                       ; preds = %entry
  %183 = load i32, i32* %l.addr, align 4
  %div214 = sdiv i32 %183, 2
  %cmp215 = icmp eq i32 %div214, 0
  br i1 %cmp215, label %if.then216, label %if.else286

if.then216:                                       ; preds = %if.else213
  %184 = load i32, i32* %l.addr, align 4
  %rem217 = srem i32 %184, 2
  %cmp218 = icmp eq i32 %rem217, 0
  br i1 %cmp218, label %if.then219, label %if.else224

if.then219:                                       ; preds = %if.then216
  %185 = load %struct.block*, %struct.block** @blocks, align 8
  %186 = load i32, i32* %n.addr, align 4
  %idxprom220 = sext i32 %186 to i64
  %arrayidx221 = getelementptr inbounds %struct.block, %struct.block* %185, i64 %idxprom220
  store %struct.block* %arrayidx221, %struct.block** %bp, align 8
  %187 = load %struct.block*, %struct.block** @blocks, align 8
  %188 = load i32, i32* %n1.addr, align 4
  %idxprom222 = sext i32 %188 to i64
  %arrayidx223 = getelementptr inbounds %struct.block, %struct.block* %187, i64 %idxprom222
  store %struct.block* %arrayidx223, %struct.block** %bp1, align 8
  br label %if.end229

if.else224:                                       ; preds = %if.then216
  %189 = load %struct.block*, %struct.block** @blocks, align 8
  %190 = load i32, i32* %n.addr, align 4
  %idxprom225 = sext i32 %190 to i64
  %arrayidx226 = getelementptr inbounds %struct.block, %struct.block* %189, i64 %idxprom225
  store %struct.block* %arrayidx226, %struct.block** %bp1, align 8
  %191 = load %struct.block*, %struct.block** @blocks, align 8
  %192 = load i32, i32* %n1.addr, align 4
  %idxprom227 = sext i32 %192 to i64
  %arrayidx228 = getelementptr inbounds %struct.block, %struct.block* %191, i64 %idxprom227
  store %struct.block* %arrayidx228, %struct.block** %bp, align 8
  br label %if.end229

if.end229:                                        ; preds = %if.else224, %if.then219
  %193 = load i32, i32* %start.addr, align 4
  store i32 %193, i32* %m, align 4
  br label %for.cond230

for.cond230:                                      ; preds = %for.inc283, %if.end229
  %194 = load i32, i32* %m, align 4
  %195 = load i32, i32* %start.addr, align 4
  %196 = load i32, i32* %num_comm.addr, align 4
  %add231 = add nsw i32 %195, %196
  %cmp232 = icmp slt i32 %194, %add231
  br i1 %cmp232, label %for.body233, label %for.end285

for.body233:                                      ; preds = %for.cond230
  store i32 0, i32* %j, align 4
  br label %for.cond234

for.cond234:                                      ; preds = %for.inc280, %for.body233
  %197 = load i32, i32* %j, align 4
  %198 = load i32, i32* @y_block_size, align 4
  %add235 = add nsw i32 %198, 1
  %cmp236 = icmp sle i32 %197, %add235
  br i1 %cmp236, label %for.body237, label %for.end282

for.body237:                                      ; preds = %for.cond234
  store i32 0, i32* %k, align 4
  br label %for.cond238

for.cond238:                                      ; preds = %for.inc277, %for.body237
  %199 = load i32, i32* %k, align 4
  %200 = load i32, i32* @z_block_size, align 4
  %add239 = add nsw i32 %200, 1
  %cmp240 = icmp sle i32 %199, %add239
  br i1 %cmp240, label %for.body241, label %for.end279

for.body241:                                      ; preds = %for.cond238
  %201 = load %struct.block*, %struct.block** %bp, align 8
  %array242 = getelementptr inbounds %struct.block, %struct.block* %201, i32 0, i32 11
  %202 = load double****, double***** %array242, align 8
  %203 = load i32, i32* %m, align 4
  %idxprom243 = sext i32 %203 to i64
  %arrayidx244 = getelementptr inbounds double***, double**** %202, i64 %idxprom243
  %204 = load double***, double**** %arrayidx244, align 8
  %arrayidx245 = getelementptr inbounds double**, double*** %204, i64 1
  %205 = load double**, double*** %arrayidx245, align 8
  %206 = load i32, i32* %j, align 4
  %idxprom246 = sext i32 %206 to i64
  %arrayidx247 = getelementptr inbounds double*, double** %205, i64 %idxprom246
  %207 = load double*, double** %arrayidx247, align 8
  %208 = load i32, i32* %k, align 4
  %idxprom248 = sext i32 %208 to i64
  %arrayidx249 = getelementptr inbounds double, double* %207, i64 %idxprom248
  %209 = load double, double* %arrayidx249, align 8
  %210 = load %struct.block*, %struct.block** %bp1, align 8
  %array250 = getelementptr inbounds %struct.block, %struct.block* %210, i32 0, i32 11
  %211 = load double****, double***** %array250, align 8
  %212 = load i32, i32* %m, align 4
  %idxprom251 = sext i32 %212 to i64
  %arrayidx252 = getelementptr inbounds double***, double**** %211, i64 %idxprom251
  %213 = load double***, double**** %arrayidx252, align 8
  %214 = load i32, i32* @x_block_size, align 4
  %add253 = add nsw i32 %214, 1
  %idxprom254 = sext i32 %add253 to i64
  %arrayidx255 = getelementptr inbounds double**, double*** %213, i64 %idxprom254
  %215 = load double**, double*** %arrayidx255, align 8
  %216 = load i32, i32* %j, align 4
  %idxprom256 = sext i32 %216 to i64
  %arrayidx257 = getelementptr inbounds double*, double** %215, i64 %idxprom256
  %217 = load double*, double** %arrayidx257, align 8
  %218 = load i32, i32* %k, align 4
  %idxprom258 = sext i32 %218 to i64
  %arrayidx259 = getelementptr inbounds double, double* %217, i64 %idxprom258
  store double %209, double* %arrayidx259, align 8
  %219 = load %struct.block*, %struct.block** %bp1, align 8
  %array260 = getelementptr inbounds %struct.block, %struct.block* %219, i32 0, i32 11
  %220 = load double****, double***** %array260, align 8
  %221 = load i32, i32* %m, align 4
  %idxprom261 = sext i32 %221 to i64
  %arrayidx262 = getelementptr inbounds double***, double**** %220, i64 %idxprom261
  %222 = load double***, double**** %arrayidx262, align 8
  %223 = load i32, i32* @x_block_size, align 4
  %idxprom263 = sext i32 %223 to i64
  %arrayidx264 = getelementptr inbounds double**, double*** %222, i64 %idxprom263
  %224 = load double**, double*** %arrayidx264, align 8
  %225 = load i32, i32* %j, align 4
  %idxprom265 = sext i32 %225 to i64
  %arrayidx266 = getelementptr inbounds double*, double** %224, i64 %idxprom265
  %226 = load double*, double** %arrayidx266, align 8
  %227 = load i32, i32* %k, align 4
  %idxprom267 = sext i32 %227 to i64
  %arrayidx268 = getelementptr inbounds double, double* %226, i64 %idxprom267
  %228 = load double, double* %arrayidx268, align 8
  %229 = load %struct.block*, %struct.block** %bp, align 8
  %array269 = getelementptr inbounds %struct.block, %struct.block* %229, i32 0, i32 11
  %230 = load double****, double***** %array269, align 8
  %231 = load i32, i32* %m, align 4
  %idxprom270 = sext i32 %231 to i64
  %arrayidx271 = getelementptr inbounds double***, double**** %230, i64 %idxprom270
  %232 = load double***, double**** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds double**, double*** %232, i64 0
  %233 = load double**, double*** %arrayidx272, align 8
  %234 = load i32, i32* %j, align 4
  %idxprom273 = sext i32 %234 to i64
  %arrayidx274 = getelementptr inbounds double*, double** %233, i64 %idxprom273
  %235 = load double*, double** %arrayidx274, align 8
  %236 = load i32, i32* %k, align 4
  %idxprom275 = sext i32 %236 to i64
  %arrayidx276 = getelementptr inbounds double, double* %235, i64 %idxprom275
  store double %228, double* %arrayidx276, align 8
  br label %for.inc277

for.inc277:                                       ; preds = %for.body241
  %237 = load i32, i32* %k, align 4
  %inc278 = add nsw i32 %237, 1
  store i32 %inc278, i32* %k, align 4
  br label %for.cond238

for.end279:                                       ; preds = %for.cond238
  br label %for.inc280

for.inc280:                                       ; preds = %for.end279
  %238 = load i32, i32* %j, align 4
  %inc281 = add nsw i32 %238, 1
  store i32 %inc281, i32* %j, align 4
  br label %for.cond234

for.end282:                                       ; preds = %for.cond234
  br label %for.inc283

for.inc283:                                       ; preds = %for.end282
  %239 = load i32, i32* %m, align 4
  %inc284 = add nsw i32 %239, 1
  store i32 %inc284, i32* %m, align 4
  br label %for.cond230

for.end285:                                       ; preds = %for.cond230
  br label %if.end434

if.else286:                                       ; preds = %if.else213
  %240 = load i32, i32* %l.addr, align 4
  %div287 = sdiv i32 %240, 2
  %cmp288 = icmp eq i32 %div287, 1
  br i1 %cmp288, label %if.then289, label %if.else359

if.then289:                                       ; preds = %if.else286
  %241 = load i32, i32* %l.addr, align 4
  %rem290 = srem i32 %241, 2
  %cmp291 = icmp eq i32 %rem290, 0
  br i1 %cmp291, label %if.then292, label %if.else297

if.then292:                                       ; preds = %if.then289
  %242 = load %struct.block*, %struct.block** @blocks, align 8
  %243 = load i32, i32* %n.addr, align 4
  %idxprom293 = sext i32 %243 to i64
  %arrayidx294 = getelementptr inbounds %struct.block, %struct.block* %242, i64 %idxprom293
  store %struct.block* %arrayidx294, %struct.block** %bp, align 8
  %244 = load %struct.block*, %struct.block** @blocks, align 8
  %245 = load i32, i32* %n1.addr, align 4
  %idxprom295 = sext i32 %245 to i64
  %arrayidx296 = getelementptr inbounds %struct.block, %struct.block* %244, i64 %idxprom295
  store %struct.block* %arrayidx296, %struct.block** %bp1, align 8
  br label %if.end302

if.else297:                                       ; preds = %if.then289
  %246 = load %struct.block*, %struct.block** @blocks, align 8
  %247 = load i32, i32* %n.addr, align 4
  %idxprom298 = sext i32 %247 to i64
  %arrayidx299 = getelementptr inbounds %struct.block, %struct.block* %246, i64 %idxprom298
  store %struct.block* %arrayidx299, %struct.block** %bp1, align 8
  %248 = load %struct.block*, %struct.block** @blocks, align 8
  %249 = load i32, i32* %n1.addr, align 4
  %idxprom300 = sext i32 %249 to i64
  %arrayidx301 = getelementptr inbounds %struct.block, %struct.block* %248, i64 %idxprom300
  store %struct.block* %arrayidx301, %struct.block** %bp, align 8
  br label %if.end302

if.end302:                                        ; preds = %if.else297, %if.then292
  %250 = load i32, i32* %start.addr, align 4
  store i32 %250, i32* %m, align 4
  br label %for.cond303

for.cond303:                                      ; preds = %for.inc356, %if.end302
  %251 = load i32, i32* %m, align 4
  %252 = load i32, i32* %start.addr, align 4
  %253 = load i32, i32* %num_comm.addr, align 4
  %add304 = add nsw i32 %252, %253
  %cmp305 = icmp slt i32 %251, %add304
  br i1 %cmp305, label %for.body306, label %for.end358

for.body306:                                      ; preds = %for.cond303
  store i32 0, i32* %i, align 4
  br label %for.cond307

for.cond307:                                      ; preds = %for.inc353, %for.body306
  %254 = load i32, i32* %i, align 4
  %255 = load i32, i32* @x_block_size, align 4
  %add308 = add nsw i32 %255, 1
  %cmp309 = icmp sle i32 %254, %add308
  br i1 %cmp309, label %for.body310, label %for.end355

for.body310:                                      ; preds = %for.cond307
  store i32 0, i32* %k, align 4
  br label %for.cond311

for.cond311:                                      ; preds = %for.inc350, %for.body310
  %256 = load i32, i32* %k, align 4
  %257 = load i32, i32* @z_block_size, align 4
  %add312 = add nsw i32 %257, 1
  %cmp313 = icmp sle i32 %256, %add312
  br i1 %cmp313, label %for.body314, label %for.end352

for.body314:                                      ; preds = %for.cond311
  %258 = load %struct.block*, %struct.block** %bp, align 8
  %array315 = getelementptr inbounds %struct.block, %struct.block* %258, i32 0, i32 11
  %259 = load double****, double***** %array315, align 8
  %260 = load i32, i32* %m, align 4
  %idxprom316 = sext i32 %260 to i64
  %arrayidx317 = getelementptr inbounds double***, double**** %259, i64 %idxprom316
  %261 = load double***, double**** %arrayidx317, align 8
  %262 = load i32, i32* %i, align 4
  %idxprom318 = sext i32 %262 to i64
  %arrayidx319 = getelementptr inbounds double**, double*** %261, i64 %idxprom318
  %263 = load double**, double*** %arrayidx319, align 8
  %arrayidx320 = getelementptr inbounds double*, double** %263, i64 1
  %264 = load double*, double** %arrayidx320, align 8
  %265 = load i32, i32* %k, align 4
  %idxprom321 = sext i32 %265 to i64
  %arrayidx322 = getelementptr inbounds double, double* %264, i64 %idxprom321
  %266 = load double, double* %arrayidx322, align 8
  %267 = load %struct.block*, %struct.block** %bp1, align 8
  %array323 = getelementptr inbounds %struct.block, %struct.block* %267, i32 0, i32 11
  %268 = load double****, double***** %array323, align 8
  %269 = load i32, i32* %m, align 4
  %idxprom324 = sext i32 %269 to i64
  %arrayidx325 = getelementptr inbounds double***, double**** %268, i64 %idxprom324
  %270 = load double***, double**** %arrayidx325, align 8
  %271 = load i32, i32* %i, align 4
  %idxprom326 = sext i32 %271 to i64
  %arrayidx327 = getelementptr inbounds double**, double*** %270, i64 %idxprom326
  %272 = load double**, double*** %arrayidx327, align 8
  %273 = load i32, i32* @y_block_size, align 4
  %add328 = add nsw i32 %273, 1
  %idxprom329 = sext i32 %add328 to i64
  %arrayidx330 = getelementptr inbounds double*, double** %272, i64 %idxprom329
  %274 = load double*, double** %arrayidx330, align 8
  %275 = load i32, i32* %k, align 4
  %idxprom331 = sext i32 %275 to i64
  %arrayidx332 = getelementptr inbounds double, double* %274, i64 %idxprom331
  store double %266, double* %arrayidx332, align 8
  %276 = load %struct.block*, %struct.block** %bp1, align 8
  %array333 = getelementptr inbounds %struct.block, %struct.block* %276, i32 0, i32 11
  %277 = load double****, double***** %array333, align 8
  %278 = load i32, i32* %m, align 4
  %idxprom334 = sext i32 %278 to i64
  %arrayidx335 = getelementptr inbounds double***, double**** %277, i64 %idxprom334
  %279 = load double***, double**** %arrayidx335, align 8
  %280 = load i32, i32* %i, align 4
  %idxprom336 = sext i32 %280 to i64
  %arrayidx337 = getelementptr inbounds double**, double*** %279, i64 %idxprom336
  %281 = load double**, double*** %arrayidx337, align 8
  %282 = load i32, i32* @y_block_size, align 4
  %idxprom338 = sext i32 %282 to i64
  %arrayidx339 = getelementptr inbounds double*, double** %281, i64 %idxprom338
  %283 = load double*, double** %arrayidx339, align 8
  %284 = load i32, i32* %k, align 4
  %idxprom340 = sext i32 %284 to i64
  %arrayidx341 = getelementptr inbounds double, double* %283, i64 %idxprom340
  %285 = load double, double* %arrayidx341, align 8
  %286 = load %struct.block*, %struct.block** %bp, align 8
  %array342 = getelementptr inbounds %struct.block, %struct.block* %286, i32 0, i32 11
  %287 = load double****, double***** %array342, align 8
  %288 = load i32, i32* %m, align 4
  %idxprom343 = sext i32 %288 to i64
  %arrayidx344 = getelementptr inbounds double***, double**** %287, i64 %idxprom343
  %289 = load double***, double**** %arrayidx344, align 8
  %290 = load i32, i32* %i, align 4
  %idxprom345 = sext i32 %290 to i64
  %arrayidx346 = getelementptr inbounds double**, double*** %289, i64 %idxprom345
  %291 = load double**, double*** %arrayidx346, align 8
  %arrayidx347 = getelementptr inbounds double*, double** %291, i64 0
  %292 = load double*, double** %arrayidx347, align 8
  %293 = load i32, i32* %k, align 4
  %idxprom348 = sext i32 %293 to i64
  %arrayidx349 = getelementptr inbounds double, double* %292, i64 %idxprom348
  store double %285, double* %arrayidx349, align 8
  br label %for.inc350

for.inc350:                                       ; preds = %for.body314
  %294 = load i32, i32* %k, align 4
  %inc351 = add nsw i32 %294, 1
  store i32 %inc351, i32* %k, align 4
  br label %for.cond311

for.end352:                                       ; preds = %for.cond311
  br label %for.inc353

for.inc353:                                       ; preds = %for.end352
  %295 = load i32, i32* %i, align 4
  %inc354 = add nsw i32 %295, 1
  store i32 %inc354, i32* %i, align 4
  br label %for.cond307

for.end355:                                       ; preds = %for.cond307
  br label %for.inc356

for.inc356:                                       ; preds = %for.end355
  %296 = load i32, i32* %m, align 4
  %inc357 = add nsw i32 %296, 1
  store i32 %inc357, i32* %m, align 4
  br label %for.cond303

for.end358:                                       ; preds = %for.cond303
  br label %if.end433

if.else359:                                       ; preds = %if.else286
  %297 = load i32, i32* %l.addr, align 4
  %div360 = sdiv i32 %297, 2
  %cmp361 = icmp eq i32 %div360, 2
  br i1 %cmp361, label %if.then362, label %if.end432

if.then362:                                       ; preds = %if.else359
  %298 = load i32, i32* %l.addr, align 4
  %rem363 = srem i32 %298, 2
  %cmp364 = icmp eq i32 %rem363, 0
  br i1 %cmp364, label %if.then365, label %if.else370

if.then365:                                       ; preds = %if.then362
  %299 = load %struct.block*, %struct.block** @blocks, align 8
  %300 = load i32, i32* %n.addr, align 4
  %idxprom366 = sext i32 %300 to i64
  %arrayidx367 = getelementptr inbounds %struct.block, %struct.block* %299, i64 %idxprom366
  store %struct.block* %arrayidx367, %struct.block** %bp, align 8
  %301 = load %struct.block*, %struct.block** @blocks, align 8
  %302 = load i32, i32* %n1.addr, align 4
  %idxprom368 = sext i32 %302 to i64
  %arrayidx369 = getelementptr inbounds %struct.block, %struct.block* %301, i64 %idxprom368
  store %struct.block* %arrayidx369, %struct.block** %bp1, align 8
  br label %if.end375

if.else370:                                       ; preds = %if.then362
  %303 = load %struct.block*, %struct.block** @blocks, align 8
  %304 = load i32, i32* %n.addr, align 4
  %idxprom371 = sext i32 %304 to i64
  %arrayidx372 = getelementptr inbounds %struct.block, %struct.block* %303, i64 %idxprom371
  store %struct.block* %arrayidx372, %struct.block** %bp1, align 8
  %305 = load %struct.block*, %struct.block** @blocks, align 8
  %306 = load i32, i32* %n1.addr, align 4
  %idxprom373 = sext i32 %306 to i64
  %arrayidx374 = getelementptr inbounds %struct.block, %struct.block* %305, i64 %idxprom373
  store %struct.block* %arrayidx374, %struct.block** %bp, align 8
  br label %if.end375

if.end375:                                        ; preds = %if.else370, %if.then365
  %307 = load i32, i32* %start.addr, align 4
  store i32 %307, i32* %m, align 4
  br label %for.cond376

for.cond376:                                      ; preds = %for.inc429, %if.end375
  %308 = load i32, i32* %m, align 4
  %309 = load i32, i32* %start.addr, align 4
  %310 = load i32, i32* %num_comm.addr, align 4
  %add377 = add nsw i32 %309, %310
  %cmp378 = icmp slt i32 %308, %add377
  br i1 %cmp378, label %for.body379, label %for.end431

for.body379:                                      ; preds = %for.cond376
  store i32 0, i32* %i, align 4
  br label %for.cond380

for.cond380:                                      ; preds = %for.inc426, %for.body379
  %311 = load i32, i32* %i, align 4
  %312 = load i32, i32* @x_block_size, align 4
  %add381 = add nsw i32 %312, 1
  %cmp382 = icmp sle i32 %311, %add381
  br i1 %cmp382, label %for.body383, label %for.end428

for.body383:                                      ; preds = %for.cond380
  store i32 0, i32* %j, align 4
  br label %for.cond384

for.cond384:                                      ; preds = %for.inc423, %for.body383
  %313 = load i32, i32* %j, align 4
  %314 = load i32, i32* @y_block_size, align 4
  %add385 = add nsw i32 %314, 1
  %cmp386 = icmp sle i32 %313, %add385
  br i1 %cmp386, label %for.body387, label %for.end425

for.body387:                                      ; preds = %for.cond384
  %315 = load %struct.block*, %struct.block** %bp, align 8
  %array388 = getelementptr inbounds %struct.block, %struct.block* %315, i32 0, i32 11
  %316 = load double****, double***** %array388, align 8
  %317 = load i32, i32* %m, align 4
  %idxprom389 = sext i32 %317 to i64
  %arrayidx390 = getelementptr inbounds double***, double**** %316, i64 %idxprom389
  %318 = load double***, double**** %arrayidx390, align 8
  %319 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %319 to i64
  %arrayidx392 = getelementptr inbounds double**, double*** %318, i64 %idxprom391
  %320 = load double**, double*** %arrayidx392, align 8
  %321 = load i32, i32* %j, align 4
  %idxprom393 = sext i32 %321 to i64
  %arrayidx394 = getelementptr inbounds double*, double** %320, i64 %idxprom393
  %322 = load double*, double** %arrayidx394, align 8
  %arrayidx395 = getelementptr inbounds double, double* %322, i64 1
  %323 = load double, double* %arrayidx395, align 8
  %324 = load %struct.block*, %struct.block** %bp1, align 8
  %array396 = getelementptr inbounds %struct.block, %struct.block* %324, i32 0, i32 11
  %325 = load double****, double***** %array396, align 8
  %326 = load i32, i32* %m, align 4
  %idxprom397 = sext i32 %326 to i64
  %arrayidx398 = getelementptr inbounds double***, double**** %325, i64 %idxprom397
  %327 = load double***, double**** %arrayidx398, align 8
  %328 = load i32, i32* %i, align 4
  %idxprom399 = sext i32 %328 to i64
  %arrayidx400 = getelementptr inbounds double**, double*** %327, i64 %idxprom399
  %329 = load double**, double*** %arrayidx400, align 8
  %330 = load i32, i32* %j, align 4
  %idxprom401 = sext i32 %330 to i64
  %arrayidx402 = getelementptr inbounds double*, double** %329, i64 %idxprom401
  %331 = load double*, double** %arrayidx402, align 8
  %332 = load i32, i32* @z_block_size, align 4
  %add403 = add nsw i32 %332, 1
  %idxprom404 = sext i32 %add403 to i64
  %arrayidx405 = getelementptr inbounds double, double* %331, i64 %idxprom404
  store double %323, double* %arrayidx405, align 8
  %333 = load %struct.block*, %struct.block** %bp1, align 8
  %array406 = getelementptr inbounds %struct.block, %struct.block* %333, i32 0, i32 11
  %334 = load double****, double***** %array406, align 8
  %335 = load i32, i32* %m, align 4
  %idxprom407 = sext i32 %335 to i64
  %arrayidx408 = getelementptr inbounds double***, double**** %334, i64 %idxprom407
  %336 = load double***, double**** %arrayidx408, align 8
  %337 = load i32, i32* %i, align 4
  %idxprom409 = sext i32 %337 to i64
  %arrayidx410 = getelementptr inbounds double**, double*** %336, i64 %idxprom409
  %338 = load double**, double*** %arrayidx410, align 8
  %339 = load i32, i32* %j, align 4
  %idxprom411 = sext i32 %339 to i64
  %arrayidx412 = getelementptr inbounds double*, double** %338, i64 %idxprom411
  %340 = load double*, double** %arrayidx412, align 8
  %341 = load i32, i32* @z_block_size, align 4
  %idxprom413 = sext i32 %341 to i64
  %arrayidx414 = getelementptr inbounds double, double* %340, i64 %idxprom413
  %342 = load double, double* %arrayidx414, align 8
  %343 = load %struct.block*, %struct.block** %bp, align 8
  %array415 = getelementptr inbounds %struct.block, %struct.block* %343, i32 0, i32 11
  %344 = load double****, double***** %array415, align 8
  %345 = load i32, i32* %m, align 4
  %idxprom416 = sext i32 %345 to i64
  %arrayidx417 = getelementptr inbounds double***, double**** %344, i64 %idxprom416
  %346 = load double***, double**** %arrayidx417, align 8
  %347 = load i32, i32* %i, align 4
  %idxprom418 = sext i32 %347 to i64
  %arrayidx419 = getelementptr inbounds double**, double*** %346, i64 %idxprom418
  %348 = load double**, double*** %arrayidx419, align 8
  %349 = load i32, i32* %j, align 4
  %idxprom420 = sext i32 %349 to i64
  %arrayidx421 = getelementptr inbounds double*, double** %348, i64 %idxprom420
  %350 = load double*, double** %arrayidx421, align 8
  %arrayidx422 = getelementptr inbounds double, double* %350, i64 0
  store double %342, double* %arrayidx422, align 8
  br label %for.inc423

for.inc423:                                       ; preds = %for.body387
  %351 = load i32, i32* %j, align 4
  %inc424 = add nsw i32 %351, 1
  store i32 %inc424, i32* %j, align 4
  br label %for.cond384

for.end425:                                       ; preds = %for.cond384
  br label %for.inc426

for.inc426:                                       ; preds = %for.end425
  %352 = load i32, i32* %i, align 4
  %inc427 = add nsw i32 %352, 1
  store i32 %inc427, i32* %i, align 4
  br label %for.cond380

for.end428:                                       ; preds = %for.cond380
  br label %for.inc429

for.inc429:                                       ; preds = %for.end428
  %353 = load i32, i32* %m, align 4
  %inc430 = add nsw i32 %353, 1
  store i32 %inc430, i32* %m, align 4
  br label %for.cond376

for.end431:                                       ; preds = %for.cond376
  br label %if.end432

if.end432:                                        ; preds = %for.end431, %if.else359
  br label %if.end433

if.end433:                                        ; preds = %if.end432, %for.end358
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %for.end285
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %if.end212
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @on_proc_comm_diff(i32 %n, i32 %n1, i32 %l, i32 %iq, i32 %jq, i32 %start, i32 %num_comm) #0 {
entry:
  %n.addr = alloca i32, align 4
  %n1.addr = alloca i32, align 4
  %l.addr = alloca i32, align 4
  %iq.addr = alloca i32, align 4
  %jq.addr = alloca i32, align 4
  %start.addr = alloca i32, align 4
  %num_comm.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %i0 = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %i3 = alloca i32, align 4
  %j0 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %j3 = alloca i32, align 4
  %k0 = alloca i32, align 4
  %k1 = alloca i32, align 4
  %k2 = alloca i32, align 4
  %k3 = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %bp1 = alloca %struct.block*, align 8
  store i32 %n, i32* %n.addr, align 4
  store i32 %n1, i32* %n1.addr, align 4
  store i32 %l, i32* %l.addr, align 4
  store i32 %iq, i32* %iq.addr, align 4
  store i32 %jq, i32* %jq.addr, align 4
  store i32 %start, i32* %start.addr, align 4
  store i32 %num_comm, i32* %num_comm.addr, align 4
  %0 = load %struct.block*, %struct.block** @blocks, align 8
  %1 = load i32, i32* %n.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds %struct.block, %struct.block* %0, i64 %idxprom
  store %struct.block* %arrayidx, %struct.block** %bp, align 8
  %2 = load %struct.block*, %struct.block** @blocks, align 8
  %3 = load i32, i32* %n1.addr, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds %struct.block, %struct.block* %2, i64 %idxprom1
  store %struct.block* %arrayidx2, %struct.block** %bp1, align 8
  %4 = load i32, i32* @code, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.else451, label %if.then

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %l.addr, align 4
  %div = sdiv i32 %5, 2
  %cmp = icmp eq i32 %div, 0
  br i1 %cmp, label %if.then3, label %if.else142

if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %l.addr, align 4
  %cmp4 = icmp eq i32 %6, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then3
  store i32 0, i32* %i0, align 4
  store i32 1, i32* %i1, align 4
  %7 = load i32, i32* @x_block_size, align 4
  %add = add nsw i32 %7, 1
  store i32 %add, i32* %i2, align 4
  %8 = load i32, i32* @x_block_size, align 4
  store i32 %8, i32* %i3, align 4
  br label %if.end

if.else:                                          ; preds = %if.then3
  %9 = load i32, i32* @x_block_size, align 4
  %add6 = add nsw i32 %9, 1
  store i32 %add6, i32* %i0, align 4
  %10 = load i32, i32* @x_block_size, align 4
  store i32 %10, i32* %i1, align 4
  store i32 0, i32* %i2, align 4
  store i32 1, i32* %i3, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %11 = load i32, i32* %jq.addr, align 4
  %12 = load i32, i32* @y_block_half, align 4
  %mul = mul nsw i32 %11, %12
  store i32 %mul, i32* %j1, align 4
  %13 = load i32, i32* %iq.addr, align 4
  %14 = load i32, i32* @z_block_half, align 4
  %mul7 = mul nsw i32 %13, %14
  store i32 %mul7, i32* %k1, align 4
  %15 = load i32, i32* %start.addr, align 4
  store i32 %15, i32* %m, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc139, %if.end
  %16 = load i32, i32* %m, align 4
  %17 = load i32, i32* %start.addr, align 4
  %18 = load i32, i32* %num_comm.addr, align 4
  %add8 = add nsw i32 %17, %18
  %cmp9 = icmp slt i32 %16, %add8
  br i1 %cmp9, label %for.body, label %for.end141

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %j, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc136, %for.body
  %19 = load i32, i32* %j, align 4
  %20 = load i32, i32* @y_block_half, align 4
  %cmp11 = icmp sle i32 %19, %20
  br i1 %cmp11, label %for.body12, label %for.end138

for.body12:                                       ; preds = %for.cond10
  store i32 1, i32* %k, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc, %for.body12
  %21 = load i32, i32* %k, align 4
  %22 = load i32, i32* @z_block_half, align 4
  %cmp14 = icmp sle i32 %21, %22
  br i1 %cmp14, label %for.body15, label %for.end

for.body15:                                       ; preds = %for.cond13
  %23 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %23, i32 0, i32 11
  %24 = load double****, double***** %array, align 8
  %25 = load i32, i32* %m, align 4
  %idxprom16 = sext i32 %25 to i64
  %arrayidx17 = getelementptr inbounds double***, double**** %24, i64 %idxprom16
  %26 = load double***, double**** %arrayidx17, align 8
  %27 = load i32, i32* %i1, align 4
  %idxprom18 = sext i32 %27 to i64
  %arrayidx19 = getelementptr inbounds double**, double*** %26, i64 %idxprom18
  %28 = load double**, double*** %arrayidx19, align 8
  %29 = load i32, i32* %j, align 4
  %30 = load i32, i32* %j1, align 4
  %add20 = add nsw i32 %29, %30
  %idxprom21 = sext i32 %add20 to i64
  %arrayidx22 = getelementptr inbounds double*, double** %28, i64 %idxprom21
  %31 = load double*, double** %arrayidx22, align 8
  %32 = load i32, i32* %k, align 4
  %33 = load i32, i32* %k1, align 4
  %add23 = add nsw i32 %32, %33
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds double, double* %31, i64 %idxprom24
  %34 = load double, double* %arrayidx25, align 8
  %div26 = fdiv double %34, 4.000000e+00
  %35 = load %struct.block*, %struct.block** %bp1, align 8
  %array27 = getelementptr inbounds %struct.block, %struct.block* %35, i32 0, i32 11
  %36 = load double****, double***** %array27, align 8
  %37 = load i32, i32* %m, align 4
  %idxprom28 = sext i32 %37 to i64
  %arrayidx29 = getelementptr inbounds double***, double**** %36, i64 %idxprom28
  %38 = load double***, double**** %arrayidx29, align 8
  %39 = load i32, i32* %i2, align 4
  %idxprom30 = sext i32 %39 to i64
  %arrayidx31 = getelementptr inbounds double**, double*** %38, i64 %idxprom30
  %40 = load double**, double*** %arrayidx31, align 8
  %41 = load i32, i32* %j, align 4
  %mul32 = mul nsw i32 2, %41
  %idxprom33 = sext i32 %mul32 to i64
  %arrayidx34 = getelementptr inbounds double*, double** %40, i64 %idxprom33
  %42 = load double*, double** %arrayidx34, align 8
  %43 = load i32, i32* %k, align 4
  %mul35 = mul nsw i32 2, %43
  %idxprom36 = sext i32 %mul35 to i64
  %arrayidx37 = getelementptr inbounds double, double* %42, i64 %idxprom36
  store double %div26, double* %arrayidx37, align 8
  %44 = load %struct.block*, %struct.block** %bp1, align 8
  %array38 = getelementptr inbounds %struct.block, %struct.block* %44, i32 0, i32 11
  %45 = load double****, double***** %array38, align 8
  %46 = load i32, i32* %m, align 4
  %idxprom39 = sext i32 %46 to i64
  %arrayidx40 = getelementptr inbounds double***, double**** %45, i64 %idxprom39
  %47 = load double***, double**** %arrayidx40, align 8
  %48 = load i32, i32* %i2, align 4
  %idxprom41 = sext i32 %48 to i64
  %arrayidx42 = getelementptr inbounds double**, double*** %47, i64 %idxprom41
  %49 = load double**, double*** %arrayidx42, align 8
  %50 = load i32, i32* %j, align 4
  %mul43 = mul nsw i32 2, %50
  %idxprom44 = sext i32 %mul43 to i64
  %arrayidx45 = getelementptr inbounds double*, double** %49, i64 %idxprom44
  %51 = load double*, double** %arrayidx45, align 8
  %52 = load i32, i32* %k, align 4
  %mul46 = mul nsw i32 2, %52
  %sub = sub nsw i32 %mul46, 1
  %idxprom47 = sext i32 %sub to i64
  %arrayidx48 = getelementptr inbounds double, double* %51, i64 %idxprom47
  store double %div26, double* %arrayidx48, align 8
  %53 = load %struct.block*, %struct.block** %bp1, align 8
  %array49 = getelementptr inbounds %struct.block, %struct.block* %53, i32 0, i32 11
  %54 = load double****, double***** %array49, align 8
  %55 = load i32, i32* %m, align 4
  %idxprom50 = sext i32 %55 to i64
  %arrayidx51 = getelementptr inbounds double***, double**** %54, i64 %idxprom50
  %56 = load double***, double**** %arrayidx51, align 8
  %57 = load i32, i32* %i2, align 4
  %idxprom52 = sext i32 %57 to i64
  %arrayidx53 = getelementptr inbounds double**, double*** %56, i64 %idxprom52
  %58 = load double**, double*** %arrayidx53, align 8
  %59 = load i32, i32* %j, align 4
  %mul54 = mul nsw i32 2, %59
  %sub55 = sub nsw i32 %mul54, 1
  %idxprom56 = sext i32 %sub55 to i64
  %arrayidx57 = getelementptr inbounds double*, double** %58, i64 %idxprom56
  %60 = load double*, double** %arrayidx57, align 8
  %61 = load i32, i32* %k, align 4
  %mul58 = mul nsw i32 2, %61
  %idxprom59 = sext i32 %mul58 to i64
  %arrayidx60 = getelementptr inbounds double, double* %60, i64 %idxprom59
  store double %div26, double* %arrayidx60, align 8
  %62 = load %struct.block*, %struct.block** %bp1, align 8
  %array61 = getelementptr inbounds %struct.block, %struct.block* %62, i32 0, i32 11
  %63 = load double****, double***** %array61, align 8
  %64 = load i32, i32* %m, align 4
  %idxprom62 = sext i32 %64 to i64
  %arrayidx63 = getelementptr inbounds double***, double**** %63, i64 %idxprom62
  %65 = load double***, double**** %arrayidx63, align 8
  %66 = load i32, i32* %i2, align 4
  %idxprom64 = sext i32 %66 to i64
  %arrayidx65 = getelementptr inbounds double**, double*** %65, i64 %idxprom64
  %67 = load double**, double*** %arrayidx65, align 8
  %68 = load i32, i32* %j, align 4
  %mul66 = mul nsw i32 2, %68
  %sub67 = sub nsw i32 %mul66, 1
  %idxprom68 = sext i32 %sub67 to i64
  %arrayidx69 = getelementptr inbounds double*, double** %67, i64 %idxprom68
  %69 = load double*, double** %arrayidx69, align 8
  %70 = load i32, i32* %k, align 4
  %mul70 = mul nsw i32 2, %70
  %sub71 = sub nsw i32 %mul70, 1
  %idxprom72 = sext i32 %sub71 to i64
  %arrayidx73 = getelementptr inbounds double, double* %69, i64 %idxprom72
  store double %div26, double* %arrayidx73, align 8
  %71 = load %struct.block*, %struct.block** %bp1, align 8
  %array74 = getelementptr inbounds %struct.block, %struct.block* %71, i32 0, i32 11
  %72 = load double****, double***** %array74, align 8
  %73 = load i32, i32* %m, align 4
  %idxprom75 = sext i32 %73 to i64
  %arrayidx76 = getelementptr inbounds double***, double**** %72, i64 %idxprom75
  %74 = load double***, double**** %arrayidx76, align 8
  %75 = load i32, i32* %i3, align 4
  %idxprom77 = sext i32 %75 to i64
  %arrayidx78 = getelementptr inbounds double**, double*** %74, i64 %idxprom77
  %76 = load double**, double*** %arrayidx78, align 8
  %77 = load i32, i32* %j, align 4
  %mul79 = mul nsw i32 2, %77
  %sub80 = sub nsw i32 %mul79, 1
  %idxprom81 = sext i32 %sub80 to i64
  %arrayidx82 = getelementptr inbounds double*, double** %76, i64 %idxprom81
  %78 = load double*, double** %arrayidx82, align 8
  %79 = load i32, i32* %k, align 4
  %mul83 = mul nsw i32 2, %79
  %sub84 = sub nsw i32 %mul83, 1
  %idxprom85 = sext i32 %sub84 to i64
  %arrayidx86 = getelementptr inbounds double, double* %78, i64 %idxprom85
  %80 = load double, double* %arrayidx86, align 8
  %81 = load %struct.block*, %struct.block** %bp1, align 8
  %array87 = getelementptr inbounds %struct.block, %struct.block* %81, i32 0, i32 11
  %82 = load double****, double***** %array87, align 8
  %83 = load i32, i32* %m, align 4
  %idxprom88 = sext i32 %83 to i64
  %arrayidx89 = getelementptr inbounds double***, double**** %82, i64 %idxprom88
  %84 = load double***, double**** %arrayidx89, align 8
  %85 = load i32, i32* %i3, align 4
  %idxprom90 = sext i32 %85 to i64
  %arrayidx91 = getelementptr inbounds double**, double*** %84, i64 %idxprom90
  %86 = load double**, double*** %arrayidx91, align 8
  %87 = load i32, i32* %j, align 4
  %mul92 = mul nsw i32 2, %87
  %sub93 = sub nsw i32 %mul92, 1
  %idxprom94 = sext i32 %sub93 to i64
  %arrayidx95 = getelementptr inbounds double*, double** %86, i64 %idxprom94
  %88 = load double*, double** %arrayidx95, align 8
  %89 = load i32, i32* %k, align 4
  %mul96 = mul nsw i32 2, %89
  %idxprom97 = sext i32 %mul96 to i64
  %arrayidx98 = getelementptr inbounds double, double* %88, i64 %idxprom97
  %90 = load double, double* %arrayidx98, align 8
  %add99 = fadd double %80, %90
  %91 = load %struct.block*, %struct.block** %bp1, align 8
  %array100 = getelementptr inbounds %struct.block, %struct.block* %91, i32 0, i32 11
  %92 = load double****, double***** %array100, align 8
  %93 = load i32, i32* %m, align 4
  %idxprom101 = sext i32 %93 to i64
  %arrayidx102 = getelementptr inbounds double***, double**** %92, i64 %idxprom101
  %94 = load double***, double**** %arrayidx102, align 8
  %95 = load i32, i32* %i3, align 4
  %idxprom103 = sext i32 %95 to i64
  %arrayidx104 = getelementptr inbounds double**, double*** %94, i64 %idxprom103
  %96 = load double**, double*** %arrayidx104, align 8
  %97 = load i32, i32* %j, align 4
  %mul105 = mul nsw i32 2, %97
  %idxprom106 = sext i32 %mul105 to i64
  %arrayidx107 = getelementptr inbounds double*, double** %96, i64 %idxprom106
  %98 = load double*, double** %arrayidx107, align 8
  %99 = load i32, i32* %k, align 4
  %mul108 = mul nsw i32 2, %99
  %sub109 = sub nsw i32 %mul108, 1
  %idxprom110 = sext i32 %sub109 to i64
  %arrayidx111 = getelementptr inbounds double, double* %98, i64 %idxprom110
  %100 = load double, double* %arrayidx111, align 8
  %add112 = fadd double %add99, %100
  %101 = load %struct.block*, %struct.block** %bp1, align 8
  %array113 = getelementptr inbounds %struct.block, %struct.block* %101, i32 0, i32 11
  %102 = load double****, double***** %array113, align 8
  %103 = load i32, i32* %m, align 4
  %idxprom114 = sext i32 %103 to i64
  %arrayidx115 = getelementptr inbounds double***, double**** %102, i64 %idxprom114
  %104 = load double***, double**** %arrayidx115, align 8
  %105 = load i32, i32* %i3, align 4
  %idxprom116 = sext i32 %105 to i64
  %arrayidx117 = getelementptr inbounds double**, double*** %104, i64 %idxprom116
  %106 = load double**, double*** %arrayidx117, align 8
  %107 = load i32, i32* %j, align 4
  %mul118 = mul nsw i32 2, %107
  %idxprom119 = sext i32 %mul118 to i64
  %arrayidx120 = getelementptr inbounds double*, double** %106, i64 %idxprom119
  %108 = load double*, double** %arrayidx120, align 8
  %109 = load i32, i32* %k, align 4
  %mul121 = mul nsw i32 2, %109
  %idxprom122 = sext i32 %mul121 to i64
  %arrayidx123 = getelementptr inbounds double, double* %108, i64 %idxprom122
  %110 = load double, double* %arrayidx123, align 8
  %add124 = fadd double %add112, %110
  %111 = load %struct.block*, %struct.block** %bp, align 8
  %array125 = getelementptr inbounds %struct.block, %struct.block* %111, i32 0, i32 11
  %112 = load double****, double***** %array125, align 8
  %113 = load i32, i32* %m, align 4
  %idxprom126 = sext i32 %113 to i64
  %arrayidx127 = getelementptr inbounds double***, double**** %112, i64 %idxprom126
  %114 = load double***, double**** %arrayidx127, align 8
  %115 = load i32, i32* %i0, align 4
  %idxprom128 = sext i32 %115 to i64
  %arrayidx129 = getelementptr inbounds double**, double*** %114, i64 %idxprom128
  %116 = load double**, double*** %arrayidx129, align 8
  %117 = load i32, i32* %j, align 4
  %118 = load i32, i32* %j1, align 4
  %add130 = add nsw i32 %117, %118
  %idxprom131 = sext i32 %add130 to i64
  %arrayidx132 = getelementptr inbounds double*, double** %116, i64 %idxprom131
  %119 = load double*, double** %arrayidx132, align 8
  %120 = load i32, i32* %k, align 4
  %121 = load i32, i32* %k1, align 4
  %add133 = add nsw i32 %120, %121
  %idxprom134 = sext i32 %add133 to i64
  %arrayidx135 = getelementptr inbounds double, double* %119, i64 %idxprom134
  store double %add124, double* %arrayidx135, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body15
  %122 = load i32, i32* %k, align 4
  %inc = add nsw i32 %122, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond13

for.end:                                          ; preds = %for.cond13
  br label %for.inc136

for.inc136:                                       ; preds = %for.end
  %123 = load i32, i32* %j, align 4
  %inc137 = add nsw i32 %123, 1
  store i32 %inc137, i32* %j, align 4
  br label %for.cond10

for.end138:                                       ; preds = %for.cond10
  br label %for.inc139

for.inc139:                                       ; preds = %for.end138
  %124 = load i32, i32* %m, align 4
  %inc140 = add nsw i32 %124, 1
  store i32 %inc140, i32* %m, align 4
  br label %for.cond

for.end141:                                       ; preds = %for.cond
  br label %if.end450

if.else142:                                       ; preds = %if.then
  %125 = load i32, i32* %l.addr, align 4
  %div143 = sdiv i32 %125, 2
  %cmp144 = icmp eq i32 %div143, 1
  br i1 %cmp144, label %if.then145, label %if.else295

if.then145:                                       ; preds = %if.else142
  %126 = load i32, i32* %l.addr, align 4
  %cmp146 = icmp eq i32 %126, 2
  br i1 %cmp146, label %if.then147, label %if.else149

if.then147:                                       ; preds = %if.then145
  store i32 0, i32* %j0, align 4
  store i32 1, i32* %j1, align 4
  %127 = load i32, i32* @y_block_size, align 4
  %add148 = add nsw i32 %127, 1
  store i32 %add148, i32* %j2, align 4
  %128 = load i32, i32* @y_block_size, align 4
  store i32 %128, i32* %j3, align 4
  br label %if.end151

if.else149:                                       ; preds = %if.then145
  %129 = load i32, i32* @y_block_size, align 4
  %add150 = add nsw i32 %129, 1
  store i32 %add150, i32* %j0, align 4
  %130 = load i32, i32* @y_block_size, align 4
  store i32 %130, i32* %j1, align 4
  store i32 0, i32* %j2, align 4
  store i32 1, i32* %j3, align 4
  br label %if.end151

if.end151:                                        ; preds = %if.else149, %if.then147
  %131 = load i32, i32* %jq.addr, align 4
  %132 = load i32, i32* @x_block_half, align 4
  %mul152 = mul nsw i32 %131, %132
  store i32 %mul152, i32* %i1, align 4
  %133 = load i32, i32* %iq.addr, align 4
  %134 = load i32, i32* @z_block_half, align 4
  %mul153 = mul nsw i32 %133, %134
  store i32 %mul153, i32* %k1, align 4
  %135 = load i32, i32* %start.addr, align 4
  store i32 %135, i32* %m, align 4
  br label %for.cond154

for.cond154:                                      ; preds = %for.inc292, %if.end151
  %136 = load i32, i32* %m, align 4
  %137 = load i32, i32* %start.addr, align 4
  %138 = load i32, i32* %num_comm.addr, align 4
  %add155 = add nsw i32 %137, %138
  %cmp156 = icmp slt i32 %136, %add155
  br i1 %cmp156, label %for.body157, label %for.end294

for.body157:                                      ; preds = %for.cond154
  store i32 1, i32* %i, align 4
  br label %for.cond158

for.cond158:                                      ; preds = %for.inc289, %for.body157
  %139 = load i32, i32* %i, align 4
  %140 = load i32, i32* @x_block_half, align 4
  %cmp159 = icmp sle i32 %139, %140
  br i1 %cmp159, label %for.body160, label %for.end291

for.body160:                                      ; preds = %for.cond158
  store i32 1, i32* %k, align 4
  br label %for.cond161

for.cond161:                                      ; preds = %for.inc286, %for.body160
  %141 = load i32, i32* %k, align 4
  %142 = load i32, i32* @z_block_half, align 4
  %cmp162 = icmp sle i32 %141, %142
  br i1 %cmp162, label %for.body163, label %for.end288

for.body163:                                      ; preds = %for.cond161
  %143 = load %struct.block*, %struct.block** %bp, align 8
  %array164 = getelementptr inbounds %struct.block, %struct.block* %143, i32 0, i32 11
  %144 = load double****, double***** %array164, align 8
  %145 = load i32, i32* %m, align 4
  %idxprom165 = sext i32 %145 to i64
  %arrayidx166 = getelementptr inbounds double***, double**** %144, i64 %idxprom165
  %146 = load double***, double**** %arrayidx166, align 8
  %147 = load i32, i32* %i, align 4
  %148 = load i32, i32* %i1, align 4
  %add167 = add nsw i32 %147, %148
  %idxprom168 = sext i32 %add167 to i64
  %arrayidx169 = getelementptr inbounds double**, double*** %146, i64 %idxprom168
  %149 = load double**, double*** %arrayidx169, align 8
  %150 = load i32, i32* %j1, align 4
  %idxprom170 = sext i32 %150 to i64
  %arrayidx171 = getelementptr inbounds double*, double** %149, i64 %idxprom170
  %151 = load double*, double** %arrayidx171, align 8
  %152 = load i32, i32* %k, align 4
  %153 = load i32, i32* %k1, align 4
  %add172 = add nsw i32 %152, %153
  %idxprom173 = sext i32 %add172 to i64
  %arrayidx174 = getelementptr inbounds double, double* %151, i64 %idxprom173
  %154 = load double, double* %arrayidx174, align 8
  %div175 = fdiv double %154, 4.000000e+00
  %155 = load %struct.block*, %struct.block** %bp1, align 8
  %array176 = getelementptr inbounds %struct.block, %struct.block* %155, i32 0, i32 11
  %156 = load double****, double***** %array176, align 8
  %157 = load i32, i32* %m, align 4
  %idxprom177 = sext i32 %157 to i64
  %arrayidx178 = getelementptr inbounds double***, double**** %156, i64 %idxprom177
  %158 = load double***, double**** %arrayidx178, align 8
  %159 = load i32, i32* %i, align 4
  %mul179 = mul nsw i32 2, %159
  %idxprom180 = sext i32 %mul179 to i64
  %arrayidx181 = getelementptr inbounds double**, double*** %158, i64 %idxprom180
  %160 = load double**, double*** %arrayidx181, align 8
  %161 = load i32, i32* %j2, align 4
  %idxprom182 = sext i32 %161 to i64
  %arrayidx183 = getelementptr inbounds double*, double** %160, i64 %idxprom182
  %162 = load double*, double** %arrayidx183, align 8
  %163 = load i32, i32* %k, align 4
  %mul184 = mul nsw i32 2, %163
  %idxprom185 = sext i32 %mul184 to i64
  %arrayidx186 = getelementptr inbounds double, double* %162, i64 %idxprom185
  store double %div175, double* %arrayidx186, align 8
  %164 = load %struct.block*, %struct.block** %bp1, align 8
  %array187 = getelementptr inbounds %struct.block, %struct.block* %164, i32 0, i32 11
  %165 = load double****, double***** %array187, align 8
  %166 = load i32, i32* %m, align 4
  %idxprom188 = sext i32 %166 to i64
  %arrayidx189 = getelementptr inbounds double***, double**** %165, i64 %idxprom188
  %167 = load double***, double**** %arrayidx189, align 8
  %168 = load i32, i32* %i, align 4
  %mul190 = mul nsw i32 2, %168
  %idxprom191 = sext i32 %mul190 to i64
  %arrayidx192 = getelementptr inbounds double**, double*** %167, i64 %idxprom191
  %169 = load double**, double*** %arrayidx192, align 8
  %170 = load i32, i32* %j2, align 4
  %idxprom193 = sext i32 %170 to i64
  %arrayidx194 = getelementptr inbounds double*, double** %169, i64 %idxprom193
  %171 = load double*, double** %arrayidx194, align 8
  %172 = load i32, i32* %k, align 4
  %mul195 = mul nsw i32 2, %172
  %sub196 = sub nsw i32 %mul195, 1
  %idxprom197 = sext i32 %sub196 to i64
  %arrayidx198 = getelementptr inbounds double, double* %171, i64 %idxprom197
  store double %div175, double* %arrayidx198, align 8
  %173 = load %struct.block*, %struct.block** %bp1, align 8
  %array199 = getelementptr inbounds %struct.block, %struct.block* %173, i32 0, i32 11
  %174 = load double****, double***** %array199, align 8
  %175 = load i32, i32* %m, align 4
  %idxprom200 = sext i32 %175 to i64
  %arrayidx201 = getelementptr inbounds double***, double**** %174, i64 %idxprom200
  %176 = load double***, double**** %arrayidx201, align 8
  %177 = load i32, i32* %i, align 4
  %mul202 = mul nsw i32 2, %177
  %sub203 = sub nsw i32 %mul202, 1
  %idxprom204 = sext i32 %sub203 to i64
  %arrayidx205 = getelementptr inbounds double**, double*** %176, i64 %idxprom204
  %178 = load double**, double*** %arrayidx205, align 8
  %179 = load i32, i32* %j2, align 4
  %idxprom206 = sext i32 %179 to i64
  %arrayidx207 = getelementptr inbounds double*, double** %178, i64 %idxprom206
  %180 = load double*, double** %arrayidx207, align 8
  %181 = load i32, i32* %k, align 4
  %mul208 = mul nsw i32 2, %181
  %idxprom209 = sext i32 %mul208 to i64
  %arrayidx210 = getelementptr inbounds double, double* %180, i64 %idxprom209
  store double %div175, double* %arrayidx210, align 8
  %182 = load %struct.block*, %struct.block** %bp1, align 8
  %array211 = getelementptr inbounds %struct.block, %struct.block* %182, i32 0, i32 11
  %183 = load double****, double***** %array211, align 8
  %184 = load i32, i32* %m, align 4
  %idxprom212 = sext i32 %184 to i64
  %arrayidx213 = getelementptr inbounds double***, double**** %183, i64 %idxprom212
  %185 = load double***, double**** %arrayidx213, align 8
  %186 = load i32, i32* %i, align 4
  %mul214 = mul nsw i32 2, %186
  %sub215 = sub nsw i32 %mul214, 1
  %idxprom216 = sext i32 %sub215 to i64
  %arrayidx217 = getelementptr inbounds double**, double*** %185, i64 %idxprom216
  %187 = load double**, double*** %arrayidx217, align 8
  %188 = load i32, i32* %j2, align 4
  %idxprom218 = sext i32 %188 to i64
  %arrayidx219 = getelementptr inbounds double*, double** %187, i64 %idxprom218
  %189 = load double*, double** %arrayidx219, align 8
  %190 = load i32, i32* %k, align 4
  %mul220 = mul nsw i32 2, %190
  %sub221 = sub nsw i32 %mul220, 1
  %idxprom222 = sext i32 %sub221 to i64
  %arrayidx223 = getelementptr inbounds double, double* %189, i64 %idxprom222
  store double %div175, double* %arrayidx223, align 8
  %191 = load %struct.block*, %struct.block** %bp1, align 8
  %array224 = getelementptr inbounds %struct.block, %struct.block* %191, i32 0, i32 11
  %192 = load double****, double***** %array224, align 8
  %193 = load i32, i32* %m, align 4
  %idxprom225 = sext i32 %193 to i64
  %arrayidx226 = getelementptr inbounds double***, double**** %192, i64 %idxprom225
  %194 = load double***, double**** %arrayidx226, align 8
  %195 = load i32, i32* %i, align 4
  %mul227 = mul nsw i32 2, %195
  %sub228 = sub nsw i32 %mul227, 1
  %idxprom229 = sext i32 %sub228 to i64
  %arrayidx230 = getelementptr inbounds double**, double*** %194, i64 %idxprom229
  %196 = load double**, double*** %arrayidx230, align 8
  %197 = load i32, i32* %j3, align 4
  %idxprom231 = sext i32 %197 to i64
  %arrayidx232 = getelementptr inbounds double*, double** %196, i64 %idxprom231
  %198 = load double*, double** %arrayidx232, align 8
  %199 = load i32, i32* %k, align 4
  %mul233 = mul nsw i32 2, %199
  %sub234 = sub nsw i32 %mul233, 1
  %idxprom235 = sext i32 %sub234 to i64
  %arrayidx236 = getelementptr inbounds double, double* %198, i64 %idxprom235
  %200 = load double, double* %arrayidx236, align 8
  %201 = load %struct.block*, %struct.block** %bp1, align 8
  %array237 = getelementptr inbounds %struct.block, %struct.block* %201, i32 0, i32 11
  %202 = load double****, double***** %array237, align 8
  %203 = load i32, i32* %m, align 4
  %idxprom238 = sext i32 %203 to i64
  %arrayidx239 = getelementptr inbounds double***, double**** %202, i64 %idxprom238
  %204 = load double***, double**** %arrayidx239, align 8
  %205 = load i32, i32* %i, align 4
  %mul240 = mul nsw i32 2, %205
  %sub241 = sub nsw i32 %mul240, 1
  %idxprom242 = sext i32 %sub241 to i64
  %arrayidx243 = getelementptr inbounds double**, double*** %204, i64 %idxprom242
  %206 = load double**, double*** %arrayidx243, align 8
  %207 = load i32, i32* %j3, align 4
  %idxprom244 = sext i32 %207 to i64
  %arrayidx245 = getelementptr inbounds double*, double** %206, i64 %idxprom244
  %208 = load double*, double** %arrayidx245, align 8
  %209 = load i32, i32* %k, align 4
  %mul246 = mul nsw i32 2, %209
  %idxprom247 = sext i32 %mul246 to i64
  %arrayidx248 = getelementptr inbounds double, double* %208, i64 %idxprom247
  %210 = load double, double* %arrayidx248, align 8
  %add249 = fadd double %200, %210
  %211 = load %struct.block*, %struct.block** %bp1, align 8
  %array250 = getelementptr inbounds %struct.block, %struct.block* %211, i32 0, i32 11
  %212 = load double****, double***** %array250, align 8
  %213 = load i32, i32* %m, align 4
  %idxprom251 = sext i32 %213 to i64
  %arrayidx252 = getelementptr inbounds double***, double**** %212, i64 %idxprom251
  %214 = load double***, double**** %arrayidx252, align 8
  %215 = load i32, i32* %i, align 4
  %mul253 = mul nsw i32 2, %215
  %idxprom254 = sext i32 %mul253 to i64
  %arrayidx255 = getelementptr inbounds double**, double*** %214, i64 %idxprom254
  %216 = load double**, double*** %arrayidx255, align 8
  %217 = load i32, i32* %j3, align 4
  %idxprom256 = sext i32 %217 to i64
  %arrayidx257 = getelementptr inbounds double*, double** %216, i64 %idxprom256
  %218 = load double*, double** %arrayidx257, align 8
  %219 = load i32, i32* %k, align 4
  %mul258 = mul nsw i32 2, %219
  %sub259 = sub nsw i32 %mul258, 1
  %idxprom260 = sext i32 %sub259 to i64
  %arrayidx261 = getelementptr inbounds double, double* %218, i64 %idxprom260
  %220 = load double, double* %arrayidx261, align 8
  %add262 = fadd double %add249, %220
  %221 = load %struct.block*, %struct.block** %bp1, align 8
  %array263 = getelementptr inbounds %struct.block, %struct.block* %221, i32 0, i32 11
  %222 = load double****, double***** %array263, align 8
  %223 = load i32, i32* %m, align 4
  %idxprom264 = sext i32 %223 to i64
  %arrayidx265 = getelementptr inbounds double***, double**** %222, i64 %idxprom264
  %224 = load double***, double**** %arrayidx265, align 8
  %225 = load i32, i32* %i, align 4
  %mul266 = mul nsw i32 2, %225
  %idxprom267 = sext i32 %mul266 to i64
  %arrayidx268 = getelementptr inbounds double**, double*** %224, i64 %idxprom267
  %226 = load double**, double*** %arrayidx268, align 8
  %227 = load i32, i32* %j3, align 4
  %idxprom269 = sext i32 %227 to i64
  %arrayidx270 = getelementptr inbounds double*, double** %226, i64 %idxprom269
  %228 = load double*, double** %arrayidx270, align 8
  %229 = load i32, i32* %k, align 4
  %mul271 = mul nsw i32 2, %229
  %idxprom272 = sext i32 %mul271 to i64
  %arrayidx273 = getelementptr inbounds double, double* %228, i64 %idxprom272
  %230 = load double, double* %arrayidx273, align 8
  %add274 = fadd double %add262, %230
  %231 = load %struct.block*, %struct.block** %bp, align 8
  %array275 = getelementptr inbounds %struct.block, %struct.block* %231, i32 0, i32 11
  %232 = load double****, double***** %array275, align 8
  %233 = load i32, i32* %m, align 4
  %idxprom276 = sext i32 %233 to i64
  %arrayidx277 = getelementptr inbounds double***, double**** %232, i64 %idxprom276
  %234 = load double***, double**** %arrayidx277, align 8
  %235 = load i32, i32* %i, align 4
  %236 = load i32, i32* %i1, align 4
  %add278 = add nsw i32 %235, %236
  %idxprom279 = sext i32 %add278 to i64
  %arrayidx280 = getelementptr inbounds double**, double*** %234, i64 %idxprom279
  %237 = load double**, double*** %arrayidx280, align 8
  %238 = load i32, i32* %j0, align 4
  %idxprom281 = sext i32 %238 to i64
  %arrayidx282 = getelementptr inbounds double*, double** %237, i64 %idxprom281
  %239 = load double*, double** %arrayidx282, align 8
  %240 = load i32, i32* %k, align 4
  %241 = load i32, i32* %k1, align 4
  %add283 = add nsw i32 %240, %241
  %idxprom284 = sext i32 %add283 to i64
  %arrayidx285 = getelementptr inbounds double, double* %239, i64 %idxprom284
  store double %add274, double* %arrayidx285, align 8
  br label %for.inc286

for.inc286:                                       ; preds = %for.body163
  %242 = load i32, i32* %k, align 4
  %inc287 = add nsw i32 %242, 1
  store i32 %inc287, i32* %k, align 4
  br label %for.cond161

for.end288:                                       ; preds = %for.cond161
  br label %for.inc289

for.inc289:                                       ; preds = %for.end288
  %243 = load i32, i32* %i, align 4
  %inc290 = add nsw i32 %243, 1
  store i32 %inc290, i32* %i, align 4
  br label %for.cond158

for.end291:                                       ; preds = %for.cond158
  br label %for.inc292

for.inc292:                                       ; preds = %for.end291
  %244 = load i32, i32* %m, align 4
  %inc293 = add nsw i32 %244, 1
  store i32 %inc293, i32* %m, align 4
  br label %for.cond154

for.end294:                                       ; preds = %for.cond154
  br label %if.end449

if.else295:                                       ; preds = %if.else142
  %245 = load i32, i32* %l.addr, align 4
  %div296 = sdiv i32 %245, 2
  %cmp297 = icmp eq i32 %div296, 2
  br i1 %cmp297, label %if.then298, label %if.end448

if.then298:                                       ; preds = %if.else295
  %246 = load i32, i32* %l.addr, align 4
  %cmp299 = icmp eq i32 %246, 4
  br i1 %cmp299, label %if.then300, label %if.else302

if.then300:                                       ; preds = %if.then298
  store i32 0, i32* %k0, align 4
  store i32 1, i32* %k1, align 4
  %247 = load i32, i32* @z_block_size, align 4
  %add301 = add nsw i32 %247, 1
  store i32 %add301, i32* %k2, align 4
  %248 = load i32, i32* @z_block_size, align 4
  store i32 %248, i32* %k3, align 4
  br label %if.end304

if.else302:                                       ; preds = %if.then298
  %249 = load i32, i32* @z_block_size, align 4
  %add303 = add nsw i32 %249, 1
  store i32 %add303, i32* %k0, align 4
  %250 = load i32, i32* @z_block_size, align 4
  store i32 %250, i32* %k1, align 4
  store i32 0, i32* %k2, align 4
  store i32 1, i32* %k3, align 4
  br label %if.end304

if.end304:                                        ; preds = %if.else302, %if.then300
  %251 = load i32, i32* %jq.addr, align 4
  %252 = load i32, i32* @x_block_half, align 4
  %mul305 = mul nsw i32 %251, %252
  store i32 %mul305, i32* %i1, align 4
  %253 = load i32, i32* %iq.addr, align 4
  %254 = load i32, i32* @y_block_half, align 4
  %mul306 = mul nsw i32 %253, %254
  store i32 %mul306, i32* %j1, align 4
  %255 = load i32, i32* %start.addr, align 4
  store i32 %255, i32* %m, align 4
  br label %for.cond307

for.cond307:                                      ; preds = %for.inc445, %if.end304
  %256 = load i32, i32* %m, align 4
  %257 = load i32, i32* %start.addr, align 4
  %258 = load i32, i32* %num_comm.addr, align 4
  %add308 = add nsw i32 %257, %258
  %cmp309 = icmp slt i32 %256, %add308
  br i1 %cmp309, label %for.body310, label %for.end447

for.body310:                                      ; preds = %for.cond307
  store i32 1, i32* %i, align 4
  br label %for.cond311

for.cond311:                                      ; preds = %for.inc442, %for.body310
  %259 = load i32, i32* %i, align 4
  %260 = load i32, i32* @x_block_half, align 4
  %cmp312 = icmp sle i32 %259, %260
  br i1 %cmp312, label %for.body313, label %for.end444

for.body313:                                      ; preds = %for.cond311
  store i32 1, i32* %j, align 4
  br label %for.cond314

for.cond314:                                      ; preds = %for.inc439, %for.body313
  %261 = load i32, i32* %j, align 4
  %262 = load i32, i32* @y_block_half, align 4
  %cmp315 = icmp sle i32 %261, %262
  br i1 %cmp315, label %for.body316, label %for.end441

for.body316:                                      ; preds = %for.cond314
  %263 = load %struct.block*, %struct.block** %bp, align 8
  %array317 = getelementptr inbounds %struct.block, %struct.block* %263, i32 0, i32 11
  %264 = load double****, double***** %array317, align 8
  %265 = load i32, i32* %m, align 4
  %idxprom318 = sext i32 %265 to i64
  %arrayidx319 = getelementptr inbounds double***, double**** %264, i64 %idxprom318
  %266 = load double***, double**** %arrayidx319, align 8
  %267 = load i32, i32* %i, align 4
  %268 = load i32, i32* %i1, align 4
  %add320 = add nsw i32 %267, %268
  %idxprom321 = sext i32 %add320 to i64
  %arrayidx322 = getelementptr inbounds double**, double*** %266, i64 %idxprom321
  %269 = load double**, double*** %arrayidx322, align 8
  %270 = load i32, i32* %j, align 4
  %271 = load i32, i32* %j1, align 4
  %add323 = add nsw i32 %270, %271
  %idxprom324 = sext i32 %add323 to i64
  %arrayidx325 = getelementptr inbounds double*, double** %269, i64 %idxprom324
  %272 = load double*, double** %arrayidx325, align 8
  %273 = load i32, i32* %k1, align 4
  %idxprom326 = sext i32 %273 to i64
  %arrayidx327 = getelementptr inbounds double, double* %272, i64 %idxprom326
  %274 = load double, double* %arrayidx327, align 8
  %div328 = fdiv double %274, 4.000000e+00
  %275 = load %struct.block*, %struct.block** %bp1, align 8
  %array329 = getelementptr inbounds %struct.block, %struct.block* %275, i32 0, i32 11
  %276 = load double****, double***** %array329, align 8
  %277 = load i32, i32* %m, align 4
  %idxprom330 = sext i32 %277 to i64
  %arrayidx331 = getelementptr inbounds double***, double**** %276, i64 %idxprom330
  %278 = load double***, double**** %arrayidx331, align 8
  %279 = load i32, i32* %i, align 4
  %mul332 = mul nsw i32 2, %279
  %idxprom333 = sext i32 %mul332 to i64
  %arrayidx334 = getelementptr inbounds double**, double*** %278, i64 %idxprom333
  %280 = load double**, double*** %arrayidx334, align 8
  %281 = load i32, i32* %j, align 4
  %mul335 = mul nsw i32 2, %281
  %idxprom336 = sext i32 %mul335 to i64
  %arrayidx337 = getelementptr inbounds double*, double** %280, i64 %idxprom336
  %282 = load double*, double** %arrayidx337, align 8
  %283 = load i32, i32* %k2, align 4
  %idxprom338 = sext i32 %283 to i64
  %arrayidx339 = getelementptr inbounds double, double* %282, i64 %idxprom338
  store double %div328, double* %arrayidx339, align 8
  %284 = load %struct.block*, %struct.block** %bp1, align 8
  %array340 = getelementptr inbounds %struct.block, %struct.block* %284, i32 0, i32 11
  %285 = load double****, double***** %array340, align 8
  %286 = load i32, i32* %m, align 4
  %idxprom341 = sext i32 %286 to i64
  %arrayidx342 = getelementptr inbounds double***, double**** %285, i64 %idxprom341
  %287 = load double***, double**** %arrayidx342, align 8
  %288 = load i32, i32* %i, align 4
  %mul343 = mul nsw i32 2, %288
  %idxprom344 = sext i32 %mul343 to i64
  %arrayidx345 = getelementptr inbounds double**, double*** %287, i64 %idxprom344
  %289 = load double**, double*** %arrayidx345, align 8
  %290 = load i32, i32* %j, align 4
  %mul346 = mul nsw i32 2, %290
  %sub347 = sub nsw i32 %mul346, 1
  %idxprom348 = sext i32 %sub347 to i64
  %arrayidx349 = getelementptr inbounds double*, double** %289, i64 %idxprom348
  %291 = load double*, double** %arrayidx349, align 8
  %292 = load i32, i32* %k2, align 4
  %idxprom350 = sext i32 %292 to i64
  %arrayidx351 = getelementptr inbounds double, double* %291, i64 %idxprom350
  store double %div328, double* %arrayidx351, align 8
  %293 = load %struct.block*, %struct.block** %bp1, align 8
  %array352 = getelementptr inbounds %struct.block, %struct.block* %293, i32 0, i32 11
  %294 = load double****, double***** %array352, align 8
  %295 = load i32, i32* %m, align 4
  %idxprom353 = sext i32 %295 to i64
  %arrayidx354 = getelementptr inbounds double***, double**** %294, i64 %idxprom353
  %296 = load double***, double**** %arrayidx354, align 8
  %297 = load i32, i32* %i, align 4
  %mul355 = mul nsw i32 2, %297
  %sub356 = sub nsw i32 %mul355, 1
  %idxprom357 = sext i32 %sub356 to i64
  %arrayidx358 = getelementptr inbounds double**, double*** %296, i64 %idxprom357
  %298 = load double**, double*** %arrayidx358, align 8
  %299 = load i32, i32* %j, align 4
  %mul359 = mul nsw i32 2, %299
  %idxprom360 = sext i32 %mul359 to i64
  %arrayidx361 = getelementptr inbounds double*, double** %298, i64 %idxprom360
  %300 = load double*, double** %arrayidx361, align 8
  %301 = load i32, i32* %k2, align 4
  %idxprom362 = sext i32 %301 to i64
  %arrayidx363 = getelementptr inbounds double, double* %300, i64 %idxprom362
  store double %div328, double* %arrayidx363, align 8
  %302 = load %struct.block*, %struct.block** %bp1, align 8
  %array364 = getelementptr inbounds %struct.block, %struct.block* %302, i32 0, i32 11
  %303 = load double****, double***** %array364, align 8
  %304 = load i32, i32* %m, align 4
  %idxprom365 = sext i32 %304 to i64
  %arrayidx366 = getelementptr inbounds double***, double**** %303, i64 %idxprom365
  %305 = load double***, double**** %arrayidx366, align 8
  %306 = load i32, i32* %i, align 4
  %mul367 = mul nsw i32 2, %306
  %sub368 = sub nsw i32 %mul367, 1
  %idxprom369 = sext i32 %sub368 to i64
  %arrayidx370 = getelementptr inbounds double**, double*** %305, i64 %idxprom369
  %307 = load double**, double*** %arrayidx370, align 8
  %308 = load i32, i32* %j, align 4
  %mul371 = mul nsw i32 2, %308
  %sub372 = sub nsw i32 %mul371, 1
  %idxprom373 = sext i32 %sub372 to i64
  %arrayidx374 = getelementptr inbounds double*, double** %307, i64 %idxprom373
  %309 = load double*, double** %arrayidx374, align 8
  %310 = load i32, i32* %k2, align 4
  %idxprom375 = sext i32 %310 to i64
  %arrayidx376 = getelementptr inbounds double, double* %309, i64 %idxprom375
  store double %div328, double* %arrayidx376, align 8
  %311 = load %struct.block*, %struct.block** %bp1, align 8
  %array377 = getelementptr inbounds %struct.block, %struct.block* %311, i32 0, i32 11
  %312 = load double****, double***** %array377, align 8
  %313 = load i32, i32* %m, align 4
  %idxprom378 = sext i32 %313 to i64
  %arrayidx379 = getelementptr inbounds double***, double**** %312, i64 %idxprom378
  %314 = load double***, double**** %arrayidx379, align 8
  %315 = load i32, i32* %i, align 4
  %mul380 = mul nsw i32 2, %315
  %sub381 = sub nsw i32 %mul380, 1
  %idxprom382 = sext i32 %sub381 to i64
  %arrayidx383 = getelementptr inbounds double**, double*** %314, i64 %idxprom382
  %316 = load double**, double*** %arrayidx383, align 8
  %317 = load i32, i32* %j, align 4
  %mul384 = mul nsw i32 2, %317
  %sub385 = sub nsw i32 %mul384, 1
  %idxprom386 = sext i32 %sub385 to i64
  %arrayidx387 = getelementptr inbounds double*, double** %316, i64 %idxprom386
  %318 = load double*, double** %arrayidx387, align 8
  %319 = load i32, i32* %k3, align 4
  %idxprom388 = sext i32 %319 to i64
  %arrayidx389 = getelementptr inbounds double, double* %318, i64 %idxprom388
  %320 = load double, double* %arrayidx389, align 8
  %321 = load %struct.block*, %struct.block** %bp1, align 8
  %array390 = getelementptr inbounds %struct.block, %struct.block* %321, i32 0, i32 11
  %322 = load double****, double***** %array390, align 8
  %323 = load i32, i32* %m, align 4
  %idxprom391 = sext i32 %323 to i64
  %arrayidx392 = getelementptr inbounds double***, double**** %322, i64 %idxprom391
  %324 = load double***, double**** %arrayidx392, align 8
  %325 = load i32, i32* %i, align 4
  %mul393 = mul nsw i32 2, %325
  %sub394 = sub nsw i32 %mul393, 1
  %idxprom395 = sext i32 %sub394 to i64
  %arrayidx396 = getelementptr inbounds double**, double*** %324, i64 %idxprom395
  %326 = load double**, double*** %arrayidx396, align 8
  %327 = load i32, i32* %j, align 4
  %mul397 = mul nsw i32 2, %327
  %idxprom398 = sext i32 %mul397 to i64
  %arrayidx399 = getelementptr inbounds double*, double** %326, i64 %idxprom398
  %328 = load double*, double** %arrayidx399, align 8
  %329 = load i32, i32* %k3, align 4
  %idxprom400 = sext i32 %329 to i64
  %arrayidx401 = getelementptr inbounds double, double* %328, i64 %idxprom400
  %330 = load double, double* %arrayidx401, align 8
  %add402 = fadd double %320, %330
  %331 = load %struct.block*, %struct.block** %bp1, align 8
  %array403 = getelementptr inbounds %struct.block, %struct.block* %331, i32 0, i32 11
  %332 = load double****, double***** %array403, align 8
  %333 = load i32, i32* %m, align 4
  %idxprom404 = sext i32 %333 to i64
  %arrayidx405 = getelementptr inbounds double***, double**** %332, i64 %idxprom404
  %334 = load double***, double**** %arrayidx405, align 8
  %335 = load i32, i32* %i, align 4
  %mul406 = mul nsw i32 2, %335
  %idxprom407 = sext i32 %mul406 to i64
  %arrayidx408 = getelementptr inbounds double**, double*** %334, i64 %idxprom407
  %336 = load double**, double*** %arrayidx408, align 8
  %337 = load i32, i32* %j, align 4
  %mul409 = mul nsw i32 2, %337
  %sub410 = sub nsw i32 %mul409, 1
  %idxprom411 = sext i32 %sub410 to i64
  %arrayidx412 = getelementptr inbounds double*, double** %336, i64 %idxprom411
  %338 = load double*, double** %arrayidx412, align 8
  %339 = load i32, i32* %k3, align 4
  %idxprom413 = sext i32 %339 to i64
  %arrayidx414 = getelementptr inbounds double, double* %338, i64 %idxprom413
  %340 = load double, double* %arrayidx414, align 8
  %add415 = fadd double %add402, %340
  %341 = load %struct.block*, %struct.block** %bp1, align 8
  %array416 = getelementptr inbounds %struct.block, %struct.block* %341, i32 0, i32 11
  %342 = load double****, double***** %array416, align 8
  %343 = load i32, i32* %m, align 4
  %idxprom417 = sext i32 %343 to i64
  %arrayidx418 = getelementptr inbounds double***, double**** %342, i64 %idxprom417
  %344 = load double***, double**** %arrayidx418, align 8
  %345 = load i32, i32* %i, align 4
  %mul419 = mul nsw i32 2, %345
  %idxprom420 = sext i32 %mul419 to i64
  %arrayidx421 = getelementptr inbounds double**, double*** %344, i64 %idxprom420
  %346 = load double**, double*** %arrayidx421, align 8
  %347 = load i32, i32* %j, align 4
  %mul422 = mul nsw i32 2, %347
  %idxprom423 = sext i32 %mul422 to i64
  %arrayidx424 = getelementptr inbounds double*, double** %346, i64 %idxprom423
  %348 = load double*, double** %arrayidx424, align 8
  %349 = load i32, i32* %k3, align 4
  %idxprom425 = sext i32 %349 to i64
  %arrayidx426 = getelementptr inbounds double, double* %348, i64 %idxprom425
  %350 = load double, double* %arrayidx426, align 8
  %add427 = fadd double %add415, %350
  %351 = load %struct.block*, %struct.block** %bp, align 8
  %array428 = getelementptr inbounds %struct.block, %struct.block* %351, i32 0, i32 11
  %352 = load double****, double***** %array428, align 8
  %353 = load i32, i32* %m, align 4
  %idxprom429 = sext i32 %353 to i64
  %arrayidx430 = getelementptr inbounds double***, double**** %352, i64 %idxprom429
  %354 = load double***, double**** %arrayidx430, align 8
  %355 = load i32, i32* %i, align 4
  %356 = load i32, i32* %i1, align 4
  %add431 = add nsw i32 %355, %356
  %idxprom432 = sext i32 %add431 to i64
  %arrayidx433 = getelementptr inbounds double**, double*** %354, i64 %idxprom432
  %357 = load double**, double*** %arrayidx433, align 8
  %358 = load i32, i32* %j, align 4
  %359 = load i32, i32* %j1, align 4
  %add434 = add nsw i32 %358, %359
  %idxprom435 = sext i32 %add434 to i64
  %arrayidx436 = getelementptr inbounds double*, double** %357, i64 %idxprom435
  %360 = load double*, double** %arrayidx436, align 8
  %361 = load i32, i32* %k0, align 4
  %idxprom437 = sext i32 %361 to i64
  %arrayidx438 = getelementptr inbounds double, double* %360, i64 %idxprom437
  store double %add427, double* %arrayidx438, align 8
  br label %for.inc439

for.inc439:                                       ; preds = %for.body316
  %362 = load i32, i32* %j, align 4
  %inc440 = add nsw i32 %362, 1
  store i32 %inc440, i32* %j, align 4
  br label %for.cond314

for.end441:                                       ; preds = %for.cond314
  br label %for.inc442

for.inc442:                                       ; preds = %for.end441
  %363 = load i32, i32* %i, align 4
  %inc443 = add nsw i32 %363, 1
  store i32 %inc443, i32* %i, align 4
  br label %for.cond311

for.end444:                                       ; preds = %for.cond311
  br label %for.inc445

for.inc445:                                       ; preds = %for.end444
  %364 = load i32, i32* %m, align 4
  %inc446 = add nsw i32 %364, 1
  store i32 %inc446, i32* %m, align 4
  br label %for.cond307

for.end447:                                       ; preds = %for.cond307
  br label %if.end448

if.end448:                                        ; preds = %for.end447, %if.else295
  br label %if.end449

if.end449:                                        ; preds = %if.end448, %for.end294
  br label %if.end450

if.end450:                                        ; preds = %if.end449, %for.end141
  br label %if.end2215

if.else451:                                       ; preds = %entry
  %365 = load i32, i32* %l.addr, align 4
  %div452 = sdiv i32 %365, 2
  %cmp453 = icmp eq i32 %div452, 0
  br i1 %cmp453, label %if.then454, label %if.else1038

if.then454:                                       ; preds = %if.else451
  %366 = load i32, i32* %l.addr, align 4
  %cmp455 = icmp eq i32 %366, 0
  br i1 %cmp455, label %if.then456, label %if.else458

if.then456:                                       ; preds = %if.then454
  store i32 0, i32* %i0, align 4
  store i32 1, i32* %i1, align 4
  %367 = load i32, i32* @x_block_size, align 4
  %add457 = add nsw i32 %367, 1
  store i32 %add457, i32* %i2, align 4
  %368 = load i32, i32* @x_block_size, align 4
  store i32 %368, i32* %i3, align 4
  br label %if.end460

if.else458:                                       ; preds = %if.then454
  %369 = load i32, i32* @x_block_size, align 4
  %add459 = add nsw i32 %369, 1
  store i32 %add459, i32* %i0, align 4
  %370 = load i32, i32* @x_block_size, align 4
  store i32 %370, i32* %i1, align 4
  store i32 0, i32* %i2, align 4
  store i32 1, i32* %i3, align 4
  br label %if.end460

if.end460:                                        ; preds = %if.else458, %if.then456
  %371 = load i32, i32* %jq.addr, align 4
  %372 = load i32, i32* @y_block_half, align 4
  %mul461 = mul nsw i32 %371, %372
  store i32 %mul461, i32* %j1, align 4
  %373 = load i32, i32* %iq.addr, align 4
  %374 = load i32, i32* @z_block_half, align 4
  %mul462 = mul nsw i32 %373, %374
  store i32 %mul462, i32* %k1, align 4
  %375 = load i32, i32* @y_block_size, align 4
  %add463 = add nsw i32 %375, 1
  store i32 %add463, i32* %j2, align 4
  %376 = load i32, i32* @y_block_half, align 4
  %add464 = add nsw i32 %376, 1
  store i32 %add464, i32* %j3, align 4
  %377 = load i32, i32* @z_block_size, align 4
  %add465 = add nsw i32 %377, 1
  store i32 %add465, i32* %k2, align 4
  %378 = load i32, i32* @z_block_half, align 4
  %add466 = add nsw i32 %378, 1
  store i32 %add466, i32* %k3, align 4
  %379 = load i32, i32* %start.addr, align 4
  store i32 %379, i32* %m, align 4
  br label %for.cond467

for.cond467:                                      ; preds = %for.inc1035, %if.end460
  %380 = load i32, i32* %m, align 4
  %381 = load i32, i32* %start.addr, align 4
  %382 = load i32, i32* %num_comm.addr, align 4
  %add468 = add nsw i32 %381, %382
  %cmp469 = icmp slt i32 %380, %add468
  br i1 %cmp469, label %for.body470, label %for.end1037

for.body470:                                      ; preds = %for.cond467
  %383 = load %struct.block*, %struct.block** %bp, align 8
  %array471 = getelementptr inbounds %struct.block, %struct.block* %383, i32 0, i32 11
  %384 = load double****, double***** %array471, align 8
  %385 = load i32, i32* %m, align 4
  %idxprom472 = sext i32 %385 to i64
  %arrayidx473 = getelementptr inbounds double***, double**** %384, i64 %idxprom472
  %386 = load double***, double**** %arrayidx473, align 8
  %387 = load i32, i32* %i1, align 4
  %idxprom474 = sext i32 %387 to i64
  %arrayidx475 = getelementptr inbounds double**, double*** %386, i64 %idxprom474
  %388 = load double**, double*** %arrayidx475, align 8
  %389 = load i32, i32* %j1, align 4
  %idxprom476 = sext i32 %389 to i64
  %arrayidx477 = getelementptr inbounds double*, double** %388, i64 %idxprom476
  %390 = load double*, double** %arrayidx477, align 8
  %391 = load i32, i32* %k1, align 4
  %idxprom478 = sext i32 %391 to i64
  %arrayidx479 = getelementptr inbounds double, double* %390, i64 %idxprom478
  %392 = load double, double* %arrayidx479, align 8
  %div480 = fdiv double %392, 4.000000e+00
  %393 = load %struct.block*, %struct.block** %bp1, align 8
  %array481 = getelementptr inbounds %struct.block, %struct.block* %393, i32 0, i32 11
  %394 = load double****, double***** %array481, align 8
  %395 = load i32, i32* %m, align 4
  %idxprom482 = sext i32 %395 to i64
  %arrayidx483 = getelementptr inbounds double***, double**** %394, i64 %idxprom482
  %396 = load double***, double**** %arrayidx483, align 8
  %397 = load i32, i32* %i2, align 4
  %idxprom484 = sext i32 %397 to i64
  %arrayidx485 = getelementptr inbounds double**, double*** %396, i64 %idxprom484
  %398 = load double**, double*** %arrayidx485, align 8
  %arrayidx486 = getelementptr inbounds double*, double** %398, i64 0
  %399 = load double*, double** %arrayidx486, align 8
  %arrayidx487 = getelementptr inbounds double, double* %399, i64 0
  store double %div480, double* %arrayidx487, align 8
  store i32 1, i32* %k, align 4
  br label %for.cond488

for.cond488:                                      ; preds = %for.inc521, %for.body470
  %400 = load i32, i32* %k, align 4
  %401 = load i32, i32* @z_block_half, align 4
  %cmp489 = icmp sle i32 %400, %401
  br i1 %cmp489, label %for.body490, label %for.end523

for.body490:                                      ; preds = %for.cond488
  %402 = load %struct.block*, %struct.block** %bp, align 8
  %array491 = getelementptr inbounds %struct.block, %struct.block* %402, i32 0, i32 11
  %403 = load double****, double***** %array491, align 8
  %404 = load i32, i32* %m, align 4
  %idxprom492 = sext i32 %404 to i64
  %arrayidx493 = getelementptr inbounds double***, double**** %403, i64 %idxprom492
  %405 = load double***, double**** %arrayidx493, align 8
  %406 = load i32, i32* %i1, align 4
  %idxprom494 = sext i32 %406 to i64
  %arrayidx495 = getelementptr inbounds double**, double*** %405, i64 %idxprom494
  %407 = load double**, double*** %arrayidx495, align 8
  %408 = load i32, i32* %j1, align 4
  %idxprom496 = sext i32 %408 to i64
  %arrayidx497 = getelementptr inbounds double*, double** %407, i64 %idxprom496
  %409 = load double*, double** %arrayidx497, align 8
  %410 = load i32, i32* %k, align 4
  %411 = load i32, i32* %k1, align 4
  %add498 = add nsw i32 %410, %411
  %idxprom499 = sext i32 %add498 to i64
  %arrayidx500 = getelementptr inbounds double, double* %409, i64 %idxprom499
  %412 = load double, double* %arrayidx500, align 8
  %div501 = fdiv double %412, 4.000000e+00
  %413 = load %struct.block*, %struct.block** %bp1, align 8
  %array502 = getelementptr inbounds %struct.block, %struct.block* %413, i32 0, i32 11
  %414 = load double****, double***** %array502, align 8
  %415 = load i32, i32* %m, align 4
  %idxprom503 = sext i32 %415 to i64
  %arrayidx504 = getelementptr inbounds double***, double**** %414, i64 %idxprom503
  %416 = load double***, double**** %arrayidx504, align 8
  %417 = load i32, i32* %i2, align 4
  %idxprom505 = sext i32 %417 to i64
  %arrayidx506 = getelementptr inbounds double**, double*** %416, i64 %idxprom505
  %418 = load double**, double*** %arrayidx506, align 8
  %arrayidx507 = getelementptr inbounds double*, double** %418, i64 0
  %419 = load double*, double** %arrayidx507, align 8
  %420 = load i32, i32* %k, align 4
  %mul508 = mul nsw i32 2, %420
  %idxprom509 = sext i32 %mul508 to i64
  %arrayidx510 = getelementptr inbounds double, double* %419, i64 %idxprom509
  store double %div501, double* %arrayidx510, align 8
  %421 = load %struct.block*, %struct.block** %bp1, align 8
  %array511 = getelementptr inbounds %struct.block, %struct.block* %421, i32 0, i32 11
  %422 = load double****, double***** %array511, align 8
  %423 = load i32, i32* %m, align 4
  %idxprom512 = sext i32 %423 to i64
  %arrayidx513 = getelementptr inbounds double***, double**** %422, i64 %idxprom512
  %424 = load double***, double**** %arrayidx513, align 8
  %425 = load i32, i32* %i2, align 4
  %idxprom514 = sext i32 %425 to i64
  %arrayidx515 = getelementptr inbounds double**, double*** %424, i64 %idxprom514
  %426 = load double**, double*** %arrayidx515, align 8
  %arrayidx516 = getelementptr inbounds double*, double** %426, i64 0
  %427 = load double*, double** %arrayidx516, align 8
  %428 = load i32, i32* %k, align 4
  %mul517 = mul nsw i32 2, %428
  %sub518 = sub nsw i32 %mul517, 1
  %idxprom519 = sext i32 %sub518 to i64
  %arrayidx520 = getelementptr inbounds double, double* %427, i64 %idxprom519
  store double %div501, double* %arrayidx520, align 8
  br label %for.inc521

for.inc521:                                       ; preds = %for.body490
  %429 = load i32, i32* %k, align 4
  %inc522 = add nsw i32 %429, 1
  store i32 %inc522, i32* %k, align 4
  br label %for.cond488

for.end523:                                       ; preds = %for.cond488
  %430 = load %struct.block*, %struct.block** %bp, align 8
  %array524 = getelementptr inbounds %struct.block, %struct.block* %430, i32 0, i32 11
  %431 = load double****, double***** %array524, align 8
  %432 = load i32, i32* %m, align 4
  %idxprom525 = sext i32 %432 to i64
  %arrayidx526 = getelementptr inbounds double***, double**** %431, i64 %idxprom525
  %433 = load double***, double**** %arrayidx526, align 8
  %434 = load i32, i32* %i1, align 4
  %idxprom527 = sext i32 %434 to i64
  %arrayidx528 = getelementptr inbounds double**, double*** %433, i64 %idxprom527
  %435 = load double**, double*** %arrayidx528, align 8
  %436 = load i32, i32* %j1, align 4
  %idxprom529 = sext i32 %436 to i64
  %arrayidx530 = getelementptr inbounds double*, double** %435, i64 %idxprom529
  %437 = load double*, double** %arrayidx530, align 8
  %438 = load i32, i32* %k3, align 4
  %439 = load i32, i32* %k1, align 4
  %add531 = add nsw i32 %438, %439
  %idxprom532 = sext i32 %add531 to i64
  %arrayidx533 = getelementptr inbounds double, double* %437, i64 %idxprom532
  %440 = load double, double* %arrayidx533, align 8
  %div534 = fdiv double %440, 4.000000e+00
  %441 = load %struct.block*, %struct.block** %bp1, align 8
  %array535 = getelementptr inbounds %struct.block, %struct.block* %441, i32 0, i32 11
  %442 = load double****, double***** %array535, align 8
  %443 = load i32, i32* %m, align 4
  %idxprom536 = sext i32 %443 to i64
  %arrayidx537 = getelementptr inbounds double***, double**** %442, i64 %idxprom536
  %444 = load double***, double**** %arrayidx537, align 8
  %445 = load i32, i32* %i2, align 4
  %idxprom538 = sext i32 %445 to i64
  %arrayidx539 = getelementptr inbounds double**, double*** %444, i64 %idxprom538
  %446 = load double**, double*** %arrayidx539, align 8
  %arrayidx540 = getelementptr inbounds double*, double** %446, i64 0
  %447 = load double*, double** %arrayidx540, align 8
  %448 = load i32, i32* %k2, align 4
  %idxprom541 = sext i32 %448 to i64
  %arrayidx542 = getelementptr inbounds double, double* %447, i64 %idxprom541
  store double %div534, double* %arrayidx542, align 8
  %449 = load i32, i32* %jq.addr, align 4
  %cmp543 = icmp eq i32 %449, 0
  br i1 %cmp543, label %if.then544, label %if.end614

if.then544:                                       ; preds = %for.end523
  %450 = load i32, i32* %iq.addr, align 4
  %cmp545 = icmp eq i32 %450, 0
  br i1 %cmp545, label %if.then546, label %if.else561

if.then546:                                       ; preds = %if.then544
  %451 = load %struct.block*, %struct.block** %bp1, align 8
  %array547 = getelementptr inbounds %struct.block, %struct.block* %451, i32 0, i32 11
  %452 = load double****, double***** %array547, align 8
  %453 = load i32, i32* %m, align 4
  %idxprom548 = sext i32 %453 to i64
  %arrayidx549 = getelementptr inbounds double***, double**** %452, i64 %idxprom548
  %454 = load double***, double**** %arrayidx549, align 8
  %455 = load i32, i32* %i3, align 4
  %idxprom550 = sext i32 %455 to i64
  %arrayidx551 = getelementptr inbounds double**, double*** %454, i64 %idxprom550
  %456 = load double**, double*** %arrayidx551, align 8
  %arrayidx552 = getelementptr inbounds double*, double** %456, i64 0
  %457 = load double*, double** %arrayidx552, align 8
  %arrayidx553 = getelementptr inbounds double, double* %457, i64 0
  %458 = load double, double* %arrayidx553, align 8
  %459 = load %struct.block*, %struct.block** %bp, align 8
  %array554 = getelementptr inbounds %struct.block, %struct.block* %459, i32 0, i32 11
  %460 = load double****, double***** %array554, align 8
  %461 = load i32, i32* %m, align 4
  %idxprom555 = sext i32 %461 to i64
  %arrayidx556 = getelementptr inbounds double***, double**** %460, i64 %idxprom555
  %462 = load double***, double**** %arrayidx556, align 8
  %463 = load i32, i32* %i0, align 4
  %idxprom557 = sext i32 %463 to i64
  %arrayidx558 = getelementptr inbounds double**, double*** %462, i64 %idxprom557
  %464 = load double**, double*** %arrayidx558, align 8
  %arrayidx559 = getelementptr inbounds double*, double** %464, i64 0
  %465 = load double*, double** %arrayidx559, align 8
  %arrayidx560 = getelementptr inbounds double, double* %465, i64 0
  store double %458, double* %arrayidx560, align 8
  br label %if.end578

if.else561:                                       ; preds = %if.then544
  %466 = load %struct.block*, %struct.block** %bp1, align 8
  %array562 = getelementptr inbounds %struct.block, %struct.block* %466, i32 0, i32 11
  %467 = load double****, double***** %array562, align 8
  %468 = load i32, i32* %m, align 4
  %idxprom563 = sext i32 %468 to i64
  %arrayidx564 = getelementptr inbounds double***, double**** %467, i64 %idxprom563
  %469 = load double***, double**** %arrayidx564, align 8
  %470 = load i32, i32* %i3, align 4
  %idxprom565 = sext i32 %470 to i64
  %arrayidx566 = getelementptr inbounds double**, double*** %469, i64 %idxprom565
  %471 = load double**, double*** %arrayidx566, align 8
  %arrayidx567 = getelementptr inbounds double*, double** %471, i64 0
  %472 = load double*, double** %arrayidx567, align 8
  %473 = load i32, i32* %k2, align 4
  %idxprom568 = sext i32 %473 to i64
  %arrayidx569 = getelementptr inbounds double, double* %472, i64 %idxprom568
  %474 = load double, double* %arrayidx569, align 8
  %475 = load %struct.block*, %struct.block** %bp, align 8
  %array570 = getelementptr inbounds %struct.block, %struct.block* %475, i32 0, i32 11
  %476 = load double****, double***** %array570, align 8
  %477 = load i32, i32* %m, align 4
  %idxprom571 = sext i32 %477 to i64
  %arrayidx572 = getelementptr inbounds double***, double**** %476, i64 %idxprom571
  %478 = load double***, double**** %arrayidx572, align 8
  %479 = load i32, i32* %i0, align 4
  %idxprom573 = sext i32 %479 to i64
  %arrayidx574 = getelementptr inbounds double**, double*** %478, i64 %idxprom573
  %480 = load double**, double*** %arrayidx574, align 8
  %arrayidx575 = getelementptr inbounds double*, double** %480, i64 0
  %481 = load double*, double** %arrayidx575, align 8
  %482 = load i32, i32* %k2, align 4
  %idxprom576 = sext i32 %482 to i64
  %arrayidx577 = getelementptr inbounds double, double* %481, i64 %idxprom576
  store double %474, double* %arrayidx577, align 8
  br label %if.end578

if.end578:                                        ; preds = %if.else561, %if.then546
  store i32 1, i32* %k, align 4
  br label %for.cond579

for.cond579:                                      ; preds = %for.inc611, %if.end578
  %483 = load i32, i32* %k, align 4
  %484 = load i32, i32* @z_block_half, align 4
  %cmp580 = icmp sle i32 %483, %484
  br i1 %cmp580, label %for.body581, label %for.end613

for.body581:                                      ; preds = %for.cond579
  %485 = load %struct.block*, %struct.block** %bp1, align 8
  %array582 = getelementptr inbounds %struct.block, %struct.block* %485, i32 0, i32 11
  %486 = load double****, double***** %array582, align 8
  %487 = load i32, i32* %m, align 4
  %idxprom583 = sext i32 %487 to i64
  %arrayidx584 = getelementptr inbounds double***, double**** %486, i64 %idxprom583
  %488 = load double***, double**** %arrayidx584, align 8
  %489 = load i32, i32* %i3, align 4
  %idxprom585 = sext i32 %489 to i64
  %arrayidx586 = getelementptr inbounds double**, double*** %488, i64 %idxprom585
  %490 = load double**, double*** %arrayidx586, align 8
  %arrayidx587 = getelementptr inbounds double*, double** %490, i64 0
  %491 = load double*, double** %arrayidx587, align 8
  %492 = load i32, i32* %k, align 4
  %mul588 = mul nsw i32 2, %492
  %sub589 = sub nsw i32 %mul588, 1
  %idxprom590 = sext i32 %sub589 to i64
  %arrayidx591 = getelementptr inbounds double, double* %491, i64 %idxprom590
  %493 = load double, double* %arrayidx591, align 8
  %494 = load %struct.block*, %struct.block** %bp1, align 8
  %array592 = getelementptr inbounds %struct.block, %struct.block* %494, i32 0, i32 11
  %495 = load double****, double***** %array592, align 8
  %496 = load i32, i32* %m, align 4
  %idxprom593 = sext i32 %496 to i64
  %arrayidx594 = getelementptr inbounds double***, double**** %495, i64 %idxprom593
  %497 = load double***, double**** %arrayidx594, align 8
  %498 = load i32, i32* %i3, align 4
  %idxprom595 = sext i32 %498 to i64
  %arrayidx596 = getelementptr inbounds double**, double*** %497, i64 %idxprom595
  %499 = load double**, double*** %arrayidx596, align 8
  %arrayidx597 = getelementptr inbounds double*, double** %499, i64 0
  %500 = load double*, double** %arrayidx597, align 8
  %501 = load i32, i32* %k, align 4
  %mul598 = mul nsw i32 2, %501
  %idxprom599 = sext i32 %mul598 to i64
  %arrayidx600 = getelementptr inbounds double, double* %500, i64 %idxprom599
  %502 = load double, double* %arrayidx600, align 8
  %add601 = fadd double %493, %502
  %503 = load %struct.block*, %struct.block** %bp, align 8
  %array602 = getelementptr inbounds %struct.block, %struct.block* %503, i32 0, i32 11
  %504 = load double****, double***** %array602, align 8
  %505 = load i32, i32* %m, align 4
  %idxprom603 = sext i32 %505 to i64
  %arrayidx604 = getelementptr inbounds double***, double**** %504, i64 %idxprom603
  %506 = load double***, double**** %arrayidx604, align 8
  %507 = load i32, i32* %i0, align 4
  %idxprom605 = sext i32 %507 to i64
  %arrayidx606 = getelementptr inbounds double**, double*** %506, i64 %idxprom605
  %508 = load double**, double*** %arrayidx606, align 8
  %arrayidx607 = getelementptr inbounds double*, double** %508, i64 0
  %509 = load double*, double** %arrayidx607, align 8
  %510 = load i32, i32* %k, align 4
  %511 = load i32, i32* %k1, align 4
  %add608 = add nsw i32 %510, %511
  %idxprom609 = sext i32 %add608 to i64
  %arrayidx610 = getelementptr inbounds double, double* %509, i64 %idxprom609
  store double %add601, double* %arrayidx610, align 8
  br label %for.inc611

for.inc611:                                       ; preds = %for.body581
  %512 = load i32, i32* %k, align 4
  %inc612 = add nsw i32 %512, 1
  store i32 %inc612, i32* %k, align 4
  br label %for.cond579

for.end613:                                       ; preds = %for.cond579
  br label %if.end614

if.end614:                                        ; preds = %for.end613, %for.end523
  store i32 1, i32* %j, align 4
  br label %for.cond615

for.cond615:                                      ; preds = %for.inc874, %if.end614
  %513 = load i32, i32* %j, align 4
  %514 = load i32, i32* @y_block_half, align 4
  %cmp616 = icmp sle i32 %513, %514
  br i1 %cmp616, label %for.body617, label %for.end876

for.body617:                                      ; preds = %for.cond615
  %515 = load %struct.block*, %struct.block** %bp, align 8
  %array618 = getelementptr inbounds %struct.block, %struct.block* %515, i32 0, i32 11
  %516 = load double****, double***** %array618, align 8
  %517 = load i32, i32* %m, align 4
  %idxprom619 = sext i32 %517 to i64
  %arrayidx620 = getelementptr inbounds double***, double**** %516, i64 %idxprom619
  %518 = load double***, double**** %arrayidx620, align 8
  %519 = load i32, i32* %i1, align 4
  %idxprom621 = sext i32 %519 to i64
  %arrayidx622 = getelementptr inbounds double**, double*** %518, i64 %idxprom621
  %520 = load double**, double*** %arrayidx622, align 8
  %521 = load i32, i32* %j, align 4
  %522 = load i32, i32* %j1, align 4
  %add623 = add nsw i32 %521, %522
  %idxprom624 = sext i32 %add623 to i64
  %arrayidx625 = getelementptr inbounds double*, double** %520, i64 %idxprom624
  %523 = load double*, double** %arrayidx625, align 8
  %524 = load i32, i32* %k1, align 4
  %idxprom626 = sext i32 %524 to i64
  %arrayidx627 = getelementptr inbounds double, double* %523, i64 %idxprom626
  %525 = load double, double* %arrayidx627, align 8
  %div628 = fdiv double %525, 4.000000e+00
  %526 = load %struct.block*, %struct.block** %bp1, align 8
  %array629 = getelementptr inbounds %struct.block, %struct.block* %526, i32 0, i32 11
  %527 = load double****, double***** %array629, align 8
  %528 = load i32, i32* %m, align 4
  %idxprom630 = sext i32 %528 to i64
  %arrayidx631 = getelementptr inbounds double***, double**** %527, i64 %idxprom630
  %529 = load double***, double**** %arrayidx631, align 8
  %530 = load i32, i32* %i2, align 4
  %idxprom632 = sext i32 %530 to i64
  %arrayidx633 = getelementptr inbounds double**, double*** %529, i64 %idxprom632
  %531 = load double**, double*** %arrayidx633, align 8
  %532 = load i32, i32* %j, align 4
  %mul634 = mul nsw i32 2, %532
  %idxprom635 = sext i32 %mul634 to i64
  %arrayidx636 = getelementptr inbounds double*, double** %531, i64 %idxprom635
  %533 = load double*, double** %arrayidx636, align 8
  %arrayidx637 = getelementptr inbounds double, double* %533, i64 0
  store double %div628, double* %arrayidx637, align 8
  %534 = load %struct.block*, %struct.block** %bp1, align 8
  %array638 = getelementptr inbounds %struct.block, %struct.block* %534, i32 0, i32 11
  %535 = load double****, double***** %array638, align 8
  %536 = load i32, i32* %m, align 4
  %idxprom639 = sext i32 %536 to i64
  %arrayidx640 = getelementptr inbounds double***, double**** %535, i64 %idxprom639
  %537 = load double***, double**** %arrayidx640, align 8
  %538 = load i32, i32* %i2, align 4
  %idxprom641 = sext i32 %538 to i64
  %arrayidx642 = getelementptr inbounds double**, double*** %537, i64 %idxprom641
  %539 = load double**, double*** %arrayidx642, align 8
  %540 = load i32, i32* %j, align 4
  %mul643 = mul nsw i32 2, %540
  %sub644 = sub nsw i32 %mul643, 1
  %idxprom645 = sext i32 %sub644 to i64
  %arrayidx646 = getelementptr inbounds double*, double** %539, i64 %idxprom645
  %541 = load double*, double** %arrayidx646, align 8
  %arrayidx647 = getelementptr inbounds double, double* %541, i64 0
  store double %div628, double* %arrayidx647, align 8
  %542 = load i32, i32* %iq.addr, align 4
  %cmp648 = icmp eq i32 %542, 0
  br i1 %cmp648, label %if.then649, label %if.else679

if.then649:                                       ; preds = %for.body617
  %543 = load %struct.block*, %struct.block** %bp1, align 8
  %array650 = getelementptr inbounds %struct.block, %struct.block* %543, i32 0, i32 11
  %544 = load double****, double***** %array650, align 8
  %545 = load i32, i32* %m, align 4
  %idxprom651 = sext i32 %545 to i64
  %arrayidx652 = getelementptr inbounds double***, double**** %544, i64 %idxprom651
  %546 = load double***, double**** %arrayidx652, align 8
  %547 = load i32, i32* %i3, align 4
  %idxprom653 = sext i32 %547 to i64
  %arrayidx654 = getelementptr inbounds double**, double*** %546, i64 %idxprom653
  %548 = load double**, double*** %arrayidx654, align 8
  %549 = load i32, i32* %j, align 4
  %mul655 = mul nsw i32 2, %549
  %sub656 = sub nsw i32 %mul655, 1
  %idxprom657 = sext i32 %sub656 to i64
  %arrayidx658 = getelementptr inbounds double*, double** %548, i64 %idxprom657
  %550 = load double*, double** %arrayidx658, align 8
  %arrayidx659 = getelementptr inbounds double, double* %550, i64 0
  %551 = load double, double* %arrayidx659, align 8
  %552 = load %struct.block*, %struct.block** %bp1, align 8
  %array660 = getelementptr inbounds %struct.block, %struct.block* %552, i32 0, i32 11
  %553 = load double****, double***** %array660, align 8
  %554 = load i32, i32* %m, align 4
  %idxprom661 = sext i32 %554 to i64
  %arrayidx662 = getelementptr inbounds double***, double**** %553, i64 %idxprom661
  %555 = load double***, double**** %arrayidx662, align 8
  %556 = load i32, i32* %i3, align 4
  %idxprom663 = sext i32 %556 to i64
  %arrayidx664 = getelementptr inbounds double**, double*** %555, i64 %idxprom663
  %557 = load double**, double*** %arrayidx664, align 8
  %558 = load i32, i32* %j, align 4
  %mul665 = mul nsw i32 2, %558
  %idxprom666 = sext i32 %mul665 to i64
  %arrayidx667 = getelementptr inbounds double*, double** %557, i64 %idxprom666
  %559 = load double*, double** %arrayidx667, align 8
  %arrayidx668 = getelementptr inbounds double, double* %559, i64 0
  %560 = load double, double* %arrayidx668, align 8
  %add669 = fadd double %551, %560
  %561 = load %struct.block*, %struct.block** %bp, align 8
  %array670 = getelementptr inbounds %struct.block, %struct.block* %561, i32 0, i32 11
  %562 = load double****, double***** %array670, align 8
  %563 = load i32, i32* %m, align 4
  %idxprom671 = sext i32 %563 to i64
  %arrayidx672 = getelementptr inbounds double***, double**** %562, i64 %idxprom671
  %564 = load double***, double**** %arrayidx672, align 8
  %565 = load i32, i32* %i0, align 4
  %idxprom673 = sext i32 %565 to i64
  %arrayidx674 = getelementptr inbounds double**, double*** %564, i64 %idxprom673
  %566 = load double**, double*** %arrayidx674, align 8
  %567 = load i32, i32* %j, align 4
  %568 = load i32, i32* %j1, align 4
  %add675 = add nsw i32 %567, %568
  %idxprom676 = sext i32 %add675 to i64
  %arrayidx677 = getelementptr inbounds double*, double** %566, i64 %idxprom676
  %569 = load double*, double** %arrayidx677, align 8
  %arrayidx678 = getelementptr inbounds double, double* %569, i64 0
  store double %add669, double* %arrayidx678, align 8
  br label %if.end712

if.else679:                                       ; preds = %for.body617
  %570 = load %struct.block*, %struct.block** %bp1, align 8
  %array680 = getelementptr inbounds %struct.block, %struct.block* %570, i32 0, i32 11
  %571 = load double****, double***** %array680, align 8
  %572 = load i32, i32* %m, align 4
  %idxprom681 = sext i32 %572 to i64
  %arrayidx682 = getelementptr inbounds double***, double**** %571, i64 %idxprom681
  %573 = load double***, double**** %arrayidx682, align 8
  %574 = load i32, i32* %i3, align 4
  %idxprom683 = sext i32 %574 to i64
  %arrayidx684 = getelementptr inbounds double**, double*** %573, i64 %idxprom683
  %575 = load double**, double*** %arrayidx684, align 8
  %576 = load i32, i32* %j, align 4
  %mul685 = mul nsw i32 2, %576
  %sub686 = sub nsw i32 %mul685, 1
  %idxprom687 = sext i32 %sub686 to i64
  %arrayidx688 = getelementptr inbounds double*, double** %575, i64 %idxprom687
  %577 = load double*, double** %arrayidx688, align 8
  %578 = load i32, i32* %k2, align 4
  %idxprom689 = sext i32 %578 to i64
  %arrayidx690 = getelementptr inbounds double, double* %577, i64 %idxprom689
  %579 = load double, double* %arrayidx690, align 8
  %580 = load %struct.block*, %struct.block** %bp1, align 8
  %array691 = getelementptr inbounds %struct.block, %struct.block* %580, i32 0, i32 11
  %581 = load double****, double***** %array691, align 8
  %582 = load i32, i32* %m, align 4
  %idxprom692 = sext i32 %582 to i64
  %arrayidx693 = getelementptr inbounds double***, double**** %581, i64 %idxprom692
  %583 = load double***, double**** %arrayidx693, align 8
  %584 = load i32, i32* %i3, align 4
  %idxprom694 = sext i32 %584 to i64
  %arrayidx695 = getelementptr inbounds double**, double*** %583, i64 %idxprom694
  %585 = load double**, double*** %arrayidx695, align 8
  %586 = load i32, i32* %j, align 4
  %mul696 = mul nsw i32 2, %586
  %idxprom697 = sext i32 %mul696 to i64
  %arrayidx698 = getelementptr inbounds double*, double** %585, i64 %idxprom697
  %587 = load double*, double** %arrayidx698, align 8
  %588 = load i32, i32* %k2, align 4
  %idxprom699 = sext i32 %588 to i64
  %arrayidx700 = getelementptr inbounds double, double* %587, i64 %idxprom699
  %589 = load double, double* %arrayidx700, align 8
  %add701 = fadd double %579, %589
  %590 = load %struct.block*, %struct.block** %bp, align 8
  %array702 = getelementptr inbounds %struct.block, %struct.block* %590, i32 0, i32 11
  %591 = load double****, double***** %array702, align 8
  %592 = load i32, i32* %m, align 4
  %idxprom703 = sext i32 %592 to i64
  %arrayidx704 = getelementptr inbounds double***, double**** %591, i64 %idxprom703
  %593 = load double***, double**** %arrayidx704, align 8
  %594 = load i32, i32* %i0, align 4
  %idxprom705 = sext i32 %594 to i64
  %arrayidx706 = getelementptr inbounds double**, double*** %593, i64 %idxprom705
  %595 = load double**, double*** %arrayidx706, align 8
  %596 = load i32, i32* %j, align 4
  %597 = load i32, i32* %j1, align 4
  %add707 = add nsw i32 %596, %597
  %idxprom708 = sext i32 %add707 to i64
  %arrayidx709 = getelementptr inbounds double*, double** %595, i64 %idxprom708
  %598 = load double*, double** %arrayidx709, align 8
  %599 = load i32, i32* %k2, align 4
  %idxprom710 = sext i32 %599 to i64
  %arrayidx711 = getelementptr inbounds double, double* %598, i64 %idxprom710
  store double %add701, double* %arrayidx711, align 8
  br label %if.end712

if.end712:                                        ; preds = %if.else679, %if.then649
  store i32 1, i32* %k, align 4
  br label %for.cond713

for.cond713:                                      ; preds = %for.inc838, %if.end712
  %600 = load i32, i32* %k, align 4
  %601 = load i32, i32* @z_block_half, align 4
  %cmp714 = icmp sle i32 %600, %601
  br i1 %cmp714, label %for.body715, label %for.end840

for.body715:                                      ; preds = %for.cond713
  %602 = load %struct.block*, %struct.block** %bp, align 8
  %array716 = getelementptr inbounds %struct.block, %struct.block* %602, i32 0, i32 11
  %603 = load double****, double***** %array716, align 8
  %604 = load i32, i32* %m, align 4
  %idxprom717 = sext i32 %604 to i64
  %arrayidx718 = getelementptr inbounds double***, double**** %603, i64 %idxprom717
  %605 = load double***, double**** %arrayidx718, align 8
  %606 = load i32, i32* %i1, align 4
  %idxprom719 = sext i32 %606 to i64
  %arrayidx720 = getelementptr inbounds double**, double*** %605, i64 %idxprom719
  %607 = load double**, double*** %arrayidx720, align 8
  %608 = load i32, i32* %j, align 4
  %609 = load i32, i32* %j1, align 4
  %add721 = add nsw i32 %608, %609
  %idxprom722 = sext i32 %add721 to i64
  %arrayidx723 = getelementptr inbounds double*, double** %607, i64 %idxprom722
  %610 = load double*, double** %arrayidx723, align 8
  %611 = load i32, i32* %k, align 4
  %612 = load i32, i32* %k1, align 4
  %add724 = add nsw i32 %611, %612
  %idxprom725 = sext i32 %add724 to i64
  %arrayidx726 = getelementptr inbounds double, double* %610, i64 %idxprom725
  %613 = load double, double* %arrayidx726, align 8
  %div727 = fdiv double %613, 4.000000e+00
  %614 = load %struct.block*, %struct.block** %bp1, align 8
  %array728 = getelementptr inbounds %struct.block, %struct.block* %614, i32 0, i32 11
  %615 = load double****, double***** %array728, align 8
  %616 = load i32, i32* %m, align 4
  %idxprom729 = sext i32 %616 to i64
  %arrayidx730 = getelementptr inbounds double***, double**** %615, i64 %idxprom729
  %617 = load double***, double**** %arrayidx730, align 8
  %618 = load i32, i32* %i2, align 4
  %idxprom731 = sext i32 %618 to i64
  %arrayidx732 = getelementptr inbounds double**, double*** %617, i64 %idxprom731
  %619 = load double**, double*** %arrayidx732, align 8
  %620 = load i32, i32* %j, align 4
  %mul733 = mul nsw i32 2, %620
  %idxprom734 = sext i32 %mul733 to i64
  %arrayidx735 = getelementptr inbounds double*, double** %619, i64 %idxprom734
  %621 = load double*, double** %arrayidx735, align 8
  %622 = load i32, i32* %k, align 4
  %mul736 = mul nsw i32 2, %622
  %idxprom737 = sext i32 %mul736 to i64
  %arrayidx738 = getelementptr inbounds double, double* %621, i64 %idxprom737
  store double %div727, double* %arrayidx738, align 8
  %623 = load %struct.block*, %struct.block** %bp1, align 8
  %array739 = getelementptr inbounds %struct.block, %struct.block* %623, i32 0, i32 11
  %624 = load double****, double***** %array739, align 8
  %625 = load i32, i32* %m, align 4
  %idxprom740 = sext i32 %625 to i64
  %arrayidx741 = getelementptr inbounds double***, double**** %624, i64 %idxprom740
  %626 = load double***, double**** %arrayidx741, align 8
  %627 = load i32, i32* %i2, align 4
  %idxprom742 = sext i32 %627 to i64
  %arrayidx743 = getelementptr inbounds double**, double*** %626, i64 %idxprom742
  %628 = load double**, double*** %arrayidx743, align 8
  %629 = load i32, i32* %j, align 4
  %mul744 = mul nsw i32 2, %629
  %idxprom745 = sext i32 %mul744 to i64
  %arrayidx746 = getelementptr inbounds double*, double** %628, i64 %idxprom745
  %630 = load double*, double** %arrayidx746, align 8
  %631 = load i32, i32* %k, align 4
  %mul747 = mul nsw i32 2, %631
  %sub748 = sub nsw i32 %mul747, 1
  %idxprom749 = sext i32 %sub748 to i64
  %arrayidx750 = getelementptr inbounds double, double* %630, i64 %idxprom749
  store double %div727, double* %arrayidx750, align 8
  %632 = load %struct.block*, %struct.block** %bp1, align 8
  %array751 = getelementptr inbounds %struct.block, %struct.block* %632, i32 0, i32 11
  %633 = load double****, double***** %array751, align 8
  %634 = load i32, i32* %m, align 4
  %idxprom752 = sext i32 %634 to i64
  %arrayidx753 = getelementptr inbounds double***, double**** %633, i64 %idxprom752
  %635 = load double***, double**** %arrayidx753, align 8
  %636 = load i32, i32* %i2, align 4
  %idxprom754 = sext i32 %636 to i64
  %arrayidx755 = getelementptr inbounds double**, double*** %635, i64 %idxprom754
  %637 = load double**, double*** %arrayidx755, align 8
  %638 = load i32, i32* %j, align 4
  %mul756 = mul nsw i32 2, %638
  %sub757 = sub nsw i32 %mul756, 1
  %idxprom758 = sext i32 %sub757 to i64
  %arrayidx759 = getelementptr inbounds double*, double** %637, i64 %idxprom758
  %639 = load double*, double** %arrayidx759, align 8
  %640 = load i32, i32* %k, align 4
  %mul760 = mul nsw i32 2, %640
  %idxprom761 = sext i32 %mul760 to i64
  %arrayidx762 = getelementptr inbounds double, double* %639, i64 %idxprom761
  store double %div727, double* %arrayidx762, align 8
  %641 = load %struct.block*, %struct.block** %bp1, align 8
  %array763 = getelementptr inbounds %struct.block, %struct.block* %641, i32 0, i32 11
  %642 = load double****, double***** %array763, align 8
  %643 = load i32, i32* %m, align 4
  %idxprom764 = sext i32 %643 to i64
  %arrayidx765 = getelementptr inbounds double***, double**** %642, i64 %idxprom764
  %644 = load double***, double**** %arrayidx765, align 8
  %645 = load i32, i32* %i2, align 4
  %idxprom766 = sext i32 %645 to i64
  %arrayidx767 = getelementptr inbounds double**, double*** %644, i64 %idxprom766
  %646 = load double**, double*** %arrayidx767, align 8
  %647 = load i32, i32* %j, align 4
  %mul768 = mul nsw i32 2, %647
  %sub769 = sub nsw i32 %mul768, 1
  %idxprom770 = sext i32 %sub769 to i64
  %arrayidx771 = getelementptr inbounds double*, double** %646, i64 %idxprom770
  %648 = load double*, double** %arrayidx771, align 8
  %649 = load i32, i32* %k, align 4
  %mul772 = mul nsw i32 2, %649
  %sub773 = sub nsw i32 %mul772, 1
  %idxprom774 = sext i32 %sub773 to i64
  %arrayidx775 = getelementptr inbounds double, double* %648, i64 %idxprom774
  store double %div727, double* %arrayidx775, align 8
  %650 = load %struct.block*, %struct.block** %bp1, align 8
  %array776 = getelementptr inbounds %struct.block, %struct.block* %650, i32 0, i32 11
  %651 = load double****, double***** %array776, align 8
  %652 = load i32, i32* %m, align 4
  %idxprom777 = sext i32 %652 to i64
  %arrayidx778 = getelementptr inbounds double***, double**** %651, i64 %idxprom777
  %653 = load double***, double**** %arrayidx778, align 8
  %654 = load i32, i32* %i3, align 4
  %idxprom779 = sext i32 %654 to i64
  %arrayidx780 = getelementptr inbounds double**, double*** %653, i64 %idxprom779
  %655 = load double**, double*** %arrayidx780, align 8
  %656 = load i32, i32* %j, align 4
  %mul781 = mul nsw i32 2, %656
  %sub782 = sub nsw i32 %mul781, 1
  %idxprom783 = sext i32 %sub782 to i64
  %arrayidx784 = getelementptr inbounds double*, double** %655, i64 %idxprom783
  %657 = load double*, double** %arrayidx784, align 8
  %658 = load i32, i32* %k, align 4
  %mul785 = mul nsw i32 2, %658
  %sub786 = sub nsw i32 %mul785, 1
  %idxprom787 = sext i32 %sub786 to i64
  %arrayidx788 = getelementptr inbounds double, double* %657, i64 %idxprom787
  %659 = load double, double* %arrayidx788, align 8
  %660 = load %struct.block*, %struct.block** %bp1, align 8
  %array789 = getelementptr inbounds %struct.block, %struct.block* %660, i32 0, i32 11
  %661 = load double****, double***** %array789, align 8
  %662 = load i32, i32* %m, align 4
  %idxprom790 = sext i32 %662 to i64
  %arrayidx791 = getelementptr inbounds double***, double**** %661, i64 %idxprom790
  %663 = load double***, double**** %arrayidx791, align 8
  %664 = load i32, i32* %i3, align 4
  %idxprom792 = sext i32 %664 to i64
  %arrayidx793 = getelementptr inbounds double**, double*** %663, i64 %idxprom792
  %665 = load double**, double*** %arrayidx793, align 8
  %666 = load i32, i32* %j, align 4
  %mul794 = mul nsw i32 2, %666
  %sub795 = sub nsw i32 %mul794, 1
  %idxprom796 = sext i32 %sub795 to i64
  %arrayidx797 = getelementptr inbounds double*, double** %665, i64 %idxprom796
  %667 = load double*, double** %arrayidx797, align 8
  %668 = load i32, i32* %k, align 4
  %mul798 = mul nsw i32 2, %668
  %idxprom799 = sext i32 %mul798 to i64
  %arrayidx800 = getelementptr inbounds double, double* %667, i64 %idxprom799
  %669 = load double, double* %arrayidx800, align 8
  %add801 = fadd double %659, %669
  %670 = load %struct.block*, %struct.block** %bp1, align 8
  %array802 = getelementptr inbounds %struct.block, %struct.block* %670, i32 0, i32 11
  %671 = load double****, double***** %array802, align 8
  %672 = load i32, i32* %m, align 4
  %idxprom803 = sext i32 %672 to i64
  %arrayidx804 = getelementptr inbounds double***, double**** %671, i64 %idxprom803
  %673 = load double***, double**** %arrayidx804, align 8
  %674 = load i32, i32* %i3, align 4
  %idxprom805 = sext i32 %674 to i64
  %arrayidx806 = getelementptr inbounds double**, double*** %673, i64 %idxprom805
  %675 = load double**, double*** %arrayidx806, align 8
  %676 = load i32, i32* %j, align 4
  %mul807 = mul nsw i32 2, %676
  %idxprom808 = sext i32 %mul807 to i64
  %arrayidx809 = getelementptr inbounds double*, double** %675, i64 %idxprom808
  %677 = load double*, double** %arrayidx809, align 8
  %678 = load i32, i32* %k, align 4
  %mul810 = mul nsw i32 2, %678
  %sub811 = sub nsw i32 %mul810, 1
  %idxprom812 = sext i32 %sub811 to i64
  %arrayidx813 = getelementptr inbounds double, double* %677, i64 %idxprom812
  %679 = load double, double* %arrayidx813, align 8
  %add814 = fadd double %add801, %679
  %680 = load %struct.block*, %struct.block** %bp1, align 8
  %array815 = getelementptr inbounds %struct.block, %struct.block* %680, i32 0, i32 11
  %681 = load double****, double***** %array815, align 8
  %682 = load i32, i32* %m, align 4
  %idxprom816 = sext i32 %682 to i64
  %arrayidx817 = getelementptr inbounds double***, double**** %681, i64 %idxprom816
  %683 = load double***, double**** %arrayidx817, align 8
  %684 = load i32, i32* %i3, align 4
  %idxprom818 = sext i32 %684 to i64
  %arrayidx819 = getelementptr inbounds double**, double*** %683, i64 %idxprom818
  %685 = load double**, double*** %arrayidx819, align 8
  %686 = load i32, i32* %j, align 4
  %mul820 = mul nsw i32 2, %686
  %idxprom821 = sext i32 %mul820 to i64
  %arrayidx822 = getelementptr inbounds double*, double** %685, i64 %idxprom821
  %687 = load double*, double** %arrayidx822, align 8
  %688 = load i32, i32* %k, align 4
  %mul823 = mul nsw i32 2, %688
  %idxprom824 = sext i32 %mul823 to i64
  %arrayidx825 = getelementptr inbounds double, double* %687, i64 %idxprom824
  %689 = load double, double* %arrayidx825, align 8
  %add826 = fadd double %add814, %689
  %690 = load %struct.block*, %struct.block** %bp, align 8
  %array827 = getelementptr inbounds %struct.block, %struct.block* %690, i32 0, i32 11
  %691 = load double****, double***** %array827, align 8
  %692 = load i32, i32* %m, align 4
  %idxprom828 = sext i32 %692 to i64
  %arrayidx829 = getelementptr inbounds double***, double**** %691, i64 %idxprom828
  %693 = load double***, double**** %arrayidx829, align 8
  %694 = load i32, i32* %i0, align 4
  %idxprom830 = sext i32 %694 to i64
  %arrayidx831 = getelementptr inbounds double**, double*** %693, i64 %idxprom830
  %695 = load double**, double*** %arrayidx831, align 8
  %696 = load i32, i32* %j, align 4
  %697 = load i32, i32* %j1, align 4
  %add832 = add nsw i32 %696, %697
  %idxprom833 = sext i32 %add832 to i64
  %arrayidx834 = getelementptr inbounds double*, double** %695, i64 %idxprom833
  %698 = load double*, double** %arrayidx834, align 8
  %699 = load i32, i32* %k, align 4
  %700 = load i32, i32* %k1, align 4
  %add835 = add nsw i32 %699, %700
  %idxprom836 = sext i32 %add835 to i64
  %arrayidx837 = getelementptr inbounds double, double* %698, i64 %idxprom836
  store double %add826, double* %arrayidx837, align 8
  br label %for.inc838

for.inc838:                                       ; preds = %for.body715
  %701 = load i32, i32* %k, align 4
  %inc839 = add nsw i32 %701, 1
  store i32 %inc839, i32* %k, align 4
  br label %for.cond713

for.end840:                                       ; preds = %for.cond713
  %702 = load %struct.block*, %struct.block** %bp, align 8
  %array841 = getelementptr inbounds %struct.block, %struct.block* %702, i32 0, i32 11
  %703 = load double****, double***** %array841, align 8
  %704 = load i32, i32* %m, align 4
  %idxprom842 = sext i32 %704 to i64
  %arrayidx843 = getelementptr inbounds double***, double**** %703, i64 %idxprom842
  %705 = load double***, double**** %arrayidx843, align 8
  %706 = load i32, i32* %i1, align 4
  %idxprom844 = sext i32 %706 to i64
  %arrayidx845 = getelementptr inbounds double**, double*** %705, i64 %idxprom844
  %707 = load double**, double*** %arrayidx845, align 8
  %708 = load i32, i32* %j, align 4
  %709 = load i32, i32* %j1, align 4
  %add846 = add nsw i32 %708, %709
  %idxprom847 = sext i32 %add846 to i64
  %arrayidx848 = getelementptr inbounds double*, double** %707, i64 %idxprom847
  %710 = load double*, double** %arrayidx848, align 8
  %711 = load i32, i32* %k3, align 4
  %712 = load i32, i32* %k1, align 4
  %add849 = add nsw i32 %711, %712
  %idxprom850 = sext i32 %add849 to i64
  %arrayidx851 = getelementptr inbounds double, double* %710, i64 %idxprom850
  %713 = load double, double* %arrayidx851, align 8
  %div852 = fdiv double %713, 4.000000e+00
  %714 = load %struct.block*, %struct.block** %bp1, align 8
  %array853 = getelementptr inbounds %struct.block, %struct.block* %714, i32 0, i32 11
  %715 = load double****, double***** %array853, align 8
  %716 = load i32, i32* %m, align 4
  %idxprom854 = sext i32 %716 to i64
  %arrayidx855 = getelementptr inbounds double***, double**** %715, i64 %idxprom854
  %717 = load double***, double**** %arrayidx855, align 8
  %718 = load i32, i32* %i2, align 4
  %idxprom856 = sext i32 %718 to i64
  %arrayidx857 = getelementptr inbounds double**, double*** %717, i64 %idxprom856
  %719 = load double**, double*** %arrayidx857, align 8
  %720 = load i32, i32* %j, align 4
  %mul858 = mul nsw i32 2, %720
  %idxprom859 = sext i32 %mul858 to i64
  %arrayidx860 = getelementptr inbounds double*, double** %719, i64 %idxprom859
  %721 = load double*, double** %arrayidx860, align 8
  %722 = load i32, i32* %k2, align 4
  %idxprom861 = sext i32 %722 to i64
  %arrayidx862 = getelementptr inbounds double, double* %721, i64 %idxprom861
  store double %div852, double* %arrayidx862, align 8
  %723 = load %struct.block*, %struct.block** %bp1, align 8
  %array863 = getelementptr inbounds %struct.block, %struct.block* %723, i32 0, i32 11
  %724 = load double****, double***** %array863, align 8
  %725 = load i32, i32* %m, align 4
  %idxprom864 = sext i32 %725 to i64
  %arrayidx865 = getelementptr inbounds double***, double**** %724, i64 %idxprom864
  %726 = load double***, double**** %arrayidx865, align 8
  %727 = load i32, i32* %i2, align 4
  %idxprom866 = sext i32 %727 to i64
  %arrayidx867 = getelementptr inbounds double**, double*** %726, i64 %idxprom866
  %728 = load double**, double*** %arrayidx867, align 8
  %729 = load i32, i32* %j, align 4
  %mul868 = mul nsw i32 2, %729
  %sub869 = sub nsw i32 %mul868, 1
  %idxprom870 = sext i32 %sub869 to i64
  %arrayidx871 = getelementptr inbounds double*, double** %728, i64 %idxprom870
  %730 = load double*, double** %arrayidx871, align 8
  %731 = load i32, i32* %k2, align 4
  %idxprom872 = sext i32 %731 to i64
  %arrayidx873 = getelementptr inbounds double, double* %730, i64 %idxprom872
  store double %div852, double* %arrayidx873, align 8
  br label %for.inc874

for.inc874:                                       ; preds = %for.end840
  %732 = load i32, i32* %j, align 4
  %inc875 = add nsw i32 %732, 1
  store i32 %inc875, i32* %j, align 4
  br label %for.cond615

for.end876:                                       ; preds = %for.cond615
  %733 = load %struct.block*, %struct.block** %bp, align 8
  %array877 = getelementptr inbounds %struct.block, %struct.block* %733, i32 0, i32 11
  %734 = load double****, double***** %array877, align 8
  %735 = load i32, i32* %m, align 4
  %idxprom878 = sext i32 %735 to i64
  %arrayidx879 = getelementptr inbounds double***, double**** %734, i64 %idxprom878
  %736 = load double***, double**** %arrayidx879, align 8
  %737 = load i32, i32* %i1, align 4
  %idxprom880 = sext i32 %737 to i64
  %arrayidx881 = getelementptr inbounds double**, double*** %736, i64 %idxprom880
  %738 = load double**, double*** %arrayidx881, align 8
  %739 = load i32, i32* %j3, align 4
  %740 = load i32, i32* %j1, align 4
  %add882 = add nsw i32 %739, %740
  %idxprom883 = sext i32 %add882 to i64
  %arrayidx884 = getelementptr inbounds double*, double** %738, i64 %idxprom883
  %741 = load double*, double** %arrayidx884, align 8
  %742 = load i32, i32* %k1, align 4
  %idxprom885 = sext i32 %742 to i64
  %arrayidx886 = getelementptr inbounds double, double* %741, i64 %idxprom885
  %743 = load double, double* %arrayidx886, align 8
  %div887 = fdiv double %743, 4.000000e+00
  %744 = load %struct.block*, %struct.block** %bp1, align 8
  %array888 = getelementptr inbounds %struct.block, %struct.block* %744, i32 0, i32 11
  %745 = load double****, double***** %array888, align 8
  %746 = load i32, i32* %m, align 4
  %idxprom889 = sext i32 %746 to i64
  %arrayidx890 = getelementptr inbounds double***, double**** %745, i64 %idxprom889
  %747 = load double***, double**** %arrayidx890, align 8
  %748 = load i32, i32* %i2, align 4
  %idxprom891 = sext i32 %748 to i64
  %arrayidx892 = getelementptr inbounds double**, double*** %747, i64 %idxprom891
  %749 = load double**, double*** %arrayidx892, align 8
  %750 = load i32, i32* %j2, align 4
  %idxprom893 = sext i32 %750 to i64
  %arrayidx894 = getelementptr inbounds double*, double** %749, i64 %idxprom893
  %751 = load double*, double** %arrayidx894, align 8
  %arrayidx895 = getelementptr inbounds double, double* %751, i64 0
  store double %div887, double* %arrayidx895, align 8
  store i32 1, i32* %k, align 4
  br label %for.cond896

for.cond896:                                      ; preds = %for.inc932, %for.end876
  %752 = load i32, i32* %k, align 4
  %753 = load i32, i32* @z_block_half, align 4
  %cmp897 = icmp sle i32 %752, %753
  br i1 %cmp897, label %for.body898, label %for.end934

for.body898:                                      ; preds = %for.cond896
  %754 = load %struct.block*, %struct.block** %bp, align 8
  %array899 = getelementptr inbounds %struct.block, %struct.block* %754, i32 0, i32 11
  %755 = load double****, double***** %array899, align 8
  %756 = load i32, i32* %m, align 4
  %idxprom900 = sext i32 %756 to i64
  %arrayidx901 = getelementptr inbounds double***, double**** %755, i64 %idxprom900
  %757 = load double***, double**** %arrayidx901, align 8
  %758 = load i32, i32* %i1, align 4
  %idxprom902 = sext i32 %758 to i64
  %arrayidx903 = getelementptr inbounds double**, double*** %757, i64 %idxprom902
  %759 = load double**, double*** %arrayidx903, align 8
  %760 = load i32, i32* %j3, align 4
  %761 = load i32, i32* %j1, align 4
  %add904 = add nsw i32 %760, %761
  %idxprom905 = sext i32 %add904 to i64
  %arrayidx906 = getelementptr inbounds double*, double** %759, i64 %idxprom905
  %762 = load double*, double** %arrayidx906, align 8
  %763 = load i32, i32* %k, align 4
  %764 = load i32, i32* %k1, align 4
  %add907 = add nsw i32 %763, %764
  %idxprom908 = sext i32 %add907 to i64
  %arrayidx909 = getelementptr inbounds double, double* %762, i64 %idxprom908
  %765 = load double, double* %arrayidx909, align 8
  %div910 = fdiv double %765, 4.000000e+00
  %766 = load %struct.block*, %struct.block** %bp1, align 8
  %array911 = getelementptr inbounds %struct.block, %struct.block* %766, i32 0, i32 11
  %767 = load double****, double***** %array911, align 8
  %768 = load i32, i32* %m, align 4
  %idxprom912 = sext i32 %768 to i64
  %arrayidx913 = getelementptr inbounds double***, double**** %767, i64 %idxprom912
  %769 = load double***, double**** %arrayidx913, align 8
  %770 = load i32, i32* %i2, align 4
  %idxprom914 = sext i32 %770 to i64
  %arrayidx915 = getelementptr inbounds double**, double*** %769, i64 %idxprom914
  %771 = load double**, double*** %arrayidx915, align 8
  %772 = load i32, i32* %j2, align 4
  %idxprom916 = sext i32 %772 to i64
  %arrayidx917 = getelementptr inbounds double*, double** %771, i64 %idxprom916
  %773 = load double*, double** %arrayidx917, align 8
  %774 = load i32, i32* %k, align 4
  %mul918 = mul nsw i32 2, %774
  %idxprom919 = sext i32 %mul918 to i64
  %arrayidx920 = getelementptr inbounds double, double* %773, i64 %idxprom919
  store double %div910, double* %arrayidx920, align 8
  %775 = load %struct.block*, %struct.block** %bp1, align 8
  %array921 = getelementptr inbounds %struct.block, %struct.block* %775, i32 0, i32 11
  %776 = load double****, double***** %array921, align 8
  %777 = load i32, i32* %m, align 4
  %idxprom922 = sext i32 %777 to i64
  %arrayidx923 = getelementptr inbounds double***, double**** %776, i64 %idxprom922
  %778 = load double***, double**** %arrayidx923, align 8
  %779 = load i32, i32* %i2, align 4
  %idxprom924 = sext i32 %779 to i64
  %arrayidx925 = getelementptr inbounds double**, double*** %778, i64 %idxprom924
  %780 = load double**, double*** %arrayidx925, align 8
  %781 = load i32, i32* %j2, align 4
  %idxprom926 = sext i32 %781 to i64
  %arrayidx927 = getelementptr inbounds double*, double** %780, i64 %idxprom926
  %782 = load double*, double** %arrayidx927, align 8
  %783 = load i32, i32* %k, align 4
  %mul928 = mul nsw i32 2, %783
  %sub929 = sub nsw i32 %mul928, 1
  %idxprom930 = sext i32 %sub929 to i64
  %arrayidx931 = getelementptr inbounds double, double* %782, i64 %idxprom930
  store double %div910, double* %arrayidx931, align 8
  br label %for.inc932

for.inc932:                                       ; preds = %for.body898
  %784 = load i32, i32* %k, align 4
  %inc933 = add nsw i32 %784, 1
  store i32 %inc933, i32* %k, align 4
  br label %for.cond896

for.end934:                                       ; preds = %for.cond896
  %785 = load %struct.block*, %struct.block** %bp, align 8
  %array935 = getelementptr inbounds %struct.block, %struct.block* %785, i32 0, i32 11
  %786 = load double****, double***** %array935, align 8
  %787 = load i32, i32* %m, align 4
  %idxprom936 = sext i32 %787 to i64
  %arrayidx937 = getelementptr inbounds double***, double**** %786, i64 %idxprom936
  %788 = load double***, double**** %arrayidx937, align 8
  %789 = load i32, i32* %i1, align 4
  %idxprom938 = sext i32 %789 to i64
  %arrayidx939 = getelementptr inbounds double**, double*** %788, i64 %idxprom938
  %790 = load double**, double*** %arrayidx939, align 8
  %791 = load i32, i32* %j3, align 4
  %792 = load i32, i32* %j1, align 4
  %add940 = add nsw i32 %791, %792
  %idxprom941 = sext i32 %add940 to i64
  %arrayidx942 = getelementptr inbounds double*, double** %790, i64 %idxprom941
  %793 = load double*, double** %arrayidx942, align 8
  %794 = load i32, i32* %k3, align 4
  %795 = load i32, i32* %k1, align 4
  %add943 = add nsw i32 %794, %795
  %idxprom944 = sext i32 %add943 to i64
  %arrayidx945 = getelementptr inbounds double, double* %793, i64 %idxprom944
  %796 = load double, double* %arrayidx945, align 8
  %div946 = fdiv double %796, 4.000000e+00
  %797 = load %struct.block*, %struct.block** %bp1, align 8
  %array947 = getelementptr inbounds %struct.block, %struct.block* %797, i32 0, i32 11
  %798 = load double****, double***** %array947, align 8
  %799 = load i32, i32* %m, align 4
  %idxprom948 = sext i32 %799 to i64
  %arrayidx949 = getelementptr inbounds double***, double**** %798, i64 %idxprom948
  %800 = load double***, double**** %arrayidx949, align 8
  %801 = load i32, i32* %i2, align 4
  %idxprom950 = sext i32 %801 to i64
  %arrayidx951 = getelementptr inbounds double**, double*** %800, i64 %idxprom950
  %802 = load double**, double*** %arrayidx951, align 8
  %803 = load i32, i32* %j2, align 4
  %idxprom952 = sext i32 %803 to i64
  %arrayidx953 = getelementptr inbounds double*, double** %802, i64 %idxprom952
  %804 = load double*, double** %arrayidx953, align 8
  %805 = load i32, i32* %k2, align 4
  %idxprom954 = sext i32 %805 to i64
  %arrayidx955 = getelementptr inbounds double, double* %804, i64 %idxprom954
  store double %div946, double* %arrayidx955, align 8
  %806 = load i32, i32* %jq.addr, align 4
  %cmp956 = icmp eq i32 %806, 1
  br i1 %cmp956, label %if.then957, label %if.end1034

if.then957:                                       ; preds = %for.end934
  %807 = load i32, i32* %iq.addr, align 4
  %cmp958 = icmp eq i32 %807, 0
  br i1 %cmp958, label %if.then959, label %if.else976

if.then959:                                       ; preds = %if.then957
  %808 = load %struct.block*, %struct.block** %bp1, align 8
  %array960 = getelementptr inbounds %struct.block, %struct.block* %808, i32 0, i32 11
  %809 = load double****, double***** %array960, align 8
  %810 = load i32, i32* %m, align 4
  %idxprom961 = sext i32 %810 to i64
  %arrayidx962 = getelementptr inbounds double***, double**** %809, i64 %idxprom961
  %811 = load double***, double**** %arrayidx962, align 8
  %812 = load i32, i32* %i3, align 4
  %idxprom963 = sext i32 %812 to i64
  %arrayidx964 = getelementptr inbounds double**, double*** %811, i64 %idxprom963
  %813 = load double**, double*** %arrayidx964, align 8
  %814 = load i32, i32* %j2, align 4
  %idxprom965 = sext i32 %814 to i64
  %arrayidx966 = getelementptr inbounds double*, double** %813, i64 %idxprom965
  %815 = load double*, double** %arrayidx966, align 8
  %arrayidx967 = getelementptr inbounds double, double* %815, i64 0
  %816 = load double, double* %arrayidx967, align 8
  %817 = load %struct.block*, %struct.block** %bp, align 8
  %array968 = getelementptr inbounds %struct.block, %struct.block* %817, i32 0, i32 11
  %818 = load double****, double***** %array968, align 8
  %819 = load i32, i32* %m, align 4
  %idxprom969 = sext i32 %819 to i64
  %arrayidx970 = getelementptr inbounds double***, double**** %818, i64 %idxprom969
  %820 = load double***, double**** %arrayidx970, align 8
  %821 = load i32, i32* %i0, align 4
  %idxprom971 = sext i32 %821 to i64
  %arrayidx972 = getelementptr inbounds double**, double*** %820, i64 %idxprom971
  %822 = load double**, double*** %arrayidx972, align 8
  %823 = load i32, i32* %j2, align 4
  %idxprom973 = sext i32 %823 to i64
  %arrayidx974 = getelementptr inbounds double*, double** %822, i64 %idxprom973
  %824 = load double*, double** %arrayidx974, align 8
  %arrayidx975 = getelementptr inbounds double, double* %824, i64 0
  store double %816, double* %arrayidx975, align 8
  br label %if.end995

if.else976:                                       ; preds = %if.then957
  %825 = load %struct.block*, %struct.block** %bp1, align 8
  %array977 = getelementptr inbounds %struct.block, %struct.block* %825, i32 0, i32 11
  %826 = load double****, double***** %array977, align 8
  %827 = load i32, i32* %m, align 4
  %idxprom978 = sext i32 %827 to i64
  %arrayidx979 = getelementptr inbounds double***, double**** %826, i64 %idxprom978
  %828 = load double***, double**** %arrayidx979, align 8
  %829 = load i32, i32* %i3, align 4
  %idxprom980 = sext i32 %829 to i64
  %arrayidx981 = getelementptr inbounds double**, double*** %828, i64 %idxprom980
  %830 = load double**, double*** %arrayidx981, align 8
  %831 = load i32, i32* %j2, align 4
  %idxprom982 = sext i32 %831 to i64
  %arrayidx983 = getelementptr inbounds double*, double** %830, i64 %idxprom982
  %832 = load double*, double** %arrayidx983, align 8
  %833 = load i32, i32* %k2, align 4
  %idxprom984 = sext i32 %833 to i64
  %arrayidx985 = getelementptr inbounds double, double* %832, i64 %idxprom984
  %834 = load double, double* %arrayidx985, align 8
  %835 = load %struct.block*, %struct.block** %bp, align 8
  %array986 = getelementptr inbounds %struct.block, %struct.block* %835, i32 0, i32 11
  %836 = load double****, double***** %array986, align 8
  %837 = load i32, i32* %m, align 4
  %idxprom987 = sext i32 %837 to i64
  %arrayidx988 = getelementptr inbounds double***, double**** %836, i64 %idxprom987
  %838 = load double***, double**** %arrayidx988, align 8
  %839 = load i32, i32* %i0, align 4
  %idxprom989 = sext i32 %839 to i64
  %arrayidx990 = getelementptr inbounds double**, double*** %838, i64 %idxprom989
  %840 = load double**, double*** %arrayidx990, align 8
  %841 = load i32, i32* %j2, align 4
  %idxprom991 = sext i32 %841 to i64
  %arrayidx992 = getelementptr inbounds double*, double** %840, i64 %idxprom991
  %842 = load double*, double** %arrayidx992, align 8
  %843 = load i32, i32* %k2, align 4
  %idxprom993 = sext i32 %843 to i64
  %arrayidx994 = getelementptr inbounds double, double* %842, i64 %idxprom993
  store double %834, double* %arrayidx994, align 8
  br label %if.end995

if.end995:                                        ; preds = %if.else976, %if.then959
  store i32 1, i32* %k, align 4
  br label %for.cond996

for.cond996:                                      ; preds = %for.inc1031, %if.end995
  %844 = load i32, i32* %k, align 4
  %845 = load i32, i32* @z_block_half, align 4
  %cmp997 = icmp sle i32 %844, %845
  br i1 %cmp997, label %for.body998, label %for.end1033

for.body998:                                      ; preds = %for.cond996
  %846 = load %struct.block*, %struct.block** %bp1, align 8
  %array999 = getelementptr inbounds %struct.block, %struct.block* %846, i32 0, i32 11
  %847 = load double****, double***** %array999, align 8
  %848 = load i32, i32* %m, align 4
  %idxprom1000 = sext i32 %848 to i64
  %arrayidx1001 = getelementptr inbounds double***, double**** %847, i64 %idxprom1000
  %849 = load double***, double**** %arrayidx1001, align 8
  %850 = load i32, i32* %i3, align 4
  %idxprom1002 = sext i32 %850 to i64
  %arrayidx1003 = getelementptr inbounds double**, double*** %849, i64 %idxprom1002
  %851 = load double**, double*** %arrayidx1003, align 8
  %852 = load i32, i32* %j2, align 4
  %idxprom1004 = sext i32 %852 to i64
  %arrayidx1005 = getelementptr inbounds double*, double** %851, i64 %idxprom1004
  %853 = load double*, double** %arrayidx1005, align 8
  %854 = load i32, i32* %k, align 4
  %mul1006 = mul nsw i32 2, %854
  %sub1007 = sub nsw i32 %mul1006, 1
  %idxprom1008 = sext i32 %sub1007 to i64
  %arrayidx1009 = getelementptr inbounds double, double* %853, i64 %idxprom1008
  %855 = load double, double* %arrayidx1009, align 8
  %856 = load %struct.block*, %struct.block** %bp1, align 8
  %array1010 = getelementptr inbounds %struct.block, %struct.block* %856, i32 0, i32 11
  %857 = load double****, double***** %array1010, align 8
  %858 = load i32, i32* %m, align 4
  %idxprom1011 = sext i32 %858 to i64
  %arrayidx1012 = getelementptr inbounds double***, double**** %857, i64 %idxprom1011
  %859 = load double***, double**** %arrayidx1012, align 8
  %860 = load i32, i32* %i3, align 4
  %idxprom1013 = sext i32 %860 to i64
  %arrayidx1014 = getelementptr inbounds double**, double*** %859, i64 %idxprom1013
  %861 = load double**, double*** %arrayidx1014, align 8
  %862 = load i32, i32* %j2, align 4
  %idxprom1015 = sext i32 %862 to i64
  %arrayidx1016 = getelementptr inbounds double*, double** %861, i64 %idxprom1015
  %863 = load double*, double** %arrayidx1016, align 8
  %864 = load i32, i32* %k, align 4
  %mul1017 = mul nsw i32 2, %864
  %idxprom1018 = sext i32 %mul1017 to i64
  %arrayidx1019 = getelementptr inbounds double, double* %863, i64 %idxprom1018
  %865 = load double, double* %arrayidx1019, align 8
  %add1020 = fadd double %855, %865
  %866 = load %struct.block*, %struct.block** %bp, align 8
  %array1021 = getelementptr inbounds %struct.block, %struct.block* %866, i32 0, i32 11
  %867 = load double****, double***** %array1021, align 8
  %868 = load i32, i32* %m, align 4
  %idxprom1022 = sext i32 %868 to i64
  %arrayidx1023 = getelementptr inbounds double***, double**** %867, i64 %idxprom1022
  %869 = load double***, double**** %arrayidx1023, align 8
  %870 = load i32, i32* %i0, align 4
  %idxprom1024 = sext i32 %870 to i64
  %arrayidx1025 = getelementptr inbounds double**, double*** %869, i64 %idxprom1024
  %871 = load double**, double*** %arrayidx1025, align 8
  %872 = load i32, i32* %j2, align 4
  %idxprom1026 = sext i32 %872 to i64
  %arrayidx1027 = getelementptr inbounds double*, double** %871, i64 %idxprom1026
  %873 = load double*, double** %arrayidx1027, align 8
  %874 = load i32, i32* %k, align 4
  %875 = load i32, i32* %k1, align 4
  %add1028 = add nsw i32 %874, %875
  %idxprom1029 = sext i32 %add1028 to i64
  %arrayidx1030 = getelementptr inbounds double, double* %873, i64 %idxprom1029
  store double %add1020, double* %arrayidx1030, align 8
  br label %for.inc1031

for.inc1031:                                      ; preds = %for.body998
  %876 = load i32, i32* %k, align 4
  %inc1032 = add nsw i32 %876, 1
  store i32 %inc1032, i32* %k, align 4
  br label %for.cond996

for.end1033:                                      ; preds = %for.cond996
  br label %if.end1034

if.end1034:                                       ; preds = %for.end1033, %for.end934
  br label %for.inc1035

for.inc1035:                                      ; preds = %if.end1034
  %877 = load i32, i32* %m, align 4
  %inc1036 = add nsw i32 %877, 1
  store i32 %inc1036, i32* %m, align 4
  br label %for.cond467

for.end1037:                                      ; preds = %for.cond467
  br label %if.end2214

if.else1038:                                      ; preds = %if.else451
  %878 = load i32, i32* %l.addr, align 4
  %div1039 = sdiv i32 %878, 2
  %cmp1040 = icmp eq i32 %div1039, 1
  br i1 %cmp1040, label %if.then1041, label %if.else1625

if.then1041:                                      ; preds = %if.else1038
  %879 = load i32, i32* %l.addr, align 4
  %cmp1042 = icmp eq i32 %879, 2
  br i1 %cmp1042, label %if.then1043, label %if.else1045

if.then1043:                                      ; preds = %if.then1041
  store i32 0, i32* %j0, align 4
  store i32 1, i32* %j1, align 4
  %880 = load i32, i32* @y_block_size, align 4
  %add1044 = add nsw i32 %880, 1
  store i32 %add1044, i32* %j2, align 4
  %881 = load i32, i32* @y_block_size, align 4
  store i32 %881, i32* %j3, align 4
  br label %if.end1047

if.else1045:                                      ; preds = %if.then1041
  %882 = load i32, i32* @y_block_size, align 4
  %add1046 = add nsw i32 %882, 1
  store i32 %add1046, i32* %j0, align 4
  %883 = load i32, i32* @y_block_size, align 4
  store i32 %883, i32* %j1, align 4
  store i32 0, i32* %j2, align 4
  store i32 1, i32* %j3, align 4
  br label %if.end1047

if.end1047:                                       ; preds = %if.else1045, %if.then1043
  %884 = load i32, i32* %jq.addr, align 4
  %885 = load i32, i32* @x_block_half, align 4
  %mul1048 = mul nsw i32 %884, %885
  store i32 %mul1048, i32* %i1, align 4
  %886 = load i32, i32* %iq.addr, align 4
  %887 = load i32, i32* @z_block_half, align 4
  %mul1049 = mul nsw i32 %886, %887
  store i32 %mul1049, i32* %k1, align 4
  %888 = load i32, i32* @x_block_size, align 4
  %add1050 = add nsw i32 %888, 1
  store i32 %add1050, i32* %i2, align 4
  %889 = load i32, i32* @x_block_half, align 4
  %add1051 = add nsw i32 %889, 1
  store i32 %add1051, i32* %i3, align 4
  %890 = load i32, i32* @z_block_size, align 4
  %add1052 = add nsw i32 %890, 1
  store i32 %add1052, i32* %k2, align 4
  %891 = load i32, i32* @z_block_half, align 4
  %add1053 = add nsw i32 %891, 1
  store i32 %add1053, i32* %k3, align 4
  %892 = load i32, i32* %start.addr, align 4
  store i32 %892, i32* %m, align 4
  br label %for.cond1054

for.cond1054:                                     ; preds = %for.inc1622, %if.end1047
  %893 = load i32, i32* %m, align 4
  %894 = load i32, i32* %start.addr, align 4
  %895 = load i32, i32* %num_comm.addr, align 4
  %add1055 = add nsw i32 %894, %895
  %cmp1056 = icmp slt i32 %893, %add1055
  br i1 %cmp1056, label %for.body1057, label %for.end1624

for.body1057:                                     ; preds = %for.cond1054
  %896 = load %struct.block*, %struct.block** %bp, align 8
  %array1058 = getelementptr inbounds %struct.block, %struct.block* %896, i32 0, i32 11
  %897 = load double****, double***** %array1058, align 8
  %898 = load i32, i32* %m, align 4
  %idxprom1059 = sext i32 %898 to i64
  %arrayidx1060 = getelementptr inbounds double***, double**** %897, i64 %idxprom1059
  %899 = load double***, double**** %arrayidx1060, align 8
  %900 = load i32, i32* %i1, align 4
  %idxprom1061 = sext i32 %900 to i64
  %arrayidx1062 = getelementptr inbounds double**, double*** %899, i64 %idxprom1061
  %901 = load double**, double*** %arrayidx1062, align 8
  %902 = load i32, i32* %j1, align 4
  %idxprom1063 = sext i32 %902 to i64
  %arrayidx1064 = getelementptr inbounds double*, double** %901, i64 %idxprom1063
  %903 = load double*, double** %arrayidx1064, align 8
  %904 = load i32, i32* %k1, align 4
  %idxprom1065 = sext i32 %904 to i64
  %arrayidx1066 = getelementptr inbounds double, double* %903, i64 %idxprom1065
  %905 = load double, double* %arrayidx1066, align 8
  %div1067 = fdiv double %905, 4.000000e+00
  %906 = load %struct.block*, %struct.block** %bp1, align 8
  %array1068 = getelementptr inbounds %struct.block, %struct.block* %906, i32 0, i32 11
  %907 = load double****, double***** %array1068, align 8
  %908 = load i32, i32* %m, align 4
  %idxprom1069 = sext i32 %908 to i64
  %arrayidx1070 = getelementptr inbounds double***, double**** %907, i64 %idxprom1069
  %909 = load double***, double**** %arrayidx1070, align 8
  %arrayidx1071 = getelementptr inbounds double**, double*** %909, i64 0
  %910 = load double**, double*** %arrayidx1071, align 8
  %911 = load i32, i32* %j2, align 4
  %idxprom1072 = sext i32 %911 to i64
  %arrayidx1073 = getelementptr inbounds double*, double** %910, i64 %idxprom1072
  %912 = load double*, double** %arrayidx1073, align 8
  %arrayidx1074 = getelementptr inbounds double, double* %912, i64 0
  store double %div1067, double* %arrayidx1074, align 8
  store i32 1, i32* %k, align 4
  br label %for.cond1075

for.cond1075:                                     ; preds = %for.inc1108, %for.body1057
  %913 = load i32, i32* %k, align 4
  %914 = load i32, i32* @z_block_half, align 4
  %cmp1076 = icmp sle i32 %913, %914
  br i1 %cmp1076, label %for.body1077, label %for.end1110

for.body1077:                                     ; preds = %for.cond1075
  %915 = load %struct.block*, %struct.block** %bp, align 8
  %array1078 = getelementptr inbounds %struct.block, %struct.block* %915, i32 0, i32 11
  %916 = load double****, double***** %array1078, align 8
  %917 = load i32, i32* %m, align 4
  %idxprom1079 = sext i32 %917 to i64
  %arrayidx1080 = getelementptr inbounds double***, double**** %916, i64 %idxprom1079
  %918 = load double***, double**** %arrayidx1080, align 8
  %919 = load i32, i32* %i1, align 4
  %idxprom1081 = sext i32 %919 to i64
  %arrayidx1082 = getelementptr inbounds double**, double*** %918, i64 %idxprom1081
  %920 = load double**, double*** %arrayidx1082, align 8
  %921 = load i32, i32* %j1, align 4
  %idxprom1083 = sext i32 %921 to i64
  %arrayidx1084 = getelementptr inbounds double*, double** %920, i64 %idxprom1083
  %922 = load double*, double** %arrayidx1084, align 8
  %923 = load i32, i32* %k, align 4
  %924 = load i32, i32* %k1, align 4
  %add1085 = add nsw i32 %923, %924
  %idxprom1086 = sext i32 %add1085 to i64
  %arrayidx1087 = getelementptr inbounds double, double* %922, i64 %idxprom1086
  %925 = load double, double* %arrayidx1087, align 8
  %div1088 = fdiv double %925, 4.000000e+00
  %926 = load %struct.block*, %struct.block** %bp1, align 8
  %array1089 = getelementptr inbounds %struct.block, %struct.block* %926, i32 0, i32 11
  %927 = load double****, double***** %array1089, align 8
  %928 = load i32, i32* %m, align 4
  %idxprom1090 = sext i32 %928 to i64
  %arrayidx1091 = getelementptr inbounds double***, double**** %927, i64 %idxprom1090
  %929 = load double***, double**** %arrayidx1091, align 8
  %arrayidx1092 = getelementptr inbounds double**, double*** %929, i64 0
  %930 = load double**, double*** %arrayidx1092, align 8
  %931 = load i32, i32* %j2, align 4
  %idxprom1093 = sext i32 %931 to i64
  %arrayidx1094 = getelementptr inbounds double*, double** %930, i64 %idxprom1093
  %932 = load double*, double** %arrayidx1094, align 8
  %933 = load i32, i32* %k, align 4
  %mul1095 = mul nsw i32 2, %933
  %idxprom1096 = sext i32 %mul1095 to i64
  %arrayidx1097 = getelementptr inbounds double, double* %932, i64 %idxprom1096
  store double %div1088, double* %arrayidx1097, align 8
  %934 = load %struct.block*, %struct.block** %bp1, align 8
  %array1098 = getelementptr inbounds %struct.block, %struct.block* %934, i32 0, i32 11
  %935 = load double****, double***** %array1098, align 8
  %936 = load i32, i32* %m, align 4
  %idxprom1099 = sext i32 %936 to i64
  %arrayidx1100 = getelementptr inbounds double***, double**** %935, i64 %idxprom1099
  %937 = load double***, double**** %arrayidx1100, align 8
  %arrayidx1101 = getelementptr inbounds double**, double*** %937, i64 0
  %938 = load double**, double*** %arrayidx1101, align 8
  %939 = load i32, i32* %j2, align 4
  %idxprom1102 = sext i32 %939 to i64
  %arrayidx1103 = getelementptr inbounds double*, double** %938, i64 %idxprom1102
  %940 = load double*, double** %arrayidx1103, align 8
  %941 = load i32, i32* %k, align 4
  %mul1104 = mul nsw i32 2, %941
  %sub1105 = sub nsw i32 %mul1104, 1
  %idxprom1106 = sext i32 %sub1105 to i64
  %arrayidx1107 = getelementptr inbounds double, double* %940, i64 %idxprom1106
  store double %div1088, double* %arrayidx1107, align 8
  br label %for.inc1108

for.inc1108:                                      ; preds = %for.body1077
  %942 = load i32, i32* %k, align 4
  %inc1109 = add nsw i32 %942, 1
  store i32 %inc1109, i32* %k, align 4
  br label %for.cond1075

for.end1110:                                      ; preds = %for.cond1075
  %943 = load %struct.block*, %struct.block** %bp, align 8
  %array1111 = getelementptr inbounds %struct.block, %struct.block* %943, i32 0, i32 11
  %944 = load double****, double***** %array1111, align 8
  %945 = load i32, i32* %m, align 4
  %idxprom1112 = sext i32 %945 to i64
  %arrayidx1113 = getelementptr inbounds double***, double**** %944, i64 %idxprom1112
  %946 = load double***, double**** %arrayidx1113, align 8
  %947 = load i32, i32* %i1, align 4
  %idxprom1114 = sext i32 %947 to i64
  %arrayidx1115 = getelementptr inbounds double**, double*** %946, i64 %idxprom1114
  %948 = load double**, double*** %arrayidx1115, align 8
  %949 = load i32, i32* %j1, align 4
  %idxprom1116 = sext i32 %949 to i64
  %arrayidx1117 = getelementptr inbounds double*, double** %948, i64 %idxprom1116
  %950 = load double*, double** %arrayidx1117, align 8
  %951 = load i32, i32* %k3, align 4
  %952 = load i32, i32* %k1, align 4
  %add1118 = add nsw i32 %951, %952
  %idxprom1119 = sext i32 %add1118 to i64
  %arrayidx1120 = getelementptr inbounds double, double* %950, i64 %idxprom1119
  %953 = load double, double* %arrayidx1120, align 8
  %div1121 = fdiv double %953, 4.000000e+00
  %954 = load %struct.block*, %struct.block** %bp1, align 8
  %array1122 = getelementptr inbounds %struct.block, %struct.block* %954, i32 0, i32 11
  %955 = load double****, double***** %array1122, align 8
  %956 = load i32, i32* %m, align 4
  %idxprom1123 = sext i32 %956 to i64
  %arrayidx1124 = getelementptr inbounds double***, double**** %955, i64 %idxprom1123
  %957 = load double***, double**** %arrayidx1124, align 8
  %arrayidx1125 = getelementptr inbounds double**, double*** %957, i64 0
  %958 = load double**, double*** %arrayidx1125, align 8
  %959 = load i32, i32* %j2, align 4
  %idxprom1126 = sext i32 %959 to i64
  %arrayidx1127 = getelementptr inbounds double*, double** %958, i64 %idxprom1126
  %960 = load double*, double** %arrayidx1127, align 8
  %961 = load i32, i32* %k2, align 4
  %idxprom1128 = sext i32 %961 to i64
  %arrayidx1129 = getelementptr inbounds double, double* %960, i64 %idxprom1128
  store double %div1121, double* %arrayidx1129, align 8
  %962 = load i32, i32* %jq.addr, align 4
  %cmp1130 = icmp eq i32 %962, 0
  br i1 %cmp1130, label %if.then1131, label %if.end1201

if.then1131:                                      ; preds = %for.end1110
  %963 = load i32, i32* %iq.addr, align 4
  %cmp1132 = icmp eq i32 %963, 0
  br i1 %cmp1132, label %if.then1133, label %if.else1148

if.then1133:                                      ; preds = %if.then1131
  %964 = load %struct.block*, %struct.block** %bp1, align 8
  %array1134 = getelementptr inbounds %struct.block, %struct.block* %964, i32 0, i32 11
  %965 = load double****, double***** %array1134, align 8
  %966 = load i32, i32* %m, align 4
  %idxprom1135 = sext i32 %966 to i64
  %arrayidx1136 = getelementptr inbounds double***, double**** %965, i64 %idxprom1135
  %967 = load double***, double**** %arrayidx1136, align 8
  %arrayidx1137 = getelementptr inbounds double**, double*** %967, i64 0
  %968 = load double**, double*** %arrayidx1137, align 8
  %969 = load i32, i32* %j3, align 4
  %idxprom1138 = sext i32 %969 to i64
  %arrayidx1139 = getelementptr inbounds double*, double** %968, i64 %idxprom1138
  %970 = load double*, double** %arrayidx1139, align 8
  %arrayidx1140 = getelementptr inbounds double, double* %970, i64 0
  %971 = load double, double* %arrayidx1140, align 8
  %972 = load %struct.block*, %struct.block** %bp, align 8
  %array1141 = getelementptr inbounds %struct.block, %struct.block* %972, i32 0, i32 11
  %973 = load double****, double***** %array1141, align 8
  %974 = load i32, i32* %m, align 4
  %idxprom1142 = sext i32 %974 to i64
  %arrayidx1143 = getelementptr inbounds double***, double**** %973, i64 %idxprom1142
  %975 = load double***, double**** %arrayidx1143, align 8
  %arrayidx1144 = getelementptr inbounds double**, double*** %975, i64 0
  %976 = load double**, double*** %arrayidx1144, align 8
  %977 = load i32, i32* %j0, align 4
  %idxprom1145 = sext i32 %977 to i64
  %arrayidx1146 = getelementptr inbounds double*, double** %976, i64 %idxprom1145
  %978 = load double*, double** %arrayidx1146, align 8
  %arrayidx1147 = getelementptr inbounds double, double* %978, i64 0
  store double %971, double* %arrayidx1147, align 8
  br label %if.end1165

if.else1148:                                      ; preds = %if.then1131
  %979 = load %struct.block*, %struct.block** %bp1, align 8
  %array1149 = getelementptr inbounds %struct.block, %struct.block* %979, i32 0, i32 11
  %980 = load double****, double***** %array1149, align 8
  %981 = load i32, i32* %m, align 4
  %idxprom1150 = sext i32 %981 to i64
  %arrayidx1151 = getelementptr inbounds double***, double**** %980, i64 %idxprom1150
  %982 = load double***, double**** %arrayidx1151, align 8
  %arrayidx1152 = getelementptr inbounds double**, double*** %982, i64 0
  %983 = load double**, double*** %arrayidx1152, align 8
  %984 = load i32, i32* %j3, align 4
  %idxprom1153 = sext i32 %984 to i64
  %arrayidx1154 = getelementptr inbounds double*, double** %983, i64 %idxprom1153
  %985 = load double*, double** %arrayidx1154, align 8
  %986 = load i32, i32* %k2, align 4
  %idxprom1155 = sext i32 %986 to i64
  %arrayidx1156 = getelementptr inbounds double, double* %985, i64 %idxprom1155
  %987 = load double, double* %arrayidx1156, align 8
  %988 = load %struct.block*, %struct.block** %bp, align 8
  %array1157 = getelementptr inbounds %struct.block, %struct.block* %988, i32 0, i32 11
  %989 = load double****, double***** %array1157, align 8
  %990 = load i32, i32* %m, align 4
  %idxprom1158 = sext i32 %990 to i64
  %arrayidx1159 = getelementptr inbounds double***, double**** %989, i64 %idxprom1158
  %991 = load double***, double**** %arrayidx1159, align 8
  %arrayidx1160 = getelementptr inbounds double**, double*** %991, i64 0
  %992 = load double**, double*** %arrayidx1160, align 8
  %993 = load i32, i32* %j0, align 4
  %idxprom1161 = sext i32 %993 to i64
  %arrayidx1162 = getelementptr inbounds double*, double** %992, i64 %idxprom1161
  %994 = load double*, double** %arrayidx1162, align 8
  %995 = load i32, i32* %k2, align 4
  %idxprom1163 = sext i32 %995 to i64
  %arrayidx1164 = getelementptr inbounds double, double* %994, i64 %idxprom1163
  store double %987, double* %arrayidx1164, align 8
  br label %if.end1165

if.end1165:                                       ; preds = %if.else1148, %if.then1133
  store i32 1, i32* %k, align 4
  br label %for.cond1166

for.cond1166:                                     ; preds = %for.inc1198, %if.end1165
  %996 = load i32, i32* %k, align 4
  %997 = load i32, i32* @z_block_half, align 4
  %cmp1167 = icmp sle i32 %996, %997
  br i1 %cmp1167, label %for.body1168, label %for.end1200

for.body1168:                                     ; preds = %for.cond1166
  %998 = load %struct.block*, %struct.block** %bp1, align 8
  %array1169 = getelementptr inbounds %struct.block, %struct.block* %998, i32 0, i32 11
  %999 = load double****, double***** %array1169, align 8
  %1000 = load i32, i32* %m, align 4
  %idxprom1170 = sext i32 %1000 to i64
  %arrayidx1171 = getelementptr inbounds double***, double**** %999, i64 %idxprom1170
  %1001 = load double***, double**** %arrayidx1171, align 8
  %arrayidx1172 = getelementptr inbounds double**, double*** %1001, i64 0
  %1002 = load double**, double*** %arrayidx1172, align 8
  %1003 = load i32, i32* %j3, align 4
  %idxprom1173 = sext i32 %1003 to i64
  %arrayidx1174 = getelementptr inbounds double*, double** %1002, i64 %idxprom1173
  %1004 = load double*, double** %arrayidx1174, align 8
  %1005 = load i32, i32* %k, align 4
  %mul1175 = mul nsw i32 2, %1005
  %sub1176 = sub nsw i32 %mul1175, 1
  %idxprom1177 = sext i32 %sub1176 to i64
  %arrayidx1178 = getelementptr inbounds double, double* %1004, i64 %idxprom1177
  %1006 = load double, double* %arrayidx1178, align 8
  %1007 = load %struct.block*, %struct.block** %bp1, align 8
  %array1179 = getelementptr inbounds %struct.block, %struct.block* %1007, i32 0, i32 11
  %1008 = load double****, double***** %array1179, align 8
  %1009 = load i32, i32* %m, align 4
  %idxprom1180 = sext i32 %1009 to i64
  %arrayidx1181 = getelementptr inbounds double***, double**** %1008, i64 %idxprom1180
  %1010 = load double***, double**** %arrayidx1181, align 8
  %arrayidx1182 = getelementptr inbounds double**, double*** %1010, i64 0
  %1011 = load double**, double*** %arrayidx1182, align 8
  %1012 = load i32, i32* %j3, align 4
  %idxprom1183 = sext i32 %1012 to i64
  %arrayidx1184 = getelementptr inbounds double*, double** %1011, i64 %idxprom1183
  %1013 = load double*, double** %arrayidx1184, align 8
  %1014 = load i32, i32* %k, align 4
  %mul1185 = mul nsw i32 2, %1014
  %idxprom1186 = sext i32 %mul1185 to i64
  %arrayidx1187 = getelementptr inbounds double, double* %1013, i64 %idxprom1186
  %1015 = load double, double* %arrayidx1187, align 8
  %add1188 = fadd double %1006, %1015
  %1016 = load %struct.block*, %struct.block** %bp, align 8
  %array1189 = getelementptr inbounds %struct.block, %struct.block* %1016, i32 0, i32 11
  %1017 = load double****, double***** %array1189, align 8
  %1018 = load i32, i32* %m, align 4
  %idxprom1190 = sext i32 %1018 to i64
  %arrayidx1191 = getelementptr inbounds double***, double**** %1017, i64 %idxprom1190
  %1019 = load double***, double**** %arrayidx1191, align 8
  %arrayidx1192 = getelementptr inbounds double**, double*** %1019, i64 0
  %1020 = load double**, double*** %arrayidx1192, align 8
  %1021 = load i32, i32* %j0, align 4
  %idxprom1193 = sext i32 %1021 to i64
  %arrayidx1194 = getelementptr inbounds double*, double** %1020, i64 %idxprom1193
  %1022 = load double*, double** %arrayidx1194, align 8
  %1023 = load i32, i32* %k, align 4
  %1024 = load i32, i32* %k1, align 4
  %add1195 = add nsw i32 %1023, %1024
  %idxprom1196 = sext i32 %add1195 to i64
  %arrayidx1197 = getelementptr inbounds double, double* %1022, i64 %idxprom1196
  store double %add1188, double* %arrayidx1197, align 8
  br label %for.inc1198

for.inc1198:                                      ; preds = %for.body1168
  %1025 = load i32, i32* %k, align 4
  %inc1199 = add nsw i32 %1025, 1
  store i32 %inc1199, i32* %k, align 4
  br label %for.cond1166

for.end1200:                                      ; preds = %for.cond1166
  br label %if.end1201

if.end1201:                                       ; preds = %for.end1200, %for.end1110
  store i32 1, i32* %i, align 4
  br label %for.cond1202

for.cond1202:                                     ; preds = %for.inc1461, %if.end1201
  %1026 = load i32, i32* %i, align 4
  %1027 = load i32, i32* @x_block_half, align 4
  %cmp1203 = icmp sle i32 %1026, %1027
  br i1 %cmp1203, label %for.body1204, label %for.end1463

for.body1204:                                     ; preds = %for.cond1202
  %1028 = load %struct.block*, %struct.block** %bp, align 8
  %array1205 = getelementptr inbounds %struct.block, %struct.block* %1028, i32 0, i32 11
  %1029 = load double****, double***** %array1205, align 8
  %1030 = load i32, i32* %m, align 4
  %idxprom1206 = sext i32 %1030 to i64
  %arrayidx1207 = getelementptr inbounds double***, double**** %1029, i64 %idxprom1206
  %1031 = load double***, double**** %arrayidx1207, align 8
  %1032 = load i32, i32* %i, align 4
  %1033 = load i32, i32* %i1, align 4
  %add1208 = add nsw i32 %1032, %1033
  %idxprom1209 = sext i32 %add1208 to i64
  %arrayidx1210 = getelementptr inbounds double**, double*** %1031, i64 %idxprom1209
  %1034 = load double**, double*** %arrayidx1210, align 8
  %1035 = load i32, i32* %j1, align 4
  %idxprom1211 = sext i32 %1035 to i64
  %arrayidx1212 = getelementptr inbounds double*, double** %1034, i64 %idxprom1211
  %1036 = load double*, double** %arrayidx1212, align 8
  %1037 = load i32, i32* %k1, align 4
  %idxprom1213 = sext i32 %1037 to i64
  %arrayidx1214 = getelementptr inbounds double, double* %1036, i64 %idxprom1213
  %1038 = load double, double* %arrayidx1214, align 8
  %div1215 = fdiv double %1038, 4.000000e+00
  %1039 = load %struct.block*, %struct.block** %bp1, align 8
  %array1216 = getelementptr inbounds %struct.block, %struct.block* %1039, i32 0, i32 11
  %1040 = load double****, double***** %array1216, align 8
  %1041 = load i32, i32* %m, align 4
  %idxprom1217 = sext i32 %1041 to i64
  %arrayidx1218 = getelementptr inbounds double***, double**** %1040, i64 %idxprom1217
  %1042 = load double***, double**** %arrayidx1218, align 8
  %1043 = load i32, i32* %i, align 4
  %mul1219 = mul nsw i32 2, %1043
  %idxprom1220 = sext i32 %mul1219 to i64
  %arrayidx1221 = getelementptr inbounds double**, double*** %1042, i64 %idxprom1220
  %1044 = load double**, double*** %arrayidx1221, align 8
  %1045 = load i32, i32* %j2, align 4
  %idxprom1222 = sext i32 %1045 to i64
  %arrayidx1223 = getelementptr inbounds double*, double** %1044, i64 %idxprom1222
  %1046 = load double*, double** %arrayidx1223, align 8
  %arrayidx1224 = getelementptr inbounds double, double* %1046, i64 0
  store double %div1215, double* %arrayidx1224, align 8
  %1047 = load %struct.block*, %struct.block** %bp1, align 8
  %array1225 = getelementptr inbounds %struct.block, %struct.block* %1047, i32 0, i32 11
  %1048 = load double****, double***** %array1225, align 8
  %1049 = load i32, i32* %m, align 4
  %idxprom1226 = sext i32 %1049 to i64
  %arrayidx1227 = getelementptr inbounds double***, double**** %1048, i64 %idxprom1226
  %1050 = load double***, double**** %arrayidx1227, align 8
  %1051 = load i32, i32* %i, align 4
  %mul1228 = mul nsw i32 2, %1051
  %sub1229 = sub nsw i32 %mul1228, 1
  %idxprom1230 = sext i32 %sub1229 to i64
  %arrayidx1231 = getelementptr inbounds double**, double*** %1050, i64 %idxprom1230
  %1052 = load double**, double*** %arrayidx1231, align 8
  %1053 = load i32, i32* %j2, align 4
  %idxprom1232 = sext i32 %1053 to i64
  %arrayidx1233 = getelementptr inbounds double*, double** %1052, i64 %idxprom1232
  %1054 = load double*, double** %arrayidx1233, align 8
  %arrayidx1234 = getelementptr inbounds double, double* %1054, i64 0
  store double %div1215, double* %arrayidx1234, align 8
  %1055 = load i32, i32* %iq.addr, align 4
  %cmp1235 = icmp eq i32 %1055, 0
  br i1 %cmp1235, label %if.then1236, label %if.else1266

if.then1236:                                      ; preds = %for.body1204
  %1056 = load %struct.block*, %struct.block** %bp1, align 8
  %array1237 = getelementptr inbounds %struct.block, %struct.block* %1056, i32 0, i32 11
  %1057 = load double****, double***** %array1237, align 8
  %1058 = load i32, i32* %m, align 4
  %idxprom1238 = sext i32 %1058 to i64
  %arrayidx1239 = getelementptr inbounds double***, double**** %1057, i64 %idxprom1238
  %1059 = load double***, double**** %arrayidx1239, align 8
  %1060 = load i32, i32* %i, align 4
  %mul1240 = mul nsw i32 2, %1060
  %sub1241 = sub nsw i32 %mul1240, 1
  %idxprom1242 = sext i32 %sub1241 to i64
  %arrayidx1243 = getelementptr inbounds double**, double*** %1059, i64 %idxprom1242
  %1061 = load double**, double*** %arrayidx1243, align 8
  %1062 = load i32, i32* %j3, align 4
  %idxprom1244 = sext i32 %1062 to i64
  %arrayidx1245 = getelementptr inbounds double*, double** %1061, i64 %idxprom1244
  %1063 = load double*, double** %arrayidx1245, align 8
  %arrayidx1246 = getelementptr inbounds double, double* %1063, i64 0
  %1064 = load double, double* %arrayidx1246, align 8
  %1065 = load %struct.block*, %struct.block** %bp1, align 8
  %array1247 = getelementptr inbounds %struct.block, %struct.block* %1065, i32 0, i32 11
  %1066 = load double****, double***** %array1247, align 8
  %1067 = load i32, i32* %m, align 4
  %idxprom1248 = sext i32 %1067 to i64
  %arrayidx1249 = getelementptr inbounds double***, double**** %1066, i64 %idxprom1248
  %1068 = load double***, double**** %arrayidx1249, align 8
  %1069 = load i32, i32* %i, align 4
  %mul1250 = mul nsw i32 2, %1069
  %idxprom1251 = sext i32 %mul1250 to i64
  %arrayidx1252 = getelementptr inbounds double**, double*** %1068, i64 %idxprom1251
  %1070 = load double**, double*** %arrayidx1252, align 8
  %1071 = load i32, i32* %j3, align 4
  %idxprom1253 = sext i32 %1071 to i64
  %arrayidx1254 = getelementptr inbounds double*, double** %1070, i64 %idxprom1253
  %1072 = load double*, double** %arrayidx1254, align 8
  %arrayidx1255 = getelementptr inbounds double, double* %1072, i64 0
  %1073 = load double, double* %arrayidx1255, align 8
  %add1256 = fadd double %1064, %1073
  %1074 = load %struct.block*, %struct.block** %bp, align 8
  %array1257 = getelementptr inbounds %struct.block, %struct.block* %1074, i32 0, i32 11
  %1075 = load double****, double***** %array1257, align 8
  %1076 = load i32, i32* %m, align 4
  %idxprom1258 = sext i32 %1076 to i64
  %arrayidx1259 = getelementptr inbounds double***, double**** %1075, i64 %idxprom1258
  %1077 = load double***, double**** %arrayidx1259, align 8
  %1078 = load i32, i32* %i, align 4
  %1079 = load i32, i32* %i1, align 4
  %add1260 = add nsw i32 %1078, %1079
  %idxprom1261 = sext i32 %add1260 to i64
  %arrayidx1262 = getelementptr inbounds double**, double*** %1077, i64 %idxprom1261
  %1080 = load double**, double*** %arrayidx1262, align 8
  %1081 = load i32, i32* %j0, align 4
  %idxprom1263 = sext i32 %1081 to i64
  %arrayidx1264 = getelementptr inbounds double*, double** %1080, i64 %idxprom1263
  %1082 = load double*, double** %arrayidx1264, align 8
  %arrayidx1265 = getelementptr inbounds double, double* %1082, i64 0
  store double %add1256, double* %arrayidx1265, align 8
  br label %if.end1299

if.else1266:                                      ; preds = %for.body1204
  %1083 = load %struct.block*, %struct.block** %bp1, align 8
  %array1267 = getelementptr inbounds %struct.block, %struct.block* %1083, i32 0, i32 11
  %1084 = load double****, double***** %array1267, align 8
  %1085 = load i32, i32* %m, align 4
  %idxprom1268 = sext i32 %1085 to i64
  %arrayidx1269 = getelementptr inbounds double***, double**** %1084, i64 %idxprom1268
  %1086 = load double***, double**** %arrayidx1269, align 8
  %1087 = load i32, i32* %i, align 4
  %mul1270 = mul nsw i32 2, %1087
  %sub1271 = sub nsw i32 %mul1270, 1
  %idxprom1272 = sext i32 %sub1271 to i64
  %arrayidx1273 = getelementptr inbounds double**, double*** %1086, i64 %idxprom1272
  %1088 = load double**, double*** %arrayidx1273, align 8
  %1089 = load i32, i32* %j3, align 4
  %idxprom1274 = sext i32 %1089 to i64
  %arrayidx1275 = getelementptr inbounds double*, double** %1088, i64 %idxprom1274
  %1090 = load double*, double** %arrayidx1275, align 8
  %1091 = load i32, i32* %k2, align 4
  %idxprom1276 = sext i32 %1091 to i64
  %arrayidx1277 = getelementptr inbounds double, double* %1090, i64 %idxprom1276
  %1092 = load double, double* %arrayidx1277, align 8
  %1093 = load %struct.block*, %struct.block** %bp1, align 8
  %array1278 = getelementptr inbounds %struct.block, %struct.block* %1093, i32 0, i32 11
  %1094 = load double****, double***** %array1278, align 8
  %1095 = load i32, i32* %m, align 4
  %idxprom1279 = sext i32 %1095 to i64
  %arrayidx1280 = getelementptr inbounds double***, double**** %1094, i64 %idxprom1279
  %1096 = load double***, double**** %arrayidx1280, align 8
  %1097 = load i32, i32* %i, align 4
  %mul1281 = mul nsw i32 2, %1097
  %idxprom1282 = sext i32 %mul1281 to i64
  %arrayidx1283 = getelementptr inbounds double**, double*** %1096, i64 %idxprom1282
  %1098 = load double**, double*** %arrayidx1283, align 8
  %1099 = load i32, i32* %j3, align 4
  %idxprom1284 = sext i32 %1099 to i64
  %arrayidx1285 = getelementptr inbounds double*, double** %1098, i64 %idxprom1284
  %1100 = load double*, double** %arrayidx1285, align 8
  %1101 = load i32, i32* %k2, align 4
  %idxprom1286 = sext i32 %1101 to i64
  %arrayidx1287 = getelementptr inbounds double, double* %1100, i64 %idxprom1286
  %1102 = load double, double* %arrayidx1287, align 8
  %add1288 = fadd double %1092, %1102
  %1103 = load %struct.block*, %struct.block** %bp, align 8
  %array1289 = getelementptr inbounds %struct.block, %struct.block* %1103, i32 0, i32 11
  %1104 = load double****, double***** %array1289, align 8
  %1105 = load i32, i32* %m, align 4
  %idxprom1290 = sext i32 %1105 to i64
  %arrayidx1291 = getelementptr inbounds double***, double**** %1104, i64 %idxprom1290
  %1106 = load double***, double**** %arrayidx1291, align 8
  %1107 = load i32, i32* %i, align 4
  %1108 = load i32, i32* %i1, align 4
  %add1292 = add nsw i32 %1107, %1108
  %idxprom1293 = sext i32 %add1292 to i64
  %arrayidx1294 = getelementptr inbounds double**, double*** %1106, i64 %idxprom1293
  %1109 = load double**, double*** %arrayidx1294, align 8
  %1110 = load i32, i32* %j0, align 4
  %idxprom1295 = sext i32 %1110 to i64
  %arrayidx1296 = getelementptr inbounds double*, double** %1109, i64 %idxprom1295
  %1111 = load double*, double** %arrayidx1296, align 8
  %1112 = load i32, i32* %k2, align 4
  %idxprom1297 = sext i32 %1112 to i64
  %arrayidx1298 = getelementptr inbounds double, double* %1111, i64 %idxprom1297
  store double %add1288, double* %arrayidx1298, align 8
  br label %if.end1299

if.end1299:                                       ; preds = %if.else1266, %if.then1236
  store i32 1, i32* %k, align 4
  br label %for.cond1300

for.cond1300:                                     ; preds = %for.inc1425, %if.end1299
  %1113 = load i32, i32* %k, align 4
  %1114 = load i32, i32* @z_block_half, align 4
  %cmp1301 = icmp sle i32 %1113, %1114
  br i1 %cmp1301, label %for.body1302, label %for.end1427

for.body1302:                                     ; preds = %for.cond1300
  %1115 = load %struct.block*, %struct.block** %bp, align 8
  %array1303 = getelementptr inbounds %struct.block, %struct.block* %1115, i32 0, i32 11
  %1116 = load double****, double***** %array1303, align 8
  %1117 = load i32, i32* %m, align 4
  %idxprom1304 = sext i32 %1117 to i64
  %arrayidx1305 = getelementptr inbounds double***, double**** %1116, i64 %idxprom1304
  %1118 = load double***, double**** %arrayidx1305, align 8
  %1119 = load i32, i32* %i, align 4
  %1120 = load i32, i32* %i1, align 4
  %add1306 = add nsw i32 %1119, %1120
  %idxprom1307 = sext i32 %add1306 to i64
  %arrayidx1308 = getelementptr inbounds double**, double*** %1118, i64 %idxprom1307
  %1121 = load double**, double*** %arrayidx1308, align 8
  %1122 = load i32, i32* %j1, align 4
  %idxprom1309 = sext i32 %1122 to i64
  %arrayidx1310 = getelementptr inbounds double*, double** %1121, i64 %idxprom1309
  %1123 = load double*, double** %arrayidx1310, align 8
  %1124 = load i32, i32* %k, align 4
  %1125 = load i32, i32* %k1, align 4
  %add1311 = add nsw i32 %1124, %1125
  %idxprom1312 = sext i32 %add1311 to i64
  %arrayidx1313 = getelementptr inbounds double, double* %1123, i64 %idxprom1312
  %1126 = load double, double* %arrayidx1313, align 8
  %div1314 = fdiv double %1126, 4.000000e+00
  %1127 = load %struct.block*, %struct.block** %bp1, align 8
  %array1315 = getelementptr inbounds %struct.block, %struct.block* %1127, i32 0, i32 11
  %1128 = load double****, double***** %array1315, align 8
  %1129 = load i32, i32* %m, align 4
  %idxprom1316 = sext i32 %1129 to i64
  %arrayidx1317 = getelementptr inbounds double***, double**** %1128, i64 %idxprom1316
  %1130 = load double***, double**** %arrayidx1317, align 8
  %1131 = load i32, i32* %i, align 4
  %mul1318 = mul nsw i32 2, %1131
  %idxprom1319 = sext i32 %mul1318 to i64
  %arrayidx1320 = getelementptr inbounds double**, double*** %1130, i64 %idxprom1319
  %1132 = load double**, double*** %arrayidx1320, align 8
  %1133 = load i32, i32* %j2, align 4
  %idxprom1321 = sext i32 %1133 to i64
  %arrayidx1322 = getelementptr inbounds double*, double** %1132, i64 %idxprom1321
  %1134 = load double*, double** %arrayidx1322, align 8
  %1135 = load i32, i32* %k, align 4
  %mul1323 = mul nsw i32 2, %1135
  %idxprom1324 = sext i32 %mul1323 to i64
  %arrayidx1325 = getelementptr inbounds double, double* %1134, i64 %idxprom1324
  store double %div1314, double* %arrayidx1325, align 8
  %1136 = load %struct.block*, %struct.block** %bp1, align 8
  %array1326 = getelementptr inbounds %struct.block, %struct.block* %1136, i32 0, i32 11
  %1137 = load double****, double***** %array1326, align 8
  %1138 = load i32, i32* %m, align 4
  %idxprom1327 = sext i32 %1138 to i64
  %arrayidx1328 = getelementptr inbounds double***, double**** %1137, i64 %idxprom1327
  %1139 = load double***, double**** %arrayidx1328, align 8
  %1140 = load i32, i32* %i, align 4
  %mul1329 = mul nsw i32 2, %1140
  %idxprom1330 = sext i32 %mul1329 to i64
  %arrayidx1331 = getelementptr inbounds double**, double*** %1139, i64 %idxprom1330
  %1141 = load double**, double*** %arrayidx1331, align 8
  %1142 = load i32, i32* %j2, align 4
  %idxprom1332 = sext i32 %1142 to i64
  %arrayidx1333 = getelementptr inbounds double*, double** %1141, i64 %idxprom1332
  %1143 = load double*, double** %arrayidx1333, align 8
  %1144 = load i32, i32* %k, align 4
  %mul1334 = mul nsw i32 2, %1144
  %sub1335 = sub nsw i32 %mul1334, 1
  %idxprom1336 = sext i32 %sub1335 to i64
  %arrayidx1337 = getelementptr inbounds double, double* %1143, i64 %idxprom1336
  store double %div1314, double* %arrayidx1337, align 8
  %1145 = load %struct.block*, %struct.block** %bp1, align 8
  %array1338 = getelementptr inbounds %struct.block, %struct.block* %1145, i32 0, i32 11
  %1146 = load double****, double***** %array1338, align 8
  %1147 = load i32, i32* %m, align 4
  %idxprom1339 = sext i32 %1147 to i64
  %arrayidx1340 = getelementptr inbounds double***, double**** %1146, i64 %idxprom1339
  %1148 = load double***, double**** %arrayidx1340, align 8
  %1149 = load i32, i32* %i, align 4
  %mul1341 = mul nsw i32 2, %1149
  %sub1342 = sub nsw i32 %mul1341, 1
  %idxprom1343 = sext i32 %sub1342 to i64
  %arrayidx1344 = getelementptr inbounds double**, double*** %1148, i64 %idxprom1343
  %1150 = load double**, double*** %arrayidx1344, align 8
  %1151 = load i32, i32* %j2, align 4
  %idxprom1345 = sext i32 %1151 to i64
  %arrayidx1346 = getelementptr inbounds double*, double** %1150, i64 %idxprom1345
  %1152 = load double*, double** %arrayidx1346, align 8
  %1153 = load i32, i32* %k, align 4
  %mul1347 = mul nsw i32 2, %1153
  %idxprom1348 = sext i32 %mul1347 to i64
  %arrayidx1349 = getelementptr inbounds double, double* %1152, i64 %idxprom1348
  store double %div1314, double* %arrayidx1349, align 8
  %1154 = load %struct.block*, %struct.block** %bp1, align 8
  %array1350 = getelementptr inbounds %struct.block, %struct.block* %1154, i32 0, i32 11
  %1155 = load double****, double***** %array1350, align 8
  %1156 = load i32, i32* %m, align 4
  %idxprom1351 = sext i32 %1156 to i64
  %arrayidx1352 = getelementptr inbounds double***, double**** %1155, i64 %idxprom1351
  %1157 = load double***, double**** %arrayidx1352, align 8
  %1158 = load i32, i32* %i, align 4
  %mul1353 = mul nsw i32 2, %1158
  %sub1354 = sub nsw i32 %mul1353, 1
  %idxprom1355 = sext i32 %sub1354 to i64
  %arrayidx1356 = getelementptr inbounds double**, double*** %1157, i64 %idxprom1355
  %1159 = load double**, double*** %arrayidx1356, align 8
  %1160 = load i32, i32* %j2, align 4
  %idxprom1357 = sext i32 %1160 to i64
  %arrayidx1358 = getelementptr inbounds double*, double** %1159, i64 %idxprom1357
  %1161 = load double*, double** %arrayidx1358, align 8
  %1162 = load i32, i32* %k, align 4
  %mul1359 = mul nsw i32 2, %1162
  %sub1360 = sub nsw i32 %mul1359, 1
  %idxprom1361 = sext i32 %sub1360 to i64
  %arrayidx1362 = getelementptr inbounds double, double* %1161, i64 %idxprom1361
  store double %div1314, double* %arrayidx1362, align 8
  %1163 = load %struct.block*, %struct.block** %bp1, align 8
  %array1363 = getelementptr inbounds %struct.block, %struct.block* %1163, i32 0, i32 11
  %1164 = load double****, double***** %array1363, align 8
  %1165 = load i32, i32* %m, align 4
  %idxprom1364 = sext i32 %1165 to i64
  %arrayidx1365 = getelementptr inbounds double***, double**** %1164, i64 %idxprom1364
  %1166 = load double***, double**** %arrayidx1365, align 8
  %1167 = load i32, i32* %i, align 4
  %mul1366 = mul nsw i32 2, %1167
  %sub1367 = sub nsw i32 %mul1366, 1
  %idxprom1368 = sext i32 %sub1367 to i64
  %arrayidx1369 = getelementptr inbounds double**, double*** %1166, i64 %idxprom1368
  %1168 = load double**, double*** %arrayidx1369, align 8
  %1169 = load i32, i32* %j3, align 4
  %idxprom1370 = sext i32 %1169 to i64
  %arrayidx1371 = getelementptr inbounds double*, double** %1168, i64 %idxprom1370
  %1170 = load double*, double** %arrayidx1371, align 8
  %1171 = load i32, i32* %k, align 4
  %mul1372 = mul nsw i32 2, %1171
  %sub1373 = sub nsw i32 %mul1372, 1
  %idxprom1374 = sext i32 %sub1373 to i64
  %arrayidx1375 = getelementptr inbounds double, double* %1170, i64 %idxprom1374
  %1172 = load double, double* %arrayidx1375, align 8
  %1173 = load %struct.block*, %struct.block** %bp1, align 8
  %array1376 = getelementptr inbounds %struct.block, %struct.block* %1173, i32 0, i32 11
  %1174 = load double****, double***** %array1376, align 8
  %1175 = load i32, i32* %m, align 4
  %idxprom1377 = sext i32 %1175 to i64
  %arrayidx1378 = getelementptr inbounds double***, double**** %1174, i64 %idxprom1377
  %1176 = load double***, double**** %arrayidx1378, align 8
  %1177 = load i32, i32* %i, align 4
  %mul1379 = mul nsw i32 2, %1177
  %sub1380 = sub nsw i32 %mul1379, 1
  %idxprom1381 = sext i32 %sub1380 to i64
  %arrayidx1382 = getelementptr inbounds double**, double*** %1176, i64 %idxprom1381
  %1178 = load double**, double*** %arrayidx1382, align 8
  %1179 = load i32, i32* %j3, align 4
  %idxprom1383 = sext i32 %1179 to i64
  %arrayidx1384 = getelementptr inbounds double*, double** %1178, i64 %idxprom1383
  %1180 = load double*, double** %arrayidx1384, align 8
  %1181 = load i32, i32* %k, align 4
  %mul1385 = mul nsw i32 2, %1181
  %idxprom1386 = sext i32 %mul1385 to i64
  %arrayidx1387 = getelementptr inbounds double, double* %1180, i64 %idxprom1386
  %1182 = load double, double* %arrayidx1387, align 8
  %add1388 = fadd double %1172, %1182
  %1183 = load %struct.block*, %struct.block** %bp1, align 8
  %array1389 = getelementptr inbounds %struct.block, %struct.block* %1183, i32 0, i32 11
  %1184 = load double****, double***** %array1389, align 8
  %1185 = load i32, i32* %m, align 4
  %idxprom1390 = sext i32 %1185 to i64
  %arrayidx1391 = getelementptr inbounds double***, double**** %1184, i64 %idxprom1390
  %1186 = load double***, double**** %arrayidx1391, align 8
  %1187 = load i32, i32* %i, align 4
  %mul1392 = mul nsw i32 2, %1187
  %idxprom1393 = sext i32 %mul1392 to i64
  %arrayidx1394 = getelementptr inbounds double**, double*** %1186, i64 %idxprom1393
  %1188 = load double**, double*** %arrayidx1394, align 8
  %1189 = load i32, i32* %j3, align 4
  %idxprom1395 = sext i32 %1189 to i64
  %arrayidx1396 = getelementptr inbounds double*, double** %1188, i64 %idxprom1395
  %1190 = load double*, double** %arrayidx1396, align 8
  %1191 = load i32, i32* %k, align 4
  %mul1397 = mul nsw i32 2, %1191
  %sub1398 = sub nsw i32 %mul1397, 1
  %idxprom1399 = sext i32 %sub1398 to i64
  %arrayidx1400 = getelementptr inbounds double, double* %1190, i64 %idxprom1399
  %1192 = load double, double* %arrayidx1400, align 8
  %add1401 = fadd double %add1388, %1192
  %1193 = load %struct.block*, %struct.block** %bp1, align 8
  %array1402 = getelementptr inbounds %struct.block, %struct.block* %1193, i32 0, i32 11
  %1194 = load double****, double***** %array1402, align 8
  %1195 = load i32, i32* %m, align 4
  %idxprom1403 = sext i32 %1195 to i64
  %arrayidx1404 = getelementptr inbounds double***, double**** %1194, i64 %idxprom1403
  %1196 = load double***, double**** %arrayidx1404, align 8
  %1197 = load i32, i32* %i, align 4
  %mul1405 = mul nsw i32 2, %1197
  %idxprom1406 = sext i32 %mul1405 to i64
  %arrayidx1407 = getelementptr inbounds double**, double*** %1196, i64 %idxprom1406
  %1198 = load double**, double*** %arrayidx1407, align 8
  %1199 = load i32, i32* %j3, align 4
  %idxprom1408 = sext i32 %1199 to i64
  %arrayidx1409 = getelementptr inbounds double*, double** %1198, i64 %idxprom1408
  %1200 = load double*, double** %arrayidx1409, align 8
  %1201 = load i32, i32* %k, align 4
  %mul1410 = mul nsw i32 2, %1201
  %idxprom1411 = sext i32 %mul1410 to i64
  %arrayidx1412 = getelementptr inbounds double, double* %1200, i64 %idxprom1411
  %1202 = load double, double* %arrayidx1412, align 8
  %add1413 = fadd double %add1401, %1202
  %1203 = load %struct.block*, %struct.block** %bp, align 8
  %array1414 = getelementptr inbounds %struct.block, %struct.block* %1203, i32 0, i32 11
  %1204 = load double****, double***** %array1414, align 8
  %1205 = load i32, i32* %m, align 4
  %idxprom1415 = sext i32 %1205 to i64
  %arrayidx1416 = getelementptr inbounds double***, double**** %1204, i64 %idxprom1415
  %1206 = load double***, double**** %arrayidx1416, align 8
  %1207 = load i32, i32* %i, align 4
  %1208 = load i32, i32* %i1, align 4
  %add1417 = add nsw i32 %1207, %1208
  %idxprom1418 = sext i32 %add1417 to i64
  %arrayidx1419 = getelementptr inbounds double**, double*** %1206, i64 %idxprom1418
  %1209 = load double**, double*** %arrayidx1419, align 8
  %1210 = load i32, i32* %j0, align 4
  %idxprom1420 = sext i32 %1210 to i64
  %arrayidx1421 = getelementptr inbounds double*, double** %1209, i64 %idxprom1420
  %1211 = load double*, double** %arrayidx1421, align 8
  %1212 = load i32, i32* %k, align 4
  %1213 = load i32, i32* %k1, align 4
  %add1422 = add nsw i32 %1212, %1213
  %idxprom1423 = sext i32 %add1422 to i64
  %arrayidx1424 = getelementptr inbounds double, double* %1211, i64 %idxprom1423
  store double %add1413, double* %arrayidx1424, align 8
  br label %for.inc1425

for.inc1425:                                      ; preds = %for.body1302
  %1214 = load i32, i32* %k, align 4
  %inc1426 = add nsw i32 %1214, 1
  store i32 %inc1426, i32* %k, align 4
  br label %for.cond1300

for.end1427:                                      ; preds = %for.cond1300
  %1215 = load %struct.block*, %struct.block** %bp, align 8
  %array1428 = getelementptr inbounds %struct.block, %struct.block* %1215, i32 0, i32 11
  %1216 = load double****, double***** %array1428, align 8
  %1217 = load i32, i32* %m, align 4
  %idxprom1429 = sext i32 %1217 to i64
  %arrayidx1430 = getelementptr inbounds double***, double**** %1216, i64 %idxprom1429
  %1218 = load double***, double**** %arrayidx1430, align 8
  %1219 = load i32, i32* %i, align 4
  %1220 = load i32, i32* %i1, align 4
  %add1431 = add nsw i32 %1219, %1220
  %idxprom1432 = sext i32 %add1431 to i64
  %arrayidx1433 = getelementptr inbounds double**, double*** %1218, i64 %idxprom1432
  %1221 = load double**, double*** %arrayidx1433, align 8
  %1222 = load i32, i32* %j1, align 4
  %idxprom1434 = sext i32 %1222 to i64
  %arrayidx1435 = getelementptr inbounds double*, double** %1221, i64 %idxprom1434
  %1223 = load double*, double** %arrayidx1435, align 8
  %1224 = load i32, i32* %k3, align 4
  %1225 = load i32, i32* %k1, align 4
  %add1436 = add nsw i32 %1224, %1225
  %idxprom1437 = sext i32 %add1436 to i64
  %arrayidx1438 = getelementptr inbounds double, double* %1223, i64 %idxprom1437
  %1226 = load double, double* %arrayidx1438, align 8
  %div1439 = fdiv double %1226, 4.000000e+00
  %1227 = load %struct.block*, %struct.block** %bp1, align 8
  %array1440 = getelementptr inbounds %struct.block, %struct.block* %1227, i32 0, i32 11
  %1228 = load double****, double***** %array1440, align 8
  %1229 = load i32, i32* %m, align 4
  %idxprom1441 = sext i32 %1229 to i64
  %arrayidx1442 = getelementptr inbounds double***, double**** %1228, i64 %idxprom1441
  %1230 = load double***, double**** %arrayidx1442, align 8
  %1231 = load i32, i32* %i, align 4
  %mul1443 = mul nsw i32 2, %1231
  %idxprom1444 = sext i32 %mul1443 to i64
  %arrayidx1445 = getelementptr inbounds double**, double*** %1230, i64 %idxprom1444
  %1232 = load double**, double*** %arrayidx1445, align 8
  %1233 = load i32, i32* %j2, align 4
  %idxprom1446 = sext i32 %1233 to i64
  %arrayidx1447 = getelementptr inbounds double*, double** %1232, i64 %idxprom1446
  %1234 = load double*, double** %arrayidx1447, align 8
  %1235 = load i32, i32* %k2, align 4
  %idxprom1448 = sext i32 %1235 to i64
  %arrayidx1449 = getelementptr inbounds double, double* %1234, i64 %idxprom1448
  store double %div1439, double* %arrayidx1449, align 8
  %1236 = load %struct.block*, %struct.block** %bp1, align 8
  %array1450 = getelementptr inbounds %struct.block, %struct.block* %1236, i32 0, i32 11
  %1237 = load double****, double***** %array1450, align 8
  %1238 = load i32, i32* %m, align 4
  %idxprom1451 = sext i32 %1238 to i64
  %arrayidx1452 = getelementptr inbounds double***, double**** %1237, i64 %idxprom1451
  %1239 = load double***, double**** %arrayidx1452, align 8
  %1240 = load i32, i32* %i, align 4
  %mul1453 = mul nsw i32 2, %1240
  %sub1454 = sub nsw i32 %mul1453, 1
  %idxprom1455 = sext i32 %sub1454 to i64
  %arrayidx1456 = getelementptr inbounds double**, double*** %1239, i64 %idxprom1455
  %1241 = load double**, double*** %arrayidx1456, align 8
  %1242 = load i32, i32* %j2, align 4
  %idxprom1457 = sext i32 %1242 to i64
  %arrayidx1458 = getelementptr inbounds double*, double** %1241, i64 %idxprom1457
  %1243 = load double*, double** %arrayidx1458, align 8
  %1244 = load i32, i32* %k2, align 4
  %idxprom1459 = sext i32 %1244 to i64
  %arrayidx1460 = getelementptr inbounds double, double* %1243, i64 %idxprom1459
  store double %div1439, double* %arrayidx1460, align 8
  br label %for.inc1461

for.inc1461:                                      ; preds = %for.end1427
  %1245 = load i32, i32* %i, align 4
  %inc1462 = add nsw i32 %1245, 1
  store i32 %inc1462, i32* %i, align 4
  br label %for.cond1202

for.end1463:                                      ; preds = %for.cond1202
  %1246 = load %struct.block*, %struct.block** %bp, align 8
  %array1464 = getelementptr inbounds %struct.block, %struct.block* %1246, i32 0, i32 11
  %1247 = load double****, double***** %array1464, align 8
  %1248 = load i32, i32* %m, align 4
  %idxprom1465 = sext i32 %1248 to i64
  %arrayidx1466 = getelementptr inbounds double***, double**** %1247, i64 %idxprom1465
  %1249 = load double***, double**** %arrayidx1466, align 8
  %1250 = load i32, i32* %i3, align 4
  %1251 = load i32, i32* %i1, align 4
  %add1467 = add nsw i32 %1250, %1251
  %idxprom1468 = sext i32 %add1467 to i64
  %arrayidx1469 = getelementptr inbounds double**, double*** %1249, i64 %idxprom1468
  %1252 = load double**, double*** %arrayidx1469, align 8
  %1253 = load i32, i32* %j1, align 4
  %idxprom1470 = sext i32 %1253 to i64
  %arrayidx1471 = getelementptr inbounds double*, double** %1252, i64 %idxprom1470
  %1254 = load double*, double** %arrayidx1471, align 8
  %1255 = load i32, i32* %k1, align 4
  %idxprom1472 = sext i32 %1255 to i64
  %arrayidx1473 = getelementptr inbounds double, double* %1254, i64 %idxprom1472
  %1256 = load double, double* %arrayidx1473, align 8
  %div1474 = fdiv double %1256, 4.000000e+00
  %1257 = load %struct.block*, %struct.block** %bp1, align 8
  %array1475 = getelementptr inbounds %struct.block, %struct.block* %1257, i32 0, i32 11
  %1258 = load double****, double***** %array1475, align 8
  %1259 = load i32, i32* %m, align 4
  %idxprom1476 = sext i32 %1259 to i64
  %arrayidx1477 = getelementptr inbounds double***, double**** %1258, i64 %idxprom1476
  %1260 = load double***, double**** %arrayidx1477, align 8
  %1261 = load i32, i32* %i2, align 4
  %idxprom1478 = sext i32 %1261 to i64
  %arrayidx1479 = getelementptr inbounds double**, double*** %1260, i64 %idxprom1478
  %1262 = load double**, double*** %arrayidx1479, align 8
  %1263 = load i32, i32* %j2, align 4
  %idxprom1480 = sext i32 %1263 to i64
  %arrayidx1481 = getelementptr inbounds double*, double** %1262, i64 %idxprom1480
  %1264 = load double*, double** %arrayidx1481, align 8
  %arrayidx1482 = getelementptr inbounds double, double* %1264, i64 0
  store double %div1474, double* %arrayidx1482, align 8
  store i32 1, i32* %k, align 4
  br label %for.cond1483

for.cond1483:                                     ; preds = %for.inc1519, %for.end1463
  %1265 = load i32, i32* %k, align 4
  %1266 = load i32, i32* @z_block_half, align 4
  %cmp1484 = icmp sle i32 %1265, %1266
  br i1 %cmp1484, label %for.body1485, label %for.end1521

for.body1485:                                     ; preds = %for.cond1483
  %1267 = load %struct.block*, %struct.block** %bp, align 8
  %array1486 = getelementptr inbounds %struct.block, %struct.block* %1267, i32 0, i32 11
  %1268 = load double****, double***** %array1486, align 8
  %1269 = load i32, i32* %m, align 4
  %idxprom1487 = sext i32 %1269 to i64
  %arrayidx1488 = getelementptr inbounds double***, double**** %1268, i64 %idxprom1487
  %1270 = load double***, double**** %arrayidx1488, align 8
  %1271 = load i32, i32* %i3, align 4
  %1272 = load i32, i32* %i1, align 4
  %add1489 = add nsw i32 %1271, %1272
  %idxprom1490 = sext i32 %add1489 to i64
  %arrayidx1491 = getelementptr inbounds double**, double*** %1270, i64 %idxprom1490
  %1273 = load double**, double*** %arrayidx1491, align 8
  %1274 = load i32, i32* %j1, align 4
  %idxprom1492 = sext i32 %1274 to i64
  %arrayidx1493 = getelementptr inbounds double*, double** %1273, i64 %idxprom1492
  %1275 = load double*, double** %arrayidx1493, align 8
  %1276 = load i32, i32* %k, align 4
  %1277 = load i32, i32* %k1, align 4
  %add1494 = add nsw i32 %1276, %1277
  %idxprom1495 = sext i32 %add1494 to i64
  %arrayidx1496 = getelementptr inbounds double, double* %1275, i64 %idxprom1495
  %1278 = load double, double* %arrayidx1496, align 8
  %div1497 = fdiv double %1278, 4.000000e+00
  %1279 = load %struct.block*, %struct.block** %bp1, align 8
  %array1498 = getelementptr inbounds %struct.block, %struct.block* %1279, i32 0, i32 11
  %1280 = load double****, double***** %array1498, align 8
  %1281 = load i32, i32* %m, align 4
  %idxprom1499 = sext i32 %1281 to i64
  %arrayidx1500 = getelementptr inbounds double***, double**** %1280, i64 %idxprom1499
  %1282 = load double***, double**** %arrayidx1500, align 8
  %1283 = load i32, i32* %i2, align 4
  %idxprom1501 = sext i32 %1283 to i64
  %arrayidx1502 = getelementptr inbounds double**, double*** %1282, i64 %idxprom1501
  %1284 = load double**, double*** %arrayidx1502, align 8
  %1285 = load i32, i32* %j2, align 4
  %idxprom1503 = sext i32 %1285 to i64
  %arrayidx1504 = getelementptr inbounds double*, double** %1284, i64 %idxprom1503
  %1286 = load double*, double** %arrayidx1504, align 8
  %1287 = load i32, i32* %k, align 4
  %mul1505 = mul nsw i32 2, %1287
  %idxprom1506 = sext i32 %mul1505 to i64
  %arrayidx1507 = getelementptr inbounds double, double* %1286, i64 %idxprom1506
  store double %div1497, double* %arrayidx1507, align 8
  %1288 = load %struct.block*, %struct.block** %bp1, align 8
  %array1508 = getelementptr inbounds %struct.block, %struct.block* %1288, i32 0, i32 11
  %1289 = load double****, double***** %array1508, align 8
  %1290 = load i32, i32* %m, align 4
  %idxprom1509 = sext i32 %1290 to i64
  %arrayidx1510 = getelementptr inbounds double***, double**** %1289, i64 %idxprom1509
  %1291 = load double***, double**** %arrayidx1510, align 8
  %1292 = load i32, i32* %i2, align 4
  %idxprom1511 = sext i32 %1292 to i64
  %arrayidx1512 = getelementptr inbounds double**, double*** %1291, i64 %idxprom1511
  %1293 = load double**, double*** %arrayidx1512, align 8
  %1294 = load i32, i32* %j2, align 4
  %idxprom1513 = sext i32 %1294 to i64
  %arrayidx1514 = getelementptr inbounds double*, double** %1293, i64 %idxprom1513
  %1295 = load double*, double** %arrayidx1514, align 8
  %1296 = load i32, i32* %k, align 4
  %mul1515 = mul nsw i32 2, %1296
  %sub1516 = sub nsw i32 %mul1515, 1
  %idxprom1517 = sext i32 %sub1516 to i64
  %arrayidx1518 = getelementptr inbounds double, double* %1295, i64 %idxprom1517
  store double %div1497, double* %arrayidx1518, align 8
  br label %for.inc1519

for.inc1519:                                      ; preds = %for.body1485
  %1297 = load i32, i32* %k, align 4
  %inc1520 = add nsw i32 %1297, 1
  store i32 %inc1520, i32* %k, align 4
  br label %for.cond1483

for.end1521:                                      ; preds = %for.cond1483
  %1298 = load %struct.block*, %struct.block** %bp, align 8
  %array1522 = getelementptr inbounds %struct.block, %struct.block* %1298, i32 0, i32 11
  %1299 = load double****, double***** %array1522, align 8
  %1300 = load i32, i32* %m, align 4
  %idxprom1523 = sext i32 %1300 to i64
  %arrayidx1524 = getelementptr inbounds double***, double**** %1299, i64 %idxprom1523
  %1301 = load double***, double**** %arrayidx1524, align 8
  %1302 = load i32, i32* %i3, align 4
  %1303 = load i32, i32* %i1, align 4
  %add1525 = add nsw i32 %1302, %1303
  %idxprom1526 = sext i32 %add1525 to i64
  %arrayidx1527 = getelementptr inbounds double**, double*** %1301, i64 %idxprom1526
  %1304 = load double**, double*** %arrayidx1527, align 8
  %1305 = load i32, i32* %j1, align 4
  %idxprom1528 = sext i32 %1305 to i64
  %arrayidx1529 = getelementptr inbounds double*, double** %1304, i64 %idxprom1528
  %1306 = load double*, double** %arrayidx1529, align 8
  %1307 = load i32, i32* %k3, align 4
  %1308 = load i32, i32* %k1, align 4
  %add1530 = add nsw i32 %1307, %1308
  %idxprom1531 = sext i32 %add1530 to i64
  %arrayidx1532 = getelementptr inbounds double, double* %1306, i64 %idxprom1531
  %1309 = load double, double* %arrayidx1532, align 8
  %div1533 = fdiv double %1309, 4.000000e+00
  %1310 = load %struct.block*, %struct.block** %bp1, align 8
  %array1534 = getelementptr inbounds %struct.block, %struct.block* %1310, i32 0, i32 11
  %1311 = load double****, double***** %array1534, align 8
  %1312 = load i32, i32* %m, align 4
  %idxprom1535 = sext i32 %1312 to i64
  %arrayidx1536 = getelementptr inbounds double***, double**** %1311, i64 %idxprom1535
  %1313 = load double***, double**** %arrayidx1536, align 8
  %1314 = load i32, i32* %i2, align 4
  %idxprom1537 = sext i32 %1314 to i64
  %arrayidx1538 = getelementptr inbounds double**, double*** %1313, i64 %idxprom1537
  %1315 = load double**, double*** %arrayidx1538, align 8
  %1316 = load i32, i32* %j2, align 4
  %idxprom1539 = sext i32 %1316 to i64
  %arrayidx1540 = getelementptr inbounds double*, double** %1315, i64 %idxprom1539
  %1317 = load double*, double** %arrayidx1540, align 8
  %1318 = load i32, i32* %k2, align 4
  %idxprom1541 = sext i32 %1318 to i64
  %arrayidx1542 = getelementptr inbounds double, double* %1317, i64 %idxprom1541
  store double %div1533, double* %arrayidx1542, align 8
  %1319 = load i32, i32* %jq.addr, align 4
  %cmp1543 = icmp eq i32 %1319, 1
  br i1 %cmp1543, label %if.then1544, label %if.end1621

if.then1544:                                      ; preds = %for.end1521
  %1320 = load i32, i32* %iq.addr, align 4
  %cmp1545 = icmp eq i32 %1320, 0
  br i1 %cmp1545, label %if.then1546, label %if.else1563

if.then1546:                                      ; preds = %if.then1544
  %1321 = load %struct.block*, %struct.block** %bp1, align 8
  %array1547 = getelementptr inbounds %struct.block, %struct.block* %1321, i32 0, i32 11
  %1322 = load double****, double***** %array1547, align 8
  %1323 = load i32, i32* %m, align 4
  %idxprom1548 = sext i32 %1323 to i64
  %arrayidx1549 = getelementptr inbounds double***, double**** %1322, i64 %idxprom1548
  %1324 = load double***, double**** %arrayidx1549, align 8
  %1325 = load i32, i32* %i2, align 4
  %idxprom1550 = sext i32 %1325 to i64
  %arrayidx1551 = getelementptr inbounds double**, double*** %1324, i64 %idxprom1550
  %1326 = load double**, double*** %arrayidx1551, align 8
  %1327 = load i32, i32* %j3, align 4
  %idxprom1552 = sext i32 %1327 to i64
  %arrayidx1553 = getelementptr inbounds double*, double** %1326, i64 %idxprom1552
  %1328 = load double*, double** %arrayidx1553, align 8
  %arrayidx1554 = getelementptr inbounds double, double* %1328, i64 0
  %1329 = load double, double* %arrayidx1554, align 8
  %1330 = load %struct.block*, %struct.block** %bp, align 8
  %array1555 = getelementptr inbounds %struct.block, %struct.block* %1330, i32 0, i32 11
  %1331 = load double****, double***** %array1555, align 8
  %1332 = load i32, i32* %m, align 4
  %idxprom1556 = sext i32 %1332 to i64
  %arrayidx1557 = getelementptr inbounds double***, double**** %1331, i64 %idxprom1556
  %1333 = load double***, double**** %arrayidx1557, align 8
  %1334 = load i32, i32* %i2, align 4
  %idxprom1558 = sext i32 %1334 to i64
  %arrayidx1559 = getelementptr inbounds double**, double*** %1333, i64 %idxprom1558
  %1335 = load double**, double*** %arrayidx1559, align 8
  %1336 = load i32, i32* %j0, align 4
  %idxprom1560 = sext i32 %1336 to i64
  %arrayidx1561 = getelementptr inbounds double*, double** %1335, i64 %idxprom1560
  %1337 = load double*, double** %arrayidx1561, align 8
  %arrayidx1562 = getelementptr inbounds double, double* %1337, i64 0
  store double %1329, double* %arrayidx1562, align 8
  br label %if.end1582

if.else1563:                                      ; preds = %if.then1544
  %1338 = load %struct.block*, %struct.block** %bp1, align 8
  %array1564 = getelementptr inbounds %struct.block, %struct.block* %1338, i32 0, i32 11
  %1339 = load double****, double***** %array1564, align 8
  %1340 = load i32, i32* %m, align 4
  %idxprom1565 = sext i32 %1340 to i64
  %arrayidx1566 = getelementptr inbounds double***, double**** %1339, i64 %idxprom1565
  %1341 = load double***, double**** %arrayidx1566, align 8
  %1342 = load i32, i32* %i2, align 4
  %idxprom1567 = sext i32 %1342 to i64
  %arrayidx1568 = getelementptr inbounds double**, double*** %1341, i64 %idxprom1567
  %1343 = load double**, double*** %arrayidx1568, align 8
  %1344 = load i32, i32* %j3, align 4
  %idxprom1569 = sext i32 %1344 to i64
  %arrayidx1570 = getelementptr inbounds double*, double** %1343, i64 %idxprom1569
  %1345 = load double*, double** %arrayidx1570, align 8
  %1346 = load i32, i32* %k2, align 4
  %idxprom1571 = sext i32 %1346 to i64
  %arrayidx1572 = getelementptr inbounds double, double* %1345, i64 %idxprom1571
  %1347 = load double, double* %arrayidx1572, align 8
  %1348 = load %struct.block*, %struct.block** %bp, align 8
  %array1573 = getelementptr inbounds %struct.block, %struct.block* %1348, i32 0, i32 11
  %1349 = load double****, double***** %array1573, align 8
  %1350 = load i32, i32* %m, align 4
  %idxprom1574 = sext i32 %1350 to i64
  %arrayidx1575 = getelementptr inbounds double***, double**** %1349, i64 %idxprom1574
  %1351 = load double***, double**** %arrayidx1575, align 8
  %1352 = load i32, i32* %i2, align 4
  %idxprom1576 = sext i32 %1352 to i64
  %arrayidx1577 = getelementptr inbounds double**, double*** %1351, i64 %idxprom1576
  %1353 = load double**, double*** %arrayidx1577, align 8
  %1354 = load i32, i32* %j0, align 4
  %idxprom1578 = sext i32 %1354 to i64
  %arrayidx1579 = getelementptr inbounds double*, double** %1353, i64 %idxprom1578
  %1355 = load double*, double** %arrayidx1579, align 8
  %1356 = load i32, i32* %k2, align 4
  %idxprom1580 = sext i32 %1356 to i64
  %arrayidx1581 = getelementptr inbounds double, double* %1355, i64 %idxprom1580
  store double %1347, double* %arrayidx1581, align 8
  br label %if.end1582

if.end1582:                                       ; preds = %if.else1563, %if.then1546
  store i32 1, i32* %k, align 4
  br label %for.cond1583

for.cond1583:                                     ; preds = %for.inc1618, %if.end1582
  %1357 = load i32, i32* %k, align 4
  %1358 = load i32, i32* @z_block_half, align 4
  %cmp1584 = icmp sle i32 %1357, %1358
  br i1 %cmp1584, label %for.body1585, label %for.end1620

for.body1585:                                     ; preds = %for.cond1583
  %1359 = load %struct.block*, %struct.block** %bp1, align 8
  %array1586 = getelementptr inbounds %struct.block, %struct.block* %1359, i32 0, i32 11
  %1360 = load double****, double***** %array1586, align 8
  %1361 = load i32, i32* %m, align 4
  %idxprom1587 = sext i32 %1361 to i64
  %arrayidx1588 = getelementptr inbounds double***, double**** %1360, i64 %idxprom1587
  %1362 = load double***, double**** %arrayidx1588, align 8
  %1363 = load i32, i32* %i2, align 4
  %idxprom1589 = sext i32 %1363 to i64
  %arrayidx1590 = getelementptr inbounds double**, double*** %1362, i64 %idxprom1589
  %1364 = load double**, double*** %arrayidx1590, align 8
  %1365 = load i32, i32* %j3, align 4
  %idxprom1591 = sext i32 %1365 to i64
  %arrayidx1592 = getelementptr inbounds double*, double** %1364, i64 %idxprom1591
  %1366 = load double*, double** %arrayidx1592, align 8
  %1367 = load i32, i32* %k, align 4
  %mul1593 = mul nsw i32 2, %1367
  %sub1594 = sub nsw i32 %mul1593, 1
  %idxprom1595 = sext i32 %sub1594 to i64
  %arrayidx1596 = getelementptr inbounds double, double* %1366, i64 %idxprom1595
  %1368 = load double, double* %arrayidx1596, align 8
  %1369 = load %struct.block*, %struct.block** %bp1, align 8
  %array1597 = getelementptr inbounds %struct.block, %struct.block* %1369, i32 0, i32 11
  %1370 = load double****, double***** %array1597, align 8
  %1371 = load i32, i32* %m, align 4
  %idxprom1598 = sext i32 %1371 to i64
  %arrayidx1599 = getelementptr inbounds double***, double**** %1370, i64 %idxprom1598
  %1372 = load double***, double**** %arrayidx1599, align 8
  %1373 = load i32, i32* %i2, align 4
  %idxprom1600 = sext i32 %1373 to i64
  %arrayidx1601 = getelementptr inbounds double**, double*** %1372, i64 %idxprom1600
  %1374 = load double**, double*** %arrayidx1601, align 8
  %1375 = load i32, i32* %j3, align 4
  %idxprom1602 = sext i32 %1375 to i64
  %arrayidx1603 = getelementptr inbounds double*, double** %1374, i64 %idxprom1602
  %1376 = load double*, double** %arrayidx1603, align 8
  %1377 = load i32, i32* %k, align 4
  %mul1604 = mul nsw i32 2, %1377
  %idxprom1605 = sext i32 %mul1604 to i64
  %arrayidx1606 = getelementptr inbounds double, double* %1376, i64 %idxprom1605
  %1378 = load double, double* %arrayidx1606, align 8
  %add1607 = fadd double %1368, %1378
  %1379 = load %struct.block*, %struct.block** %bp, align 8
  %array1608 = getelementptr inbounds %struct.block, %struct.block* %1379, i32 0, i32 11
  %1380 = load double****, double***** %array1608, align 8
  %1381 = load i32, i32* %m, align 4
  %idxprom1609 = sext i32 %1381 to i64
  %arrayidx1610 = getelementptr inbounds double***, double**** %1380, i64 %idxprom1609
  %1382 = load double***, double**** %arrayidx1610, align 8
  %1383 = load i32, i32* %i2, align 4
  %idxprom1611 = sext i32 %1383 to i64
  %arrayidx1612 = getelementptr inbounds double**, double*** %1382, i64 %idxprom1611
  %1384 = load double**, double*** %arrayidx1612, align 8
  %1385 = load i32, i32* %j0, align 4
  %idxprom1613 = sext i32 %1385 to i64
  %arrayidx1614 = getelementptr inbounds double*, double** %1384, i64 %idxprom1613
  %1386 = load double*, double** %arrayidx1614, align 8
  %1387 = load i32, i32* %k, align 4
  %1388 = load i32, i32* %k1, align 4
  %add1615 = add nsw i32 %1387, %1388
  %idxprom1616 = sext i32 %add1615 to i64
  %arrayidx1617 = getelementptr inbounds double, double* %1386, i64 %idxprom1616
  store double %add1607, double* %arrayidx1617, align 8
  br label %for.inc1618

for.inc1618:                                      ; preds = %for.body1585
  %1389 = load i32, i32* %k, align 4
  %inc1619 = add nsw i32 %1389, 1
  store i32 %inc1619, i32* %k, align 4
  br label %for.cond1583

for.end1620:                                      ; preds = %for.cond1583
  br label %if.end1621

if.end1621:                                       ; preds = %for.end1620, %for.end1521
  br label %for.inc1622

for.inc1622:                                      ; preds = %if.end1621
  %1390 = load i32, i32* %m, align 4
  %inc1623 = add nsw i32 %1390, 1
  store i32 %inc1623, i32* %m, align 4
  br label %for.cond1054

for.end1624:                                      ; preds = %for.cond1054
  br label %if.end2213

if.else1625:                                      ; preds = %if.else1038
  %1391 = load i32, i32* %l.addr, align 4
  %div1626 = sdiv i32 %1391, 2
  %cmp1627 = icmp eq i32 %div1626, 2
  br i1 %cmp1627, label %if.then1628, label %if.end2212

if.then1628:                                      ; preds = %if.else1625
  %1392 = load i32, i32* %l.addr, align 4
  %cmp1629 = icmp eq i32 %1392, 4
  br i1 %cmp1629, label %if.then1630, label %if.else1632

if.then1630:                                      ; preds = %if.then1628
  store i32 0, i32* %k0, align 4
  store i32 1, i32* %k1, align 4
  %1393 = load i32, i32* @z_block_size, align 4
  %add1631 = add nsw i32 %1393, 1
  store i32 %add1631, i32* %k2, align 4
  %1394 = load i32, i32* @z_block_size, align 4
  store i32 %1394, i32* %k3, align 4
  br label %if.end1634

if.else1632:                                      ; preds = %if.then1628
  %1395 = load i32, i32* @z_block_size, align 4
  %add1633 = add nsw i32 %1395, 1
  store i32 %add1633, i32* %k0, align 4
  %1396 = load i32, i32* @z_block_size, align 4
  store i32 %1396, i32* %k1, align 4
  store i32 0, i32* %k2, align 4
  store i32 1, i32* %k3, align 4
  br label %if.end1634

if.end1634:                                       ; preds = %if.else1632, %if.then1630
  %1397 = load i32, i32* %jq.addr, align 4
  %1398 = load i32, i32* @x_block_half, align 4
  %mul1635 = mul nsw i32 %1397, %1398
  store i32 %mul1635, i32* %i1, align 4
  %1399 = load i32, i32* %iq.addr, align 4
  %1400 = load i32, i32* @y_block_half, align 4
  %mul1636 = mul nsw i32 %1399, %1400
  store i32 %mul1636, i32* %j1, align 4
  %1401 = load i32, i32* @x_block_size, align 4
  %add1637 = add nsw i32 %1401, 1
  store i32 %add1637, i32* %i2, align 4
  %1402 = load i32, i32* @x_block_half, align 4
  %add1638 = add nsw i32 %1402, 1
  store i32 %add1638, i32* %i3, align 4
  %1403 = load i32, i32* @y_block_size, align 4
  %add1639 = add nsw i32 %1403, 1
  store i32 %add1639, i32* %j2, align 4
  %1404 = load i32, i32* @y_block_half, align 4
  %add1640 = add nsw i32 %1404, 1
  store i32 %add1640, i32* %j3, align 4
  %1405 = load i32, i32* %start.addr, align 4
  store i32 %1405, i32* %m, align 4
  br label %for.cond1641

for.cond1641:                                     ; preds = %for.inc2209, %if.end1634
  %1406 = load i32, i32* %m, align 4
  %1407 = load i32, i32* %start.addr, align 4
  %1408 = load i32, i32* %num_comm.addr, align 4
  %add1642 = add nsw i32 %1407, %1408
  %cmp1643 = icmp slt i32 %1406, %add1642
  br i1 %cmp1643, label %for.body1644, label %for.end2211

for.body1644:                                     ; preds = %for.cond1641
  %1409 = load %struct.block*, %struct.block** %bp, align 8
  %array1645 = getelementptr inbounds %struct.block, %struct.block* %1409, i32 0, i32 11
  %1410 = load double****, double***** %array1645, align 8
  %1411 = load i32, i32* %m, align 4
  %idxprom1646 = sext i32 %1411 to i64
  %arrayidx1647 = getelementptr inbounds double***, double**** %1410, i64 %idxprom1646
  %1412 = load double***, double**** %arrayidx1647, align 8
  %1413 = load i32, i32* %i1, align 4
  %idxprom1648 = sext i32 %1413 to i64
  %arrayidx1649 = getelementptr inbounds double**, double*** %1412, i64 %idxprom1648
  %1414 = load double**, double*** %arrayidx1649, align 8
  %1415 = load i32, i32* %j1, align 4
  %idxprom1650 = sext i32 %1415 to i64
  %arrayidx1651 = getelementptr inbounds double*, double** %1414, i64 %idxprom1650
  %1416 = load double*, double** %arrayidx1651, align 8
  %1417 = load i32, i32* %k1, align 4
  %idxprom1652 = sext i32 %1417 to i64
  %arrayidx1653 = getelementptr inbounds double, double* %1416, i64 %idxprom1652
  %1418 = load double, double* %arrayidx1653, align 8
  %div1654 = fdiv double %1418, 4.000000e+00
  %1419 = load %struct.block*, %struct.block** %bp1, align 8
  %array1655 = getelementptr inbounds %struct.block, %struct.block* %1419, i32 0, i32 11
  %1420 = load double****, double***** %array1655, align 8
  %1421 = load i32, i32* %m, align 4
  %idxprom1656 = sext i32 %1421 to i64
  %arrayidx1657 = getelementptr inbounds double***, double**** %1420, i64 %idxprom1656
  %1422 = load double***, double**** %arrayidx1657, align 8
  %arrayidx1658 = getelementptr inbounds double**, double*** %1422, i64 0
  %1423 = load double**, double*** %arrayidx1658, align 8
  %arrayidx1659 = getelementptr inbounds double*, double** %1423, i64 0
  %1424 = load double*, double** %arrayidx1659, align 8
  %1425 = load i32, i32* %k2, align 4
  %idxprom1660 = sext i32 %1425 to i64
  %arrayidx1661 = getelementptr inbounds double, double* %1424, i64 %idxprom1660
  store double %div1654, double* %arrayidx1661, align 8
  store i32 1, i32* %j, align 4
  br label %for.cond1662

for.cond1662:                                     ; preds = %for.inc1695, %for.body1644
  %1426 = load i32, i32* %j, align 4
  %1427 = load i32, i32* @y_block_half, align 4
  %cmp1663 = icmp sle i32 %1426, %1427
  br i1 %cmp1663, label %for.body1664, label %for.end1697

for.body1664:                                     ; preds = %for.cond1662
  %1428 = load %struct.block*, %struct.block** %bp, align 8
  %array1665 = getelementptr inbounds %struct.block, %struct.block* %1428, i32 0, i32 11
  %1429 = load double****, double***** %array1665, align 8
  %1430 = load i32, i32* %m, align 4
  %idxprom1666 = sext i32 %1430 to i64
  %arrayidx1667 = getelementptr inbounds double***, double**** %1429, i64 %idxprom1666
  %1431 = load double***, double**** %arrayidx1667, align 8
  %1432 = load i32, i32* %i1, align 4
  %idxprom1668 = sext i32 %1432 to i64
  %arrayidx1669 = getelementptr inbounds double**, double*** %1431, i64 %idxprom1668
  %1433 = load double**, double*** %arrayidx1669, align 8
  %1434 = load i32, i32* %j, align 4
  %1435 = load i32, i32* %j1, align 4
  %add1670 = add nsw i32 %1434, %1435
  %idxprom1671 = sext i32 %add1670 to i64
  %arrayidx1672 = getelementptr inbounds double*, double** %1433, i64 %idxprom1671
  %1436 = load double*, double** %arrayidx1672, align 8
  %1437 = load i32, i32* %k1, align 4
  %idxprom1673 = sext i32 %1437 to i64
  %arrayidx1674 = getelementptr inbounds double, double* %1436, i64 %idxprom1673
  %1438 = load double, double* %arrayidx1674, align 8
  %div1675 = fdiv double %1438, 4.000000e+00
  %1439 = load %struct.block*, %struct.block** %bp1, align 8
  %array1676 = getelementptr inbounds %struct.block, %struct.block* %1439, i32 0, i32 11
  %1440 = load double****, double***** %array1676, align 8
  %1441 = load i32, i32* %m, align 4
  %idxprom1677 = sext i32 %1441 to i64
  %arrayidx1678 = getelementptr inbounds double***, double**** %1440, i64 %idxprom1677
  %1442 = load double***, double**** %arrayidx1678, align 8
  %arrayidx1679 = getelementptr inbounds double**, double*** %1442, i64 0
  %1443 = load double**, double*** %arrayidx1679, align 8
  %1444 = load i32, i32* %j, align 4
  %mul1680 = mul nsw i32 2, %1444
  %idxprom1681 = sext i32 %mul1680 to i64
  %arrayidx1682 = getelementptr inbounds double*, double** %1443, i64 %idxprom1681
  %1445 = load double*, double** %arrayidx1682, align 8
  %1446 = load i32, i32* %k2, align 4
  %idxprom1683 = sext i32 %1446 to i64
  %arrayidx1684 = getelementptr inbounds double, double* %1445, i64 %idxprom1683
  store double %div1675, double* %arrayidx1684, align 8
  %1447 = load %struct.block*, %struct.block** %bp1, align 8
  %array1685 = getelementptr inbounds %struct.block, %struct.block* %1447, i32 0, i32 11
  %1448 = load double****, double***** %array1685, align 8
  %1449 = load i32, i32* %m, align 4
  %idxprom1686 = sext i32 %1449 to i64
  %arrayidx1687 = getelementptr inbounds double***, double**** %1448, i64 %idxprom1686
  %1450 = load double***, double**** %arrayidx1687, align 8
  %arrayidx1688 = getelementptr inbounds double**, double*** %1450, i64 0
  %1451 = load double**, double*** %arrayidx1688, align 8
  %1452 = load i32, i32* %j, align 4
  %mul1689 = mul nsw i32 2, %1452
  %sub1690 = sub nsw i32 %mul1689, 1
  %idxprom1691 = sext i32 %sub1690 to i64
  %arrayidx1692 = getelementptr inbounds double*, double** %1451, i64 %idxprom1691
  %1453 = load double*, double** %arrayidx1692, align 8
  %1454 = load i32, i32* %k2, align 4
  %idxprom1693 = sext i32 %1454 to i64
  %arrayidx1694 = getelementptr inbounds double, double* %1453, i64 %idxprom1693
  store double %div1675, double* %arrayidx1694, align 8
  br label %for.inc1695

for.inc1695:                                      ; preds = %for.body1664
  %1455 = load i32, i32* %j, align 4
  %inc1696 = add nsw i32 %1455, 1
  store i32 %inc1696, i32* %j, align 4
  br label %for.cond1662

for.end1697:                                      ; preds = %for.cond1662
  %1456 = load %struct.block*, %struct.block** %bp, align 8
  %array1698 = getelementptr inbounds %struct.block, %struct.block* %1456, i32 0, i32 11
  %1457 = load double****, double***** %array1698, align 8
  %1458 = load i32, i32* %m, align 4
  %idxprom1699 = sext i32 %1458 to i64
  %arrayidx1700 = getelementptr inbounds double***, double**** %1457, i64 %idxprom1699
  %1459 = load double***, double**** %arrayidx1700, align 8
  %1460 = load i32, i32* %i1, align 4
  %idxprom1701 = sext i32 %1460 to i64
  %arrayidx1702 = getelementptr inbounds double**, double*** %1459, i64 %idxprom1701
  %1461 = load double**, double*** %arrayidx1702, align 8
  %1462 = load i32, i32* %j3, align 4
  %1463 = load i32, i32* %j1, align 4
  %add1703 = add nsw i32 %1462, %1463
  %idxprom1704 = sext i32 %add1703 to i64
  %arrayidx1705 = getelementptr inbounds double*, double** %1461, i64 %idxprom1704
  %1464 = load double*, double** %arrayidx1705, align 8
  %1465 = load i32, i32* %k1, align 4
  %idxprom1706 = sext i32 %1465 to i64
  %arrayidx1707 = getelementptr inbounds double, double* %1464, i64 %idxprom1706
  %1466 = load double, double* %arrayidx1707, align 8
  %div1708 = fdiv double %1466, 4.000000e+00
  %1467 = load %struct.block*, %struct.block** %bp1, align 8
  %array1709 = getelementptr inbounds %struct.block, %struct.block* %1467, i32 0, i32 11
  %1468 = load double****, double***** %array1709, align 8
  %1469 = load i32, i32* %m, align 4
  %idxprom1710 = sext i32 %1469 to i64
  %arrayidx1711 = getelementptr inbounds double***, double**** %1468, i64 %idxprom1710
  %1470 = load double***, double**** %arrayidx1711, align 8
  %arrayidx1712 = getelementptr inbounds double**, double*** %1470, i64 0
  %1471 = load double**, double*** %arrayidx1712, align 8
  %1472 = load i32, i32* %j2, align 4
  %idxprom1713 = sext i32 %1472 to i64
  %arrayidx1714 = getelementptr inbounds double*, double** %1471, i64 %idxprom1713
  %1473 = load double*, double** %arrayidx1714, align 8
  %1474 = load i32, i32* %k2, align 4
  %idxprom1715 = sext i32 %1474 to i64
  %arrayidx1716 = getelementptr inbounds double, double* %1473, i64 %idxprom1715
  store double %div1708, double* %arrayidx1716, align 8
  %1475 = load i32, i32* %jq.addr, align 4
  %cmp1717 = icmp eq i32 %1475, 0
  br i1 %cmp1717, label %if.then1718, label %if.end1788

if.then1718:                                      ; preds = %for.end1697
  %1476 = load i32, i32* %iq.addr, align 4
  %cmp1719 = icmp eq i32 %1476, 0
  br i1 %cmp1719, label %if.then1720, label %if.else1735

if.then1720:                                      ; preds = %if.then1718
  %1477 = load %struct.block*, %struct.block** %bp1, align 8
  %array1721 = getelementptr inbounds %struct.block, %struct.block* %1477, i32 0, i32 11
  %1478 = load double****, double***** %array1721, align 8
  %1479 = load i32, i32* %m, align 4
  %idxprom1722 = sext i32 %1479 to i64
  %arrayidx1723 = getelementptr inbounds double***, double**** %1478, i64 %idxprom1722
  %1480 = load double***, double**** %arrayidx1723, align 8
  %arrayidx1724 = getelementptr inbounds double**, double*** %1480, i64 0
  %1481 = load double**, double*** %arrayidx1724, align 8
  %arrayidx1725 = getelementptr inbounds double*, double** %1481, i64 0
  %1482 = load double*, double** %arrayidx1725, align 8
  %1483 = load i32, i32* %k3, align 4
  %idxprom1726 = sext i32 %1483 to i64
  %arrayidx1727 = getelementptr inbounds double, double* %1482, i64 %idxprom1726
  %1484 = load double, double* %arrayidx1727, align 8
  %1485 = load %struct.block*, %struct.block** %bp, align 8
  %array1728 = getelementptr inbounds %struct.block, %struct.block* %1485, i32 0, i32 11
  %1486 = load double****, double***** %array1728, align 8
  %1487 = load i32, i32* %m, align 4
  %idxprom1729 = sext i32 %1487 to i64
  %arrayidx1730 = getelementptr inbounds double***, double**** %1486, i64 %idxprom1729
  %1488 = load double***, double**** %arrayidx1730, align 8
  %arrayidx1731 = getelementptr inbounds double**, double*** %1488, i64 0
  %1489 = load double**, double*** %arrayidx1731, align 8
  %arrayidx1732 = getelementptr inbounds double*, double** %1489, i64 0
  %1490 = load double*, double** %arrayidx1732, align 8
  %1491 = load i32, i32* %k0, align 4
  %idxprom1733 = sext i32 %1491 to i64
  %arrayidx1734 = getelementptr inbounds double, double* %1490, i64 %idxprom1733
  store double %1484, double* %arrayidx1734, align 8
  br label %if.end1752

if.else1735:                                      ; preds = %if.then1718
  %1492 = load %struct.block*, %struct.block** %bp1, align 8
  %array1736 = getelementptr inbounds %struct.block, %struct.block* %1492, i32 0, i32 11
  %1493 = load double****, double***** %array1736, align 8
  %1494 = load i32, i32* %m, align 4
  %idxprom1737 = sext i32 %1494 to i64
  %arrayidx1738 = getelementptr inbounds double***, double**** %1493, i64 %idxprom1737
  %1495 = load double***, double**** %arrayidx1738, align 8
  %arrayidx1739 = getelementptr inbounds double**, double*** %1495, i64 0
  %1496 = load double**, double*** %arrayidx1739, align 8
  %1497 = load i32, i32* %j2, align 4
  %idxprom1740 = sext i32 %1497 to i64
  %arrayidx1741 = getelementptr inbounds double*, double** %1496, i64 %idxprom1740
  %1498 = load double*, double** %arrayidx1741, align 8
  %1499 = load i32, i32* %k3, align 4
  %idxprom1742 = sext i32 %1499 to i64
  %arrayidx1743 = getelementptr inbounds double, double* %1498, i64 %idxprom1742
  %1500 = load double, double* %arrayidx1743, align 8
  %1501 = load %struct.block*, %struct.block** %bp, align 8
  %array1744 = getelementptr inbounds %struct.block, %struct.block* %1501, i32 0, i32 11
  %1502 = load double****, double***** %array1744, align 8
  %1503 = load i32, i32* %m, align 4
  %idxprom1745 = sext i32 %1503 to i64
  %arrayidx1746 = getelementptr inbounds double***, double**** %1502, i64 %idxprom1745
  %1504 = load double***, double**** %arrayidx1746, align 8
  %arrayidx1747 = getelementptr inbounds double**, double*** %1504, i64 0
  %1505 = load double**, double*** %arrayidx1747, align 8
  %1506 = load i32, i32* %j2, align 4
  %idxprom1748 = sext i32 %1506 to i64
  %arrayidx1749 = getelementptr inbounds double*, double** %1505, i64 %idxprom1748
  %1507 = load double*, double** %arrayidx1749, align 8
  %1508 = load i32, i32* %k0, align 4
  %idxprom1750 = sext i32 %1508 to i64
  %arrayidx1751 = getelementptr inbounds double, double* %1507, i64 %idxprom1750
  store double %1500, double* %arrayidx1751, align 8
  br label %if.end1752

if.end1752:                                       ; preds = %if.else1735, %if.then1720
  store i32 1, i32* %j, align 4
  br label %for.cond1753

for.cond1753:                                     ; preds = %for.inc1785, %if.end1752
  %1509 = load i32, i32* %j, align 4
  %1510 = load i32, i32* @y_block_half, align 4
  %cmp1754 = icmp sle i32 %1509, %1510
  br i1 %cmp1754, label %for.body1755, label %for.end1787

for.body1755:                                     ; preds = %for.cond1753
  %1511 = load %struct.block*, %struct.block** %bp1, align 8
  %array1756 = getelementptr inbounds %struct.block, %struct.block* %1511, i32 0, i32 11
  %1512 = load double****, double***** %array1756, align 8
  %1513 = load i32, i32* %m, align 4
  %idxprom1757 = sext i32 %1513 to i64
  %arrayidx1758 = getelementptr inbounds double***, double**** %1512, i64 %idxprom1757
  %1514 = load double***, double**** %arrayidx1758, align 8
  %arrayidx1759 = getelementptr inbounds double**, double*** %1514, i64 0
  %1515 = load double**, double*** %arrayidx1759, align 8
  %1516 = load i32, i32* %j, align 4
  %mul1760 = mul nsw i32 2, %1516
  %sub1761 = sub nsw i32 %mul1760, 1
  %idxprom1762 = sext i32 %sub1761 to i64
  %arrayidx1763 = getelementptr inbounds double*, double** %1515, i64 %idxprom1762
  %1517 = load double*, double** %arrayidx1763, align 8
  %1518 = load i32, i32* %k3, align 4
  %idxprom1764 = sext i32 %1518 to i64
  %arrayidx1765 = getelementptr inbounds double, double* %1517, i64 %idxprom1764
  %1519 = load double, double* %arrayidx1765, align 8
  %1520 = load %struct.block*, %struct.block** %bp1, align 8
  %array1766 = getelementptr inbounds %struct.block, %struct.block* %1520, i32 0, i32 11
  %1521 = load double****, double***** %array1766, align 8
  %1522 = load i32, i32* %m, align 4
  %idxprom1767 = sext i32 %1522 to i64
  %arrayidx1768 = getelementptr inbounds double***, double**** %1521, i64 %idxprom1767
  %1523 = load double***, double**** %arrayidx1768, align 8
  %arrayidx1769 = getelementptr inbounds double**, double*** %1523, i64 0
  %1524 = load double**, double*** %arrayidx1769, align 8
  %1525 = load i32, i32* %j, align 4
  %mul1770 = mul nsw i32 2, %1525
  %idxprom1771 = sext i32 %mul1770 to i64
  %arrayidx1772 = getelementptr inbounds double*, double** %1524, i64 %idxprom1771
  %1526 = load double*, double** %arrayidx1772, align 8
  %1527 = load i32, i32* %k3, align 4
  %idxprom1773 = sext i32 %1527 to i64
  %arrayidx1774 = getelementptr inbounds double, double* %1526, i64 %idxprom1773
  %1528 = load double, double* %arrayidx1774, align 8
  %add1775 = fadd double %1519, %1528
  %1529 = load %struct.block*, %struct.block** %bp, align 8
  %array1776 = getelementptr inbounds %struct.block, %struct.block* %1529, i32 0, i32 11
  %1530 = load double****, double***** %array1776, align 8
  %1531 = load i32, i32* %m, align 4
  %idxprom1777 = sext i32 %1531 to i64
  %arrayidx1778 = getelementptr inbounds double***, double**** %1530, i64 %idxprom1777
  %1532 = load double***, double**** %arrayidx1778, align 8
  %arrayidx1779 = getelementptr inbounds double**, double*** %1532, i64 0
  %1533 = load double**, double*** %arrayidx1779, align 8
  %1534 = load i32, i32* %j, align 4
  %1535 = load i32, i32* %j1, align 4
  %add1780 = add nsw i32 %1534, %1535
  %idxprom1781 = sext i32 %add1780 to i64
  %arrayidx1782 = getelementptr inbounds double*, double** %1533, i64 %idxprom1781
  %1536 = load double*, double** %arrayidx1782, align 8
  %1537 = load i32, i32* %k0, align 4
  %idxprom1783 = sext i32 %1537 to i64
  %arrayidx1784 = getelementptr inbounds double, double* %1536, i64 %idxprom1783
  store double %add1775, double* %arrayidx1784, align 8
  br label %for.inc1785

for.inc1785:                                      ; preds = %for.body1755
  %1538 = load i32, i32* %j, align 4
  %inc1786 = add nsw i32 %1538, 1
  store i32 %inc1786, i32* %j, align 4
  br label %for.cond1753

for.end1787:                                      ; preds = %for.cond1753
  br label %if.end1788

if.end1788:                                       ; preds = %for.end1787, %for.end1697
  store i32 1, i32* %i, align 4
  br label %for.cond1789

for.cond1789:                                     ; preds = %for.inc2048, %if.end1788
  %1539 = load i32, i32* %i, align 4
  %1540 = load i32, i32* @x_block_half, align 4
  %cmp1790 = icmp sle i32 %1539, %1540
  br i1 %cmp1790, label %for.body1791, label %for.end2050

for.body1791:                                     ; preds = %for.cond1789
  %1541 = load %struct.block*, %struct.block** %bp, align 8
  %array1792 = getelementptr inbounds %struct.block, %struct.block* %1541, i32 0, i32 11
  %1542 = load double****, double***** %array1792, align 8
  %1543 = load i32, i32* %m, align 4
  %idxprom1793 = sext i32 %1543 to i64
  %arrayidx1794 = getelementptr inbounds double***, double**** %1542, i64 %idxprom1793
  %1544 = load double***, double**** %arrayidx1794, align 8
  %1545 = load i32, i32* %i, align 4
  %1546 = load i32, i32* %i1, align 4
  %add1795 = add nsw i32 %1545, %1546
  %idxprom1796 = sext i32 %add1795 to i64
  %arrayidx1797 = getelementptr inbounds double**, double*** %1544, i64 %idxprom1796
  %1547 = load double**, double*** %arrayidx1797, align 8
  %1548 = load i32, i32* %j1, align 4
  %idxprom1798 = sext i32 %1548 to i64
  %arrayidx1799 = getelementptr inbounds double*, double** %1547, i64 %idxprom1798
  %1549 = load double*, double** %arrayidx1799, align 8
  %1550 = load i32, i32* %k1, align 4
  %idxprom1800 = sext i32 %1550 to i64
  %arrayidx1801 = getelementptr inbounds double, double* %1549, i64 %idxprom1800
  %1551 = load double, double* %arrayidx1801, align 8
  %div1802 = fdiv double %1551, 4.000000e+00
  %1552 = load %struct.block*, %struct.block** %bp1, align 8
  %array1803 = getelementptr inbounds %struct.block, %struct.block* %1552, i32 0, i32 11
  %1553 = load double****, double***** %array1803, align 8
  %1554 = load i32, i32* %m, align 4
  %idxprom1804 = sext i32 %1554 to i64
  %arrayidx1805 = getelementptr inbounds double***, double**** %1553, i64 %idxprom1804
  %1555 = load double***, double**** %arrayidx1805, align 8
  %1556 = load i32, i32* %i, align 4
  %mul1806 = mul nsw i32 2, %1556
  %idxprom1807 = sext i32 %mul1806 to i64
  %arrayidx1808 = getelementptr inbounds double**, double*** %1555, i64 %idxprom1807
  %1557 = load double**, double*** %arrayidx1808, align 8
  %arrayidx1809 = getelementptr inbounds double*, double** %1557, i64 0
  %1558 = load double*, double** %arrayidx1809, align 8
  %1559 = load i32, i32* %k2, align 4
  %idxprom1810 = sext i32 %1559 to i64
  %arrayidx1811 = getelementptr inbounds double, double* %1558, i64 %idxprom1810
  store double %div1802, double* %arrayidx1811, align 8
  %1560 = load %struct.block*, %struct.block** %bp1, align 8
  %array1812 = getelementptr inbounds %struct.block, %struct.block* %1560, i32 0, i32 11
  %1561 = load double****, double***** %array1812, align 8
  %1562 = load i32, i32* %m, align 4
  %idxprom1813 = sext i32 %1562 to i64
  %arrayidx1814 = getelementptr inbounds double***, double**** %1561, i64 %idxprom1813
  %1563 = load double***, double**** %arrayidx1814, align 8
  %1564 = load i32, i32* %i, align 4
  %mul1815 = mul nsw i32 2, %1564
  %sub1816 = sub nsw i32 %mul1815, 1
  %idxprom1817 = sext i32 %sub1816 to i64
  %arrayidx1818 = getelementptr inbounds double**, double*** %1563, i64 %idxprom1817
  %1565 = load double**, double*** %arrayidx1818, align 8
  %arrayidx1819 = getelementptr inbounds double*, double** %1565, i64 0
  %1566 = load double*, double** %arrayidx1819, align 8
  %1567 = load i32, i32* %k2, align 4
  %idxprom1820 = sext i32 %1567 to i64
  %arrayidx1821 = getelementptr inbounds double, double* %1566, i64 %idxprom1820
  store double %div1802, double* %arrayidx1821, align 8
  %1568 = load i32, i32* %iq.addr, align 4
  %cmp1822 = icmp eq i32 %1568, 0
  br i1 %cmp1822, label %if.then1823, label %if.else1853

if.then1823:                                      ; preds = %for.body1791
  %1569 = load %struct.block*, %struct.block** %bp1, align 8
  %array1824 = getelementptr inbounds %struct.block, %struct.block* %1569, i32 0, i32 11
  %1570 = load double****, double***** %array1824, align 8
  %1571 = load i32, i32* %m, align 4
  %idxprom1825 = sext i32 %1571 to i64
  %arrayidx1826 = getelementptr inbounds double***, double**** %1570, i64 %idxprom1825
  %1572 = load double***, double**** %arrayidx1826, align 8
  %1573 = load i32, i32* %i, align 4
  %mul1827 = mul nsw i32 2, %1573
  %sub1828 = sub nsw i32 %mul1827, 1
  %idxprom1829 = sext i32 %sub1828 to i64
  %arrayidx1830 = getelementptr inbounds double**, double*** %1572, i64 %idxprom1829
  %1574 = load double**, double*** %arrayidx1830, align 8
  %arrayidx1831 = getelementptr inbounds double*, double** %1574, i64 0
  %1575 = load double*, double** %arrayidx1831, align 8
  %1576 = load i32, i32* %k3, align 4
  %idxprom1832 = sext i32 %1576 to i64
  %arrayidx1833 = getelementptr inbounds double, double* %1575, i64 %idxprom1832
  %1577 = load double, double* %arrayidx1833, align 8
  %1578 = load %struct.block*, %struct.block** %bp1, align 8
  %array1834 = getelementptr inbounds %struct.block, %struct.block* %1578, i32 0, i32 11
  %1579 = load double****, double***** %array1834, align 8
  %1580 = load i32, i32* %m, align 4
  %idxprom1835 = sext i32 %1580 to i64
  %arrayidx1836 = getelementptr inbounds double***, double**** %1579, i64 %idxprom1835
  %1581 = load double***, double**** %arrayidx1836, align 8
  %1582 = load i32, i32* %i, align 4
  %mul1837 = mul nsw i32 2, %1582
  %idxprom1838 = sext i32 %mul1837 to i64
  %arrayidx1839 = getelementptr inbounds double**, double*** %1581, i64 %idxprom1838
  %1583 = load double**, double*** %arrayidx1839, align 8
  %arrayidx1840 = getelementptr inbounds double*, double** %1583, i64 0
  %1584 = load double*, double** %arrayidx1840, align 8
  %1585 = load i32, i32* %k3, align 4
  %idxprom1841 = sext i32 %1585 to i64
  %arrayidx1842 = getelementptr inbounds double, double* %1584, i64 %idxprom1841
  %1586 = load double, double* %arrayidx1842, align 8
  %add1843 = fadd double %1577, %1586
  %1587 = load %struct.block*, %struct.block** %bp, align 8
  %array1844 = getelementptr inbounds %struct.block, %struct.block* %1587, i32 0, i32 11
  %1588 = load double****, double***** %array1844, align 8
  %1589 = load i32, i32* %m, align 4
  %idxprom1845 = sext i32 %1589 to i64
  %arrayidx1846 = getelementptr inbounds double***, double**** %1588, i64 %idxprom1845
  %1590 = load double***, double**** %arrayidx1846, align 8
  %1591 = load i32, i32* %i, align 4
  %1592 = load i32, i32* %i1, align 4
  %add1847 = add nsw i32 %1591, %1592
  %idxprom1848 = sext i32 %add1847 to i64
  %arrayidx1849 = getelementptr inbounds double**, double*** %1590, i64 %idxprom1848
  %1593 = load double**, double*** %arrayidx1849, align 8
  %arrayidx1850 = getelementptr inbounds double*, double** %1593, i64 0
  %1594 = load double*, double** %arrayidx1850, align 8
  %1595 = load i32, i32* %k0, align 4
  %idxprom1851 = sext i32 %1595 to i64
  %arrayidx1852 = getelementptr inbounds double, double* %1594, i64 %idxprom1851
  store double %add1843, double* %arrayidx1852, align 8
  br label %if.end1886

if.else1853:                                      ; preds = %for.body1791
  %1596 = load %struct.block*, %struct.block** %bp1, align 8
  %array1854 = getelementptr inbounds %struct.block, %struct.block* %1596, i32 0, i32 11
  %1597 = load double****, double***** %array1854, align 8
  %1598 = load i32, i32* %m, align 4
  %idxprom1855 = sext i32 %1598 to i64
  %arrayidx1856 = getelementptr inbounds double***, double**** %1597, i64 %idxprom1855
  %1599 = load double***, double**** %arrayidx1856, align 8
  %1600 = load i32, i32* %i, align 4
  %mul1857 = mul nsw i32 2, %1600
  %sub1858 = sub nsw i32 %mul1857, 1
  %idxprom1859 = sext i32 %sub1858 to i64
  %arrayidx1860 = getelementptr inbounds double**, double*** %1599, i64 %idxprom1859
  %1601 = load double**, double*** %arrayidx1860, align 8
  %1602 = load i32, i32* %j2, align 4
  %idxprom1861 = sext i32 %1602 to i64
  %arrayidx1862 = getelementptr inbounds double*, double** %1601, i64 %idxprom1861
  %1603 = load double*, double** %arrayidx1862, align 8
  %1604 = load i32, i32* %k3, align 4
  %idxprom1863 = sext i32 %1604 to i64
  %arrayidx1864 = getelementptr inbounds double, double* %1603, i64 %idxprom1863
  %1605 = load double, double* %arrayidx1864, align 8
  %1606 = load %struct.block*, %struct.block** %bp1, align 8
  %array1865 = getelementptr inbounds %struct.block, %struct.block* %1606, i32 0, i32 11
  %1607 = load double****, double***** %array1865, align 8
  %1608 = load i32, i32* %m, align 4
  %idxprom1866 = sext i32 %1608 to i64
  %arrayidx1867 = getelementptr inbounds double***, double**** %1607, i64 %idxprom1866
  %1609 = load double***, double**** %arrayidx1867, align 8
  %1610 = load i32, i32* %i, align 4
  %mul1868 = mul nsw i32 2, %1610
  %idxprom1869 = sext i32 %mul1868 to i64
  %arrayidx1870 = getelementptr inbounds double**, double*** %1609, i64 %idxprom1869
  %1611 = load double**, double*** %arrayidx1870, align 8
  %1612 = load i32, i32* %j2, align 4
  %idxprom1871 = sext i32 %1612 to i64
  %arrayidx1872 = getelementptr inbounds double*, double** %1611, i64 %idxprom1871
  %1613 = load double*, double** %arrayidx1872, align 8
  %1614 = load i32, i32* %k3, align 4
  %idxprom1873 = sext i32 %1614 to i64
  %arrayidx1874 = getelementptr inbounds double, double* %1613, i64 %idxprom1873
  %1615 = load double, double* %arrayidx1874, align 8
  %add1875 = fadd double %1605, %1615
  %1616 = load %struct.block*, %struct.block** %bp, align 8
  %array1876 = getelementptr inbounds %struct.block, %struct.block* %1616, i32 0, i32 11
  %1617 = load double****, double***** %array1876, align 8
  %1618 = load i32, i32* %m, align 4
  %idxprom1877 = sext i32 %1618 to i64
  %arrayidx1878 = getelementptr inbounds double***, double**** %1617, i64 %idxprom1877
  %1619 = load double***, double**** %arrayidx1878, align 8
  %1620 = load i32, i32* %i, align 4
  %1621 = load i32, i32* %i1, align 4
  %add1879 = add nsw i32 %1620, %1621
  %idxprom1880 = sext i32 %add1879 to i64
  %arrayidx1881 = getelementptr inbounds double**, double*** %1619, i64 %idxprom1880
  %1622 = load double**, double*** %arrayidx1881, align 8
  %1623 = load i32, i32* %j2, align 4
  %idxprom1882 = sext i32 %1623 to i64
  %arrayidx1883 = getelementptr inbounds double*, double** %1622, i64 %idxprom1882
  %1624 = load double*, double** %arrayidx1883, align 8
  %1625 = load i32, i32* %k0, align 4
  %idxprom1884 = sext i32 %1625 to i64
  %arrayidx1885 = getelementptr inbounds double, double* %1624, i64 %idxprom1884
  store double %add1875, double* %arrayidx1885, align 8
  br label %if.end1886

if.end1886:                                       ; preds = %if.else1853, %if.then1823
  store i32 1, i32* %j, align 4
  br label %for.cond1887

for.cond1887:                                     ; preds = %for.inc2012, %if.end1886
  %1626 = load i32, i32* %j, align 4
  %1627 = load i32, i32* @y_block_half, align 4
  %cmp1888 = icmp sle i32 %1626, %1627
  br i1 %cmp1888, label %for.body1889, label %for.end2014

for.body1889:                                     ; preds = %for.cond1887
  %1628 = load %struct.block*, %struct.block** %bp, align 8
  %array1890 = getelementptr inbounds %struct.block, %struct.block* %1628, i32 0, i32 11
  %1629 = load double****, double***** %array1890, align 8
  %1630 = load i32, i32* %m, align 4
  %idxprom1891 = sext i32 %1630 to i64
  %arrayidx1892 = getelementptr inbounds double***, double**** %1629, i64 %idxprom1891
  %1631 = load double***, double**** %arrayidx1892, align 8
  %1632 = load i32, i32* %i, align 4
  %1633 = load i32, i32* %i1, align 4
  %add1893 = add nsw i32 %1632, %1633
  %idxprom1894 = sext i32 %add1893 to i64
  %arrayidx1895 = getelementptr inbounds double**, double*** %1631, i64 %idxprom1894
  %1634 = load double**, double*** %arrayidx1895, align 8
  %1635 = load i32, i32* %j, align 4
  %1636 = load i32, i32* %j1, align 4
  %add1896 = add nsw i32 %1635, %1636
  %idxprom1897 = sext i32 %add1896 to i64
  %arrayidx1898 = getelementptr inbounds double*, double** %1634, i64 %idxprom1897
  %1637 = load double*, double** %arrayidx1898, align 8
  %1638 = load i32, i32* %k1, align 4
  %idxprom1899 = sext i32 %1638 to i64
  %arrayidx1900 = getelementptr inbounds double, double* %1637, i64 %idxprom1899
  %1639 = load double, double* %arrayidx1900, align 8
  %div1901 = fdiv double %1639, 4.000000e+00
  %1640 = load %struct.block*, %struct.block** %bp1, align 8
  %array1902 = getelementptr inbounds %struct.block, %struct.block* %1640, i32 0, i32 11
  %1641 = load double****, double***** %array1902, align 8
  %1642 = load i32, i32* %m, align 4
  %idxprom1903 = sext i32 %1642 to i64
  %arrayidx1904 = getelementptr inbounds double***, double**** %1641, i64 %idxprom1903
  %1643 = load double***, double**** %arrayidx1904, align 8
  %1644 = load i32, i32* %i, align 4
  %mul1905 = mul nsw i32 2, %1644
  %idxprom1906 = sext i32 %mul1905 to i64
  %arrayidx1907 = getelementptr inbounds double**, double*** %1643, i64 %idxprom1906
  %1645 = load double**, double*** %arrayidx1907, align 8
  %1646 = load i32, i32* %j, align 4
  %mul1908 = mul nsw i32 2, %1646
  %idxprom1909 = sext i32 %mul1908 to i64
  %arrayidx1910 = getelementptr inbounds double*, double** %1645, i64 %idxprom1909
  %1647 = load double*, double** %arrayidx1910, align 8
  %1648 = load i32, i32* %k2, align 4
  %idxprom1911 = sext i32 %1648 to i64
  %arrayidx1912 = getelementptr inbounds double, double* %1647, i64 %idxprom1911
  store double %div1901, double* %arrayidx1912, align 8
  %1649 = load %struct.block*, %struct.block** %bp1, align 8
  %array1913 = getelementptr inbounds %struct.block, %struct.block* %1649, i32 0, i32 11
  %1650 = load double****, double***** %array1913, align 8
  %1651 = load i32, i32* %m, align 4
  %idxprom1914 = sext i32 %1651 to i64
  %arrayidx1915 = getelementptr inbounds double***, double**** %1650, i64 %idxprom1914
  %1652 = load double***, double**** %arrayidx1915, align 8
  %1653 = load i32, i32* %i, align 4
  %mul1916 = mul nsw i32 2, %1653
  %idxprom1917 = sext i32 %mul1916 to i64
  %arrayidx1918 = getelementptr inbounds double**, double*** %1652, i64 %idxprom1917
  %1654 = load double**, double*** %arrayidx1918, align 8
  %1655 = load i32, i32* %j, align 4
  %mul1919 = mul nsw i32 2, %1655
  %sub1920 = sub nsw i32 %mul1919, 1
  %idxprom1921 = sext i32 %sub1920 to i64
  %arrayidx1922 = getelementptr inbounds double*, double** %1654, i64 %idxprom1921
  %1656 = load double*, double** %arrayidx1922, align 8
  %1657 = load i32, i32* %k2, align 4
  %idxprom1923 = sext i32 %1657 to i64
  %arrayidx1924 = getelementptr inbounds double, double* %1656, i64 %idxprom1923
  store double %div1901, double* %arrayidx1924, align 8
  %1658 = load %struct.block*, %struct.block** %bp1, align 8
  %array1925 = getelementptr inbounds %struct.block, %struct.block* %1658, i32 0, i32 11
  %1659 = load double****, double***** %array1925, align 8
  %1660 = load i32, i32* %m, align 4
  %idxprom1926 = sext i32 %1660 to i64
  %arrayidx1927 = getelementptr inbounds double***, double**** %1659, i64 %idxprom1926
  %1661 = load double***, double**** %arrayidx1927, align 8
  %1662 = load i32, i32* %i, align 4
  %mul1928 = mul nsw i32 2, %1662
  %sub1929 = sub nsw i32 %mul1928, 1
  %idxprom1930 = sext i32 %sub1929 to i64
  %arrayidx1931 = getelementptr inbounds double**, double*** %1661, i64 %idxprom1930
  %1663 = load double**, double*** %arrayidx1931, align 8
  %1664 = load i32, i32* %j, align 4
  %mul1932 = mul nsw i32 2, %1664
  %idxprom1933 = sext i32 %mul1932 to i64
  %arrayidx1934 = getelementptr inbounds double*, double** %1663, i64 %idxprom1933
  %1665 = load double*, double** %arrayidx1934, align 8
  %1666 = load i32, i32* %k2, align 4
  %idxprom1935 = sext i32 %1666 to i64
  %arrayidx1936 = getelementptr inbounds double, double* %1665, i64 %idxprom1935
  store double %div1901, double* %arrayidx1936, align 8
  %1667 = load %struct.block*, %struct.block** %bp1, align 8
  %array1937 = getelementptr inbounds %struct.block, %struct.block* %1667, i32 0, i32 11
  %1668 = load double****, double***** %array1937, align 8
  %1669 = load i32, i32* %m, align 4
  %idxprom1938 = sext i32 %1669 to i64
  %arrayidx1939 = getelementptr inbounds double***, double**** %1668, i64 %idxprom1938
  %1670 = load double***, double**** %arrayidx1939, align 8
  %1671 = load i32, i32* %i, align 4
  %mul1940 = mul nsw i32 2, %1671
  %sub1941 = sub nsw i32 %mul1940, 1
  %idxprom1942 = sext i32 %sub1941 to i64
  %arrayidx1943 = getelementptr inbounds double**, double*** %1670, i64 %idxprom1942
  %1672 = load double**, double*** %arrayidx1943, align 8
  %1673 = load i32, i32* %j, align 4
  %mul1944 = mul nsw i32 2, %1673
  %sub1945 = sub nsw i32 %mul1944, 1
  %idxprom1946 = sext i32 %sub1945 to i64
  %arrayidx1947 = getelementptr inbounds double*, double** %1672, i64 %idxprom1946
  %1674 = load double*, double** %arrayidx1947, align 8
  %1675 = load i32, i32* %k2, align 4
  %idxprom1948 = sext i32 %1675 to i64
  %arrayidx1949 = getelementptr inbounds double, double* %1674, i64 %idxprom1948
  store double %div1901, double* %arrayidx1949, align 8
  %1676 = load %struct.block*, %struct.block** %bp1, align 8
  %array1950 = getelementptr inbounds %struct.block, %struct.block* %1676, i32 0, i32 11
  %1677 = load double****, double***** %array1950, align 8
  %1678 = load i32, i32* %m, align 4
  %idxprom1951 = sext i32 %1678 to i64
  %arrayidx1952 = getelementptr inbounds double***, double**** %1677, i64 %idxprom1951
  %1679 = load double***, double**** %arrayidx1952, align 8
  %1680 = load i32, i32* %i, align 4
  %mul1953 = mul nsw i32 2, %1680
  %sub1954 = sub nsw i32 %mul1953, 1
  %idxprom1955 = sext i32 %sub1954 to i64
  %arrayidx1956 = getelementptr inbounds double**, double*** %1679, i64 %idxprom1955
  %1681 = load double**, double*** %arrayidx1956, align 8
  %1682 = load i32, i32* %j, align 4
  %mul1957 = mul nsw i32 2, %1682
  %sub1958 = sub nsw i32 %mul1957, 1
  %idxprom1959 = sext i32 %sub1958 to i64
  %arrayidx1960 = getelementptr inbounds double*, double** %1681, i64 %idxprom1959
  %1683 = load double*, double** %arrayidx1960, align 8
  %1684 = load i32, i32* %k3, align 4
  %idxprom1961 = sext i32 %1684 to i64
  %arrayidx1962 = getelementptr inbounds double, double* %1683, i64 %idxprom1961
  %1685 = load double, double* %arrayidx1962, align 8
  %1686 = load %struct.block*, %struct.block** %bp1, align 8
  %array1963 = getelementptr inbounds %struct.block, %struct.block* %1686, i32 0, i32 11
  %1687 = load double****, double***** %array1963, align 8
  %1688 = load i32, i32* %m, align 4
  %idxprom1964 = sext i32 %1688 to i64
  %arrayidx1965 = getelementptr inbounds double***, double**** %1687, i64 %idxprom1964
  %1689 = load double***, double**** %arrayidx1965, align 8
  %1690 = load i32, i32* %i, align 4
  %mul1966 = mul nsw i32 2, %1690
  %sub1967 = sub nsw i32 %mul1966, 1
  %idxprom1968 = sext i32 %sub1967 to i64
  %arrayidx1969 = getelementptr inbounds double**, double*** %1689, i64 %idxprom1968
  %1691 = load double**, double*** %arrayidx1969, align 8
  %1692 = load i32, i32* %j, align 4
  %mul1970 = mul nsw i32 2, %1692
  %idxprom1971 = sext i32 %mul1970 to i64
  %arrayidx1972 = getelementptr inbounds double*, double** %1691, i64 %idxprom1971
  %1693 = load double*, double** %arrayidx1972, align 8
  %1694 = load i32, i32* %k3, align 4
  %idxprom1973 = sext i32 %1694 to i64
  %arrayidx1974 = getelementptr inbounds double, double* %1693, i64 %idxprom1973
  %1695 = load double, double* %arrayidx1974, align 8
  %add1975 = fadd double %1685, %1695
  %1696 = load %struct.block*, %struct.block** %bp1, align 8
  %array1976 = getelementptr inbounds %struct.block, %struct.block* %1696, i32 0, i32 11
  %1697 = load double****, double***** %array1976, align 8
  %1698 = load i32, i32* %m, align 4
  %idxprom1977 = sext i32 %1698 to i64
  %arrayidx1978 = getelementptr inbounds double***, double**** %1697, i64 %idxprom1977
  %1699 = load double***, double**** %arrayidx1978, align 8
  %1700 = load i32, i32* %i, align 4
  %mul1979 = mul nsw i32 2, %1700
  %idxprom1980 = sext i32 %mul1979 to i64
  %arrayidx1981 = getelementptr inbounds double**, double*** %1699, i64 %idxprom1980
  %1701 = load double**, double*** %arrayidx1981, align 8
  %1702 = load i32, i32* %j, align 4
  %mul1982 = mul nsw i32 2, %1702
  %sub1983 = sub nsw i32 %mul1982, 1
  %idxprom1984 = sext i32 %sub1983 to i64
  %arrayidx1985 = getelementptr inbounds double*, double** %1701, i64 %idxprom1984
  %1703 = load double*, double** %arrayidx1985, align 8
  %1704 = load i32, i32* %k3, align 4
  %idxprom1986 = sext i32 %1704 to i64
  %arrayidx1987 = getelementptr inbounds double, double* %1703, i64 %idxprom1986
  %1705 = load double, double* %arrayidx1987, align 8
  %add1988 = fadd double %add1975, %1705
  %1706 = load %struct.block*, %struct.block** %bp1, align 8
  %array1989 = getelementptr inbounds %struct.block, %struct.block* %1706, i32 0, i32 11
  %1707 = load double****, double***** %array1989, align 8
  %1708 = load i32, i32* %m, align 4
  %idxprom1990 = sext i32 %1708 to i64
  %arrayidx1991 = getelementptr inbounds double***, double**** %1707, i64 %idxprom1990
  %1709 = load double***, double**** %arrayidx1991, align 8
  %1710 = load i32, i32* %i, align 4
  %mul1992 = mul nsw i32 2, %1710
  %idxprom1993 = sext i32 %mul1992 to i64
  %arrayidx1994 = getelementptr inbounds double**, double*** %1709, i64 %idxprom1993
  %1711 = load double**, double*** %arrayidx1994, align 8
  %1712 = load i32, i32* %j, align 4
  %mul1995 = mul nsw i32 2, %1712
  %idxprom1996 = sext i32 %mul1995 to i64
  %arrayidx1997 = getelementptr inbounds double*, double** %1711, i64 %idxprom1996
  %1713 = load double*, double** %arrayidx1997, align 8
  %1714 = load i32, i32* %k3, align 4
  %idxprom1998 = sext i32 %1714 to i64
  %arrayidx1999 = getelementptr inbounds double, double* %1713, i64 %idxprom1998
  %1715 = load double, double* %arrayidx1999, align 8
  %add2000 = fadd double %add1988, %1715
  %1716 = load %struct.block*, %struct.block** %bp, align 8
  %array2001 = getelementptr inbounds %struct.block, %struct.block* %1716, i32 0, i32 11
  %1717 = load double****, double***** %array2001, align 8
  %1718 = load i32, i32* %m, align 4
  %idxprom2002 = sext i32 %1718 to i64
  %arrayidx2003 = getelementptr inbounds double***, double**** %1717, i64 %idxprom2002
  %1719 = load double***, double**** %arrayidx2003, align 8
  %1720 = load i32, i32* %i, align 4
  %1721 = load i32, i32* %i1, align 4
  %add2004 = add nsw i32 %1720, %1721
  %idxprom2005 = sext i32 %add2004 to i64
  %arrayidx2006 = getelementptr inbounds double**, double*** %1719, i64 %idxprom2005
  %1722 = load double**, double*** %arrayidx2006, align 8
  %1723 = load i32, i32* %j, align 4
  %1724 = load i32, i32* %j1, align 4
  %add2007 = add nsw i32 %1723, %1724
  %idxprom2008 = sext i32 %add2007 to i64
  %arrayidx2009 = getelementptr inbounds double*, double** %1722, i64 %idxprom2008
  %1725 = load double*, double** %arrayidx2009, align 8
  %1726 = load i32, i32* %k0, align 4
  %idxprom2010 = sext i32 %1726 to i64
  %arrayidx2011 = getelementptr inbounds double, double* %1725, i64 %idxprom2010
  store double %add2000, double* %arrayidx2011, align 8
  br label %for.inc2012

for.inc2012:                                      ; preds = %for.body1889
  %1727 = load i32, i32* %j, align 4
  %inc2013 = add nsw i32 %1727, 1
  store i32 %inc2013, i32* %j, align 4
  br label %for.cond1887

for.end2014:                                      ; preds = %for.cond1887
  %1728 = load %struct.block*, %struct.block** %bp, align 8
  %array2015 = getelementptr inbounds %struct.block, %struct.block* %1728, i32 0, i32 11
  %1729 = load double****, double***** %array2015, align 8
  %1730 = load i32, i32* %m, align 4
  %idxprom2016 = sext i32 %1730 to i64
  %arrayidx2017 = getelementptr inbounds double***, double**** %1729, i64 %idxprom2016
  %1731 = load double***, double**** %arrayidx2017, align 8
  %1732 = load i32, i32* %i, align 4
  %1733 = load i32, i32* %i1, align 4
  %add2018 = add nsw i32 %1732, %1733
  %idxprom2019 = sext i32 %add2018 to i64
  %arrayidx2020 = getelementptr inbounds double**, double*** %1731, i64 %idxprom2019
  %1734 = load double**, double*** %arrayidx2020, align 8
  %1735 = load i32, i32* %j3, align 4
  %1736 = load i32, i32* %j1, align 4
  %add2021 = add nsw i32 %1735, %1736
  %idxprom2022 = sext i32 %add2021 to i64
  %arrayidx2023 = getelementptr inbounds double*, double** %1734, i64 %idxprom2022
  %1737 = load double*, double** %arrayidx2023, align 8
  %1738 = load i32, i32* %k1, align 4
  %idxprom2024 = sext i32 %1738 to i64
  %arrayidx2025 = getelementptr inbounds double, double* %1737, i64 %idxprom2024
  %1739 = load double, double* %arrayidx2025, align 8
  %div2026 = fdiv double %1739, 4.000000e+00
  %1740 = load %struct.block*, %struct.block** %bp1, align 8
  %array2027 = getelementptr inbounds %struct.block, %struct.block* %1740, i32 0, i32 11
  %1741 = load double****, double***** %array2027, align 8
  %1742 = load i32, i32* %m, align 4
  %idxprom2028 = sext i32 %1742 to i64
  %arrayidx2029 = getelementptr inbounds double***, double**** %1741, i64 %idxprom2028
  %1743 = load double***, double**** %arrayidx2029, align 8
  %1744 = load i32, i32* %i, align 4
  %mul2030 = mul nsw i32 2, %1744
  %idxprom2031 = sext i32 %mul2030 to i64
  %arrayidx2032 = getelementptr inbounds double**, double*** %1743, i64 %idxprom2031
  %1745 = load double**, double*** %arrayidx2032, align 8
  %1746 = load i32, i32* %j2, align 4
  %idxprom2033 = sext i32 %1746 to i64
  %arrayidx2034 = getelementptr inbounds double*, double** %1745, i64 %idxprom2033
  %1747 = load double*, double** %arrayidx2034, align 8
  %1748 = load i32, i32* %k2, align 4
  %idxprom2035 = sext i32 %1748 to i64
  %arrayidx2036 = getelementptr inbounds double, double* %1747, i64 %idxprom2035
  store double %div2026, double* %arrayidx2036, align 8
  %1749 = load %struct.block*, %struct.block** %bp1, align 8
  %array2037 = getelementptr inbounds %struct.block, %struct.block* %1749, i32 0, i32 11
  %1750 = load double****, double***** %array2037, align 8
  %1751 = load i32, i32* %m, align 4
  %idxprom2038 = sext i32 %1751 to i64
  %arrayidx2039 = getelementptr inbounds double***, double**** %1750, i64 %idxprom2038
  %1752 = load double***, double**** %arrayidx2039, align 8
  %1753 = load i32, i32* %i, align 4
  %mul2040 = mul nsw i32 2, %1753
  %sub2041 = sub nsw i32 %mul2040, 1
  %idxprom2042 = sext i32 %sub2041 to i64
  %arrayidx2043 = getelementptr inbounds double**, double*** %1752, i64 %idxprom2042
  %1754 = load double**, double*** %arrayidx2043, align 8
  %1755 = load i32, i32* %j2, align 4
  %idxprom2044 = sext i32 %1755 to i64
  %arrayidx2045 = getelementptr inbounds double*, double** %1754, i64 %idxprom2044
  %1756 = load double*, double** %arrayidx2045, align 8
  %1757 = load i32, i32* %k2, align 4
  %idxprom2046 = sext i32 %1757 to i64
  %arrayidx2047 = getelementptr inbounds double, double* %1756, i64 %idxprom2046
  store double %div2026, double* %arrayidx2047, align 8
  br label %for.inc2048

for.inc2048:                                      ; preds = %for.end2014
  %1758 = load i32, i32* %i, align 4
  %inc2049 = add nsw i32 %1758, 1
  store i32 %inc2049, i32* %i, align 4
  br label %for.cond1789

for.end2050:                                      ; preds = %for.cond1789
  %1759 = load %struct.block*, %struct.block** %bp, align 8
  %array2051 = getelementptr inbounds %struct.block, %struct.block* %1759, i32 0, i32 11
  %1760 = load double****, double***** %array2051, align 8
  %1761 = load i32, i32* %m, align 4
  %idxprom2052 = sext i32 %1761 to i64
  %arrayidx2053 = getelementptr inbounds double***, double**** %1760, i64 %idxprom2052
  %1762 = load double***, double**** %arrayidx2053, align 8
  %1763 = load i32, i32* %i3, align 4
  %1764 = load i32, i32* %i1, align 4
  %add2054 = add nsw i32 %1763, %1764
  %idxprom2055 = sext i32 %add2054 to i64
  %arrayidx2056 = getelementptr inbounds double**, double*** %1762, i64 %idxprom2055
  %1765 = load double**, double*** %arrayidx2056, align 8
  %1766 = load i32, i32* %j1, align 4
  %idxprom2057 = sext i32 %1766 to i64
  %arrayidx2058 = getelementptr inbounds double*, double** %1765, i64 %idxprom2057
  %1767 = load double*, double** %arrayidx2058, align 8
  %1768 = load i32, i32* %k1, align 4
  %idxprom2059 = sext i32 %1768 to i64
  %arrayidx2060 = getelementptr inbounds double, double* %1767, i64 %idxprom2059
  %1769 = load double, double* %arrayidx2060, align 8
  %div2061 = fdiv double %1769, 4.000000e+00
  %1770 = load %struct.block*, %struct.block** %bp1, align 8
  %array2062 = getelementptr inbounds %struct.block, %struct.block* %1770, i32 0, i32 11
  %1771 = load double****, double***** %array2062, align 8
  %1772 = load i32, i32* %m, align 4
  %idxprom2063 = sext i32 %1772 to i64
  %arrayidx2064 = getelementptr inbounds double***, double**** %1771, i64 %idxprom2063
  %1773 = load double***, double**** %arrayidx2064, align 8
  %1774 = load i32, i32* %i2, align 4
  %idxprom2065 = sext i32 %1774 to i64
  %arrayidx2066 = getelementptr inbounds double**, double*** %1773, i64 %idxprom2065
  %1775 = load double**, double*** %arrayidx2066, align 8
  %arrayidx2067 = getelementptr inbounds double*, double** %1775, i64 0
  %1776 = load double*, double** %arrayidx2067, align 8
  %1777 = load i32, i32* %k2, align 4
  %idxprom2068 = sext i32 %1777 to i64
  %arrayidx2069 = getelementptr inbounds double, double* %1776, i64 %idxprom2068
  store double %div2061, double* %arrayidx2069, align 8
  store i32 1, i32* %j, align 4
  br label %for.cond2070

for.cond2070:                                     ; preds = %for.inc2106, %for.end2050
  %1778 = load i32, i32* %j, align 4
  %1779 = load i32, i32* @y_block_half, align 4
  %cmp2071 = icmp sle i32 %1778, %1779
  br i1 %cmp2071, label %for.body2072, label %for.end2108

for.body2072:                                     ; preds = %for.cond2070
  %1780 = load %struct.block*, %struct.block** %bp, align 8
  %array2073 = getelementptr inbounds %struct.block, %struct.block* %1780, i32 0, i32 11
  %1781 = load double****, double***** %array2073, align 8
  %1782 = load i32, i32* %m, align 4
  %idxprom2074 = sext i32 %1782 to i64
  %arrayidx2075 = getelementptr inbounds double***, double**** %1781, i64 %idxprom2074
  %1783 = load double***, double**** %arrayidx2075, align 8
  %1784 = load i32, i32* %i3, align 4
  %1785 = load i32, i32* %i1, align 4
  %add2076 = add nsw i32 %1784, %1785
  %idxprom2077 = sext i32 %add2076 to i64
  %arrayidx2078 = getelementptr inbounds double**, double*** %1783, i64 %idxprom2077
  %1786 = load double**, double*** %arrayidx2078, align 8
  %1787 = load i32, i32* %j, align 4
  %1788 = load i32, i32* %j1, align 4
  %add2079 = add nsw i32 %1787, %1788
  %idxprom2080 = sext i32 %add2079 to i64
  %arrayidx2081 = getelementptr inbounds double*, double** %1786, i64 %idxprom2080
  %1789 = load double*, double** %arrayidx2081, align 8
  %1790 = load i32, i32* %k1, align 4
  %idxprom2082 = sext i32 %1790 to i64
  %arrayidx2083 = getelementptr inbounds double, double* %1789, i64 %idxprom2082
  %1791 = load double, double* %arrayidx2083, align 8
  %div2084 = fdiv double %1791, 4.000000e+00
  %1792 = load %struct.block*, %struct.block** %bp1, align 8
  %array2085 = getelementptr inbounds %struct.block, %struct.block* %1792, i32 0, i32 11
  %1793 = load double****, double***** %array2085, align 8
  %1794 = load i32, i32* %m, align 4
  %idxprom2086 = sext i32 %1794 to i64
  %arrayidx2087 = getelementptr inbounds double***, double**** %1793, i64 %idxprom2086
  %1795 = load double***, double**** %arrayidx2087, align 8
  %1796 = load i32, i32* %i2, align 4
  %idxprom2088 = sext i32 %1796 to i64
  %arrayidx2089 = getelementptr inbounds double**, double*** %1795, i64 %idxprom2088
  %1797 = load double**, double*** %arrayidx2089, align 8
  %1798 = load i32, i32* %j, align 4
  %mul2090 = mul nsw i32 2, %1798
  %idxprom2091 = sext i32 %mul2090 to i64
  %arrayidx2092 = getelementptr inbounds double*, double** %1797, i64 %idxprom2091
  %1799 = load double*, double** %arrayidx2092, align 8
  %1800 = load i32, i32* %k2, align 4
  %idxprom2093 = sext i32 %1800 to i64
  %arrayidx2094 = getelementptr inbounds double, double* %1799, i64 %idxprom2093
  store double %div2084, double* %arrayidx2094, align 8
  %1801 = load %struct.block*, %struct.block** %bp1, align 8
  %array2095 = getelementptr inbounds %struct.block, %struct.block* %1801, i32 0, i32 11
  %1802 = load double****, double***** %array2095, align 8
  %1803 = load i32, i32* %m, align 4
  %idxprom2096 = sext i32 %1803 to i64
  %arrayidx2097 = getelementptr inbounds double***, double**** %1802, i64 %idxprom2096
  %1804 = load double***, double**** %arrayidx2097, align 8
  %1805 = load i32, i32* %i2, align 4
  %idxprom2098 = sext i32 %1805 to i64
  %arrayidx2099 = getelementptr inbounds double**, double*** %1804, i64 %idxprom2098
  %1806 = load double**, double*** %arrayidx2099, align 8
  %1807 = load i32, i32* %j, align 4
  %mul2100 = mul nsw i32 2, %1807
  %sub2101 = sub nsw i32 %mul2100, 1
  %idxprom2102 = sext i32 %sub2101 to i64
  %arrayidx2103 = getelementptr inbounds double*, double** %1806, i64 %idxprom2102
  %1808 = load double*, double** %arrayidx2103, align 8
  %1809 = load i32, i32* %k2, align 4
  %idxprom2104 = sext i32 %1809 to i64
  %arrayidx2105 = getelementptr inbounds double, double* %1808, i64 %idxprom2104
  store double %div2084, double* %arrayidx2105, align 8
  br label %for.inc2106

for.inc2106:                                      ; preds = %for.body2072
  %1810 = load i32, i32* %j, align 4
  %inc2107 = add nsw i32 %1810, 1
  store i32 %inc2107, i32* %j, align 4
  br label %for.cond2070

for.end2108:                                      ; preds = %for.cond2070
  %1811 = load %struct.block*, %struct.block** %bp, align 8
  %array2109 = getelementptr inbounds %struct.block, %struct.block* %1811, i32 0, i32 11
  %1812 = load double****, double***** %array2109, align 8
  %1813 = load i32, i32* %m, align 4
  %idxprom2110 = sext i32 %1813 to i64
  %arrayidx2111 = getelementptr inbounds double***, double**** %1812, i64 %idxprom2110
  %1814 = load double***, double**** %arrayidx2111, align 8
  %1815 = load i32, i32* %i3, align 4
  %1816 = load i32, i32* %i1, align 4
  %add2112 = add nsw i32 %1815, %1816
  %idxprom2113 = sext i32 %add2112 to i64
  %arrayidx2114 = getelementptr inbounds double**, double*** %1814, i64 %idxprom2113
  %1817 = load double**, double*** %arrayidx2114, align 8
  %1818 = load i32, i32* %j3, align 4
  %1819 = load i32, i32* %j1, align 4
  %add2115 = add nsw i32 %1818, %1819
  %idxprom2116 = sext i32 %add2115 to i64
  %arrayidx2117 = getelementptr inbounds double*, double** %1817, i64 %idxprom2116
  %1820 = load double*, double** %arrayidx2117, align 8
  %1821 = load i32, i32* %k1, align 4
  %idxprom2118 = sext i32 %1821 to i64
  %arrayidx2119 = getelementptr inbounds double, double* %1820, i64 %idxprom2118
  %1822 = load double, double* %arrayidx2119, align 8
  %div2120 = fdiv double %1822, 4.000000e+00
  %1823 = load %struct.block*, %struct.block** %bp1, align 8
  %array2121 = getelementptr inbounds %struct.block, %struct.block* %1823, i32 0, i32 11
  %1824 = load double****, double***** %array2121, align 8
  %1825 = load i32, i32* %m, align 4
  %idxprom2122 = sext i32 %1825 to i64
  %arrayidx2123 = getelementptr inbounds double***, double**** %1824, i64 %idxprom2122
  %1826 = load double***, double**** %arrayidx2123, align 8
  %1827 = load i32, i32* %i2, align 4
  %idxprom2124 = sext i32 %1827 to i64
  %arrayidx2125 = getelementptr inbounds double**, double*** %1826, i64 %idxprom2124
  %1828 = load double**, double*** %arrayidx2125, align 8
  %1829 = load i32, i32* %j2, align 4
  %idxprom2126 = sext i32 %1829 to i64
  %arrayidx2127 = getelementptr inbounds double*, double** %1828, i64 %idxprom2126
  %1830 = load double*, double** %arrayidx2127, align 8
  %1831 = load i32, i32* %k2, align 4
  %idxprom2128 = sext i32 %1831 to i64
  %arrayidx2129 = getelementptr inbounds double, double* %1830, i64 %idxprom2128
  store double %div2120, double* %arrayidx2129, align 8
  %1832 = load i32, i32* %jq.addr, align 4
  %cmp2130 = icmp eq i32 %1832, 1
  br i1 %cmp2130, label %if.then2131, label %if.end2208

if.then2131:                                      ; preds = %for.end2108
  %1833 = load i32, i32* %iq.addr, align 4
  %cmp2132 = icmp eq i32 %1833, 0
  br i1 %cmp2132, label %if.then2133, label %if.else2150

if.then2133:                                      ; preds = %if.then2131
  %1834 = load %struct.block*, %struct.block** %bp1, align 8
  %array2134 = getelementptr inbounds %struct.block, %struct.block* %1834, i32 0, i32 11
  %1835 = load double****, double***** %array2134, align 8
  %1836 = load i32, i32* %m, align 4
  %idxprom2135 = sext i32 %1836 to i64
  %arrayidx2136 = getelementptr inbounds double***, double**** %1835, i64 %idxprom2135
  %1837 = load double***, double**** %arrayidx2136, align 8
  %1838 = load i32, i32* %i2, align 4
  %idxprom2137 = sext i32 %1838 to i64
  %arrayidx2138 = getelementptr inbounds double**, double*** %1837, i64 %idxprom2137
  %1839 = load double**, double*** %arrayidx2138, align 8
  %arrayidx2139 = getelementptr inbounds double*, double** %1839, i64 0
  %1840 = load double*, double** %arrayidx2139, align 8
  %1841 = load i32, i32* %k3, align 4
  %idxprom2140 = sext i32 %1841 to i64
  %arrayidx2141 = getelementptr inbounds double, double* %1840, i64 %idxprom2140
  %1842 = load double, double* %arrayidx2141, align 8
  %1843 = load %struct.block*, %struct.block** %bp, align 8
  %array2142 = getelementptr inbounds %struct.block, %struct.block* %1843, i32 0, i32 11
  %1844 = load double****, double***** %array2142, align 8
  %1845 = load i32, i32* %m, align 4
  %idxprom2143 = sext i32 %1845 to i64
  %arrayidx2144 = getelementptr inbounds double***, double**** %1844, i64 %idxprom2143
  %1846 = load double***, double**** %arrayidx2144, align 8
  %1847 = load i32, i32* %i2, align 4
  %idxprom2145 = sext i32 %1847 to i64
  %arrayidx2146 = getelementptr inbounds double**, double*** %1846, i64 %idxprom2145
  %1848 = load double**, double*** %arrayidx2146, align 8
  %arrayidx2147 = getelementptr inbounds double*, double** %1848, i64 0
  %1849 = load double*, double** %arrayidx2147, align 8
  %1850 = load i32, i32* %k0, align 4
  %idxprom2148 = sext i32 %1850 to i64
  %arrayidx2149 = getelementptr inbounds double, double* %1849, i64 %idxprom2148
  store double %1842, double* %arrayidx2149, align 8
  br label %if.end2169

if.else2150:                                      ; preds = %if.then2131
  %1851 = load %struct.block*, %struct.block** %bp1, align 8
  %array2151 = getelementptr inbounds %struct.block, %struct.block* %1851, i32 0, i32 11
  %1852 = load double****, double***** %array2151, align 8
  %1853 = load i32, i32* %m, align 4
  %idxprom2152 = sext i32 %1853 to i64
  %arrayidx2153 = getelementptr inbounds double***, double**** %1852, i64 %idxprom2152
  %1854 = load double***, double**** %arrayidx2153, align 8
  %1855 = load i32, i32* %i2, align 4
  %idxprom2154 = sext i32 %1855 to i64
  %arrayidx2155 = getelementptr inbounds double**, double*** %1854, i64 %idxprom2154
  %1856 = load double**, double*** %arrayidx2155, align 8
  %1857 = load i32, i32* %j2, align 4
  %idxprom2156 = sext i32 %1857 to i64
  %arrayidx2157 = getelementptr inbounds double*, double** %1856, i64 %idxprom2156
  %1858 = load double*, double** %arrayidx2157, align 8
  %1859 = load i32, i32* %k3, align 4
  %idxprom2158 = sext i32 %1859 to i64
  %arrayidx2159 = getelementptr inbounds double, double* %1858, i64 %idxprom2158
  %1860 = load double, double* %arrayidx2159, align 8
  %1861 = load %struct.block*, %struct.block** %bp, align 8
  %array2160 = getelementptr inbounds %struct.block, %struct.block* %1861, i32 0, i32 11
  %1862 = load double****, double***** %array2160, align 8
  %1863 = load i32, i32* %m, align 4
  %idxprom2161 = sext i32 %1863 to i64
  %arrayidx2162 = getelementptr inbounds double***, double**** %1862, i64 %idxprom2161
  %1864 = load double***, double**** %arrayidx2162, align 8
  %1865 = load i32, i32* %i2, align 4
  %idxprom2163 = sext i32 %1865 to i64
  %arrayidx2164 = getelementptr inbounds double**, double*** %1864, i64 %idxprom2163
  %1866 = load double**, double*** %arrayidx2164, align 8
  %1867 = load i32, i32* %j2, align 4
  %idxprom2165 = sext i32 %1867 to i64
  %arrayidx2166 = getelementptr inbounds double*, double** %1866, i64 %idxprom2165
  %1868 = load double*, double** %arrayidx2166, align 8
  %1869 = load i32, i32* %k0, align 4
  %idxprom2167 = sext i32 %1869 to i64
  %arrayidx2168 = getelementptr inbounds double, double* %1868, i64 %idxprom2167
  store double %1860, double* %arrayidx2168, align 8
  br label %if.end2169

if.end2169:                                       ; preds = %if.else2150, %if.then2133
  store i32 1, i32* %j, align 4
  br label %for.cond2170

for.cond2170:                                     ; preds = %for.inc2205, %if.end2169
  %1870 = load i32, i32* %j, align 4
  %1871 = load i32, i32* @y_block_half, align 4
  %cmp2171 = icmp sle i32 %1870, %1871
  br i1 %cmp2171, label %for.body2172, label %for.end2207

for.body2172:                                     ; preds = %for.cond2170
  %1872 = load %struct.block*, %struct.block** %bp1, align 8
  %array2173 = getelementptr inbounds %struct.block, %struct.block* %1872, i32 0, i32 11
  %1873 = load double****, double***** %array2173, align 8
  %1874 = load i32, i32* %m, align 4
  %idxprom2174 = sext i32 %1874 to i64
  %arrayidx2175 = getelementptr inbounds double***, double**** %1873, i64 %idxprom2174
  %1875 = load double***, double**** %arrayidx2175, align 8
  %1876 = load i32, i32* %i2, align 4
  %idxprom2176 = sext i32 %1876 to i64
  %arrayidx2177 = getelementptr inbounds double**, double*** %1875, i64 %idxprom2176
  %1877 = load double**, double*** %arrayidx2177, align 8
  %1878 = load i32, i32* %j, align 4
  %mul2178 = mul nsw i32 2, %1878
  %sub2179 = sub nsw i32 %mul2178, 1
  %idxprom2180 = sext i32 %sub2179 to i64
  %arrayidx2181 = getelementptr inbounds double*, double** %1877, i64 %idxprom2180
  %1879 = load double*, double** %arrayidx2181, align 8
  %1880 = load i32, i32* %k3, align 4
  %idxprom2182 = sext i32 %1880 to i64
  %arrayidx2183 = getelementptr inbounds double, double* %1879, i64 %idxprom2182
  %1881 = load double, double* %arrayidx2183, align 8
  %1882 = load %struct.block*, %struct.block** %bp1, align 8
  %array2184 = getelementptr inbounds %struct.block, %struct.block* %1882, i32 0, i32 11
  %1883 = load double****, double***** %array2184, align 8
  %1884 = load i32, i32* %m, align 4
  %idxprom2185 = sext i32 %1884 to i64
  %arrayidx2186 = getelementptr inbounds double***, double**** %1883, i64 %idxprom2185
  %1885 = load double***, double**** %arrayidx2186, align 8
  %1886 = load i32, i32* %i2, align 4
  %idxprom2187 = sext i32 %1886 to i64
  %arrayidx2188 = getelementptr inbounds double**, double*** %1885, i64 %idxprom2187
  %1887 = load double**, double*** %arrayidx2188, align 8
  %1888 = load i32, i32* %j, align 4
  %mul2189 = mul nsw i32 2, %1888
  %idxprom2190 = sext i32 %mul2189 to i64
  %arrayidx2191 = getelementptr inbounds double*, double** %1887, i64 %idxprom2190
  %1889 = load double*, double** %arrayidx2191, align 8
  %1890 = load i32, i32* %k3, align 4
  %idxprom2192 = sext i32 %1890 to i64
  %arrayidx2193 = getelementptr inbounds double, double* %1889, i64 %idxprom2192
  %1891 = load double, double* %arrayidx2193, align 8
  %add2194 = fadd double %1881, %1891
  %1892 = load %struct.block*, %struct.block** %bp, align 8
  %array2195 = getelementptr inbounds %struct.block, %struct.block* %1892, i32 0, i32 11
  %1893 = load double****, double***** %array2195, align 8
  %1894 = load i32, i32* %m, align 4
  %idxprom2196 = sext i32 %1894 to i64
  %arrayidx2197 = getelementptr inbounds double***, double**** %1893, i64 %idxprom2196
  %1895 = load double***, double**** %arrayidx2197, align 8
  %1896 = load i32, i32* %i2, align 4
  %idxprom2198 = sext i32 %1896 to i64
  %arrayidx2199 = getelementptr inbounds double**, double*** %1895, i64 %idxprom2198
  %1897 = load double**, double*** %arrayidx2199, align 8
  %1898 = load i32, i32* %j, align 4
  %1899 = load i32, i32* %j1, align 4
  %add2200 = add nsw i32 %1898, %1899
  %idxprom2201 = sext i32 %add2200 to i64
  %arrayidx2202 = getelementptr inbounds double*, double** %1897, i64 %idxprom2201
  %1900 = load double*, double** %arrayidx2202, align 8
  %1901 = load i32, i32* %k0, align 4
  %idxprom2203 = sext i32 %1901 to i64
  %arrayidx2204 = getelementptr inbounds double, double* %1900, i64 %idxprom2203
  store double %add2194, double* %arrayidx2204, align 8
  br label %for.inc2205

for.inc2205:                                      ; preds = %for.body2172
  %1902 = load i32, i32* %j, align 4
  %inc2206 = add nsw i32 %1902, 1
  store i32 %inc2206, i32* %j, align 4
  br label %for.cond2170

for.end2207:                                      ; preds = %for.cond2170
  br label %if.end2208

if.end2208:                                       ; preds = %for.end2207, %for.end2108
  br label %for.inc2209

for.inc2209:                                      ; preds = %if.end2208
  %1903 = load i32, i32* %m, align 4
  %inc2210 = add nsw i32 %1903, 1
  store i32 %inc2210, i32* %m, align 4
  br label %for.cond1641

for.end2211:                                      ; preds = %for.cond1641
  br label %if.end2212

if.end2212:                                       ; preds = %for.end2211, %if.else1625
  br label %if.end2213

if.end2213:                                       ; preds = %if.end2212, %for.end1624
  br label %if.end2214

if.end2214:                                       ; preds = %if.end2213, %for.end1037
  br label %if.end2215

if.end2215:                                       ; preds = %if.end2214, %if.end450
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @apply_bc(i32 %l, %struct.block* %bp, i32 %start, i32 %num_comm) #0 {
entry:
  %l.addr = alloca i32, align 4
  %bp.addr = alloca %struct.block*, align 8
  %start.addr = alloca i32, align 4
  %num_comm.addr = alloca i32, align 4
  %var = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %f = alloca i32, align 4
  %t = alloca i32, align 4
  store i32 %l, i32* %l.addr, align 4
  store %struct.block* %bp, %struct.block** %bp.addr, align 8
  store i32 %start, i32* %start.addr, align 4
  store i32 %num_comm, i32* %num_comm.addr, align 4
  store i32 0, i32* %t, align 4
  store i32 1, i32* %f, align 4
  %0 = load i32, i32* @code, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @stencil, align 4
  %cmp = icmp eq i32 %1, 7
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %l.addr, align 4
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb1
    i32 3, label %sw.bb31
    i32 2, label %sw.bb33
    i32 5, label %sw.bb71
    i32 4, label %sw.bb73
  ]

sw.bb:                                            ; preds = %if.then
  %3 = load i32, i32* @x_block_size, align 4
  %add = add nsw i32 %3, 1
  store i32 %add, i32* %t, align 4
  %4 = load i32, i32* @x_block_size, align 4
  store i32 %4, i32* %f, align 4
  br label %sw.bb1

sw.bb1:                                           ; preds = %sw.bb, %if.then
  %5 = load i32, i32* %start.addr, align 4
  store i32 %5, i32* %var, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc28, %sw.bb1
  %6 = load i32, i32* %var, align 4
  %7 = load i32, i32* %start.addr, align 4
  %8 = load i32, i32* %num_comm.addr, align 4
  %add2 = add nsw i32 %7, %8
  %cmp3 = icmp slt i32 %6, %add2
  br i1 %cmp3, label %for.body, label %for.end30

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc25, %for.body
  %9 = load i32, i32* %j, align 4
  %10 = load i32, i32* @y_block_size, align 4
  %cmp5 = icmp sle i32 %9, %10
  br i1 %cmp5, label %for.body6, label %for.end27

for.body6:                                        ; preds = %for.cond4
  store i32 1, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %11 = load i32, i32* %k, align 4
  %12 = load i32, i32* @z_block_size, align 4
  %cmp8 = icmp sle i32 %11, %12
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %13 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %13, i32 0, i32 11
  %14 = load double****, double***** %array, align 8
  %15 = load i32, i32* %var, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds double***, double**** %14, i64 %idxprom
  %16 = load double***, double**** %arrayidx, align 8
  %17 = load i32, i32* %f, align 4
  %idxprom10 = sext i32 %17 to i64
  %arrayidx11 = getelementptr inbounds double**, double*** %16, i64 %idxprom10
  %18 = load double**, double*** %arrayidx11, align 8
  %19 = load i32, i32* %j, align 4
  %idxprom12 = sext i32 %19 to i64
  %arrayidx13 = getelementptr inbounds double*, double** %18, i64 %idxprom12
  %20 = load double*, double** %arrayidx13, align 8
  %21 = load i32, i32* %k, align 4
  %idxprom14 = sext i32 %21 to i64
  %arrayidx15 = getelementptr inbounds double, double* %20, i64 %idxprom14
  %22 = load double, double* %arrayidx15, align 8
  %23 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array16 = getelementptr inbounds %struct.block, %struct.block* %23, i32 0, i32 11
  %24 = load double****, double***** %array16, align 8
  %25 = load i32, i32* %var, align 4
  %idxprom17 = sext i32 %25 to i64
  %arrayidx18 = getelementptr inbounds double***, double**** %24, i64 %idxprom17
  %26 = load double***, double**** %arrayidx18, align 8
  %27 = load i32, i32* %t, align 4
  %idxprom19 = sext i32 %27 to i64
  %arrayidx20 = getelementptr inbounds double**, double*** %26, i64 %idxprom19
  %28 = load double**, double*** %arrayidx20, align 8
  %29 = load i32, i32* %j, align 4
  %idxprom21 = sext i32 %29 to i64
  %arrayidx22 = getelementptr inbounds double*, double** %28, i64 %idxprom21
  %30 = load double*, double** %arrayidx22, align 8
  %31 = load i32, i32* %k, align 4
  %idxprom23 = sext i32 %31 to i64
  %arrayidx24 = getelementptr inbounds double, double* %30, i64 %idxprom23
  store double %22, double* %arrayidx24, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %32 = load i32, i32* %k, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc25

for.inc25:                                        ; preds = %for.end
  %33 = load i32, i32* %j, align 4
  %inc26 = add nsw i32 %33, 1
  store i32 %inc26, i32* %j, align 4
  br label %for.cond4

for.end27:                                        ; preds = %for.cond4
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  %34 = load i32, i32* %var, align 4
  %inc29 = add nsw i32 %34, 1
  store i32 %inc29, i32* %var, align 4
  br label %for.cond

for.end30:                                        ; preds = %for.cond
  br label %sw.epilog

sw.bb31:                                          ; preds = %if.then
  %35 = load i32, i32* @y_block_size, align 4
  %add32 = add nsw i32 %35, 1
  store i32 %add32, i32* %t, align 4
  %36 = load i32, i32* @y_block_size, align 4
  store i32 %36, i32* %f, align 4
  br label %sw.bb33

sw.bb33:                                          ; preds = %sw.bb31, %if.then
  %37 = load i32, i32* %start.addr, align 4
  store i32 %37, i32* %var, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc68, %sw.bb33
  %38 = load i32, i32* %var, align 4
  %39 = load i32, i32* %start.addr, align 4
  %40 = load i32, i32* %num_comm.addr, align 4
  %add35 = add nsw i32 %39, %40
  %cmp36 = icmp slt i32 %38, %add35
  br i1 %cmp36, label %for.body37, label %for.end70

for.body37:                                       ; preds = %for.cond34
  store i32 1, i32* %i, align 4
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc65, %for.body37
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* @x_block_size, align 4
  %cmp39 = icmp sle i32 %41, %42
  br i1 %cmp39, label %for.body40, label %for.end67

for.body40:                                       ; preds = %for.cond38
  store i32 1, i32* %k, align 4
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc62, %for.body40
  %43 = load i32, i32* %k, align 4
  %44 = load i32, i32* @z_block_size, align 4
  %cmp42 = icmp sle i32 %43, %44
  br i1 %cmp42, label %for.body43, label %for.end64

for.body43:                                       ; preds = %for.cond41
  %45 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array44 = getelementptr inbounds %struct.block, %struct.block* %45, i32 0, i32 11
  %46 = load double****, double***** %array44, align 8
  %47 = load i32, i32* %var, align 4
  %idxprom45 = sext i32 %47 to i64
  %arrayidx46 = getelementptr inbounds double***, double**** %46, i64 %idxprom45
  %48 = load double***, double**** %arrayidx46, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %49 to i64
  %arrayidx48 = getelementptr inbounds double**, double*** %48, i64 %idxprom47
  %50 = load double**, double*** %arrayidx48, align 8
  %51 = load i32, i32* %f, align 4
  %idxprom49 = sext i32 %51 to i64
  %arrayidx50 = getelementptr inbounds double*, double** %50, i64 %idxprom49
  %52 = load double*, double** %arrayidx50, align 8
  %53 = load i32, i32* %k, align 4
  %idxprom51 = sext i32 %53 to i64
  %arrayidx52 = getelementptr inbounds double, double* %52, i64 %idxprom51
  %54 = load double, double* %arrayidx52, align 8
  %55 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array53 = getelementptr inbounds %struct.block, %struct.block* %55, i32 0, i32 11
  %56 = load double****, double***** %array53, align 8
  %57 = load i32, i32* %var, align 4
  %idxprom54 = sext i32 %57 to i64
  %arrayidx55 = getelementptr inbounds double***, double**** %56, i64 %idxprom54
  %58 = load double***, double**** %arrayidx55, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %59 to i64
  %arrayidx57 = getelementptr inbounds double**, double*** %58, i64 %idxprom56
  %60 = load double**, double*** %arrayidx57, align 8
  %61 = load i32, i32* %t, align 4
  %idxprom58 = sext i32 %61 to i64
  %arrayidx59 = getelementptr inbounds double*, double** %60, i64 %idxprom58
  %62 = load double*, double** %arrayidx59, align 8
  %63 = load i32, i32* %k, align 4
  %idxprom60 = sext i32 %63 to i64
  %arrayidx61 = getelementptr inbounds double, double* %62, i64 %idxprom60
  store double %54, double* %arrayidx61, align 8
  br label %for.inc62

for.inc62:                                        ; preds = %for.body43
  %64 = load i32, i32* %k, align 4
  %inc63 = add nsw i32 %64, 1
  store i32 %inc63, i32* %k, align 4
  br label %for.cond41

for.end64:                                        ; preds = %for.cond41
  br label %for.inc65

for.inc65:                                        ; preds = %for.end64
  %65 = load i32, i32* %i, align 4
  %inc66 = add nsw i32 %65, 1
  store i32 %inc66, i32* %i, align 4
  br label %for.cond38

for.end67:                                        ; preds = %for.cond38
  br label %for.inc68

for.inc68:                                        ; preds = %for.end67
  %66 = load i32, i32* %var, align 4
  %inc69 = add nsw i32 %66, 1
  store i32 %inc69, i32* %var, align 4
  br label %for.cond34

for.end70:                                        ; preds = %for.cond34
  br label %sw.epilog

sw.bb71:                                          ; preds = %if.then
  %67 = load i32, i32* @z_block_size, align 4
  %add72 = add nsw i32 %67, 1
  store i32 %add72, i32* %t, align 4
  %68 = load i32, i32* @z_block_size, align 4
  store i32 %68, i32* %f, align 4
  br label %sw.bb73

sw.bb73:                                          ; preds = %sw.bb71, %if.then
  %69 = load i32, i32* %start.addr, align 4
  store i32 %69, i32* %var, align 4
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc108, %sw.bb73
  %70 = load i32, i32* %var, align 4
  %71 = load i32, i32* %start.addr, align 4
  %72 = load i32, i32* %num_comm.addr, align 4
  %add75 = add nsw i32 %71, %72
  %cmp76 = icmp slt i32 %70, %add75
  br i1 %cmp76, label %for.body77, label %for.end110

for.body77:                                       ; preds = %for.cond74
  store i32 1, i32* %i, align 4
  br label %for.cond78

for.cond78:                                       ; preds = %for.inc105, %for.body77
  %73 = load i32, i32* %i, align 4
  %74 = load i32, i32* @x_block_size, align 4
  %cmp79 = icmp sle i32 %73, %74
  br i1 %cmp79, label %for.body80, label %for.end107

for.body80:                                       ; preds = %for.cond78
  store i32 1, i32* %j, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc102, %for.body80
  %75 = load i32, i32* %j, align 4
  %76 = load i32, i32* @y_block_size, align 4
  %cmp82 = icmp sle i32 %75, %76
  br i1 %cmp82, label %for.body83, label %for.end104

for.body83:                                       ; preds = %for.cond81
  %77 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array84 = getelementptr inbounds %struct.block, %struct.block* %77, i32 0, i32 11
  %78 = load double****, double***** %array84, align 8
  %79 = load i32, i32* %var, align 4
  %idxprom85 = sext i32 %79 to i64
  %arrayidx86 = getelementptr inbounds double***, double**** %78, i64 %idxprom85
  %80 = load double***, double**** %arrayidx86, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom87 = sext i32 %81 to i64
  %arrayidx88 = getelementptr inbounds double**, double*** %80, i64 %idxprom87
  %82 = load double**, double*** %arrayidx88, align 8
  %83 = load i32, i32* %j, align 4
  %idxprom89 = sext i32 %83 to i64
  %arrayidx90 = getelementptr inbounds double*, double** %82, i64 %idxprom89
  %84 = load double*, double** %arrayidx90, align 8
  %85 = load i32, i32* %f, align 4
  %idxprom91 = sext i32 %85 to i64
  %arrayidx92 = getelementptr inbounds double, double* %84, i64 %idxprom91
  %86 = load double, double* %arrayidx92, align 8
  %87 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array93 = getelementptr inbounds %struct.block, %struct.block* %87, i32 0, i32 11
  %88 = load double****, double***** %array93, align 8
  %89 = load i32, i32* %var, align 4
  %idxprom94 = sext i32 %89 to i64
  %arrayidx95 = getelementptr inbounds double***, double**** %88, i64 %idxprom94
  %90 = load double***, double**** %arrayidx95, align 8
  %91 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %91 to i64
  %arrayidx97 = getelementptr inbounds double**, double*** %90, i64 %idxprom96
  %92 = load double**, double*** %arrayidx97, align 8
  %93 = load i32, i32* %j, align 4
  %idxprom98 = sext i32 %93 to i64
  %arrayidx99 = getelementptr inbounds double*, double** %92, i64 %idxprom98
  %94 = load double*, double** %arrayidx99, align 8
  %95 = load i32, i32* %t, align 4
  %idxprom100 = sext i32 %95 to i64
  %arrayidx101 = getelementptr inbounds double, double* %94, i64 %idxprom100
  store double %86, double* %arrayidx101, align 8
  br label %for.inc102

for.inc102:                                       ; preds = %for.body83
  %96 = load i32, i32* %j, align 4
  %inc103 = add nsw i32 %96, 1
  store i32 %inc103, i32* %j, align 4
  br label %for.cond81

for.end104:                                       ; preds = %for.cond81
  br label %for.inc105

for.inc105:                                       ; preds = %for.end104
  %97 = load i32, i32* %i, align 4
  %inc106 = add nsw i32 %97, 1
  store i32 %inc106, i32* %i, align 4
  br label %for.cond78

for.end107:                                       ; preds = %for.cond78
  br label %for.inc108

for.inc108:                                       ; preds = %for.end107
  %98 = load i32, i32* %var, align 4
  %inc109 = add nsw i32 %98, 1
  store i32 %inc109, i32* %var, align 4
  br label %for.cond74

for.end110:                                       ; preds = %for.cond74
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end110, %for.end70, %for.end30, %if.then
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %99 = load i32, i32* %l.addr, align 4
  switch i32 %99, label %sw.epilog237 [
    i32 1, label %sw.bb111
    i32 0, label %sw.bb113
    i32 3, label %sw.bb153
    i32 2, label %sw.bb155
    i32 5, label %sw.bb195
    i32 4, label %sw.bb197
  ]

sw.bb111:                                         ; preds = %if.else
  %100 = load i32, i32* @x_block_size, align 4
  %add112 = add nsw i32 %100, 1
  store i32 %add112, i32* %t, align 4
  %101 = load i32, i32* @x_block_size, align 4
  store i32 %101, i32* %f, align 4
  br label %sw.bb113

sw.bb113:                                         ; preds = %sw.bb111, %if.else
  %102 = load i32, i32* %start.addr, align 4
  store i32 %102, i32* %var, align 4
  br label %for.cond114

for.cond114:                                      ; preds = %for.inc150, %sw.bb113
  %103 = load i32, i32* %var, align 4
  %104 = load i32, i32* %start.addr, align 4
  %105 = load i32, i32* %num_comm.addr, align 4
  %add115 = add nsw i32 %104, %105
  %cmp116 = icmp slt i32 %103, %add115
  br i1 %cmp116, label %for.body117, label %for.end152

for.body117:                                      ; preds = %for.cond114
  store i32 0, i32* %j, align 4
  br label %for.cond118

for.cond118:                                      ; preds = %for.inc147, %for.body117
  %106 = load i32, i32* %j, align 4
  %107 = load i32, i32* @y_block_size, align 4
  %add119 = add nsw i32 %107, 1
  %cmp120 = icmp sle i32 %106, %add119
  br i1 %cmp120, label %for.body121, label %for.end149

for.body121:                                      ; preds = %for.cond118
  store i32 0, i32* %k, align 4
  br label %for.cond122

for.cond122:                                      ; preds = %for.inc144, %for.body121
  %108 = load i32, i32* %k, align 4
  %109 = load i32, i32* @z_block_size, align 4
  %add123 = add nsw i32 %109, 1
  %cmp124 = icmp sle i32 %108, %add123
  br i1 %cmp124, label %for.body125, label %for.end146

for.body125:                                      ; preds = %for.cond122
  %110 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array126 = getelementptr inbounds %struct.block, %struct.block* %110, i32 0, i32 11
  %111 = load double****, double***** %array126, align 8
  %112 = load i32, i32* %var, align 4
  %idxprom127 = sext i32 %112 to i64
  %arrayidx128 = getelementptr inbounds double***, double**** %111, i64 %idxprom127
  %113 = load double***, double**** %arrayidx128, align 8
  %114 = load i32, i32* %f, align 4
  %idxprom129 = sext i32 %114 to i64
  %arrayidx130 = getelementptr inbounds double**, double*** %113, i64 %idxprom129
  %115 = load double**, double*** %arrayidx130, align 8
  %116 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %116 to i64
  %arrayidx132 = getelementptr inbounds double*, double** %115, i64 %idxprom131
  %117 = load double*, double** %arrayidx132, align 8
  %118 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %118 to i64
  %arrayidx134 = getelementptr inbounds double, double* %117, i64 %idxprom133
  %119 = load double, double* %arrayidx134, align 8
  %120 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array135 = getelementptr inbounds %struct.block, %struct.block* %120, i32 0, i32 11
  %121 = load double****, double***** %array135, align 8
  %122 = load i32, i32* %var, align 4
  %idxprom136 = sext i32 %122 to i64
  %arrayidx137 = getelementptr inbounds double***, double**** %121, i64 %idxprom136
  %123 = load double***, double**** %arrayidx137, align 8
  %124 = load i32, i32* %t, align 4
  %idxprom138 = sext i32 %124 to i64
  %arrayidx139 = getelementptr inbounds double**, double*** %123, i64 %idxprom138
  %125 = load double**, double*** %arrayidx139, align 8
  %126 = load i32, i32* %j, align 4
  %idxprom140 = sext i32 %126 to i64
  %arrayidx141 = getelementptr inbounds double*, double** %125, i64 %idxprom140
  %127 = load double*, double** %arrayidx141, align 8
  %128 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %128 to i64
  %arrayidx143 = getelementptr inbounds double, double* %127, i64 %idxprom142
  store double %119, double* %arrayidx143, align 8
  br label %for.inc144

for.inc144:                                       ; preds = %for.body125
  %129 = load i32, i32* %k, align 4
  %inc145 = add nsw i32 %129, 1
  store i32 %inc145, i32* %k, align 4
  br label %for.cond122

for.end146:                                       ; preds = %for.cond122
  br label %for.inc147

for.inc147:                                       ; preds = %for.end146
  %130 = load i32, i32* %j, align 4
  %inc148 = add nsw i32 %130, 1
  store i32 %inc148, i32* %j, align 4
  br label %for.cond118

for.end149:                                       ; preds = %for.cond118
  br label %for.inc150

for.inc150:                                       ; preds = %for.end149
  %131 = load i32, i32* %var, align 4
  %inc151 = add nsw i32 %131, 1
  store i32 %inc151, i32* %var, align 4
  br label %for.cond114

for.end152:                                       ; preds = %for.cond114
  br label %sw.epilog237

sw.bb153:                                         ; preds = %if.else
  %132 = load i32, i32* @y_block_size, align 4
  %add154 = add nsw i32 %132, 1
  store i32 %add154, i32* %t, align 4
  %133 = load i32, i32* @y_block_size, align 4
  store i32 %133, i32* %f, align 4
  br label %sw.bb155

sw.bb155:                                         ; preds = %sw.bb153, %if.else
  %134 = load i32, i32* %start.addr, align 4
  store i32 %134, i32* %var, align 4
  br label %for.cond156

for.cond156:                                      ; preds = %for.inc192, %sw.bb155
  %135 = load i32, i32* %var, align 4
  %136 = load i32, i32* %start.addr, align 4
  %137 = load i32, i32* %num_comm.addr, align 4
  %add157 = add nsw i32 %136, %137
  %cmp158 = icmp slt i32 %135, %add157
  br i1 %cmp158, label %for.body159, label %for.end194

for.body159:                                      ; preds = %for.cond156
  store i32 0, i32* %i, align 4
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc189, %for.body159
  %138 = load i32, i32* %i, align 4
  %139 = load i32, i32* @x_block_size, align 4
  %add161 = add nsw i32 %139, 1
  %cmp162 = icmp sle i32 %138, %add161
  br i1 %cmp162, label %for.body163, label %for.end191

for.body163:                                      ; preds = %for.cond160
  store i32 0, i32* %k, align 4
  br label %for.cond164

for.cond164:                                      ; preds = %for.inc186, %for.body163
  %140 = load i32, i32* %k, align 4
  %141 = load i32, i32* @z_block_size, align 4
  %add165 = add nsw i32 %141, 1
  %cmp166 = icmp sle i32 %140, %add165
  br i1 %cmp166, label %for.body167, label %for.end188

for.body167:                                      ; preds = %for.cond164
  %142 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array168 = getelementptr inbounds %struct.block, %struct.block* %142, i32 0, i32 11
  %143 = load double****, double***** %array168, align 8
  %144 = load i32, i32* %var, align 4
  %idxprom169 = sext i32 %144 to i64
  %arrayidx170 = getelementptr inbounds double***, double**** %143, i64 %idxprom169
  %145 = load double***, double**** %arrayidx170, align 8
  %146 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %146 to i64
  %arrayidx172 = getelementptr inbounds double**, double*** %145, i64 %idxprom171
  %147 = load double**, double*** %arrayidx172, align 8
  %148 = load i32, i32* %f, align 4
  %idxprom173 = sext i32 %148 to i64
  %arrayidx174 = getelementptr inbounds double*, double** %147, i64 %idxprom173
  %149 = load double*, double** %arrayidx174, align 8
  %150 = load i32, i32* %k, align 4
  %idxprom175 = sext i32 %150 to i64
  %arrayidx176 = getelementptr inbounds double, double* %149, i64 %idxprom175
  %151 = load double, double* %arrayidx176, align 8
  %152 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array177 = getelementptr inbounds %struct.block, %struct.block* %152, i32 0, i32 11
  %153 = load double****, double***** %array177, align 8
  %154 = load i32, i32* %var, align 4
  %idxprom178 = sext i32 %154 to i64
  %arrayidx179 = getelementptr inbounds double***, double**** %153, i64 %idxprom178
  %155 = load double***, double**** %arrayidx179, align 8
  %156 = load i32, i32* %i, align 4
  %idxprom180 = sext i32 %156 to i64
  %arrayidx181 = getelementptr inbounds double**, double*** %155, i64 %idxprom180
  %157 = load double**, double*** %arrayidx181, align 8
  %158 = load i32, i32* %t, align 4
  %idxprom182 = sext i32 %158 to i64
  %arrayidx183 = getelementptr inbounds double*, double** %157, i64 %idxprom182
  %159 = load double*, double** %arrayidx183, align 8
  %160 = load i32, i32* %k, align 4
  %idxprom184 = sext i32 %160 to i64
  %arrayidx185 = getelementptr inbounds double, double* %159, i64 %idxprom184
  store double %151, double* %arrayidx185, align 8
  br label %for.inc186

for.inc186:                                       ; preds = %for.body167
  %161 = load i32, i32* %k, align 4
  %inc187 = add nsw i32 %161, 1
  store i32 %inc187, i32* %k, align 4
  br label %for.cond164

for.end188:                                       ; preds = %for.cond164
  br label %for.inc189

for.inc189:                                       ; preds = %for.end188
  %162 = load i32, i32* %i, align 4
  %inc190 = add nsw i32 %162, 1
  store i32 %inc190, i32* %i, align 4
  br label %for.cond160

for.end191:                                       ; preds = %for.cond160
  br label %for.inc192

for.inc192:                                       ; preds = %for.end191
  %163 = load i32, i32* %var, align 4
  %inc193 = add nsw i32 %163, 1
  store i32 %inc193, i32* %var, align 4
  br label %for.cond156

for.end194:                                       ; preds = %for.cond156
  br label %sw.epilog237

sw.bb195:                                         ; preds = %if.else
  %164 = load i32, i32* @z_block_size, align 4
  %add196 = add nsw i32 %164, 1
  store i32 %add196, i32* %t, align 4
  %165 = load i32, i32* @z_block_size, align 4
  store i32 %165, i32* %f, align 4
  br label %sw.bb197

sw.bb197:                                         ; preds = %sw.bb195, %if.else
  %166 = load i32, i32* %start.addr, align 4
  store i32 %166, i32* %var, align 4
  br label %for.cond198

for.cond198:                                      ; preds = %for.inc234, %sw.bb197
  %167 = load i32, i32* %var, align 4
  %168 = load i32, i32* %start.addr, align 4
  %169 = load i32, i32* %num_comm.addr, align 4
  %add199 = add nsw i32 %168, %169
  %cmp200 = icmp slt i32 %167, %add199
  br i1 %cmp200, label %for.body201, label %for.end236

for.body201:                                      ; preds = %for.cond198
  store i32 0, i32* %i, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc231, %for.body201
  %170 = load i32, i32* %i, align 4
  %171 = load i32, i32* @x_block_size, align 4
  %add203 = add nsw i32 %171, 1
  %cmp204 = icmp sle i32 %170, %add203
  br i1 %cmp204, label %for.body205, label %for.end233

for.body205:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond206

for.cond206:                                      ; preds = %for.inc228, %for.body205
  %172 = load i32, i32* %j, align 4
  %173 = load i32, i32* @y_block_size, align 4
  %add207 = add nsw i32 %173, 1
  %cmp208 = icmp sle i32 %172, %add207
  br i1 %cmp208, label %for.body209, label %for.end230

for.body209:                                      ; preds = %for.cond206
  %174 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array210 = getelementptr inbounds %struct.block, %struct.block* %174, i32 0, i32 11
  %175 = load double****, double***** %array210, align 8
  %176 = load i32, i32* %var, align 4
  %idxprom211 = sext i32 %176 to i64
  %arrayidx212 = getelementptr inbounds double***, double**** %175, i64 %idxprom211
  %177 = load double***, double**** %arrayidx212, align 8
  %178 = load i32, i32* %i, align 4
  %idxprom213 = sext i32 %178 to i64
  %arrayidx214 = getelementptr inbounds double**, double*** %177, i64 %idxprom213
  %179 = load double**, double*** %arrayidx214, align 8
  %180 = load i32, i32* %j, align 4
  %idxprom215 = sext i32 %180 to i64
  %arrayidx216 = getelementptr inbounds double*, double** %179, i64 %idxprom215
  %181 = load double*, double** %arrayidx216, align 8
  %182 = load i32, i32* %f, align 4
  %idxprom217 = sext i32 %182 to i64
  %arrayidx218 = getelementptr inbounds double, double* %181, i64 %idxprom217
  %183 = load double, double* %arrayidx218, align 8
  %184 = load %struct.block*, %struct.block** %bp.addr, align 8
  %array219 = getelementptr inbounds %struct.block, %struct.block* %184, i32 0, i32 11
  %185 = load double****, double***** %array219, align 8
  %186 = load i32, i32* %var, align 4
  %idxprom220 = sext i32 %186 to i64
  %arrayidx221 = getelementptr inbounds double***, double**** %185, i64 %idxprom220
  %187 = load double***, double**** %arrayidx221, align 8
  %188 = load i32, i32* %i, align 4
  %idxprom222 = sext i32 %188 to i64
  %arrayidx223 = getelementptr inbounds double**, double*** %187, i64 %idxprom222
  %189 = load double**, double*** %arrayidx223, align 8
  %190 = load i32, i32* %j, align 4
  %idxprom224 = sext i32 %190 to i64
  %arrayidx225 = getelementptr inbounds double*, double** %189, i64 %idxprom224
  %191 = load double*, double** %arrayidx225, align 8
  %192 = load i32, i32* %t, align 4
  %idxprom226 = sext i32 %192 to i64
  %arrayidx227 = getelementptr inbounds double, double* %191, i64 %idxprom226
  store double %183, double* %arrayidx227, align 8
  br label %for.inc228

for.inc228:                                       ; preds = %for.body209
  %193 = load i32, i32* %j, align 4
  %inc229 = add nsw i32 %193, 1
  store i32 %inc229, i32* %j, align 4
  br label %for.cond206

for.end230:                                       ; preds = %for.cond206
  br label %for.inc231

for.inc231:                                       ; preds = %for.end230
  %194 = load i32, i32* %i, align 4
  %inc232 = add nsw i32 %194, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond202

for.end233:                                       ; preds = %for.cond202
  br label %for.inc234

for.inc234:                                       ; preds = %for.end233
  %195 = load i32, i32* %var, align 4
  %inc235 = add nsw i32 %195, 1
  store i32 %inc235, i32* %var, align 4
  br label %for.cond198

for.end236:                                       ; preds = %for.cond198
  br label %sw.epilog237

sw.epilog237:                                     ; preds = %for.end236, %for.end194, %for.end152, %if.else
  br label %if.end

if.end:                                           ; preds = %sw.epilog237, %sw.epilog
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @driver() #0 {
entry:
  %ts = alloca i32, align 4
  %var = alloca i32, align 4
  %start = alloca i32, align 4
  %number = alloca i32, align 4
  %stage = alloca i32, align 4
  %comm_stage = alloca i32, align 4
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %sum = alloca double, align 8
  call void @init()
  call void @init_profile()
  %0 = load i32, i32* @counter_malloc, align 4
  store i32 %0, i32* @counter_malloc_init, align 4
  %1 = load double, double* @size_malloc, align 8
  store double %1, double* @size_malloc_init, align 8
  %call = call double @timer()
  store double %call, double* %t1, align 8
  %2 = load i32, i32* @num_refine, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* @uniform_refine, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @refine(i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call2 = call double @timer()
  store double %call2, double* %t2, align 8
  %4 = load double, double* %t2, align 8
  %5 = load double, double* %t1, align 8
  %sub = fsub double %4, %5
  %6 = load double, double* @timer_refine_all, align 8
  %add = fadd double %6, %sub
  store double %add, double* @timer_refine_all, align 8
  %7 = load i32, i32* @plot_freq, align 4
  %tobool3 = icmp ne i32 %7, 0
  br i1 %tobool3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  call void @plot(i32 0)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %call6 = call double @timer()
  store double %call6, double* %t3, align 8
  %8 = load double, double* %t3, align 8
  %9 = load double, double* %t2, align 8
  %sub7 = fsub double %8, %9
  %10 = load double, double* @timer_plot, align 8
  %add8 = fadd double %10, %sub7
  store double %add8, double* @timer_plot, align 8
  %11 = load i32, i32* @global_active, align 4
  store i32 %11, i32* @nb_max, align 4
  store i32 %11, i32* @nb_min, align 4
  store i32 0, i32* %comm_stage, align 4
  store i32 1, i32* %ts, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc109, %if.end5
  %12 = load i32, i32* %ts, align 4
  %13 = load i32, i32* @num_tsteps, align 4
  %cmp = icmp sle i32 %12, %13
  br i1 %cmp, label %for.body, label %for.end111

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %stage, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc83, %for.body
  %14 = load i32, i32* %stage, align 4
  %15 = load i32, i32* @stages_per_ts, align 4
  %cmp10 = icmp slt i32 %14, %15
  br i1 %cmp10, label %for.body11, label %for.end86

for.body11:                                       ; preds = %for.cond9
  %16 = load i32, i32* @global_active, align 4
  %conv = sext i32 %16 to i64
  %17 = load i64, i64* @total_blocks, align 8
  %add12 = add nsw i64 %17, %conv
  store i64 %add12, i64* @total_blocks, align 8
  %18 = load i32, i32* @global_active, align 4
  %19 = load i32, i32* @nb_min, align 4
  %cmp13 = icmp slt i32 %18, %19
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.body11
  %20 = load i32, i32* @global_active, align 4
  store i32 %20, i32* @nb_min, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %for.body11
  %21 = load i32, i32* @global_active, align 4
  %22 = load i32, i32* @nb_max, align 4
  %cmp17 = icmp sgt i32 %21, %22
  br i1 %cmp17, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end16
  %23 = load i32, i32* @global_active, align 4
  store i32 %23, i32* @nb_max, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end16
  store i32 0, i32* %start, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc80, %if.end20
  %24 = load i32, i32* %start, align 4
  %25 = load i32, i32* @num_vars, align 4
  %cmp22 = icmp slt i32 %24, %25
  br i1 %cmp22, label %for.body24, label %for.end82

for.body24:                                       ; preds = %for.cond21
  %26 = load i32, i32* %start, align 4
  %27 = load i32, i32* @comm_vars, align 4
  %add25 = add nsw i32 %26, %27
  %28 = load i32, i32* @num_vars, align 4
  %cmp26 = icmp sgt i32 %add25, %28
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %for.body24
  %29 = load i32, i32* @num_vars, align 4
  %30 = load i32, i32* %start, align 4
  %sub29 = sub nsw i32 %29, %30
  store i32 %sub29, i32* %number, align 4
  br label %if.end30

if.else:                                          ; preds = %for.body24
  %31 = load i32, i32* @comm_vars, align 4
  store i32 %31, i32* %number, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then28
  %call31 = call double @timer()
  store double %call31, double* %t3, align 8
  %32 = load i32, i32* %start, align 4
  %33 = load i32, i32* %number, align 4
  %34 = load i32, i32* %comm_stage, align 4
  call void @comm(i32 %32, i32 %33, i32 %34)
  %call32 = call double @timer()
  store double %call32, double* %t4, align 8
  %35 = load double, double* %t4, align 8
  %36 = load double, double* %t3, align 8
  %sub33 = fsub double %35, %36
  %37 = load double, double* @timer_comm_all, align 8
  %add34 = fadd double %37, %sub33
  store double %add34, double* @timer_comm_all, align 8
  %38 = load i32, i32* %start, align 4
  store i32 %38, i32* %var, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc, %if.end30
  %39 = load i32, i32* %var, align 4
  %40 = load i32, i32* %start, align 4
  %41 = load i32, i32* %number, align 4
  %add36 = add nsw i32 %40, %41
  %cmp37 = icmp slt i32 %39, %add36
  br i1 %cmp37, label %for.body39, label %for.end

for.body39:                                       ; preds = %for.cond35
  %42 = load i32, i32* %var, align 4
  call void @stencil_calc(i32 %42)
  %call40 = call double @timer()
  store double %call40, double* %t3, align 8
  %43 = load double, double* %t3, align 8
  %44 = load double, double* %t4, align 8
  %sub41 = fsub double %43, %44
  %45 = load double, double* @timer_calc_all, align 8
  %add42 = fadd double %45, %sub41
  store double %add42, double* @timer_calc_all, align 8
  %46 = load i32, i32* @checksum_freq, align 4
  %tobool43 = icmp ne i32 %46, 0
  br i1 %tobool43, label %land.lhs.true, label %if.end76

land.lhs.true:                                    ; preds = %for.body39
  %47 = load i32, i32* %stage, align 4
  %48 = load i32, i32* @checksum_freq, align 4
  %rem = srem i32 %47, %48
  %tobool44 = icmp ne i32 %rem, 0
  br i1 %tobool44, label %if.end76, label %if.then45

if.then45:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* %var, align 4
  %call46 = call double @check_sum(i32 %49)
  store double %call46, double* %sum, align 8
  %50 = load i32, i32* @report_diffusion, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %land.lhs.true48, label %if.end57

land.lhs.true48:                                  ; preds = %if.then45
  %51 = load i32, i32* @my_pe, align 4
  %tobool49 = icmp ne i32 %51, 0
  br i1 %tobool49, label %if.end57, label %if.then50

if.then50:                                        ; preds = %land.lhs.true48
  %52 = load i32, i32* %ts, align 4
  %53 = load i32, i32* %var, align 4
  %54 = load double, double* %sum, align 8
  %55 = load double*, double** @grid_sum, align 8
  %56 = load i32, i32* %var, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double, double* %sum, align 8
  %59 = load double*, double** @grid_sum, align 8
  %60 = load i32, i32* %var, align 4
  %idxprom51 = sext i32 %60 to i64
  %arrayidx52 = getelementptr inbounds double, double* %59, i64 %idxprom51
  %61 = load double, double* %arrayidx52, align 8
  %sub53 = fsub double %58, %61
  %62 = call double @llvm.fabs.f64(double %sub53)
  %63 = load double*, double** @grid_sum, align 8
  %64 = load i32, i32* %var, align 4
  %idxprom54 = sext i32 %64 to i64
  %arrayidx55 = getelementptr inbounds double, double* %63, i64 %idxprom54
  %65 = load double, double* %arrayidx55, align 8
  %div = fdiv double %62, %65
  %66 = load double, double* @tol, align 8
  %call56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i32 %52, i32 %53, double %54, double %57, double %div, double %66)
  br label %if.end57

if.end57:                                         ; preds = %if.then50, %land.lhs.true48, %if.then45
  %67 = load double, double* %sum, align 8
  %68 = load double*, double** @grid_sum, align 8
  %69 = load i32, i32* %var, align 4
  %idxprom58 = sext i32 %69 to i64
  %arrayidx59 = getelementptr inbounds double, double* %68, i64 %idxprom58
  %70 = load double, double* %arrayidx59, align 8
  %sub60 = fsub double %67, %70
  %71 = call double @llvm.fabs.f64(double %sub60)
  %72 = load double*, double** @grid_sum, align 8
  %73 = load i32, i32* %var, align 4
  %idxprom61 = sext i32 %73 to i64
  %arrayidx62 = getelementptr inbounds double, double* %72, i64 %idxprom61
  %74 = load double, double* %arrayidx62, align 8
  %div63 = fdiv double %71, %74
  %75 = load double, double* @tol, align 8
  %cmp64 = fcmp ogt double %div63, %75
  br i1 %cmp64, label %if.then66, label %if.end73

if.then66:                                        ; preds = %if.end57
  %76 = load i32, i32* @my_pe, align 4
  %tobool67 = icmp ne i32 %76, 0
  br i1 %tobool67, label %if.end72, label %if.then68

if.then68:                                        ; preds = %if.then66
  %77 = load i32, i32* %ts, align 4
  %78 = load double, double* %sum, align 8
  %79 = load double*, double** @grid_sum, align 8
  %80 = load i32, i32* %var, align 4
  %idxprom69 = sext i32 %80 to i64
  %arrayidx70 = getelementptr inbounds double, double* %79, i64 %idxprom69
  %81 = load double, double* %arrayidx70, align 8
  %82 = load i32, i32* %var, align 4
  %call71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1.11, i64 0, i64 0), i32 %77, double %78, double %81, i32 %82)
  br label %if.end72

if.end72:                                         ; preds = %if.then68, %if.then66
  br label %return

if.end73:                                         ; preds = %if.end57
  %83 = load double, double* %sum, align 8
  %84 = load double*, double** @grid_sum, align 8
  %85 = load i32, i32* %var, align 4
  %idxprom74 = sext i32 %85 to i64
  %arrayidx75 = getelementptr inbounds double, double* %84, i64 %idxprom74
  store double %83, double* %arrayidx75, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.end73, %land.lhs.true, %for.body39
  %call77 = call double @timer()
  store double %call77, double* %t4, align 8
  %86 = load double, double* %t4, align 8
  %87 = load double, double* %t3, align 8
  %sub78 = fsub double %86, %87
  %88 = load double, double* @timer_cs_all, align 8
  %add79 = fadd double %88, %sub78
  store double %add79, double* @timer_cs_all, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end76
  %89 = load i32, i32* %var, align 4
  %inc = add nsw i32 %89, 1
  store i32 %inc, i32* %var, align 4
  br label %for.cond35

for.end:                                          ; preds = %for.cond35
  br label %for.inc80

for.inc80:                                        ; preds = %for.end
  %90 = load i32, i32* @comm_vars, align 4
  %91 = load i32, i32* %start, align 4
  %add81 = add nsw i32 %91, %90
  store i32 %add81, i32* %start, align 4
  br label %for.cond21

for.end82:                                        ; preds = %for.cond21
  br label %for.inc83

for.inc83:                                        ; preds = %for.end82
  %92 = load i32, i32* %stage, align 4
  %inc84 = add nsw i32 %92, 1
  store i32 %inc84, i32* %stage, align 4
  %93 = load i32, i32* %comm_stage, align 4
  %inc85 = add nsw i32 %93, 1
  store i32 %inc85, i32* %comm_stage, align 4
  br label %for.cond9

for.end86:                                        ; preds = %for.cond9
  %94 = load i32, i32* @num_refine, align 4
  %tobool87 = icmp ne i32 %94, 0
  br i1 %tobool87, label %land.lhs.true88, label %if.end95

land.lhs.true88:                                  ; preds = %for.end86
  %95 = load i32, i32* @uniform_refine, align 4
  %tobool89 = icmp ne i32 %95, 0
  br i1 %tobool89, label %if.end95, label %if.then90

if.then90:                                        ; preds = %land.lhs.true88
  call void @move()
  %96 = load i32, i32* %ts, align 4
  %97 = load i32, i32* @refine_freq, align 4
  %rem91 = srem i32 %96, %97
  %tobool92 = icmp ne i32 %rem91, 0
  br i1 %tobool92, label %if.end94, label %if.then93

if.then93:                                        ; preds = %if.then90
  %98 = load i32, i32* %ts, align 4
  call void @refine(i32 %98)
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.then90
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %land.lhs.true88, %for.end86
  %call96 = call double @timer()
  store double %call96, double* %t2, align 8
  %99 = load double, double* %t2, align 8
  %100 = load double, double* %t4, align 8
  %sub97 = fsub double %99, %100
  %101 = load double, double* @timer_refine_all, align 8
  %add98 = fadd double %101, %sub97
  store double %add98, double* @timer_refine_all, align 8
  %call99 = call double @timer()
  store double %call99, double* %t3, align 8
  %102 = load i32, i32* @plot_freq, align 4
  %tobool100 = icmp ne i32 %102, 0
  br i1 %tobool100, label %land.lhs.true101, label %if.end105

land.lhs.true101:                                 ; preds = %if.end95
  %103 = load i32, i32* %ts, align 4
  %104 = load i32, i32* @plot_freq, align 4
  %rem102 = srem i32 %103, %104
  %tobool103 = icmp ne i32 %rem102, 0
  br i1 %tobool103, label %if.end105, label %if.then104

if.then104:                                       ; preds = %land.lhs.true101
  %105 = load i32, i32* %ts, align 4
  call void @plot(i32 %105)
  br label %if.end105

if.end105:                                        ; preds = %if.then104, %land.lhs.true101, %if.end95
  %call106 = call double @timer()
  %106 = load double, double* %t3, align 8
  %sub107 = fsub double %call106, %106
  %107 = load double, double* @timer_plot, align 8
  %add108 = fadd double %107, %sub107
  store double %add108, double* @timer_plot, align 8
  br label %for.inc109

for.inc109:                                       ; preds = %if.end105
  %108 = load i32, i32* %ts, align 4
  %inc110 = add nsw i32 %108, 1
  store i32 %inc110, i32* %ts, align 4
  br label %for.cond

for.end111:                                       ; preds = %for.cond
  %call112 = call double @timer()
  %109 = load double, double* %t1, align 8
  %sub113 = fsub double %call112, %109
  store double %sub113, double* @timer_all, align 8
  br label %return

return:                                           ; preds = %for.end111, %if.end72
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @glibc_compat_rand() #0 {
entry:
  %i3 = alloca i32, align 4
  %i31 = alloca i32, align 4
  %r = alloca i32, align 4
  %0 = load i32, i32* @next, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* @next, align 4
  %add = add nsw i32 344, %1
  %sub = sub nsw i32 %add, 3
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* @next, align 4
  %sub1 = sub nsw i32 %2, 3
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %sub1, %cond.false ]
  store i32 %cond, i32* %i3, align 4
  %3 = load i32, i32* @next, align 4
  %cmp2 = icmp slt i32 %3, 31
  br i1 %cmp2, label %cond.true3, label %cond.false6

cond.true3:                                       ; preds = %cond.end
  %4 = load i32, i32* @next, align 4
  %add4 = add nsw i32 344, %4
  %sub5 = sub nsw i32 %add4, 31
  br label %cond.end8

cond.false6:                                      ; preds = %cond.end
  %5 = load i32, i32* @next, align 4
  %sub7 = sub nsw i32 %5, 31
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true3
  %cond9 = phi i32 [ %sub5, %cond.true3 ], [ %sub7, %cond.false6 ]
  store i32 %cond9, i32* %i31, align 4
  %6 = load i32, i32* %i3, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom
  %7 = load i32, i32* %arrayidx, align 4
  %8 = load i32, i32* %i31, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom10
  %9 = load i32, i32* %arrayidx11, align 4
  %add12 = add i32 %7, %9
  %10 = load i32, i32* @next, align 4
  %idxprom13 = sext i32 %10 to i64
  %arrayidx14 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom13
  store i32 %add12, i32* %arrayidx14, align 4
  %11 = load i32, i32* @next, align 4
  %idxprom15 = sext i32 %11 to i64
  %arrayidx16 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom15
  %12 = load i32, i32* %arrayidx16, align 4
  %shr = lshr i32 %12, 1
  store i32 %shr, i32* %r, align 4
  %13 = load i32, i32* @next, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* @next, align 4
  %14 = load i32, i32* @next, align 4
  %cmp17 = icmp sge i32 %14, 344
  br i1 %cmp17, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end8
  store i32 0, i32* @next, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end8
  %15 = load i32, i32* %r, align 4
  ret i32 %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @glibc_compat_srand(i32 %seed) #0 {
entry:
  %seed.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %r = alloca i32, align 4
  %i9 = alloca i32, align 4
  %i22 = alloca i32, align 4
  store i32 %seed, i32* %seed.addr, align 4
  %0 = load i32, i32* %seed.addr, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %seed.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %seed.addr, align 4
  store i32 %1, i32* getelementptr inbounds ([344 x i32], [344 x i32]* @table, i64 0, i64 0), align 16
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 31
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %3, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %conv = zext i32 %4 to i64
  %mul = mul nsw i64 16807, %conv
  %rem = srem i64 %mul, 2147483647
  %conv2 = trunc i64 %rem to i32
  store i32 %conv2, i32* %r, align 4
  %5 = load i32, i32* %r, align 4
  %cmp3 = icmp slt i32 %5, 0
  br i1 %cmp3, label %if.then5, label %if.end6

if.then5:                                         ; preds = %for.body
  %6 = load i32, i32* %r, align 4
  %add = add nsw i32 %6, 2147483647
  store i32 %add, i32* %r, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %for.body
  %7 = load i32, i32* %r, align 4
  %8 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %8 to i64
  %arrayidx8 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom7
  store i32 %7, i32* %arrayidx8, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %9 = load i32, i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 31, i32* %i9, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc19, %for.end
  %10 = load i32, i32* %i9, align 4
  %cmp11 = icmp slt i32 %10, 34
  br i1 %cmp11, label %for.body13, label %for.end21

for.body13:                                       ; preds = %for.cond10
  %11 = load i32, i32* %i9, align 4
  %sub14 = sub nsw i32 %11, 31
  %idxprom15 = sext i32 %sub14 to i64
  %arrayidx16 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom15
  %12 = load i32, i32* %arrayidx16, align 4
  %13 = load i32, i32* %i9, align 4
  %idxprom17 = sext i32 %13 to i64
  %arrayidx18 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom17
  store i32 %12, i32* %arrayidx18, align 4
  br label %for.inc19

for.inc19:                                        ; preds = %for.body13
  %14 = load i32, i32* %i9, align 4
  %inc20 = add nsw i32 %14, 1
  store i32 %inc20, i32* %i9, align 4
  br label %for.cond10

for.end21:                                        ; preds = %for.cond10
  store i32 34, i32* %i22, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc36, %for.end21
  %15 = load i32, i32* %i22, align 4
  %cmp24 = icmp slt i32 %15, 344
  br i1 %cmp24, label %for.body26, label %for.end38

for.body26:                                       ; preds = %for.cond23
  %16 = load i32, i32* %i22, align 4
  %sub27 = sub nsw i32 %16, 31
  %idxprom28 = sext i32 %sub27 to i64
  %arrayidx29 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom28
  %17 = load i32, i32* %arrayidx29, align 4
  %18 = load i32, i32* %i22, align 4
  %sub30 = sub nsw i32 %18, 3
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom31
  %19 = load i32, i32* %arrayidx32, align 4
  %add33 = add i32 %17, %19
  %20 = load i32, i32* %i22, align 4
  %idxprom34 = sext i32 %20 to i64
  %arrayidx35 = getelementptr inbounds [344 x i32], [344 x i32]* @table, i64 0, i64 %idxprom34
  store i32 %add33, i32* %arrayidx35, align 4
  br label %for.inc36

for.inc36:                                        ; preds = %for.body26
  %21 = load i32, i32* %i22, align 4
  %inc37 = add nsw i32 %21, 1
  store i32 %inc37, i32* %i22, align 4
  br label %for.cond23

for.end38:                                        ; preds = %for.cond23
  store i32 0, i32* @next, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init() #0 {
entry:
  %n = alloca i32, align 4
  %var = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %m = alloca i32, align 4
  %o = alloca i32, align 4
  %size = alloca i32, align 4
  %dir = alloca i32, align 4
  %i1 = alloca i32, align 4
  %i2 = alloca i32, align 4
  %j1 = alloca i32, align 4
  %j2 = alloca i32, align 4
  %k1 = alloca i32, align 4
  %k2 = alloca i32, align 4
  %ib = alloca i32, align 4
  %jb = alloca i32, align 4
  %kb = alloca i32, align 4
  %saved_stack = alloca i8*, align 8
  %__vla_expr0 = alloca i64, align 8
  %__vla_expr1 = alloca i64, align 8
  %__vla_expr2 = alloca i64, align 8
  %__vla_expr3 = alloca i64, align 8
  %__vla_expr4 = alloca i64, align 8
  %set = alloca i32, align 4
  %num = alloca i32, align 4
  %npx1 = alloca i32, align 4
  %npy1 = alloca i32, align 4
  %npz1 = alloca i32, align 4
  %pes = alloca i32, align 4
  %fact = alloca i32, align 4
  %fac = alloca [25 x i32], align 16
  %nfac = alloca i32, align 4
  %f = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %0 = load i32, i32* @num_pes, align 4
  %1 = zext i32 %0 to i64
  %2 = call i8* @llvm.stacksave()
  store i8* %2, i8** %saved_stack, align 8
  %vla = alloca i32, i64 %1, align 16
  store i64 %1, i64* %__vla_expr0, align 8
  %3 = load i32, i32* @num_pes, align 4
  %4 = zext i32 %3 to i64
  %5 = mul nuw i64 3, %4
  %vla1 = alloca i32, i64 %5, align 16
  store i64 %4, i64* %__vla_expr1, align 8
  %6 = load i32, i32* @npx, align 4
  %7 = zext i32 %6 to i64
  %8 = load i32, i32* @npy, align 4
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* @npz, align 4
  %11 = zext i32 %10 to i64
  %12 = mul nuw i64 %7, %9
  %13 = mul nuw i64 %12, %11
  %vla2 = alloca i32, i64 %13, align 16
  store i64 %7, i64* %__vla_expr2, align 8
  store i64 %9, i64* %__vla_expr3, align 8
  store i64 %11, i64* %__vla_expr4, align 8
  %14 = load i32, i32* @error_tol, align 4
  %sub = sub nsw i32 0, %14
  %conv = sitofp i32 %sub to double
  %call = call double @pow(double 1.000000e+01, double %conv) #5
  store double %call, double* @tol, align 8
  %15 = load i32*, i32** @p8, align 8
  %arrayidx = getelementptr inbounds i32, i32* %15, i64 0
  store i32 1, i32* %arrayidx, align 4
  %16 = load i32*, i32** @p2, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %16, i64 0
  store i32 1, i32* %arrayidx3, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %18, 1
  %cmp = icmp slt i32 %17, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32*, i32** @p8, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom = sext i32 %20 to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %19, i64 %idxprom
  %21 = load i32, i32* %arrayidx5, align 4
  %mul = mul nsw i32 %21, 8
  %22 = load i32*, i32** @p8, align 8
  %23 = load i32, i32* %i, align 4
  %add6 = add nsw i32 %23, 1
  %idxprom7 = sext i32 %add6 to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %22, i64 %idxprom7
  store i32 %mul, i32* %arrayidx8, align 4
  %24 = load i32*, i32** @p2, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom9 = sext i32 %25 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %24, i64 %idxprom9
  %26 = load i32, i32* %arrayidx10, align 4
  %mul11 = mul nsw i32 %26, 2
  %27 = load i32*, i32** @p2, align 8
  %28 = load i32, i32* %i, align 4
  %add12 = add nsw i32 %28, 1
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %27, i64 %idxprom13
  store i32 %mul11, i32* %arrayidx14, align 4
  %29 = load i32*, i32** @sorted_index, align 8
  %30 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %30 to i64
  %arrayidx16 = getelementptr inbounds i32, i32* %29, i64 %idxprom15
  store i32 0, i32* %arrayidx16, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %32 = load i32*, i32** @sorted_index, align 8
  %33 = load i32, i32* @num_refine, align 4
  %add17 = add nsw i32 %33, 1
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds i32, i32* %32, i64 %idxprom18
  store i32 0, i32* %arrayidx19, align 4
  %34 = load i32*, i32** @block_start, align 8
  %arrayidx20 = getelementptr inbounds i32, i32* %34, i64 0
  store i32 0, i32* %arrayidx20, align 4
  %35 = load i32, i32* @init_block_x, align 4
  %36 = load i32, i32* @init_block_y, align 4
  %mul21 = mul nsw i32 %35, %36
  %37 = load i32, i32* @init_block_z, align 4
  %mul22 = mul nsw i32 %mul21, %37
  store i32 %mul22, i32* @global_max_b, align 4
  store i32 %mul22, i32* @local_max_b, align 4
  %38 = load i32, i32* @num_pes, align 4
  %39 = load i32, i32* @global_max_b, align 4
  %mul23 = mul nsw i32 %38, %39
  store i32 %mul23, i32* %num, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc37, %for.end
  %40 = load i32, i32* %i, align 4
  %41 = load i32, i32* @num_refine, align 4
  %cmp25 = icmp sle i32 %40, %41
  br i1 %cmp25, label %for.body27, label %for.end39

for.body27:                                       ; preds = %for.cond24
  %42 = load i32*, i32** @block_start, align 8
  %43 = load i32, i32* %i, align 4
  %sub28 = sub nsw i32 %43, 1
  %idxprom29 = sext i32 %sub28 to i64
  %arrayidx30 = getelementptr inbounds i32, i32* %42, i64 %idxprom29
  %44 = load i32, i32* %arrayidx30, align 4
  %45 = load i32, i32* %num, align 4
  %add31 = add nsw i32 %44, %45
  %46 = load i32*, i32** @block_start, align 8
  %47 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %47 to i64
  %arrayidx33 = getelementptr inbounds i32, i32* %46, i64 %idxprom32
  store i32 %add31, i32* %arrayidx33, align 4
  %48 = load i32, i32* %num, align 4
  %mul34 = mul nsw i32 %48, 8
  store i32 %mul34, i32* %num, align 4
  %49 = load i32*, i32** @num_blocks, align 8
  %50 = load i32, i32* %i, align 4
  %idxprom35 = sext i32 %50 to i64
  %arrayidx36 = getelementptr inbounds i32, i32* %49, i64 %idxprom35
  store i32 0, i32* %arrayidx36, align 4
  br label %for.inc37

for.inc37:                                        ; preds = %for.body27
  %51 = load i32, i32* %i, align 4
  %inc38 = add nsw i32 %51, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond24

for.end39:                                        ; preds = %for.cond24
  %52 = load i32, i32* @x_block_size, align 4
  %div = sdiv i32 %52, 2
  store i32 %div, i32* @x_block_half, align 4
  %53 = load i32, i32* @y_block_size, align 4
  %div40 = sdiv i32 %53, 2
  store i32 %div40, i32* @y_block_half, align 4
  %54 = load i32, i32* @z_block_size, align 4
  %div41 = sdiv i32 %54, 2
  store i32 %div41, i32* @z_block_half, align 4
  %55 = load i32, i32* @init_block_x, align 4
  %56 = load i32, i32* @init_block_y, align 4
  %mul42 = mul nsw i32 %55, %56
  %57 = load i32, i32* @init_block_z, align 4
  %mul43 = mul nsw i32 %mul42, %57
  store i32 %mul43, i32* @max_active_block, align 4
  %58 = load i32, i32* @max_active_block, align 4
  store i32 %58, i32* @num_active, align 4
  %59 = load i32, i32* @num_active, align 4
  %60 = load i32, i32* @num_pes, align 4
  %mul44 = mul nsw i32 %59, %60
  store i32 %mul44, i32* @global_active, align 4
  store i32 0, i32* @max_active_parent, align 4
  store i32 0, i32* @num_parents, align 4
  %61 = load i32*, i32** @p2, align 8
  %62 = load i32, i32* @num_refine, align 4
  %add45 = add nsw i32 %62, 1
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %61, i64 %idxprom46
  %63 = load i32, i32* %arrayidx47, align 4
  store i32 %63, i32* %size, align 4
  %64 = load i32, i32* @npx, align 4
  %65 = load i32, i32* @init_block_x, align 4
  %mul48 = mul nsw i32 %64, %65
  %66 = load i32, i32* %size, align 4
  %mul49 = mul nsw i32 %mul48, %66
  store i32 %mul49, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %67 = load i32, i32* @npy, align 4
  %68 = load i32, i32* @init_block_y, align 4
  %mul50 = mul nsw i32 %67, %68
  %69 = load i32, i32* %size, align 4
  %mul51 = mul nsw i32 %mul50, %69
  store i32 %mul51, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %70 = load i32, i32* @npz, align 4
  %71 = load i32, i32* @init_block_z, align 4
  %mul52 = mul nsw i32 %70, %71
  %72 = load i32, i32* %size, align 4
  %mul53 = mul nsw i32 %mul52, %72
  store i32 %mul53, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %n, align 4
  store i32 0, i32* %o, align 4
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc248, %for.end39
  %73 = load i32, i32* %k, align 4
  %74 = load i32, i32* @init_block_z, align 4
  %cmp55 = icmp slt i32 %73, %74
  br i1 %cmp55, label %for.body57, label %for.end250

for.body57:                                       ; preds = %for.cond54
  store i32 0, i32* %j, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc245, %for.body57
  %75 = load i32, i32* %j, align 4
  %76 = load i32, i32* @init_block_y, align 4
  %cmp59 = icmp slt i32 %75, %76
  br i1 %cmp59, label %for.body61, label %for.end247

for.body61:                                       ; preds = %for.cond58
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc241, %for.body61
  %77 = load i32, i32* %i, align 4
  %78 = load i32, i32* @init_block_x, align 4
  %cmp63 = icmp slt i32 %77, %78
  br i1 %cmp63, label %for.body65, label %for.end244

for.body65:                                       ; preds = %for.cond62
  %79 = load %struct.block*, %struct.block** @blocks, align 8
  %80 = load i32, i32* %o, align 4
  %idxprom66 = sext i32 %80 to i64
  %arrayidx67 = getelementptr inbounds %struct.block, %struct.block* %79, i64 %idxprom66
  store %struct.block* %arrayidx67, %struct.block** %bp, align 8
  %81 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %81, i32 0, i32 1
  store i32 0, i32* %level, align 4
  %82 = load i32, i32* %n, align 4
  %83 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %83, i32 0, i32 0
  store i32 %82, i32* %number, align 8
  %84 = load %struct.block*, %struct.block** %bp, align 8
  %parent = getelementptr inbounds %struct.block, %struct.block* %84, i32 0, i32 4
  store i32 -1, i32* %parent, align 8
  %85 = load i32, i32* %i, align 4
  %86 = load i32, i32* %size, align 4
  %mul68 = mul nsw i32 %85, %86
  %87 = load i32, i32* %size, align 4
  %div69 = sdiv i32 %87, 2
  %add70 = add nsw i32 %mul68, %div69
  %88 = load %struct.block*, %struct.block** %bp, align 8
  %cen = getelementptr inbounds %struct.block, %struct.block* %88, i32 0, i32 10
  %arrayidx71 = getelementptr inbounds [3 x i32], [3 x i32]* %cen, i64 0, i64 0
  store i32 %add70, i32* %arrayidx71, align 4
  %89 = load i32, i32* %j, align 4
  %90 = load i32, i32* %size, align 4
  %mul72 = mul nsw i32 %89, %90
  %91 = load i32, i32* %size, align 4
  %div73 = sdiv i32 %91, 2
  %add74 = add nsw i32 %mul72, %div73
  %92 = load %struct.block*, %struct.block** %bp, align 8
  %cen75 = getelementptr inbounds %struct.block, %struct.block* %92, i32 0, i32 10
  %arrayidx76 = getelementptr inbounds [3 x i32], [3 x i32]* %cen75, i64 0, i64 1
  store i32 %add74, i32* %arrayidx76, align 4
  %93 = load i32, i32* %k, align 4
  %94 = load i32, i32* %size, align 4
  %mul77 = mul nsw i32 %93, %94
  %95 = load i32, i32* %size, align 4
  %div78 = sdiv i32 %95, 2
  %add79 = add nsw i32 %mul77, %div78
  %96 = load %struct.block*, %struct.block** %bp, align 8
  %cen80 = getelementptr inbounds %struct.block, %struct.block* %96, i32 0, i32 10
  %arrayidx81 = getelementptr inbounds [3 x i32], [3 x i32]* %cen80, i64 0, i64 2
  store i32 %add79, i32* %arrayidx81, align 4
  %97 = load i32, i32* %o, align 4
  %98 = load i32, i32* %n, align 4
  call void @add_sorted_list(i32 %97, i32 %98, i32 0)
  store i32 0, i32* %var, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc118, %for.body65
  %99 = load i32, i32* %var, align 4
  %100 = load i32, i32* @num_vars, align 4
  %cmp83 = icmp slt i32 %99, %100
  br i1 %cmp83, label %for.body85, label %for.end120

for.body85:                                       ; preds = %for.cond82
  store i32 1, i32* %ib, align 4
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc115, %for.body85
  %101 = load i32, i32* %ib, align 4
  %102 = load i32, i32* @x_block_size, align 4
  %cmp87 = icmp sle i32 %101, %102
  br i1 %cmp87, label %for.body89, label %for.end117

for.body89:                                       ; preds = %for.cond86
  store i32 1, i32* %jb, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc112, %for.body89
  %103 = load i32, i32* %jb, align 4
  %104 = load i32, i32* @y_block_size, align 4
  %cmp91 = icmp sle i32 %103, %104
  br i1 %cmp91, label %for.body93, label %for.end114

for.body93:                                       ; preds = %for.cond90
  store i32 1, i32* %kb, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc109, %for.body93
  %105 = load i32, i32* %kb, align 4
  %106 = load i32, i32* @z_block_size, align 4
  %cmp95 = icmp sle i32 %105, %106
  br i1 %cmp95, label %for.body97, label %for.end111

for.body97:                                       ; preds = %for.cond94
  %call98 = call i32 @glibc_compat_rand()
  %conv99 = sitofp i32 %call98 to double
  %div100 = fdiv double %conv99, 0x41DFFFFFFFC00000
  %107 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %107, i32 0, i32 11
  %108 = load double****, double***** %array, align 8
  %109 = load i32, i32* %var, align 4
  %idxprom101 = sext i32 %109 to i64
  %arrayidx102 = getelementptr inbounds double***, double**** %108, i64 %idxprom101
  %110 = load double***, double**** %arrayidx102, align 8
  %111 = load i32, i32* %ib, align 4
  %idxprom103 = sext i32 %111 to i64
  %arrayidx104 = getelementptr inbounds double**, double*** %110, i64 %idxprom103
  %112 = load double**, double*** %arrayidx104, align 8
  %113 = load i32, i32* %jb, align 4
  %idxprom105 = sext i32 %113 to i64
  %arrayidx106 = getelementptr inbounds double*, double** %112, i64 %idxprom105
  %114 = load double*, double** %arrayidx106, align 8
  %115 = load i32, i32* %kb, align 4
  %idxprom107 = sext i32 %115 to i64
  %arrayidx108 = getelementptr inbounds double, double* %114, i64 %idxprom107
  store double %div100, double* %arrayidx108, align 8
  br label %for.inc109

for.inc109:                                       ; preds = %for.body97
  %116 = load i32, i32* %kb, align 4
  %inc110 = add nsw i32 %116, 1
  store i32 %inc110, i32* %kb, align 4
  br label %for.cond94

for.end111:                                       ; preds = %for.cond94
  br label %for.inc112

for.inc112:                                       ; preds = %for.end111
  %117 = load i32, i32* %jb, align 4
  %inc113 = add nsw i32 %117, 1
  store i32 %inc113, i32* %jb, align 4
  br label %for.cond90

for.end114:                                       ; preds = %for.cond90
  br label %for.inc115

for.inc115:                                       ; preds = %for.end114
  %118 = load i32, i32* %ib, align 4
  %inc116 = add nsw i32 %118, 1
  store i32 %inc116, i32* %ib, align 4
  br label %for.cond86

for.end117:                                       ; preds = %for.cond86
  br label %for.inc118

for.inc118:                                       ; preds = %for.end117
  %119 = load i32, i32* %var, align 4
  %inc119 = add nsw i32 %119, 1
  store i32 %inc119, i32* %var, align 4
  br label %for.cond82

for.end120:                                       ; preds = %for.cond82
  %120 = load i32, i32* %i, align 4
  %cmp121 = icmp eq i32 %120, 0
  br i1 %cmp121, label %if.then, label %if.else

if.then:                                          ; preds = %for.end120
  %121 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %121, i32 0, i32 8
  %arrayidx123 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 0
  store i32 -2, i32* %arrayidx123, align 4
  %122 = load %struct.block*, %struct.block** %bp, align 8
  %nei = getelementptr inbounds %struct.block, %struct.block* %122, i32 0, i32 9
  %arrayidx124 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei, i64 0, i64 0
  %arrayidx125 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx124, i64 0, i64 0
  %arrayidx126 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx125, i64 0, i64 0
  store i32 0, i32* %arrayidx126, align 4
  br label %if.end

if.else:                                          ; preds = %for.end120
  %123 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level127 = getelementptr inbounds %struct.block, %struct.block* %123, i32 0, i32 8
  %arrayidx128 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level127, i64 0, i64 0
  store i32 0, i32* %arrayidx128, align 4
  %124 = load i32, i32* %o, align 4
  %sub129 = sub nsw i32 %124, 1
  %125 = load %struct.block*, %struct.block** %bp, align 8
  %nei130 = getelementptr inbounds %struct.block, %struct.block* %125, i32 0, i32 9
  %arrayidx131 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei130, i64 0, i64 0
  %arrayidx132 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx131, i64 0, i64 0
  %arrayidx133 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx132, i64 0, i64 0
  store i32 %sub129, i32* %arrayidx133, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %126 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine = getelementptr inbounds %struct.block, %struct.block* %126, i32 0, i32 7
  %arrayidx134 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine, i64 0, i64 0
  store i32 0, i32* %arrayidx134, align 4
  %127 = load i32, i32* %i, align 4
  %128 = load i32, i32* @init_block_x, align 4
  %sub135 = sub nsw i32 %128, 1
  %cmp136 = icmp eq i32 %127, %sub135
  br i1 %cmp136, label %if.then138, label %if.else145

if.then138:                                       ; preds = %if.end
  %129 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level139 = getelementptr inbounds %struct.block, %struct.block* %129, i32 0, i32 8
  %arrayidx140 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level139, i64 0, i64 1
  store i32 -2, i32* %arrayidx140, align 4
  %130 = load %struct.block*, %struct.block** %bp, align 8
  %nei141 = getelementptr inbounds %struct.block, %struct.block* %130, i32 0, i32 9
  %arrayidx142 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei141, i64 0, i64 1
  %arrayidx143 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx142, i64 0, i64 0
  %arrayidx144 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx143, i64 0, i64 0
  store i32 0, i32* %arrayidx144, align 4
  br label %if.end153

if.else145:                                       ; preds = %if.end
  %131 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level146 = getelementptr inbounds %struct.block, %struct.block* %131, i32 0, i32 8
  %arrayidx147 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level146, i64 0, i64 1
  store i32 0, i32* %arrayidx147, align 4
  %132 = load i32, i32* %o, align 4
  %add148 = add nsw i32 %132, 1
  %133 = load %struct.block*, %struct.block** %bp, align 8
  %nei149 = getelementptr inbounds %struct.block, %struct.block* %133, i32 0, i32 9
  %arrayidx150 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei149, i64 0, i64 1
  %arrayidx151 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx150, i64 0, i64 0
  %arrayidx152 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx151, i64 0, i64 0
  store i32 %add148, i32* %arrayidx152, align 4
  br label %if.end153

if.end153:                                        ; preds = %if.else145, %if.then138
  %134 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine154 = getelementptr inbounds %struct.block, %struct.block* %134, i32 0, i32 7
  %arrayidx155 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine154, i64 0, i64 1
  store i32 0, i32* %arrayidx155, align 4
  %135 = load i32, i32* %j, align 4
  %cmp156 = icmp eq i32 %135, 0
  br i1 %cmp156, label %if.then158, label %if.else165

if.then158:                                       ; preds = %if.end153
  %136 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level159 = getelementptr inbounds %struct.block, %struct.block* %136, i32 0, i32 8
  %arrayidx160 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level159, i64 0, i64 2
  store i32 -2, i32* %arrayidx160, align 4
  %137 = load %struct.block*, %struct.block** %bp, align 8
  %nei161 = getelementptr inbounds %struct.block, %struct.block* %137, i32 0, i32 9
  %arrayidx162 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei161, i64 0, i64 2
  %arrayidx163 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx162, i64 0, i64 0
  %arrayidx164 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx163, i64 0, i64 0
  store i32 0, i32* %arrayidx164, align 4
  br label %if.end173

if.else165:                                       ; preds = %if.end153
  %138 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level166 = getelementptr inbounds %struct.block, %struct.block* %138, i32 0, i32 8
  %arrayidx167 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level166, i64 0, i64 2
  store i32 0, i32* %arrayidx167, align 4
  %139 = load i32, i32* %o, align 4
  %140 = load i32, i32* @init_block_x, align 4
  %sub168 = sub nsw i32 %139, %140
  %141 = load %struct.block*, %struct.block** %bp, align 8
  %nei169 = getelementptr inbounds %struct.block, %struct.block* %141, i32 0, i32 9
  %arrayidx170 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei169, i64 0, i64 2
  %arrayidx171 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx170, i64 0, i64 0
  %arrayidx172 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx171, i64 0, i64 0
  store i32 %sub168, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else165, %if.then158
  %142 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine174 = getelementptr inbounds %struct.block, %struct.block* %142, i32 0, i32 7
  %arrayidx175 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine174, i64 0, i64 2
  store i32 0, i32* %arrayidx175, align 4
  %143 = load i32, i32* %j, align 4
  %144 = load i32, i32* @init_block_y, align 4
  %sub176 = sub nsw i32 %144, 1
  %cmp177 = icmp eq i32 %143, %sub176
  br i1 %cmp177, label %if.then179, label %if.else186

if.then179:                                       ; preds = %if.end173
  %145 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level180 = getelementptr inbounds %struct.block, %struct.block* %145, i32 0, i32 8
  %arrayidx181 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level180, i64 0, i64 3
  store i32 -2, i32* %arrayidx181, align 4
  %146 = load %struct.block*, %struct.block** %bp, align 8
  %nei182 = getelementptr inbounds %struct.block, %struct.block* %146, i32 0, i32 9
  %arrayidx183 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei182, i64 0, i64 3
  %arrayidx184 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx183, i64 0, i64 0
  %arrayidx185 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx184, i64 0, i64 0
  store i32 0, i32* %arrayidx185, align 4
  br label %if.end194

if.else186:                                       ; preds = %if.end173
  %147 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level187 = getelementptr inbounds %struct.block, %struct.block* %147, i32 0, i32 8
  %arrayidx188 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level187, i64 0, i64 3
  store i32 0, i32* %arrayidx188, align 4
  %148 = load i32, i32* %o, align 4
  %149 = load i32, i32* @init_block_x, align 4
  %add189 = add nsw i32 %148, %149
  %150 = load %struct.block*, %struct.block** %bp, align 8
  %nei190 = getelementptr inbounds %struct.block, %struct.block* %150, i32 0, i32 9
  %arrayidx191 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei190, i64 0, i64 3
  %arrayidx192 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx191, i64 0, i64 0
  %arrayidx193 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx192, i64 0, i64 0
  store i32 %add189, i32* %arrayidx193, align 4
  br label %if.end194

if.end194:                                        ; preds = %if.else186, %if.then179
  %151 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine195 = getelementptr inbounds %struct.block, %struct.block* %151, i32 0, i32 7
  %arrayidx196 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine195, i64 0, i64 3
  store i32 0, i32* %arrayidx196, align 4
  %152 = load i32, i32* %k, align 4
  %cmp197 = icmp eq i32 %152, 0
  br i1 %cmp197, label %if.then199, label %if.else206

if.then199:                                       ; preds = %if.end194
  %153 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level200 = getelementptr inbounds %struct.block, %struct.block* %153, i32 0, i32 8
  %arrayidx201 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level200, i64 0, i64 4
  store i32 -2, i32* %arrayidx201, align 4
  %154 = load %struct.block*, %struct.block** %bp, align 8
  %nei202 = getelementptr inbounds %struct.block, %struct.block* %154, i32 0, i32 9
  %arrayidx203 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei202, i64 0, i64 4
  %arrayidx204 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx203, i64 0, i64 0
  %arrayidx205 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx204, i64 0, i64 0
  store i32 0, i32* %arrayidx205, align 4
  br label %if.end215

if.else206:                                       ; preds = %if.end194
  %155 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level207 = getelementptr inbounds %struct.block, %struct.block* %155, i32 0, i32 8
  %arrayidx208 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level207, i64 0, i64 4
  store i32 0, i32* %arrayidx208, align 4
  %156 = load i32, i32* %o, align 4
  %157 = load i32, i32* @init_block_x, align 4
  %158 = load i32, i32* @init_block_y, align 4
  %mul209 = mul nsw i32 %157, %158
  %sub210 = sub nsw i32 %156, %mul209
  %159 = load %struct.block*, %struct.block** %bp, align 8
  %nei211 = getelementptr inbounds %struct.block, %struct.block* %159, i32 0, i32 9
  %arrayidx212 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei211, i64 0, i64 4
  %arrayidx213 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx212, i64 0, i64 0
  %arrayidx214 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx213, i64 0, i64 0
  store i32 %sub210, i32* %arrayidx214, align 4
  br label %if.end215

if.end215:                                        ; preds = %if.else206, %if.then199
  %160 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine216 = getelementptr inbounds %struct.block, %struct.block* %160, i32 0, i32 7
  %arrayidx217 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine216, i64 0, i64 4
  store i32 0, i32* %arrayidx217, align 4
  %161 = load i32, i32* %k, align 4
  %162 = load i32, i32* @init_block_z, align 4
  %sub218 = sub nsw i32 %162, 1
  %cmp219 = icmp eq i32 %161, %sub218
  br i1 %cmp219, label %if.then221, label %if.else228

if.then221:                                       ; preds = %if.end215
  %163 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level222 = getelementptr inbounds %struct.block, %struct.block* %163, i32 0, i32 8
  %arrayidx223 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level222, i64 0, i64 5
  store i32 -2, i32* %arrayidx223, align 4
  %164 = load %struct.block*, %struct.block** %bp, align 8
  %nei224 = getelementptr inbounds %struct.block, %struct.block* %164, i32 0, i32 9
  %arrayidx225 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei224, i64 0, i64 5
  %arrayidx226 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx225, i64 0, i64 0
  %arrayidx227 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx226, i64 0, i64 0
  store i32 0, i32* %arrayidx227, align 4
  br label %if.end237

if.else228:                                       ; preds = %if.end215
  %165 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level229 = getelementptr inbounds %struct.block, %struct.block* %165, i32 0, i32 8
  %arrayidx230 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level229, i64 0, i64 5
  store i32 0, i32* %arrayidx230, align 4
  %166 = load i32, i32* %o, align 4
  %167 = load i32, i32* @init_block_x, align 4
  %168 = load i32, i32* @init_block_y, align 4
  %mul231 = mul nsw i32 %167, %168
  %add232 = add nsw i32 %166, %mul231
  %169 = load %struct.block*, %struct.block** %bp, align 8
  %nei233 = getelementptr inbounds %struct.block, %struct.block* %169, i32 0, i32 9
  %arrayidx234 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei233, i64 0, i64 5
  %arrayidx235 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx234, i64 0, i64 0
  %arrayidx236 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx235, i64 0, i64 0
  store i32 %add232, i32* %arrayidx236, align 4
  br label %if.end237

if.end237:                                        ; preds = %if.else228, %if.then221
  %170 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine238 = getelementptr inbounds %struct.block, %struct.block* %170, i32 0, i32 7
  %arrayidx239 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine238, i64 0, i64 5
  store i32 0, i32* %arrayidx239, align 4
  %171 = load i32, i32* %o, align 4
  %inc240 = add nsw i32 %171, 1
  store i32 %inc240, i32* %o, align 4
  br label %for.inc241

for.inc241:                                       ; preds = %if.end237
  %172 = load i32, i32* %i, align 4
  %inc242 = add nsw i32 %172, 1
  store i32 %inc242, i32* %i, align 4
  %173 = load i32, i32* %n, align 4
  %inc243 = add nsw i32 %173, 1
  store i32 %inc243, i32* %n, align 4
  br label %for.cond62

for.end244:                                       ; preds = %for.cond62
  br label %for.inc245

for.inc245:                                       ; preds = %for.end244
  %174 = load i32, i32* %j, align 4
  %inc246 = add nsw i32 %174, 1
  store i32 %inc246, i32* %j, align 4
  br label %for.cond58

for.end247:                                       ; preds = %for.cond58
  br label %for.inc248

for.inc248:                                       ; preds = %for.end247
  %175 = load i32, i32* %k, align 4
  %inc249 = add nsw i32 %175, 1
  store i32 %inc249, i32* %k, align 4
  br label %for.cond54

for.end250:                                       ; preds = %for.cond54
  store i32 0, i32* %var, align 4
  br label %for.cond251

for.cond251:                                      ; preds = %for.inc258, %for.end250
  %176 = load i32, i32* %var, align 4
  %177 = load i32, i32* @num_vars, align 4
  %cmp252 = icmp slt i32 %176, %177
  br i1 %cmp252, label %for.body254, label %for.end260

for.body254:                                      ; preds = %for.cond251
  %178 = load i32, i32* %var, align 4
  %call255 = call double @check_sum(i32 %178)
  %179 = load double*, double** @grid_sum, align 8
  %180 = load i32, i32* %var, align 4
  %idxprom256 = sext i32 %180 to i64
  %arrayidx257 = getelementptr inbounds double, double* %179, i64 %idxprom256
  store double %call255, double* %arrayidx257, align 8
  br label %for.inc258

for.inc258:                                       ; preds = %for.body254
  %181 = load i32, i32* %var, align 4
  %inc259 = add nsw i32 %181, 1
  store i32 %inc259, i32* %var, align 4
  br label %for.cond251

for.end260:                                       ; preds = %for.cond251
  %182 = load i8*, i8** %saved_stack, align 8
  call void @llvm.stackrestore(i8* %182)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #5

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #6

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %ierr = alloca i32, align 4
  %object_num = alloca i32, align 4
  %params = alloca [35 x i32], align 16
  %objs = alloca double*, align 8
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  store i32 500, i32* @max_num_blocks, align 4
  store i32 0, i32* @target_active, align 4
  store i32 0, i32* @target_max, align 4
  store i32 0, i32* @target_min, align 4
  store i32 5, i32* @num_refine, align 4
  store i32 0, i32* @uniform_refine, align 4
  store i32 10, i32* @x_block_size, align 4
  store i32 10, i32* @y_block_size, align 4
  store i32 10, i32* @z_block_size, align 4
  store i32 40, i32* @num_vars, align 4
  store i32 0, i32* @comm_vars, align 4
  store i32 1, i32* @init_block_x, align 4
  store i32 1, i32* @init_block_y, align 4
  store i32 1, i32* @init_block_z, align 4
  store i32 1, i32* @reorder, align 4
  store i32 1, i32* @npx, align 4
  store i32 1, i32* @npy, align 4
  store i32 1, i32* @npz, align 4
  store i32 0, i32* @inbalance, align 4
  store i32 5, i32* @refine_freq, align 4
  store i32 0, i32* @report_diffusion, align 4
  store i32 8, i32* @error_tol, align 4
  store i32 20, i32* @num_tsteps, align 4
  store i32 20, i32* @stages_per_ts, align 4
  store i32 5, i32* @checksum_freq, align 4
  store i32 7, i32* @stencil, align 4
  store i32 12, i32* @report_perf, align 4
  store i32 0, i32* @plot_freq, align 4
  store i32 0, i32* @num_objects, align 4
  store i32 1, i32* @lb_opt, align 4
  store i32 0, i32* @block_change, align 4
  store i32 0, i32* @code, align 4
  store i32 0, i32* @permute, align 4
  store i32 1, i32* @nonblocking, align 4
  store i32 0, i32* @refine_ghost, align 4
  store i32 0, i32* @my_pe, align 4
  store i32 1, i32* @num_pes, align 4
  store i32 0, i32* @counter_malloc, align 4
  store double 0.000000e+00, double* @size_malloc, align 8
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* %argc.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom
  %4 = load i8*, i8** %arrayidx, align 8
  %call = call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #9
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load i8**, i8*** %argv.addr, align 8
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  %idxprom1 = sext i32 %inc to i64
  %arrayidx2 = getelementptr inbounds i8*, i8** %5, i64 %idxprom1
  %7 = load i8*, i8** %arrayidx2, align 8
  %call3 = call i32 @atoi(i8* %7) #9
  store i32 %call3, i32* @max_num_blocks, align 4
  br label %if.end420

if.else:                                          ; preds = %for.body
  %8 = load i8**, i8*** %argv.addr, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds i8*, i8** %8, i64 %idxprom4
  %10 = load i8*, i8** %arrayidx5, align 8
  %call6 = call i32 @strcmp(i8* %10, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.15, i64 0, i64 0)) #9
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.else13, label %if.then8

if.then8:                                         ; preds = %if.else
  %11 = load i8**, i8*** %argv.addr, align 8
  %12 = load i32, i32* %i, align 4
  %inc9 = add nsw i32 %12, 1
  store i32 %inc9, i32* %i, align 4
  %idxprom10 = sext i32 %inc9 to i64
  %arrayidx11 = getelementptr inbounds i8*, i8** %11, i64 %idxprom10
  %13 = load i8*, i8** %arrayidx11, align 8
  %call12 = call i32 @atoi(i8* %13) #9
  store i32 %call12, i32* @target_active, align 4
  br label %if.end419

if.else13:                                        ; preds = %if.else
  %14 = load i8**, i8*** %argv.addr, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %15 to i64
  %arrayidx15 = getelementptr inbounds i8*, i8** %14, i64 %idxprom14
  %16 = load i8*, i8** %arrayidx15, align 8
  %call16 = call i32 @strcmp(i8* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.16, i64 0, i64 0)) #9
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.else23, label %if.then18

if.then18:                                        ; preds = %if.else13
  %17 = load i8**, i8*** %argv.addr, align 8
  %18 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %18, 1
  store i32 %inc19, i32* %i, align 4
  %idxprom20 = sext i32 %inc19 to i64
  %arrayidx21 = getelementptr inbounds i8*, i8** %17, i64 %idxprom20
  %19 = load i8*, i8** %arrayidx21, align 8
  %call22 = call i32 @atoi(i8* %19) #9
  store i32 %call22, i32* @target_max, align 4
  br label %if.end418

if.else23:                                        ; preds = %if.else13
  %20 = load i8**, i8*** %argv.addr, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %21 to i64
  %arrayidx25 = getelementptr inbounds i8*, i8** %20, i64 %idxprom24
  %22 = load i8*, i8** %arrayidx25, align 8
  %call26 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.17, i64 0, i64 0)) #9
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.else33, label %if.then28

if.then28:                                        ; preds = %if.else23
  %23 = load i8**, i8*** %argv.addr, align 8
  %24 = load i32, i32* %i, align 4
  %inc29 = add nsw i32 %24, 1
  store i32 %inc29, i32* %i, align 4
  %idxprom30 = sext i32 %inc29 to i64
  %arrayidx31 = getelementptr inbounds i8*, i8** %23, i64 %idxprom30
  %25 = load i8*, i8** %arrayidx31, align 8
  %call32 = call i32 @atoi(i8* %25) #9
  store i32 %call32, i32* @target_min, align 4
  br label %if.end417

if.else33:                                        ; preds = %if.else23
  %26 = load i8**, i8*** %argv.addr, align 8
  %27 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %27 to i64
  %arrayidx35 = getelementptr inbounds i8*, i8** %26, i64 %idxprom34
  %28 = load i8*, i8** %arrayidx35, align 8
  %call36 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.18, i64 0, i64 0)) #9
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.else43, label %if.then38

if.then38:                                        ; preds = %if.else33
  %29 = load i8**, i8*** %argv.addr, align 8
  %30 = load i32, i32* %i, align 4
  %inc39 = add nsw i32 %30, 1
  store i32 %inc39, i32* %i, align 4
  %idxprom40 = sext i32 %inc39 to i64
  %arrayidx41 = getelementptr inbounds i8*, i8** %29, i64 %idxprom40
  %31 = load i8*, i8** %arrayidx41, align 8
  %call42 = call i32 @atoi(i8* %31) #9
  store i32 %call42, i32* @num_refine, align 4
  br label %if.end416

if.else43:                                        ; preds = %if.else33
  %32 = load i8**, i8*** %argv.addr, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %33 to i64
  %arrayidx45 = getelementptr inbounds i8*, i8** %32, i64 %idxprom44
  %34 = load i8*, i8** %arrayidx45, align 8
  %call46 = call i32 @strcmp(i8* %34, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5.19, i64 0, i64 0)) #9
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.else53, label %if.then48

if.then48:                                        ; preds = %if.else43
  %35 = load i8**, i8*** %argv.addr, align 8
  %36 = load i32, i32* %i, align 4
  %inc49 = add nsw i32 %36, 1
  store i32 %inc49, i32* %i, align 4
  %idxprom50 = sext i32 %inc49 to i64
  %arrayidx51 = getelementptr inbounds i8*, i8** %35, i64 %idxprom50
  %37 = load i8*, i8** %arrayidx51, align 8
  %call52 = call i32 @atoi(i8* %37) #9
  store i32 %call52, i32* @block_change, align 4
  br label %if.end415

if.else53:                                        ; preds = %if.else43
  %38 = load i8**, i8*** %argv.addr, align 8
  %39 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %39 to i64
  %arrayidx55 = getelementptr inbounds i8*, i8** %38, i64 %idxprom54
  %40 = load i8*, i8** %arrayidx55, align 8
  %call56 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6.20, i64 0, i64 0)) #9
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.else53
  %41 = load i8**, i8*** %argv.addr, align 8
  %42 = load i32, i32* %i, align 4
  %inc59 = add nsw i32 %42, 1
  store i32 %inc59, i32* %i, align 4
  %idxprom60 = sext i32 %inc59 to i64
  %arrayidx61 = getelementptr inbounds i8*, i8** %41, i64 %idxprom60
  %43 = load i8*, i8** %arrayidx61, align 8
  %call62 = call i32 @atoi(i8* %43) #9
  store i32 %call62, i32* @uniform_refine, align 4
  br label %if.end414

if.else63:                                        ; preds = %if.else53
  %44 = load i8**, i8*** %argv.addr, align 8
  %45 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %45 to i64
  %arrayidx65 = getelementptr inbounds i8*, i8** %44, i64 %idxprom64
  %46 = load i8*, i8** %arrayidx65, align 8
  %call66 = call i32 @strcmp(i8* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.21, i64 0, i64 0)) #9
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %if.else73, label %if.then68

if.then68:                                        ; preds = %if.else63
  %47 = load i8**, i8*** %argv.addr, align 8
  %48 = load i32, i32* %i, align 4
  %inc69 = add nsw i32 %48, 1
  store i32 %inc69, i32* %i, align 4
  %idxprom70 = sext i32 %inc69 to i64
  %arrayidx71 = getelementptr inbounds i8*, i8** %47, i64 %idxprom70
  %49 = load i8*, i8** %arrayidx71, align 8
  %call72 = call i32 @atoi(i8* %49) #9
  store i32 %call72, i32* @x_block_size, align 4
  br label %if.end413

if.else73:                                        ; preds = %if.else63
  %50 = load i8**, i8*** %argv.addr, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %51 to i64
  %arrayidx75 = getelementptr inbounds i8*, i8** %50, i64 %idxprom74
  %52 = load i8*, i8** %arrayidx75, align 8
  %call76 = call i32 @strcmp(i8* %52, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8.22, i64 0, i64 0)) #9
  %tobool77 = icmp ne i32 %call76, 0
  br i1 %tobool77, label %if.else83, label %if.then78

if.then78:                                        ; preds = %if.else73
  %53 = load i8**, i8*** %argv.addr, align 8
  %54 = load i32, i32* %i, align 4
  %inc79 = add nsw i32 %54, 1
  store i32 %inc79, i32* %i, align 4
  %idxprom80 = sext i32 %inc79 to i64
  %arrayidx81 = getelementptr inbounds i8*, i8** %53, i64 %idxprom80
  %55 = load i8*, i8** %arrayidx81, align 8
  %call82 = call i32 @atoi(i8* %55) #9
  store i32 %call82, i32* @y_block_size, align 4
  br label %if.end412

if.else83:                                        ; preds = %if.else73
  %56 = load i8**, i8*** %argv.addr, align 8
  %57 = load i32, i32* %i, align 4
  %idxprom84 = sext i32 %57 to i64
  %arrayidx85 = getelementptr inbounds i8*, i8** %56, i64 %idxprom84
  %58 = load i8*, i8** %arrayidx85, align 8
  %call86 = call i32 @strcmp(i8* %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.23, i64 0, i64 0)) #9
  %tobool87 = icmp ne i32 %call86, 0
  br i1 %tobool87, label %if.else93, label %if.then88

if.then88:                                        ; preds = %if.else83
  %59 = load i8**, i8*** %argv.addr, align 8
  %60 = load i32, i32* %i, align 4
  %inc89 = add nsw i32 %60, 1
  store i32 %inc89, i32* %i, align 4
  %idxprom90 = sext i32 %inc89 to i64
  %arrayidx91 = getelementptr inbounds i8*, i8** %59, i64 %idxprom90
  %61 = load i8*, i8** %arrayidx91, align 8
  %call92 = call i32 @atoi(i8* %61) #9
  store i32 %call92, i32* @z_block_size, align 4
  br label %if.end411

if.else93:                                        ; preds = %if.else83
  %62 = load i8**, i8*** %argv.addr, align 8
  %63 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %63 to i64
  %arrayidx95 = getelementptr inbounds i8*, i8** %62, i64 %idxprom94
  %64 = load i8*, i8** %arrayidx95, align 8
  %call96 = call i32 @strcmp(i8* %64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10.24, i64 0, i64 0)) #9
  %tobool97 = icmp ne i32 %call96, 0
  br i1 %tobool97, label %if.else103, label %if.then98

if.then98:                                        ; preds = %if.else93
  %65 = load i8**, i8*** %argv.addr, align 8
  %66 = load i32, i32* %i, align 4
  %inc99 = add nsw i32 %66, 1
  store i32 %inc99, i32* %i, align 4
  %idxprom100 = sext i32 %inc99 to i64
  %arrayidx101 = getelementptr inbounds i8*, i8** %65, i64 %idxprom100
  %67 = load i8*, i8** %arrayidx101, align 8
  %call102 = call i32 @atoi(i8* %67) #9
  store i32 %call102, i32* @num_vars, align 4
  br label %if.end410

if.else103:                                       ; preds = %if.else93
  %68 = load i8**, i8*** %argv.addr, align 8
  %69 = load i32, i32* %i, align 4
  %idxprom104 = sext i32 %69 to i64
  %arrayidx105 = getelementptr inbounds i8*, i8** %68, i64 %idxprom104
  %70 = load i8*, i8** %arrayidx105, align 8
  %call106 = call i32 @strcmp(i8* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #9
  %tobool107 = icmp ne i32 %call106, 0
  br i1 %tobool107, label %if.else113, label %if.then108

if.then108:                                       ; preds = %if.else103
  %71 = load i8**, i8*** %argv.addr, align 8
  %72 = load i32, i32* %i, align 4
  %inc109 = add nsw i32 %72, 1
  store i32 %inc109, i32* %i, align 4
  %idxprom110 = sext i32 %inc109 to i64
  %arrayidx111 = getelementptr inbounds i8*, i8** %71, i64 %idxprom110
  %73 = load i8*, i8** %arrayidx111, align 8
  %call112 = call i32 @atoi(i8* %73) #9
  store i32 %call112, i32* @comm_vars, align 4
  br label %if.end409

if.else113:                                       ; preds = %if.else103
  %74 = load i8**, i8*** %argv.addr, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom114 = sext i32 %75 to i64
  %arrayidx115 = getelementptr inbounds i8*, i8** %74, i64 %idxprom114
  %76 = load i8*, i8** %arrayidx115, align 8
  %call116 = call i32 @strcmp(i8* %76, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)) #9
  %tobool117 = icmp ne i32 %call116, 0
  br i1 %tobool117, label %if.else123, label %if.then118

if.then118:                                       ; preds = %if.else113
  %77 = load i8**, i8*** %argv.addr, align 8
  %78 = load i32, i32* %i, align 4
  %inc119 = add nsw i32 %78, 1
  store i32 %inc119, i32* %i, align 4
  %idxprom120 = sext i32 %inc119 to i64
  %arrayidx121 = getelementptr inbounds i8*, i8** %77, i64 %idxprom120
  %79 = load i8*, i8** %arrayidx121, align 8
  %call122 = call i32 @atoi(i8* %79) #9
  store i32 %call122, i32* @init_block_x, align 4
  br label %if.end408

if.else123:                                       ; preds = %if.else113
  %80 = load i8**, i8*** %argv.addr, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %81 to i64
  %arrayidx125 = getelementptr inbounds i8*, i8** %80, i64 %idxprom124
  %82 = load i8*, i8** %arrayidx125, align 8
  %call126 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)) #9
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %if.else133, label %if.then128

if.then128:                                       ; preds = %if.else123
  %83 = load i8**, i8*** %argv.addr, align 8
  %84 = load i32, i32* %i, align 4
  %inc129 = add nsw i32 %84, 1
  store i32 %inc129, i32* %i, align 4
  %idxprom130 = sext i32 %inc129 to i64
  %arrayidx131 = getelementptr inbounds i8*, i8** %83, i64 %idxprom130
  %85 = load i8*, i8** %arrayidx131, align 8
  %call132 = call i32 @atoi(i8* %85) #9
  store i32 %call132, i32* @init_block_y, align 4
  br label %if.end407

if.else133:                                       ; preds = %if.else123
  %86 = load i8**, i8*** %argv.addr, align 8
  %87 = load i32, i32* %i, align 4
  %idxprom134 = sext i32 %87 to i64
  %arrayidx135 = getelementptr inbounds i8*, i8** %86, i64 %idxprom134
  %88 = load i8*, i8** %arrayidx135, align 8
  %call136 = call i32 @strcmp(i8* %88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14.25, i64 0, i64 0)) #9
  %tobool137 = icmp ne i32 %call136, 0
  br i1 %tobool137, label %if.else143, label %if.then138

if.then138:                                       ; preds = %if.else133
  %89 = load i8**, i8*** %argv.addr, align 8
  %90 = load i32, i32* %i, align 4
  %inc139 = add nsw i32 %90, 1
  store i32 %inc139, i32* %i, align 4
  %idxprom140 = sext i32 %inc139 to i64
  %arrayidx141 = getelementptr inbounds i8*, i8** %89, i64 %idxprom140
  %91 = load i8*, i8** %arrayidx141, align 8
  %call142 = call i32 @atoi(i8* %91) #9
  store i32 %call142, i32* @init_block_z, align 4
  br label %if.end406

if.else143:                                       ; preds = %if.else133
  %92 = load i8**, i8*** %argv.addr, align 8
  %93 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %93 to i64
  %arrayidx145 = getelementptr inbounds i8*, i8** %92, i64 %idxprom144
  %94 = load i8*, i8** %arrayidx145, align 8
  %call146 = call i32 @strcmp(i8* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0)) #9
  %tobool147 = icmp ne i32 %call146, 0
  br i1 %tobool147, label %if.else153, label %if.then148

if.then148:                                       ; preds = %if.else143
  %95 = load i8**, i8*** %argv.addr, align 8
  %96 = load i32, i32* %i, align 4
  %inc149 = add nsw i32 %96, 1
  store i32 %inc149, i32* %i, align 4
  %idxprom150 = sext i32 %inc149 to i64
  %arrayidx151 = getelementptr inbounds i8*, i8** %95, i64 %idxprom150
  %97 = load i8*, i8** %arrayidx151, align 8
  %call152 = call i32 @atoi(i8* %97) #9
  store i32 %call152, i32* @refine_freq, align 4
  br label %if.end405

if.else153:                                       ; preds = %if.else143
  %98 = load i8**, i8*** %argv.addr, align 8
  %99 = load i32, i32* %i, align 4
  %idxprom154 = sext i32 %99 to i64
  %arrayidx155 = getelementptr inbounds i8*, i8** %98, i64 %idxprom154
  %100 = load i8*, i8** %arrayidx155, align 8
  %call156 = call i32 @strcmp(i8* %100, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #9
  %tobool157 = icmp ne i32 %call156, 0
  br i1 %tobool157, label %if.else163, label %if.then158

if.then158:                                       ; preds = %if.else153
  %101 = load i8**, i8*** %argv.addr, align 8
  %102 = load i32, i32* %i, align 4
  %inc159 = add nsw i32 %102, 1
  store i32 %inc159, i32* %i, align 4
  %idxprom160 = sext i32 %inc159 to i64
  %arrayidx161 = getelementptr inbounds i8*, i8** %101, i64 %idxprom160
  %103 = load i8*, i8** %arrayidx161, align 8
  %call162 = call i32 @atoi(i8* %103) #9
  store i32 %call162, i32* @report_diffusion, align 4
  br label %if.end404

if.else163:                                       ; preds = %if.else153
  %104 = load i8**, i8*** %argv.addr, align 8
  %105 = load i32, i32* %i, align 4
  %idxprom164 = sext i32 %105 to i64
  %arrayidx165 = getelementptr inbounds i8*, i8** %104, i64 %idxprom164
  %106 = load i8*, i8** %arrayidx165, align 8
  %call166 = call i32 @strcmp(i8* %106, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0)) #9
  %tobool167 = icmp ne i32 %call166, 0
  br i1 %tobool167, label %if.else173, label %if.then168

if.then168:                                       ; preds = %if.else163
  %107 = load i8**, i8*** %argv.addr, align 8
  %108 = load i32, i32* %i, align 4
  %inc169 = add nsw i32 %108, 1
  store i32 %inc169, i32* %i, align 4
  %idxprom170 = sext i32 %inc169 to i64
  %arrayidx171 = getelementptr inbounds i8*, i8** %107, i64 %idxprom170
  %109 = load i8*, i8** %arrayidx171, align 8
  %call172 = call i32 @atoi(i8* %109) #9
  store i32 %call172, i32* @error_tol, align 4
  br label %if.end403

if.else173:                                       ; preds = %if.else163
  %110 = load i8**, i8*** %argv.addr, align 8
  %111 = load i32, i32* %i, align 4
  %idxprom174 = sext i32 %111 to i64
  %arrayidx175 = getelementptr inbounds i8*, i8** %110, i64 %idxprom174
  %112 = load i8*, i8** %arrayidx175, align 8
  %call176 = call i32 @strcmp(i8* %112, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #9
  %tobool177 = icmp ne i32 %call176, 0
  br i1 %tobool177, label %if.else183, label %if.then178

if.then178:                                       ; preds = %if.else173
  %113 = load i8**, i8*** %argv.addr, align 8
  %114 = load i32, i32* %i, align 4
  %inc179 = add nsw i32 %114, 1
  store i32 %inc179, i32* %i, align 4
  %idxprom180 = sext i32 %inc179 to i64
  %arrayidx181 = getelementptr inbounds i8*, i8** %113, i64 %idxprom180
  %115 = load i8*, i8** %arrayidx181, align 8
  %call182 = call i32 @atoi(i8* %115) #9
  store i32 %call182, i32* @num_tsteps, align 4
  br label %if.end402

if.else183:                                       ; preds = %if.else173
  %116 = load i8**, i8*** %argv.addr, align 8
  %117 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %117 to i64
  %arrayidx185 = getelementptr inbounds i8*, i8** %116, i64 %idxprom184
  %118 = load i8*, i8** %arrayidx185, align 8
  %call186 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0)) #9
  %tobool187 = icmp ne i32 %call186, 0
  br i1 %tobool187, label %if.else193, label %if.then188

if.then188:                                       ; preds = %if.else183
  %119 = load i8**, i8*** %argv.addr, align 8
  %120 = load i32, i32* %i, align 4
  %inc189 = add nsw i32 %120, 1
  store i32 %inc189, i32* %i, align 4
  %idxprom190 = sext i32 %inc189 to i64
  %arrayidx191 = getelementptr inbounds i8*, i8** %119, i64 %idxprom190
  %121 = load i8*, i8** %arrayidx191, align 8
  %call192 = call i32 @atoi(i8* %121) #9
  store i32 %call192, i32* @stages_per_ts, align 4
  br label %if.end401

if.else193:                                       ; preds = %if.else183
  %122 = load i8**, i8*** %argv.addr, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %123 to i64
  %arrayidx195 = getelementptr inbounds i8*, i8** %122, i64 %idxprom194
  %124 = load i8*, i8** %arrayidx195, align 8
  %call196 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)) #9
  %tobool197 = icmp ne i32 %call196, 0
  br i1 %tobool197, label %if.else203, label %if.then198

if.then198:                                       ; preds = %if.else193
  %125 = load i8**, i8*** %argv.addr, align 8
  %126 = load i32, i32* %i, align 4
  %inc199 = add nsw i32 %126, 1
  store i32 %inc199, i32* %i, align 4
  %idxprom200 = sext i32 %inc199 to i64
  %arrayidx201 = getelementptr inbounds i8*, i8** %125, i64 %idxprom200
  %127 = load i8*, i8** %arrayidx201, align 8
  %call202 = call i32 @atoi(i8* %127) #9
  store i32 %call202, i32* @checksum_freq, align 4
  br label %if.end400

if.else203:                                       ; preds = %if.else193
  %128 = load i8**, i8*** %argv.addr, align 8
  %129 = load i32, i32* %i, align 4
  %idxprom204 = sext i32 %129 to i64
  %arrayidx205 = getelementptr inbounds i8*, i8** %128, i64 %idxprom204
  %130 = load i8*, i8** %arrayidx205, align 8
  %call206 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0)) #9
  %tobool207 = icmp ne i32 %call206, 0
  br i1 %tobool207, label %if.else213, label %if.then208

if.then208:                                       ; preds = %if.else203
  %131 = load i8**, i8*** %argv.addr, align 8
  %132 = load i32, i32* %i, align 4
  %inc209 = add nsw i32 %132, 1
  store i32 %inc209, i32* %i, align 4
  %idxprom210 = sext i32 %inc209 to i64
  %arrayidx211 = getelementptr inbounds i8*, i8** %131, i64 %idxprom210
  %133 = load i8*, i8** %arrayidx211, align 8
  %call212 = call i32 @atoi(i8* %133) #9
  store i32 %call212, i32* @stencil, align 4
  br label %if.end399

if.else213:                                       ; preds = %if.else203
  %134 = load i8**, i8*** %argv.addr, align 8
  %135 = load i32, i32* %i, align 4
  %idxprom214 = sext i32 %135 to i64
  %arrayidx215 = getelementptr inbounds i8*, i8** %134, i64 %idxprom214
  %136 = load i8*, i8** %arrayidx215, align 8
  %call216 = call i32 @strcmp(i8* %136, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0)) #9
  %tobool217 = icmp ne i32 %call216, 0
  br i1 %tobool217, label %if.else219, label %if.then218

if.then218:                                       ; preds = %if.else213
  store i32 1, i32* @permute, align 4
  br label %if.end398

if.else219:                                       ; preds = %if.else213
  %137 = load i8**, i8*** %argv.addr, align 8
  %138 = load i32, i32* %i, align 4
  %idxprom220 = sext i32 %138 to i64
  %arrayidx221 = getelementptr inbounds i8*, i8** %137, i64 %idxprom220
  %139 = load i8*, i8** %arrayidx221, align 8
  %call222 = call i32 @strcmp(i8* %139, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0)) #9
  %tobool223 = icmp ne i32 %call222, 0
  br i1 %tobool223, label %if.else229, label %if.then224

if.then224:                                       ; preds = %if.else219
  %140 = load i8**, i8*** %argv.addr, align 8
  %141 = load i32, i32* %i, align 4
  %inc225 = add nsw i32 %141, 1
  store i32 %inc225, i32* %i, align 4
  %idxprom226 = sext i32 %inc225 to i64
  %arrayidx227 = getelementptr inbounds i8*, i8** %140, i64 %idxprom226
  %142 = load i8*, i8** %arrayidx227, align 8
  %call228 = call i32 @atoi(i8* %142) #9
  store i32 %call228, i32* @report_perf, align 4
  br label %if.end397

if.else229:                                       ; preds = %if.else219
  %143 = load i8**, i8*** %argv.addr, align 8
  %144 = load i32, i32* %i, align 4
  %idxprom230 = sext i32 %144 to i64
  %arrayidx231 = getelementptr inbounds i8*, i8** %143, i64 %idxprom230
  %145 = load i8*, i8** %arrayidx231, align 8
  %call232 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i64 0, i64 0)) #9
  %tobool233 = icmp ne i32 %call232, 0
  br i1 %tobool233, label %if.else239, label %if.then234

if.then234:                                       ; preds = %if.else229
  %146 = load i8**, i8*** %argv.addr, align 8
  %147 = load i32, i32* %i, align 4
  %inc235 = add nsw i32 %147, 1
  store i32 %inc235, i32* %i, align 4
  %idxprom236 = sext i32 %inc235 to i64
  %arrayidx237 = getelementptr inbounds i8*, i8** %146, i64 %idxprom236
  %148 = load i8*, i8** %arrayidx237, align 8
  %call238 = call i32 @atoi(i8* %148) #9
  store i32 %call238, i32* @plot_freq, align 4
  br label %if.end396

if.else239:                                       ; preds = %if.else229
  %149 = load i8**, i8*** %argv.addr, align 8
  %150 = load i32, i32* %i, align 4
  %idxprom240 = sext i32 %150 to i64
  %arrayidx241 = getelementptr inbounds i8*, i8** %149, i64 %idxprom240
  %151 = load i8*, i8** %arrayidx241, align 8
  %call242 = call i32 @strcmp(i8* %151, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i64 0, i64 0)) #9
  %tobool243 = icmp ne i32 %call242, 0
  br i1 %tobool243, label %if.else249, label %if.then244

if.then244:                                       ; preds = %if.else239
  %152 = load i8**, i8*** %argv.addr, align 8
  %153 = load i32, i32* %i, align 4
  %inc245 = add nsw i32 %153, 1
  store i32 %inc245, i32* %i, align 4
  %idxprom246 = sext i32 %inc245 to i64
  %arrayidx247 = getelementptr inbounds i8*, i8** %152, i64 %idxprom246
  %154 = load i8*, i8** %arrayidx247, align 8
  %call248 = call i32 @atoi(i8* %154) #9
  store i32 %call248, i32* @code, align 4
  br label %if.end395

if.else249:                                       ; preds = %if.else239
  %155 = load i8**, i8*** %argv.addr, align 8
  %156 = load i32, i32* %i, align 4
  %idxprom250 = sext i32 %156 to i64
  %arrayidx251 = getelementptr inbounds i8*, i8** %155, i64 %idxprom250
  %157 = load i8*, i8** %arrayidx251, align 8
  %call252 = call i32 @strcmp(i8* %157, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0)) #9
  %tobool253 = icmp ne i32 %call252, 0
  br i1 %tobool253, label %if.else255, label %if.then254

if.then254:                                       ; preds = %if.else249
  store i32 1, i32* @refine_ghost, align 4
  br label %if.end394

if.else255:                                       ; preds = %if.else249
  %158 = load i8**, i8*** %argv.addr, align 8
  %159 = load i32, i32* %i, align 4
  %idxprom256 = sext i32 %159 to i64
  %arrayidx257 = getelementptr inbounds i8*, i8** %158, i64 %idxprom256
  %160 = load i8*, i8** %arrayidx257, align 8
  %call258 = call i32 @strcmp(i8* %160, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #9
  %tobool259 = icmp ne i32 %call258, 0
  br i1 %tobool259, label %if.else266, label %if.then260

if.then260:                                       ; preds = %if.else255
  %161 = load i8**, i8*** %argv.addr, align 8
  %162 = load i32, i32* %i, align 4
  %inc261 = add nsw i32 %162, 1
  store i32 %inc261, i32* %i, align 4
  %idxprom262 = sext i32 %inc261 to i64
  %arrayidx263 = getelementptr inbounds i8*, i8** %161, i64 %idxprom262
  %163 = load i8*, i8** %arrayidx263, align 8
  %call264 = call i32 @atoi(i8* %163) #9
  store i32 %call264, i32* @num_objects, align 4
  %164 = load i32, i32* @num_objects, align 4
  %conv = sext i32 %164 to i64
  %mul = mul i64 %conv, 176
  %call265 = call i8* @ma_malloc(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 107)
  %165 = bitcast i8* %call265 to %struct.object*
  store %struct.object* %165, %struct.object** @objects, align 8
  store i32 0, i32* %object_num, align 4
  br label %if.end393

if.else266:                                       ; preds = %if.else255
  %166 = load i8**, i8*** %argv.addr, align 8
  %167 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %167 to i64
  %arrayidx268 = getelementptr inbounds i8*, i8** %166, i64 %idxprom267
  %168 = load i8*, i8** %arrayidx268, align 8
  %call269 = call i32 @strcmp(i8* %168, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0)) #9
  %tobool270 = icmp ne i32 %call269, 0
  br i1 %tobool270, label %if.else382, label %if.then271

if.then271:                                       ; preds = %if.else266
  %169 = load i32, i32* %object_num, align 4
  %170 = load i32, i32* @num_objects, align 4
  %cmp272 = icmp sge i32 %169, %170
  br i1 %cmp272, label %if.then274, label %if.end

if.then274:                                       ; preds = %if.then271
  %call275 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0))
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %if.then271
  %171 = load i8**, i8*** %argv.addr, align 8
  %172 = load i32, i32* %i, align 4
  %inc276 = add nsw i32 %172, 1
  store i32 %inc276, i32* %i, align 4
  %idxprom277 = sext i32 %inc276 to i64
  %arrayidx278 = getelementptr inbounds i8*, i8** %171, i64 %idxprom277
  %173 = load i8*, i8** %arrayidx278, align 8
  %call279 = call i32 @atoi(i8* %173) #9
  %174 = load %struct.object*, %struct.object** @objects, align 8
  %175 = load i32, i32* %object_num, align 4
  %idxprom280 = sext i32 %175 to i64
  %arrayidx281 = getelementptr inbounds %struct.object, %struct.object* %174, i64 %idxprom280
  %type = getelementptr inbounds %struct.object, %struct.object* %arrayidx281, i32 0, i32 0
  store i32 %call279, i32* %type, align 8
  %176 = load i8**, i8*** %argv.addr, align 8
  %177 = load i32, i32* %i, align 4
  %inc282 = add nsw i32 %177, 1
  store i32 %inc282, i32* %i, align 4
  %idxprom283 = sext i32 %inc282 to i64
  %arrayidx284 = getelementptr inbounds i8*, i8** %176, i64 %idxprom283
  %178 = load i8*, i8** %arrayidx284, align 8
  %call285 = call i32 @atoi(i8* %178) #9
  %179 = load %struct.object*, %struct.object** @objects, align 8
  %180 = load i32, i32* %object_num, align 4
  %idxprom286 = sext i32 %180 to i64
  %arrayidx287 = getelementptr inbounds %struct.object, %struct.object* %179, i64 %idxprom286
  %bounce = getelementptr inbounds %struct.object, %struct.object* %arrayidx287, i32 0, i32 1
  store i32 %call285, i32* %bounce, align 4
  %181 = load i8**, i8*** %argv.addr, align 8
  %182 = load i32, i32* %i, align 4
  %inc288 = add nsw i32 %182, 1
  store i32 %inc288, i32* %i, align 4
  %idxprom289 = sext i32 %inc288 to i64
  %arrayidx290 = getelementptr inbounds i8*, i8** %181, i64 %idxprom289
  %183 = load i8*, i8** %arrayidx290, align 8
  %call291 = call double @atof(i8* %183) #9
  %184 = load %struct.object*, %struct.object** @objects, align 8
  %185 = load i32, i32* %object_num, align 4
  %idxprom292 = sext i32 %185 to i64
  %arrayidx293 = getelementptr inbounds %struct.object, %struct.object* %184, i64 %idxprom292
  %cen = getelementptr inbounds %struct.object, %struct.object* %arrayidx293, i32 0, i32 2
  %arrayidx294 = getelementptr inbounds [3 x double], [3 x double]* %cen, i64 0, i64 0
  store double %call291, double* %arrayidx294, align 8
  %186 = load i8**, i8*** %argv.addr, align 8
  %187 = load i32, i32* %i, align 4
  %inc295 = add nsw i32 %187, 1
  store i32 %inc295, i32* %i, align 4
  %idxprom296 = sext i32 %inc295 to i64
  %arrayidx297 = getelementptr inbounds i8*, i8** %186, i64 %idxprom296
  %188 = load i8*, i8** %arrayidx297, align 8
  %call298 = call double @atof(i8* %188) #9
  %189 = load %struct.object*, %struct.object** @objects, align 8
  %190 = load i32, i32* %object_num, align 4
  %idxprom299 = sext i32 %190 to i64
  %arrayidx300 = getelementptr inbounds %struct.object, %struct.object* %189, i64 %idxprom299
  %cen301 = getelementptr inbounds %struct.object, %struct.object* %arrayidx300, i32 0, i32 2
  %arrayidx302 = getelementptr inbounds [3 x double], [3 x double]* %cen301, i64 0, i64 1
  store double %call298, double* %arrayidx302, align 8
  %191 = load i8**, i8*** %argv.addr, align 8
  %192 = load i32, i32* %i, align 4
  %inc303 = add nsw i32 %192, 1
  store i32 %inc303, i32* %i, align 4
  %idxprom304 = sext i32 %inc303 to i64
  %arrayidx305 = getelementptr inbounds i8*, i8** %191, i64 %idxprom304
  %193 = load i8*, i8** %arrayidx305, align 8
  %call306 = call double @atof(i8* %193) #9
  %194 = load %struct.object*, %struct.object** @objects, align 8
  %195 = load i32, i32* %object_num, align 4
  %idxprom307 = sext i32 %195 to i64
  %arrayidx308 = getelementptr inbounds %struct.object, %struct.object* %194, i64 %idxprom307
  %cen309 = getelementptr inbounds %struct.object, %struct.object* %arrayidx308, i32 0, i32 2
  %arrayidx310 = getelementptr inbounds [3 x double], [3 x double]* %cen309, i64 0, i64 2
  store double %call306, double* %arrayidx310, align 8
  %196 = load i8**, i8*** %argv.addr, align 8
  %197 = load i32, i32* %i, align 4
  %inc311 = add nsw i32 %197, 1
  store i32 %inc311, i32* %i, align 4
  %idxprom312 = sext i32 %inc311 to i64
  %arrayidx313 = getelementptr inbounds i8*, i8** %196, i64 %idxprom312
  %198 = load i8*, i8** %arrayidx313, align 8
  %call314 = call double @atof(i8* %198) #9
  %199 = load %struct.object*, %struct.object** @objects, align 8
  %200 = load i32, i32* %object_num, align 4
  %idxprom315 = sext i32 %200 to i64
  %arrayidx316 = getelementptr inbounds %struct.object, %struct.object* %199, i64 %idxprom315
  %move = getelementptr inbounds %struct.object, %struct.object* %arrayidx316, i32 0, i32 4
  %arrayidx317 = getelementptr inbounds [3 x double], [3 x double]* %move, i64 0, i64 0
  store double %call314, double* %arrayidx317, align 8
  %201 = load i8**, i8*** %argv.addr, align 8
  %202 = load i32, i32* %i, align 4
  %inc318 = add nsw i32 %202, 1
  store i32 %inc318, i32* %i, align 4
  %idxprom319 = sext i32 %inc318 to i64
  %arrayidx320 = getelementptr inbounds i8*, i8** %201, i64 %idxprom319
  %203 = load i8*, i8** %arrayidx320, align 8
  %call321 = call double @atof(i8* %203) #9
  %204 = load %struct.object*, %struct.object** @objects, align 8
  %205 = load i32, i32* %object_num, align 4
  %idxprom322 = sext i32 %205 to i64
  %arrayidx323 = getelementptr inbounds %struct.object, %struct.object* %204, i64 %idxprom322
  %move324 = getelementptr inbounds %struct.object, %struct.object* %arrayidx323, i32 0, i32 4
  %arrayidx325 = getelementptr inbounds [3 x double], [3 x double]* %move324, i64 0, i64 1
  store double %call321, double* %arrayidx325, align 8
  %206 = load i8**, i8*** %argv.addr, align 8
  %207 = load i32, i32* %i, align 4
  %inc326 = add nsw i32 %207, 1
  store i32 %inc326, i32* %i, align 4
  %idxprom327 = sext i32 %inc326 to i64
  %arrayidx328 = getelementptr inbounds i8*, i8** %206, i64 %idxprom327
  %208 = load i8*, i8** %arrayidx328, align 8
  %call329 = call double @atof(i8* %208) #9
  %209 = load %struct.object*, %struct.object** @objects, align 8
  %210 = load i32, i32* %object_num, align 4
  %idxprom330 = sext i32 %210 to i64
  %arrayidx331 = getelementptr inbounds %struct.object, %struct.object* %209, i64 %idxprom330
  %move332 = getelementptr inbounds %struct.object, %struct.object* %arrayidx331, i32 0, i32 4
  %arrayidx333 = getelementptr inbounds [3 x double], [3 x double]* %move332, i64 0, i64 2
  store double %call329, double* %arrayidx333, align 8
  %211 = load i8**, i8*** %argv.addr, align 8
  %212 = load i32, i32* %i, align 4
  %inc334 = add nsw i32 %212, 1
  store i32 %inc334, i32* %i, align 4
  %idxprom335 = sext i32 %inc334 to i64
  %arrayidx336 = getelementptr inbounds i8*, i8** %211, i64 %idxprom335
  %213 = load i8*, i8** %arrayidx336, align 8
  %call337 = call double @atof(i8* %213) #9
  %214 = load %struct.object*, %struct.object** @objects, align 8
  %215 = load i32, i32* %object_num, align 4
  %idxprom338 = sext i32 %215 to i64
  %arrayidx339 = getelementptr inbounds %struct.object, %struct.object* %214, i64 %idxprom338
  %size = getelementptr inbounds %struct.object, %struct.object* %arrayidx339, i32 0, i32 6
  %arrayidx340 = getelementptr inbounds [3 x double], [3 x double]* %size, i64 0, i64 0
  store double %call337, double* %arrayidx340, align 8
  %216 = load i8**, i8*** %argv.addr, align 8
  %217 = load i32, i32* %i, align 4
  %inc341 = add nsw i32 %217, 1
  store i32 %inc341, i32* %i, align 4
  %idxprom342 = sext i32 %inc341 to i64
  %arrayidx343 = getelementptr inbounds i8*, i8** %216, i64 %idxprom342
  %218 = load i8*, i8** %arrayidx343, align 8
  %call344 = call double @atof(i8* %218) #9
  %219 = load %struct.object*, %struct.object** @objects, align 8
  %220 = load i32, i32* %object_num, align 4
  %idxprom345 = sext i32 %220 to i64
  %arrayidx346 = getelementptr inbounds %struct.object, %struct.object* %219, i64 %idxprom345
  %size347 = getelementptr inbounds %struct.object, %struct.object* %arrayidx346, i32 0, i32 6
  %arrayidx348 = getelementptr inbounds [3 x double], [3 x double]* %size347, i64 0, i64 1
  store double %call344, double* %arrayidx348, align 8
  %221 = load i8**, i8*** %argv.addr, align 8
  %222 = load i32, i32* %i, align 4
  %inc349 = add nsw i32 %222, 1
  store i32 %inc349, i32* %i, align 4
  %idxprom350 = sext i32 %inc349 to i64
  %arrayidx351 = getelementptr inbounds i8*, i8** %221, i64 %idxprom350
  %223 = load i8*, i8** %arrayidx351, align 8
  %call352 = call double @atof(i8* %223) #9
  %224 = load %struct.object*, %struct.object** @objects, align 8
  %225 = load i32, i32* %object_num, align 4
  %idxprom353 = sext i32 %225 to i64
  %arrayidx354 = getelementptr inbounds %struct.object, %struct.object* %224, i64 %idxprom353
  %size355 = getelementptr inbounds %struct.object, %struct.object* %arrayidx354, i32 0, i32 6
  %arrayidx356 = getelementptr inbounds [3 x double], [3 x double]* %size355, i64 0, i64 2
  store double %call352, double* %arrayidx356, align 8
  %226 = load i8**, i8*** %argv.addr, align 8
  %227 = load i32, i32* %i, align 4
  %inc357 = add nsw i32 %227, 1
  store i32 %inc357, i32* %i, align 4
  %idxprom358 = sext i32 %inc357 to i64
  %arrayidx359 = getelementptr inbounds i8*, i8** %226, i64 %idxprom358
  %228 = load i8*, i8** %arrayidx359, align 8
  %call360 = call double @atof(i8* %228) #9
  %229 = load %struct.object*, %struct.object** @objects, align 8
  %230 = load i32, i32* %object_num, align 4
  %idxprom361 = sext i32 %230 to i64
  %arrayidx362 = getelementptr inbounds %struct.object, %struct.object* %229, i64 %idxprom361
  %inc363 = getelementptr inbounds %struct.object, %struct.object* %arrayidx362, i32 0, i32 8
  %arrayidx364 = getelementptr inbounds [3 x double], [3 x double]* %inc363, i64 0, i64 0
  store double %call360, double* %arrayidx364, align 8
  %231 = load i8**, i8*** %argv.addr, align 8
  %232 = load i32, i32* %i, align 4
  %inc365 = add nsw i32 %232, 1
  store i32 %inc365, i32* %i, align 4
  %idxprom366 = sext i32 %inc365 to i64
  %arrayidx367 = getelementptr inbounds i8*, i8** %231, i64 %idxprom366
  %233 = load i8*, i8** %arrayidx367, align 8
  %call368 = call double @atof(i8* %233) #9
  %234 = load %struct.object*, %struct.object** @objects, align 8
  %235 = load i32, i32* %object_num, align 4
  %idxprom369 = sext i32 %235 to i64
  %arrayidx370 = getelementptr inbounds %struct.object, %struct.object* %234, i64 %idxprom369
  %inc371 = getelementptr inbounds %struct.object, %struct.object* %arrayidx370, i32 0, i32 8
  %arrayidx372 = getelementptr inbounds [3 x double], [3 x double]* %inc371, i64 0, i64 1
  store double %call368, double* %arrayidx372, align 8
  %236 = load i8**, i8*** %argv.addr, align 8
  %237 = load i32, i32* %i, align 4
  %inc373 = add nsw i32 %237, 1
  store i32 %inc373, i32* %i, align 4
  %idxprom374 = sext i32 %inc373 to i64
  %arrayidx375 = getelementptr inbounds i8*, i8** %236, i64 %idxprom374
  %238 = load i8*, i8** %arrayidx375, align 8
  %call376 = call double @atof(i8* %238) #9
  %239 = load %struct.object*, %struct.object** @objects, align 8
  %240 = load i32, i32* %object_num, align 4
  %idxprom377 = sext i32 %240 to i64
  %arrayidx378 = getelementptr inbounds %struct.object, %struct.object* %239, i64 %idxprom377
  %inc379 = getelementptr inbounds %struct.object, %struct.object* %arrayidx378, i32 0, i32 8
  %arrayidx380 = getelementptr inbounds [3 x double], [3 x double]* %inc379, i64 0, i64 2
  store double %call376, double* %arrayidx380, align 8
  %241 = load i32, i32* %object_num, align 4
  %inc381 = add nsw i32 %241, 1
  store i32 %inc381, i32* %object_num, align 4
  br label %if.end392

if.else382:                                       ; preds = %if.else266
  %242 = load i8**, i8*** %argv.addr, align 8
  %243 = load i32, i32* %i, align 4
  %idxprom383 = sext i32 %243 to i64
  %arrayidx384 = getelementptr inbounds i8*, i8** %242, i64 %idxprom383
  %244 = load i8*, i8** %arrayidx384, align 8
  %call385 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #9
  %tobool386 = icmp ne i32 %call385, 0
  br i1 %tobool386, label %if.else388, label %if.then387

if.then387:                                       ; preds = %if.else382
  call void @print_help_message()
  call void @exit(i32 0) #8
  unreachable

if.else388:                                       ; preds = %if.else382
  %245 = load i8**, i8*** %argv.addr, align 8
  %246 = load i32, i32* %i, align 4
  %idxprom389 = sext i32 %246 to i64
  %arrayidx390 = getelementptr inbounds i8*, i8** %245, i64 %idxprom389
  %247 = load i8*, i8** %arrayidx390, align 8
  %call391 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i64 0, i64 0), i8* %247)
  call void @print_help_message()
  call void @exit(i32 -1) #8
  unreachable

if.end392:                                        ; preds = %if.end
  br label %if.end393

if.end393:                                        ; preds = %if.end392, %if.then260
  br label %if.end394

if.end394:                                        ; preds = %if.end393, %if.then254
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %if.then244
  br label %if.end396

if.end396:                                        ; preds = %if.end395, %if.then234
  br label %if.end397

if.end397:                                        ; preds = %if.end396, %if.then224
  br label %if.end398

if.end398:                                        ; preds = %if.end397, %if.then218
  br label %if.end399

if.end399:                                        ; preds = %if.end398, %if.then208
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %if.then198
  br label %if.end401

if.end401:                                        ; preds = %if.end400, %if.then188
  br label %if.end402

if.end402:                                        ; preds = %if.end401, %if.then178
  br label %if.end403

if.end403:                                        ; preds = %if.end402, %if.then168
  br label %if.end404

if.end404:                                        ; preds = %if.end403, %if.then158
  br label %if.end405

if.end405:                                        ; preds = %if.end404, %if.then148
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.then138
  br label %if.end407

if.end407:                                        ; preds = %if.end406, %if.then128
  br label %if.end408

if.end408:                                        ; preds = %if.end407, %if.then118
  br label %if.end409

if.end409:                                        ; preds = %if.end408, %if.then108
  br label %if.end410

if.end410:                                        ; preds = %if.end409, %if.then98
  br label %if.end411

if.end411:                                        ; preds = %if.end410, %if.then88
  br label %if.end412

if.end412:                                        ; preds = %if.end411, %if.then78
  br label %if.end413

if.end413:                                        ; preds = %if.end412, %if.then68
  br label %if.end414

if.end414:                                        ; preds = %if.end413, %if.then58
  br label %if.end415

if.end415:                                        ; preds = %if.end414, %if.then48
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then38
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %if.then28
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.then18
  br label %if.end419

if.end419:                                        ; preds = %if.end418, %if.then8
  br label %if.end420

if.end420:                                        ; preds = %if.end419, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end420
  %248 = load i32, i32* %i, align 4
  %inc421 = add nsw i32 %248, 1
  store i32 %inc421, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call422 = call i32 @check_input()
  %tobool423 = icmp ne i32 %call422, 0
  br i1 %tobool423, label %if.then424, label %if.end425

if.then424:                                       ; preds = %for.end
  call void @exit(i32 -1) #8
  unreachable

if.end425:                                        ; preds = %for.end
  %249 = load i32, i32* @block_change, align 4
  %tobool426 = icmp ne i32 %249, 0
  br i1 %tobool426, label %if.end428, label %if.then427

if.then427:                                       ; preds = %if.end425
  %250 = load i32, i32* @num_refine, align 4
  store i32 %250, i32* @block_change, align 4
  br label %if.end428

if.end428:                                        ; preds = %if.then427, %if.end425
  store i32 0, i32* %object_num, align 4
  br label %for.cond429

for.cond429:                                      ; preds = %for.inc467, %if.end428
  %251 = load i32, i32* %object_num, align 4
  %252 = load i32, i32* @num_objects, align 4
  %cmp430 = icmp slt i32 %251, %252
  br i1 %cmp430, label %for.body432, label %for.end469

for.body432:                                      ; preds = %for.cond429
  store i32 0, i32* %i, align 4
  br label %for.cond433

for.cond433:                                      ; preds = %for.inc464, %for.body432
  %253 = load i32, i32* %i, align 4
  %cmp434 = icmp slt i32 %253, 3
  br i1 %cmp434, label %for.body436, label %for.end466

for.body436:                                      ; preds = %for.cond433
  %254 = load %struct.object*, %struct.object** @objects, align 8
  %255 = load i32, i32* %object_num, align 4
  %idxprom437 = sext i32 %255 to i64
  %arrayidx438 = getelementptr inbounds %struct.object, %struct.object* %254, i64 %idxprom437
  %cen439 = getelementptr inbounds %struct.object, %struct.object* %arrayidx438, i32 0, i32 2
  %256 = load i32, i32* %i, align 4
  %idxprom440 = sext i32 %256 to i64
  %arrayidx441 = getelementptr inbounds [3 x double], [3 x double]* %cen439, i64 0, i64 %idxprom440
  %257 = load double, double* %arrayidx441, align 8
  %258 = load %struct.object*, %struct.object** @objects, align 8
  %259 = load i32, i32* %object_num, align 4
  %idxprom442 = sext i32 %259 to i64
  %arrayidx443 = getelementptr inbounds %struct.object, %struct.object* %258, i64 %idxprom442
  %orig_cen = getelementptr inbounds %struct.object, %struct.object* %arrayidx443, i32 0, i32 3
  %260 = load i32, i32* %i, align 4
  %idxprom444 = sext i32 %260 to i64
  %arrayidx445 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen, i64 0, i64 %idxprom444
  store double %257, double* %arrayidx445, align 8
  %261 = load %struct.object*, %struct.object** @objects, align 8
  %262 = load i32, i32* %object_num, align 4
  %idxprom446 = sext i32 %262 to i64
  %arrayidx447 = getelementptr inbounds %struct.object, %struct.object* %261, i64 %idxprom446
  %move448 = getelementptr inbounds %struct.object, %struct.object* %arrayidx447, i32 0, i32 4
  %263 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %263 to i64
  %arrayidx450 = getelementptr inbounds [3 x double], [3 x double]* %move448, i64 0, i64 %idxprom449
  %264 = load double, double* %arrayidx450, align 8
  %265 = load %struct.object*, %struct.object** @objects, align 8
  %266 = load i32, i32* %object_num, align 4
  %idxprom451 = sext i32 %266 to i64
  %arrayidx452 = getelementptr inbounds %struct.object, %struct.object* %265, i64 %idxprom451
  %orig_move = getelementptr inbounds %struct.object, %struct.object* %arrayidx452, i32 0, i32 5
  %267 = load i32, i32* %i, align 4
  %idxprom453 = sext i32 %267 to i64
  %arrayidx454 = getelementptr inbounds [3 x double], [3 x double]* %orig_move, i64 0, i64 %idxprom453
  store double %264, double* %arrayidx454, align 8
  %268 = load %struct.object*, %struct.object** @objects, align 8
  %269 = load i32, i32* %object_num, align 4
  %idxprom455 = sext i32 %269 to i64
  %arrayidx456 = getelementptr inbounds %struct.object, %struct.object* %268, i64 %idxprom455
  %size457 = getelementptr inbounds %struct.object, %struct.object* %arrayidx456, i32 0, i32 6
  %270 = load i32, i32* %i, align 4
  %idxprom458 = sext i32 %270 to i64
  %arrayidx459 = getelementptr inbounds [3 x double], [3 x double]* %size457, i64 0, i64 %idxprom458
  %271 = load double, double* %arrayidx459, align 8
  %272 = load %struct.object*, %struct.object** @objects, align 8
  %273 = load i32, i32* %object_num, align 4
  %idxprom460 = sext i32 %273 to i64
  %arrayidx461 = getelementptr inbounds %struct.object, %struct.object* %272, i64 %idxprom460
  %orig_size = getelementptr inbounds %struct.object, %struct.object* %arrayidx461, i32 0, i32 7
  %274 = load i32, i32* %i, align 4
  %idxprom462 = sext i32 %274 to i64
  %arrayidx463 = getelementptr inbounds [3 x double], [3 x double]* %orig_size, i64 0, i64 %idxprom462
  store double %271, double* %arrayidx463, align 8
  br label %for.inc464

for.inc464:                                       ; preds = %for.body436
  %275 = load i32, i32* %i, align 4
  %inc465 = add nsw i32 %275, 1
  store i32 %inc465, i32* %i, align 4
  br label %for.cond433

for.end466:                                       ; preds = %for.cond433
  br label %for.inc467

for.inc467:                                       ; preds = %for.end466
  %276 = load i32, i32* %object_num, align 4
  %inc468 = add nsw i32 %276, 1
  store i32 %inc468, i32* %object_num, align 4
  br label %for.cond429

for.end469:                                       ; preds = %for.cond429
  call void @allocate()
  call void @driver()
  call void @profile()
  call void @deallocate()
  ;call void @exit(i32 0) #8
  ret i32 10
  unreachable
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #7

; Function Attrs: nounwind readonly
declare dso_local double @atof(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_help_message() #0 {
entry:
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.33, i64 0, i64 0))
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.34, i64 0, i64 0))
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i64 0, i64 0))
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0))
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0))
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0))
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.39, i64 0, i64 0))
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i64 0, i64 0))
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.41, i64 0, i64 0))
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.42, i64 0, i64 0))
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.43, i64 0, i64 0))
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.44, i64 0, i64 0))
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.45, i64 0, i64 0))
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.46, i64 0, i64 0))
  %call14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.47, i64 0, i64 0))
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.48, i64 0, i64 0))
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i64 0, i64 0))
  %call17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.50, i64 0, i64 0))
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51, i64 0, i64 0))
  %call19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.52, i64 0, i64 0))
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.53, i64 0, i64 0))
  %call21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.54, i64 0, i64 0))
  %call22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55, i64 0, i64 0))
  %call23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0))
  %call24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.57, i64 0, i64 0))
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.58, i64 0, i64 0))
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.59, i64 0, i64 0))
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.60, i64 0, i64 0))
  %call28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.61, i64 0, i64 0))
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.62, i64 0, i64 0))
  %call30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.63, i64 0, i64 0))
  %call31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.64, i64 0, i64 0))
  %call32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.65, i64 0, i64 0))
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @check_input() #0 {
entry:
  %error = alloca i32, align 4
  store i32 0, i32* %error, align 4
  %0 = load i32, i32* @init_block_x, align 4
  %cmp = icmp slt i32 %0, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @init_block_y, align 4
  %cmp1 = icmp slt i32 %1, 1
  br i1 %cmp1, label %if.then, label %lor.lhs.false2

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* @init_block_z, align 4
  %cmp3 = icmp slt i32 %2, 1
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.66, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false2
  %3 = load i32, i32* @max_num_blocks, align 4
  %4 = load i32, i32* @init_block_x, align 4
  %5 = load i32, i32* @init_block_y, align 4
  %mul = mul nsw i32 %4, %5
  %6 = load i32, i32* @init_block_z, align 4
  %mul4 = mul nsw i32 %mul, %6
  %cmp5 = icmp slt i32 %3, %mul4
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.67, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %7 = load i32, i32* @x_block_size, align 4
  %cmp9 = icmp slt i32 %7, 1
  br i1 %cmp9, label %if.then14, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %if.end8
  %8 = load i32, i32* @y_block_size, align 4
  %cmp11 = icmp slt i32 %8, 1
  br i1 %cmp11, label %if.then14, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %9 = load i32, i32* @z_block_size, align 4
  %cmp13 = icmp slt i32 %9, 1
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %lor.lhs.false12, %lor.lhs.false10, %if.end8
  %call15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %lor.lhs.false12
  %10 = load i32, i32* @x_block_size, align 4
  %div = sdiv i32 %10, 2
  %mul17 = mul nsw i32 %div, 2
  %11 = load i32, i32* @x_block_size, align 4
  %cmp18 = icmp ne i32 %mul17, %11
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end16
  %call20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.69, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end16
  %12 = load i32, i32* @y_block_size, align 4
  %div22 = sdiv i32 %12, 2
  %mul23 = mul nsw i32 %div22, 2
  %13 = load i32, i32* @y_block_size, align 4
  %cmp24 = icmp ne i32 %mul23, %13
  br i1 %cmp24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end21
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.70, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end21
  %14 = load i32, i32* @z_block_size, align 4
  %div28 = sdiv i32 %14, 2
  %mul29 = mul nsw i32 %div28, 2
  %15 = load i32, i32* @z_block_size, align 4
  %cmp30 = icmp ne i32 %mul29, %15
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %if.end27
  %call32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.71, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %if.end27
  %16 = load i32, i32* @target_active, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %land.lhs.true, label %if.end37

land.lhs.true:                                    ; preds = %if.end33
  %17 = load i32, i32* @target_max, align 4
  %tobool34 = icmp ne i32 %17, 0
  br i1 %tobool34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %land.lhs.true
  %call36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.72, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %land.lhs.true, %if.end33
  %18 = load i32, i32* @target_active, align 4
  %tobool38 = icmp ne i32 %18, 0
  br i1 %tobool38, label %land.lhs.true39, label %if.end43

land.lhs.true39:                                  ; preds = %if.end37
  %19 = load i32, i32* @target_min, align 4
  %tobool40 = icmp ne i32 %19, 0
  br i1 %tobool40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %land.lhs.true39
  %call42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.73, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %20 = load i32, i32* @target_active, align 4
  %cmp44 = icmp slt i32 %20, 0
  br i1 %cmp44, label %if.then47, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.end43
  %21 = load i32, i32* @target_active, align 4
  %22 = load i32, i32* @max_num_blocks, align 4
  %cmp46 = icmp sgt i32 %21, %22
  br i1 %cmp46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %lor.lhs.false45, %if.end43
  %call48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %lor.lhs.false45
  %23 = load i32, i32* @target_max, align 4
  %cmp50 = icmp slt i32 %23, 0
  br i1 %cmp50, label %if.then55, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %if.end49
  %24 = load i32, i32* @target_max, align 4
  %25 = load i32, i32* @max_num_blocks, align 4
  %cmp52 = icmp sgt i32 %24, %25
  br i1 %cmp52, label %if.then55, label %lor.lhs.false53

lor.lhs.false53:                                  ; preds = %lor.lhs.false51
  %26 = load i32, i32* @target_max, align 4
  %27 = load i32, i32* @target_active, align 4
  %cmp54 = icmp slt i32 %26, %27
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %lor.lhs.false53, %lor.lhs.false51, %if.end49
  %call56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.75, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %lor.lhs.false53
  %28 = load i32, i32* @target_min, align 4
  %cmp58 = icmp slt i32 %28, 0
  br i1 %cmp58, label %if.then65, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %if.end57
  %29 = load i32, i32* @target_min, align 4
  %30 = load i32, i32* @max_num_blocks, align 4
  %cmp60 = icmp sgt i32 %29, %30
  br i1 %cmp60, label %if.then65, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false59
  %31 = load i32, i32* @target_min, align 4
  %32 = load i32, i32* @target_active, align 4
  %cmp62 = icmp sgt i32 %31, %32
  br i1 %cmp62, label %if.then65, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false61
  %33 = load i32, i32* @target_min, align 4
  %34 = load i32, i32* @target_max, align 4
  %cmp64 = icmp sgt i32 %33, %34
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %lor.lhs.false63, %lor.lhs.false61, %lor.lhs.false59, %if.end57
  %call66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.76, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %lor.lhs.false63
  %35 = load i32, i32* @num_refine, align 4
  %cmp68 = icmp slt i32 %35, 0
  br i1 %cmp68, label %if.then69, label %if.end71

if.then69:                                        ; preds = %if.end67
  %call70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.77, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.end67
  %36 = load i32, i32* @block_change, align 4
  %cmp72 = icmp slt i32 %36, 0
  br i1 %cmp72, label %if.then73, label %if.end75

if.then73:                                        ; preds = %if.end71
  %call74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.77, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.then73, %if.end71
  %37 = load i32, i32* @num_vars, align 4
  %cmp76 = icmp slt i32 %37, 1
  br i1 %cmp76, label %if.then77, label %if.end79

if.then77:                                        ; preds = %if.end75
  %call78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.78, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.end75
  %38 = load i32, i32* @num_pes, align 4
  %39 = load i32, i32* @npx, align 4
  %40 = load i32, i32* @npy, align 4
  %mul80 = mul nsw i32 %39, %40
  %41 = load i32, i32* @npz, align 4
  %mul81 = mul nsw i32 %mul80, %41
  %cmp82 = icmp ne i32 %38, %mul81
  br i1 %cmp82, label %if.then83, label %if.end85

if.then83:                                        ; preds = %if.end79
  %call84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.79, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then83, %if.end79
  %42 = load i32, i32* @stencil, align 4
  %cmp86 = icmp ne i32 %42, 7
  br i1 %cmp86, label %land.lhs.true87, label %if.end91

land.lhs.true87:                                  ; preds = %if.end85
  %43 = load i32, i32* @stencil, align 4
  %cmp88 = icmp ne i32 %43, 27
  br i1 %cmp88, label %if.then89, label %if.end91

if.then89:                                        ; preds = %land.lhs.true87
  %call90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %land.lhs.true87, %if.end85
  %44 = load i32, i32* @stencil, align 4
  %cmp92 = icmp eq i32 %44, 27
  br i1 %cmp92, label %land.lhs.true93, label %if.end99

land.lhs.true93:                                  ; preds = %if.end91
  %45 = load i32, i32* @num_refine, align 4
  %tobool94 = icmp ne i32 %45, 0
  br i1 %tobool94, label %land.lhs.true95, label %if.end99

land.lhs.true95:                                  ; preds = %land.lhs.true93
  %46 = load i32, i32* @uniform_refine, align 4
  %tobool96 = icmp ne i32 %46, 0
  br i1 %tobool96, label %if.end99, label %if.then97

if.then97:                                        ; preds = %land.lhs.true95
  %call98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.81, i64 0, i64 0))
  br label %if.end99

if.end99:                                         ; preds = %if.then97, %land.lhs.true95, %land.lhs.true93, %if.end91
  %47 = load i32, i32* @comm_vars, align 4
  %cmp100 = icmp eq i32 %47, 0
  br i1 %cmp100, label %if.then103, label %lor.lhs.false101

lor.lhs.false101:                                 ; preds = %if.end99
  %48 = load i32, i32* @comm_vars, align 4
  %49 = load i32, i32* @num_vars, align 4
  %cmp102 = icmp sgt i32 %48, %49
  br i1 %cmp102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %lor.lhs.false101, %if.end99
  %50 = load i32, i32* @num_vars, align 4
  store i32 %50, i32* @comm_vars, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.then103, %lor.lhs.false101
  %51 = load i32, i32* @code, align 4
  %cmp105 = icmp slt i32 %51, 0
  br i1 %cmp105, label %if.then108, label %lor.lhs.false106

lor.lhs.false106:                                 ; preds = %if.end104
  %52 = load i32, i32* @code, align 4
  %cmp107 = icmp sgt i32 %52, 2
  br i1 %cmp107, label %if.then108, label %if.end110

if.then108:                                       ; preds = %lor.lhs.false106, %if.end104
  %call109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.82, i64 0, i64 0))
  store i32 1, i32* %error, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %lor.lhs.false106
  %53 = load i32, i32* %error, align 4
  ret i32 %53
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @allocate() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  %0 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %0, 1
  %conv = sext i32 %add to i64
  %mul = mul i64 %conv, 4
  %call = call i8* @ma_malloc(i64 %mul, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 209)
  %1 = bitcast i8* %call to i32*
  store i32* %1, i32** @num_blocks, align 8
  %2 = load i32, i32* @num_pes, align 4
  %3 = load i32, i32* @init_block_x, align 4
  %mul1 = mul nsw i32 %2, %3
  %4 = load i32, i32* @init_block_y, align 4
  %mul2 = mul nsw i32 %mul1, %4
  %5 = load i32, i32* @init_block_z, align 4
  %mul3 = mul nsw i32 %mul2, %5
  %6 = load i32*, i32** @num_blocks, align 8
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 0
  store i32 %mul3, i32* %arrayidx, align 4
  %7 = load i32, i32* @init_block_x, align 4
  %8 = load i32, i32* @init_block_y, align 4
  %mul4 = mul nsw i32 %7, %8
  %9 = load i32, i32* @init_block_z, align 4
  %mul5 = mul nsw i32 %mul4, %9
  %10 = load i32*, i32** @num_blocks, align 8
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 0
  store i32 %mul5, i32* %arrayidx6, align 4
  %11 = load i32, i32* @max_num_blocks, align 4
  %conv7 = sext i32 %11 to i64
  %mul8 = mul i64 %conv7, 192
  %call9 = call i8* @ma_malloc(i64 %mul8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 214)
  %12 = bitcast i8* %call9 to %struct.block*
  store %struct.block* %12, %struct.block** @blocks, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc70, %entry
  %13 = load i32, i32* %n, align 4
  %14 = load i32, i32* @max_num_blocks, align 4
  %cmp = icmp slt i32 %13, %14
  br i1 %cmp, label %for.body, label %for.end72

for.body:                                         ; preds = %for.cond
  %15 = load %struct.block*, %struct.block** @blocks, align 8
  %16 = load i32, i32* %n, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds %struct.block, %struct.block* %15, i64 %idxprom
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx11, i32 0, i32 0
  store i32 -1, i32* %number, align 8
  %17 = load i32, i32* @num_vars, align 4
  %conv12 = sext i32 %17 to i64
  %mul13 = mul i64 %conv12, 8
  %call14 = call i8* @ma_malloc(i64 %mul13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 219)
  %18 = bitcast i8* %call14 to double****
  %19 = load %struct.block*, %struct.block** @blocks, align 8
  %20 = load i32, i32* %n, align 4
  %idxprom15 = sext i32 %20 to i64
  %arrayidx16 = getelementptr inbounds %struct.block, %struct.block* %19, i64 %idxprom15
  %array = getelementptr inbounds %struct.block, %struct.block* %arrayidx16, i32 0, i32 11
  store double**** %18, double***** %array, align 8
  store i32 0, i32* %m, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc67, %for.body
  %21 = load i32, i32* %m, align 4
  %22 = load i32, i32* @num_vars, align 4
  %cmp18 = icmp slt i32 %21, %22
  br i1 %cmp18, label %for.body20, label %for.end69

for.body20:                                       ; preds = %for.cond17
  %23 = load i32, i32* @x_block_size, align 4
  %add21 = add nsw i32 %23, 2
  %conv22 = sext i32 %add21 to i64
  %mul23 = mul i64 %conv22, 8
  %call24 = call i8* @ma_malloc(i64 %mul23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 223)
  %24 = bitcast i8* %call24 to double***
  %25 = load %struct.block*, %struct.block** @blocks, align 8
  %26 = load i32, i32* %n, align 4
  %idxprom25 = sext i32 %26 to i64
  %arrayidx26 = getelementptr inbounds %struct.block, %struct.block* %25, i64 %idxprom25
  %array27 = getelementptr inbounds %struct.block, %struct.block* %arrayidx26, i32 0, i32 11
  %27 = load double****, double***** %array27, align 8
  %28 = load i32, i32* %m, align 4
  %idxprom28 = sext i32 %28 to i64
  %arrayidx29 = getelementptr inbounds double***, double**** %27, i64 %idxprom28
  store double*** %24, double**** %arrayidx29, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc64, %for.body20
  %29 = load i32, i32* %i, align 4
  %30 = load i32, i32* @x_block_size, align 4
  %add31 = add nsw i32 %30, 2
  %cmp32 = icmp slt i32 %29, %add31
  br i1 %cmp32, label %for.body34, label %for.end66

for.body34:                                       ; preds = %for.cond30
  %31 = load i32, i32* @y_block_size, align 4
  %add35 = add nsw i32 %31, 2
  %conv36 = sext i32 %add35 to i64
  %mul37 = mul i64 %conv36, 8
  %call38 = call i8* @ma_malloc(i64 %mul37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 227)
  %32 = bitcast i8* %call38 to double**
  %33 = load %struct.block*, %struct.block** @blocks, align 8
  %34 = load i32, i32* %n, align 4
  %idxprom39 = sext i32 %34 to i64
  %arrayidx40 = getelementptr inbounds %struct.block, %struct.block* %33, i64 %idxprom39
  %array41 = getelementptr inbounds %struct.block, %struct.block* %arrayidx40, i32 0, i32 11
  %35 = load double****, double***** %array41, align 8
  %36 = load i32, i32* %m, align 4
  %idxprom42 = sext i32 %36 to i64
  %arrayidx43 = getelementptr inbounds double***, double**** %35, i64 %idxprom42
  %37 = load double***, double**** %arrayidx43, align 8
  %38 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %38 to i64
  %arrayidx45 = getelementptr inbounds double**, double*** %37, i64 %idxprom44
  store double** %32, double*** %arrayidx45, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc, %for.body34
  %39 = load i32, i32* %j, align 4
  %40 = load i32, i32* @y_block_size, align 4
  %add47 = add nsw i32 %40, 2
  %cmp48 = icmp slt i32 %39, %add47
  br i1 %cmp48, label %for.body50, label %for.end

for.body50:                                       ; preds = %for.cond46
  %41 = load i32, i32* @z_block_size, align 4
  %add51 = add nsw i32 %41, 2
  %conv52 = sext i32 %add51 to i64
  %mul53 = mul i64 %conv52, 8
  %call54 = call i8* @ma_malloc(i64 %mul53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 231)
  %42 = bitcast i8* %call54 to double*
  %43 = load %struct.block*, %struct.block** @blocks, align 8
  %44 = load i32, i32* %n, align 4
  %idxprom55 = sext i32 %44 to i64
  %arrayidx56 = getelementptr inbounds %struct.block, %struct.block* %43, i64 %idxprom55
  %array57 = getelementptr inbounds %struct.block, %struct.block* %arrayidx56, i32 0, i32 11
  %45 = load double****, double***** %array57, align 8
  %46 = load i32, i32* %m, align 4
  %idxprom58 = sext i32 %46 to i64
  %arrayidx59 = getelementptr inbounds double***, double**** %45, i64 %idxprom58
  %47 = load double***, double**** %arrayidx59, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %48 to i64
  %arrayidx61 = getelementptr inbounds double**, double*** %47, i64 %idxprom60
  %49 = load double**, double*** %arrayidx61, align 8
  %50 = load i32, i32* %j, align 4
  %idxprom62 = sext i32 %50 to i64
  %arrayidx63 = getelementptr inbounds double*, double** %49, i64 %idxprom62
  store double* %42, double** %arrayidx63, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body50
  %51 = load i32, i32* %j, align 4
  %inc = add nsw i32 %51, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond46

for.end:                                          ; preds = %for.cond46
  br label %for.inc64

for.inc64:                                        ; preds = %for.end
  %52 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %52, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond30

for.end66:                                        ; preds = %for.cond30
  br label %for.inc67

for.inc67:                                        ; preds = %for.end66
  %53 = load i32, i32* %m, align 4
  %inc68 = add nsw i32 %53, 1
  store i32 %inc68, i32* %m, align 4
  br label %for.cond17

for.end69:                                        ; preds = %for.cond17
  br label %for.inc70

for.inc70:                                        ; preds = %for.end69
  %54 = load i32, i32* %n, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %n, align 4
  br label %for.cond

for.end72:                                        ; preds = %for.cond
  %55 = load i32, i32* @max_num_blocks, align 4
  %conv73 = sext i32 %55 to i64
  %mul74 = mul i64 %conv73, 8
  %call75 = call i8* @ma_malloc(i64 %mul74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 237)
  %56 = bitcast i8* %call75 to %struct.sorted_block*
  store %struct.sorted_block* %56, %struct.sorted_block** @sorted_list, align 8
  %57 = load i32, i32* @num_refine, align 4
  %add76 = add nsw i32 %57, 2
  %conv77 = sext i32 %add76 to i64
  %mul78 = mul i64 %conv77, 4
  %call79 = call i8* @ma_malloc(i64 %mul78, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 239)
  %58 = bitcast i8* %call79 to i32*
  store i32* %58, i32** @sorted_index, align 8
  %59 = load i32, i32* @max_num_blocks, align 4
  store i32 %59, i32* @max_num_parents, align 4
  %60 = load i32, i32* @max_num_parents, align 4
  %conv80 = sext i32 %60 to i64
  %mul81 = mul i64 %conv80, 100
  %call82 = call i8* @ma_malloc(i64 %mul81, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 243)
  %61 = bitcast i8* %call82 to %struct.parent*
  store %struct.parent* %61, %struct.parent** @parents, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc90, %for.end72
  %62 = load i32, i32* %n, align 4
  %63 = load i32, i32* @max_num_parents, align 4
  %cmp84 = icmp slt i32 %62, %63
  br i1 %cmp84, label %for.body86, label %for.end92

for.body86:                                       ; preds = %for.cond83
  %64 = load %struct.parent*, %struct.parent** @parents, align 8
  %65 = load i32, i32* %n, align 4
  %idxprom87 = sext i32 %65 to i64
  %arrayidx88 = getelementptr inbounds %struct.parent, %struct.parent* %64, i64 %idxprom87
  %number89 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx88, i32 0, i32 0
  store i32 -1, i32* %number89, align 4
  br label %for.inc90

for.inc90:                                        ; preds = %for.body86
  %66 = load i32, i32* %n, align 4
  %inc91 = add nsw i32 %66, 1
  store i32 %inc91, i32* %n, align 4
  br label %for.cond83

for.end92:                                        ; preds = %for.cond83
  %67 = load i32, i32* @num_vars, align 4
  %conv93 = sext i32 %67 to i64
  %mul94 = mul i64 %conv93, 8
  %call95 = call i8* @ma_malloc(i64 %mul94, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 247)
  %68 = bitcast i8* %call95 to double*
  store double* %68, double** @grid_sum, align 8
  %69 = load i32, i32* @num_refine, align 4
  %add96 = add nsw i32 %69, 2
  %conv97 = sext i32 %add96 to i64
  %mul98 = mul i64 %conv97, 4
  %call99 = call i8* @ma_malloc(i64 %mul98, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 249)
  %70 = bitcast i8* %call99 to i32*
  store i32* %70, i32** @p8, align 8
  %71 = load i32, i32* @num_refine, align 4
  %add100 = add nsw i32 %71, 2
  %conv101 = sext i32 %add100 to i64
  %mul102 = mul i64 %conv101, 4
  %call103 = call i8* @ma_malloc(i64 %mul102, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 250)
  %72 = bitcast i8* %call103 to i32*
  store i32* %72, i32** @p2, align 8
  %73 = load i32, i32* @num_refine, align 4
  %add104 = add nsw i32 %73, 1
  %conv105 = sext i32 %add104 to i64
  %mul106 = mul i64 %conv105, 4
  %call107 = call i8* @ma_malloc(i64 %mul106, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i32 252)
  %74 = bitcast i8* %call107 to i32*
  store i32* %74, i32** @block_start, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @deallocate() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc38, %entry
  %0 = load i32, i32* %n, align 4
  %1 = load i32, i32* @max_num_blocks, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end40

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %m, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc32, %for.body
  %2 = load i32, i32* %m, align 4
  %3 = load i32, i32* @num_vars, align 4
  %cmp2 = icmp slt i32 %2, %3
  br i1 %cmp2, label %for.body3, label %for.end34

for.body3:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc24, %for.body3
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* @x_block_size, align 4
  %add = add nsw i32 %5, 2
  %cmp5 = icmp slt i32 %4, %add
  br i1 %cmp5, label %for.body6, label %for.end26

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %j, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %6 = load i32, i32* %j, align 4
  %7 = load i32, i32* @y_block_size, align 4
  %add8 = add nsw i32 %7, 2
  %cmp9 = icmp slt i32 %6, %add8
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; preds = %for.cond7
  %8 = load %struct.block*, %struct.block** @blocks, align 8
  %9 = load i32, i32* %n, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds %struct.block, %struct.block* %8, i64 %idxprom
  %array = getelementptr inbounds %struct.block, %struct.block* %arrayidx, i32 0, i32 11
  %10 = load double****, double***** %array, align 8
  %11 = load i32, i32* %m, align 4
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds double***, double**** %10, i64 %idxprom11
  %12 = load double***, double**** %arrayidx12, align 8
  %13 = load i32, i32* %i, align 4
  %idxprom13 = sext i32 %13 to i64
  %arrayidx14 = getelementptr inbounds double**, double*** %12, i64 %idxprom13
  %14 = load double**, double*** %arrayidx14, align 8
  %15 = load i32, i32* %j, align 4
  %idxprom15 = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds double*, double** %14, i64 %idxprom15
  %16 = load double*, double** %arrayidx16, align 8
  %17 = bitcast double* %16 to i8*
  call void @free(i8* %17) #5
  br label %for.inc

for.inc:                                          ; preds = %for.body10
  %18 = load i32, i32* %j, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  %19 = load %struct.block*, %struct.block** @blocks, align 8
  %20 = load i32, i32* %n, align 4
  %idxprom17 = sext i32 %20 to i64
  %arrayidx18 = getelementptr inbounds %struct.block, %struct.block* %19, i64 %idxprom17
  %array19 = getelementptr inbounds %struct.block, %struct.block* %arrayidx18, i32 0, i32 11
  %21 = load double****, double***** %array19, align 8
  %22 = load i32, i32* %m, align 4
  %idxprom20 = sext i32 %22 to i64
  %arrayidx21 = getelementptr inbounds double***, double**** %21, i64 %idxprom20
  %23 = load double***, double**** %arrayidx21, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds double**, double*** %23, i64 %idxprom22
  %25 = load double**, double*** %arrayidx23, align 8
  %26 = bitcast double** %25 to i8*
  call void @free(i8* %26) #5
  br label %for.inc24

for.inc24:                                        ; preds = %for.end
  %27 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %27, 1
  store i32 %inc25, i32* %i, align 4
  br label %for.cond4

for.end26:                                        ; preds = %for.cond4
  %28 = load %struct.block*, %struct.block** @blocks, align 8
  %29 = load i32, i32* %n, align 4
  %idxprom27 = sext i32 %29 to i64
  %arrayidx28 = getelementptr inbounds %struct.block, %struct.block* %28, i64 %idxprom27
  %array29 = getelementptr inbounds %struct.block, %struct.block* %arrayidx28, i32 0, i32 11
  %30 = load double****, double***** %array29, align 8
  %31 = load i32, i32* %m, align 4
  %idxprom30 = sext i32 %31 to i64
  %arrayidx31 = getelementptr inbounds double***, double**** %30, i64 %idxprom30
  %32 = load double***, double**** %arrayidx31, align 8
  %33 = bitcast double*** %32 to i8*
  call void @free(i8* %33) #5
  br label %for.inc32

for.inc32:                                        ; preds = %for.end26
  %34 = load i32, i32* %m, align 4
  %inc33 = add nsw i32 %34, 1
  store i32 %inc33, i32* %m, align 4
  br label %for.cond1

for.end34:                                        ; preds = %for.cond1
  %35 = load %struct.block*, %struct.block** @blocks, align 8
  %36 = load i32, i32* %n, align 4
  %idxprom35 = sext i32 %36 to i64
  %arrayidx36 = getelementptr inbounds %struct.block, %struct.block* %35, i64 %idxprom35
  %array37 = getelementptr inbounds %struct.block, %struct.block* %arrayidx36, i32 0, i32 11
  %37 = load double****, double***** %array37, align 8
  %38 = bitcast double**** %37 to i8*
  call void @free(i8* %38) #5
  br label %for.inc38

for.inc38:                                        ; preds = %for.end34
  %39 = load i32, i32* %n, align 4
  %inc39 = add nsw i32 %39, 1
  store i32 %inc39, i32* %n, align 4
  br label %for.cond

for.end40:                                        ; preds = %for.cond
  %40 = load %struct.block*, %struct.block** @blocks, align 8
  %41 = bitcast %struct.block* %40 to i8*
  call void @free(i8* %41) #5
  %42 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %43 = bitcast %struct.sorted_block* %42 to i8*
  call void @free(i8* %43) #5
  %44 = load i32*, i32** @sorted_index, align 8
  %45 = bitcast i32* %44 to i8*
  call void @free(i8* %45) #5
  %46 = load %struct.object*, %struct.object** @objects, align 8
  %47 = bitcast %struct.object* %46 to i8*
  call void @free(i8* %47) #5
  %48 = load double*, double** @grid_sum, align 8
  %49 = bitcast double* %48 to i8*
  call void @free(i8* %49) #5
  %50 = load i32*, i32** @p8, align 8
  %51 = bitcast i32* %50 to i8*
  call void @free(i8* %51) #5
  %52 = load i32*, i32** @p2, align 8
  %53 = bitcast i32* %52 to i8*
  call void @free(i8* %53) #5
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @move() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc81, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load i32, i32* @num_objects, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end83

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %2 = load i32, i32* %j, align 4
  %cmp2 = icmp slt i32 %2, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %3 = load %struct.object*, %struct.object** @objects, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds %struct.object, %struct.object* %3, i64 %idxprom
  %move = getelementptr inbounds %struct.object, %struct.object* %arrayidx, i32 0, i32 4
  %5 = load i32, i32* %j, align 4
  %idxprom4 = sext i32 %5 to i64
  %arrayidx5 = getelementptr inbounds [3 x double], [3 x double]* %move, i64 0, i64 %idxprom4
  %6 = load double, double* %arrayidx5, align 8
  %7 = load %struct.object*, %struct.object** @objects, align 8
  %8 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %8 to i64
  %arrayidx7 = getelementptr inbounds %struct.object, %struct.object* %7, i64 %idxprom6
  %cen = getelementptr inbounds %struct.object, %struct.object* %arrayidx7, i32 0, i32 2
  %9 = load i32, i32* %j, align 4
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds [3 x double], [3 x double]* %cen, i64 0, i64 %idxprom8
  %10 = load double, double* %arrayidx9, align 8
  %add = fadd double %10, %6
  store double %add, double* %arrayidx9, align 8
  %11 = load %struct.object*, %struct.object** @objects, align 8
  %12 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %12 to i64
  %arrayidx11 = getelementptr inbounds %struct.object, %struct.object* %11, i64 %idxprom10
  %bounce = getelementptr inbounds %struct.object, %struct.object* %arrayidx11, i32 0, i32 1
  %13 = load i32, i32* %bounce, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.then, label %if.end70

if.then:                                          ; preds = %for.body3
  %14 = load %struct.object*, %struct.object** @objects, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %15 to i64
  %arrayidx13 = getelementptr inbounds %struct.object, %struct.object* %14, i64 %idxprom12
  %cen14 = getelementptr inbounds %struct.object, %struct.object* %arrayidx13, i32 0, i32 2
  %16 = load i32, i32* %j, align 4
  %idxprom15 = sext i32 %16 to i64
  %arrayidx16 = getelementptr inbounds [3 x double], [3 x double]* %cen14, i64 0, i64 %idxprom15
  %17 = load double, double* %arrayidx16, align 8
  %cmp17 = fcmp oge double %17, 1.000000e+00
  br i1 %cmp17, label %if.then18, label %if.else

if.then18:                                        ; preds = %if.then
  %18 = load %struct.object*, %struct.object** @objects, align 8
  %19 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %19 to i64
  %arrayidx20 = getelementptr inbounds %struct.object, %struct.object* %18, i64 %idxprom19
  %cen21 = getelementptr inbounds %struct.object, %struct.object* %arrayidx20, i32 0, i32 2
  %20 = load i32, i32* %j, align 4
  %idxprom22 = sext i32 %20 to i64
  %arrayidx23 = getelementptr inbounds [3 x double], [3 x double]* %cen21, i64 0, i64 %idxprom22
  %21 = load double, double* %arrayidx23, align 8
  %sub = fsub double 2.000000e+00, %21
  %22 = load %struct.object*, %struct.object** @objects, align 8
  %23 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %23 to i64
  %arrayidx25 = getelementptr inbounds %struct.object, %struct.object* %22, i64 %idxprom24
  %cen26 = getelementptr inbounds %struct.object, %struct.object* %arrayidx25, i32 0, i32 2
  %24 = load i32, i32* %j, align 4
  %idxprom27 = sext i32 %24 to i64
  %arrayidx28 = getelementptr inbounds [3 x double], [3 x double]* %cen26, i64 0, i64 %idxprom27
  store double %sub, double* %arrayidx28, align 8
  %25 = load %struct.object*, %struct.object** @objects, align 8
  %26 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %26 to i64
  %arrayidx30 = getelementptr inbounds %struct.object, %struct.object* %25, i64 %idxprom29
  %move31 = getelementptr inbounds %struct.object, %struct.object* %arrayidx30, i32 0, i32 4
  %27 = load i32, i32* %j, align 4
  %idxprom32 = sext i32 %27 to i64
  %arrayidx33 = getelementptr inbounds [3 x double], [3 x double]* %move31, i64 0, i64 %idxprom32
  %28 = load double, double* %arrayidx33, align 8
  %sub34 = fsub double -0.000000e+00, %28
  %29 = load %struct.object*, %struct.object** @objects, align 8
  %30 = load i32, i32* %i, align 4
  %idxprom35 = sext i32 %30 to i64
  %arrayidx36 = getelementptr inbounds %struct.object, %struct.object* %29, i64 %idxprom35
  %move37 = getelementptr inbounds %struct.object, %struct.object* %arrayidx36, i32 0, i32 4
  %31 = load i32, i32* %j, align 4
  %idxprom38 = sext i32 %31 to i64
  %arrayidx39 = getelementptr inbounds [3 x double], [3 x double]* %move37, i64 0, i64 %idxprom38
  store double %sub34, double* %arrayidx39, align 8
  br label %if.end69

if.else:                                          ; preds = %if.then
  %32 = load %struct.object*, %struct.object** @objects, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom40 = sext i32 %33 to i64
  %arrayidx41 = getelementptr inbounds %struct.object, %struct.object* %32, i64 %idxprom40
  %cen42 = getelementptr inbounds %struct.object, %struct.object* %arrayidx41, i32 0, i32 2
  %34 = load i32, i32* %j, align 4
  %idxprom43 = sext i32 %34 to i64
  %arrayidx44 = getelementptr inbounds [3 x double], [3 x double]* %cen42, i64 0, i64 %idxprom43
  %35 = load double, double* %arrayidx44, align 8
  %cmp45 = fcmp ole double %35, 0.000000e+00
  br i1 %cmp45, label %if.then46, label %if.end

if.then46:                                        ; preds = %if.else
  %36 = load %struct.object*, %struct.object** @objects, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %37 to i64
  %arrayidx48 = getelementptr inbounds %struct.object, %struct.object* %36, i64 %idxprom47
  %cen49 = getelementptr inbounds %struct.object, %struct.object* %arrayidx48, i32 0, i32 2
  %38 = load i32, i32* %j, align 4
  %idxprom50 = sext i32 %38 to i64
  %arrayidx51 = getelementptr inbounds [3 x double], [3 x double]* %cen49, i64 0, i64 %idxprom50
  %39 = load double, double* %arrayidx51, align 8
  %sub52 = fsub double 0.000000e+00, %39
  %40 = load %struct.object*, %struct.object** @objects, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %41 to i64
  %arrayidx54 = getelementptr inbounds %struct.object, %struct.object* %40, i64 %idxprom53
  %cen55 = getelementptr inbounds %struct.object, %struct.object* %arrayidx54, i32 0, i32 2
  %42 = load i32, i32* %j, align 4
  %idxprom56 = sext i32 %42 to i64
  %arrayidx57 = getelementptr inbounds [3 x double], [3 x double]* %cen55, i64 0, i64 %idxprom56
  store double %sub52, double* %arrayidx57, align 8
  %43 = load %struct.object*, %struct.object** @objects, align 8
  %44 = load i32, i32* %i, align 4
  %idxprom58 = sext i32 %44 to i64
  %arrayidx59 = getelementptr inbounds %struct.object, %struct.object* %43, i64 %idxprom58
  %move60 = getelementptr inbounds %struct.object, %struct.object* %arrayidx59, i32 0, i32 4
  %45 = load i32, i32* %j, align 4
  %idxprom61 = sext i32 %45 to i64
  %arrayidx62 = getelementptr inbounds [3 x double], [3 x double]* %move60, i64 0, i64 %idxprom61
  %46 = load double, double* %arrayidx62, align 8
  %sub63 = fsub double -0.000000e+00, %46
  %47 = load %struct.object*, %struct.object** @objects, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds %struct.object, %struct.object* %47, i64 %idxprom64
  %move66 = getelementptr inbounds %struct.object, %struct.object* %arrayidx65, i32 0, i32 4
  %49 = load i32, i32* %j, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [3 x double], [3 x double]* %move66, i64 0, i64 %idxprom67
  store double %sub63, double* %arrayidx68, align 8
  br label %if.end

if.end:                                           ; preds = %if.then46, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end, %if.then18
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %for.body3
  %50 = load %struct.object*, %struct.object** @objects, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %51 to i64
  %arrayidx72 = getelementptr inbounds %struct.object, %struct.object* %50, i64 %idxprom71
  %inc = getelementptr inbounds %struct.object, %struct.object* %arrayidx72, i32 0, i32 8
  %52 = load i32, i32* %j, align 4
  %idxprom73 = sext i32 %52 to i64
  %arrayidx74 = getelementptr inbounds [3 x double], [3 x double]* %inc, i64 0, i64 %idxprom73
  %53 = load double, double* %arrayidx74, align 8
  %54 = load %struct.object*, %struct.object** @objects, align 8
  %55 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %55 to i64
  %arrayidx76 = getelementptr inbounds %struct.object, %struct.object* %54, i64 %idxprom75
  %size = getelementptr inbounds %struct.object, %struct.object* %arrayidx76, i32 0, i32 6
  %56 = load i32, i32* %j, align 4
  %idxprom77 = sext i32 %56 to i64
  %arrayidx78 = getelementptr inbounds [3 x double], [3 x double]* %size, i64 0, i64 %idxprom77
  %57 = load double, double* %arrayidx78, align 8
  %add79 = fadd double %57, %53
  store double %add79, double* %arrayidx78, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end70
  %58 = load i32, i32* %j, align 4
  %inc80 = add nsw i32 %58, 1
  store i32 %inc80, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc81

for.inc81:                                        ; preds = %for.end
  %59 = load i32, i32* %i, align 4
  %inc82 = add nsw i32 %59, 1
  store i32 %inc82, i32* %i, align 4
  br label %for.cond

for.end83:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @check_objects() #0 {
entry:
  %n = alloca i32, align 4
  %sz = alloca i32, align 4
  %in = alloca i32, align 4
  %c = alloca i32, align 4
  %cor = alloca [3 x [2 x double]], align 16
  %bp = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  store i32 0, i32* %in, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc239, %entry
  %0 = load i32, i32* %in, align 4
  %1 = load i32*, i32** @sorted_index, align 8
  %2 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %2, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %cmp = icmp slt i32 %0, %3
  br i1 %cmp, label %for.body, label %for.end241

for.body:                                         ; preds = %for.cond
  %4 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %5 = load i32, i32* %in, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %4, i64 %idxprom1
  %n3 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx2, i32 0, i32 1
  %6 = load i32, i32* %n3, align 4
  store i32 %6, i32* %n, align 4
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom4
  store %struct.block* %arrayidx5, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx5, i32 0, i32 0
  %9 = load i32, i32* %number, align 8
  %cmp6 = icmp sge i32 %9, 0
  br i1 %cmp6, label %if.then, label %if.end238

if.then:                                          ; preds = %for.body
  %10 = load i32*, i32** @p2, align 8
  %11 = load i32, i32* @num_refine, align 4
  %12 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 1
  %13 = load i32, i32* %level, align 4
  %sub = sub nsw i32 %11, %13
  %idxprom7 = sext i32 %sub to i64
  %arrayidx8 = getelementptr inbounds i32, i32* %10, i64 %idxprom7
  %14 = load i32, i32* %arrayidx8, align 4
  store i32 %14, i32* %sz, align 4
  %15 = load %struct.block*, %struct.block** %bp, align 8
  %cen = getelementptr inbounds %struct.block, %struct.block* %15, i32 0, i32 10
  %arrayidx9 = getelementptr inbounds [3 x i32], [3 x i32]* %cen, i64 0, i64 0
  %16 = load i32, i32* %arrayidx9, align 4
  %17 = load i32, i32* %sz, align 4
  %sub10 = sub nsw i32 %16, %17
  %conv = sitofp i32 %sub10 to double
  %18 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv11 = sitofp i32 %18 to double
  %div = fdiv double %conv, %conv11
  %arrayidx12 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx13 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx12, i64 0, i64 0
  store double %div, double* %arrayidx13, align 16
  %19 = load %struct.block*, %struct.block** %bp, align 8
  %cen14 = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 10
  %arrayidx15 = getelementptr inbounds [3 x i32], [3 x i32]* %cen14, i64 0, i64 0
  %20 = load i32, i32* %arrayidx15, align 4
  %21 = load i32, i32* %sz, align 4
  %add16 = add nsw i32 %20, %21
  %conv17 = sitofp i32 %add16 to double
  %22 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv18 = sitofp i32 %22 to double
  %div19 = fdiv double %conv17, %conv18
  %arrayidx20 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx21 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx20, i64 0, i64 1
  store double %div19, double* %arrayidx21, align 8
  %23 = load %struct.block*, %struct.block** %bp, align 8
  %cen22 = getelementptr inbounds %struct.block, %struct.block* %23, i32 0, i32 10
  %arrayidx23 = getelementptr inbounds [3 x i32], [3 x i32]* %cen22, i64 0, i64 1
  %24 = load i32, i32* %arrayidx23, align 4
  %25 = load i32, i32* %sz, align 4
  %sub24 = sub nsw i32 %24, %25
  %conv25 = sitofp i32 %sub24 to double
  %26 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv26 = sitofp i32 %26 to double
  %div27 = fdiv double %conv25, %conv26
  %arrayidx28 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx29 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx28, i64 0, i64 0
  store double %div27, double* %arrayidx29, align 16
  %27 = load %struct.block*, %struct.block** %bp, align 8
  %cen30 = getelementptr inbounds %struct.block, %struct.block* %27, i32 0, i32 10
  %arrayidx31 = getelementptr inbounds [3 x i32], [3 x i32]* %cen30, i64 0, i64 1
  %28 = load i32, i32* %arrayidx31, align 4
  %29 = load i32, i32* %sz, align 4
  %add32 = add nsw i32 %28, %29
  %conv33 = sitofp i32 %add32 to double
  %30 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv34 = sitofp i32 %30 to double
  %div35 = fdiv double %conv33, %conv34
  %arrayidx36 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx37 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx36, i64 0, i64 1
  store double %div35, double* %arrayidx37, align 8
  %31 = load %struct.block*, %struct.block** %bp, align 8
  %cen38 = getelementptr inbounds %struct.block, %struct.block* %31, i32 0, i32 10
  %arrayidx39 = getelementptr inbounds [3 x i32], [3 x i32]* %cen38, i64 0, i64 2
  %32 = load i32, i32* %arrayidx39, align 4
  %33 = load i32, i32* %sz, align 4
  %sub40 = sub nsw i32 %32, %33
  %conv41 = sitofp i32 %sub40 to double
  %34 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv42 = sitofp i32 %34 to double
  %div43 = fdiv double %conv41, %conv42
  %arrayidx44 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx45 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx44, i64 0, i64 0
  store double %div43, double* %arrayidx45, align 16
  %35 = load %struct.block*, %struct.block** %bp, align 8
  %cen46 = getelementptr inbounds %struct.block, %struct.block* %35, i32 0, i32 10
  %arrayidx47 = getelementptr inbounds [3 x i32], [3 x i32]* %cen46, i64 0, i64 2
  %36 = load i32, i32* %arrayidx47, align 4
  %37 = load i32, i32* %sz, align 4
  %add48 = add nsw i32 %36, %37
  %conv49 = sitofp i32 %add48 to double
  %38 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv50 = sitofp i32 %38 to double
  %div51 = fdiv double %conv49, %conv50
  %arrayidx52 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx53 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx52, i64 0, i64 1
  store double %div51, double* %arrayidx53, align 8
  %39 = load i32, i32* @refine_ghost, align 4
  %tobool = icmp ne i32 %39, 0
  br i1 %tobool, label %if.then54, label %if.end

if.then54:                                        ; preds = %if.then
  %40 = load i32, i32* %sz, align 4
  %conv55 = sitofp i32 %40 to double
  %41 = load i32, i32* @x_block_size, align 4
  %conv56 = sitofp i32 %41 to double
  %div57 = fdiv double %conv55, %conv56
  %mul = fmul double 2.000000e+00, %div57
  %42 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv58 = sitofp i32 %42 to double
  %div59 = fdiv double %mul, %conv58
  %arrayidx60 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx61 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx60, i64 0, i64 0
  %43 = load double, double* %arrayidx61, align 16
  %sub62 = fsub double %43, %div59
  store double %sub62, double* %arrayidx61, align 16
  %44 = load i32, i32* %sz, align 4
  %conv63 = sitofp i32 %44 to double
  %45 = load i32, i32* @x_block_size, align 4
  %conv64 = sitofp i32 %45 to double
  %div65 = fdiv double %conv63, %conv64
  %mul66 = fmul double 2.000000e+00, %div65
  %46 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv67 = sitofp i32 %46 to double
  %div68 = fdiv double %mul66, %conv67
  %arrayidx69 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx70 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx69, i64 0, i64 1
  %47 = load double, double* %arrayidx70, align 8
  %add71 = fadd double %47, %div68
  store double %add71, double* %arrayidx70, align 8
  %48 = load i32, i32* %sz, align 4
  %conv72 = sitofp i32 %48 to double
  %49 = load i32, i32* @y_block_size, align 4
  %conv73 = sitofp i32 %49 to double
  %div74 = fdiv double %conv72, %conv73
  %mul75 = fmul double 2.000000e+00, %div74
  %50 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv76 = sitofp i32 %50 to double
  %div77 = fdiv double %mul75, %conv76
  %arrayidx78 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx79 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx78, i64 0, i64 0
  %51 = load double, double* %arrayidx79, align 16
  %sub80 = fsub double %51, %div77
  store double %sub80, double* %arrayidx79, align 16
  %52 = load i32, i32* %sz, align 4
  %conv81 = sitofp i32 %52 to double
  %53 = load i32, i32* @y_block_size, align 4
  %conv82 = sitofp i32 %53 to double
  %div83 = fdiv double %conv81, %conv82
  %mul84 = fmul double 2.000000e+00, %div83
  %54 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv85 = sitofp i32 %54 to double
  %div86 = fdiv double %mul84, %conv85
  %arrayidx87 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx88 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx87, i64 0, i64 1
  %55 = load double, double* %arrayidx88, align 8
  %add89 = fadd double %55, %div86
  store double %add89, double* %arrayidx88, align 8
  %56 = load i32, i32* %sz, align 4
  %conv90 = sitofp i32 %56 to double
  %57 = load i32, i32* @z_block_size, align 4
  %conv91 = sitofp i32 %57 to double
  %div92 = fdiv double %conv90, %conv91
  %mul93 = fmul double 2.000000e+00, %div92
  %58 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv94 = sitofp i32 %58 to double
  %div95 = fdiv double %mul93, %conv94
  %arrayidx96 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx97 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx96, i64 0, i64 0
  %59 = load double, double* %arrayidx97, align 16
  %sub98 = fsub double %59, %div95
  store double %sub98, double* %arrayidx97, align 16
  %60 = load i32, i32* %sz, align 4
  %conv99 = sitofp i32 %60 to double
  %61 = load i32, i32* @z_block_size, align 4
  %conv100 = sitofp i32 %61 to double
  %div101 = fdiv double %conv99, %conv100
  %mul102 = fmul double 2.000000e+00, %div101
  %62 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv103 = sitofp i32 %62 to double
  %div104 = fdiv double %mul102, %conv103
  %arrayidx105 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx106 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx105, i64 0, i64 1
  %63 = load double, double* %arrayidx106, align 8
  %add107 = fadd double %63, %div104
  store double %add107, double* %arrayidx106, align 8
  br label %if.end

if.end:                                           ; preds = %if.then54, %if.then
  %arraydecay = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %call = call i32 @check_block([2 x double]* %arraydecay)
  %tobool108 = icmp ne i32 %call, 0
  br i1 %tobool108, label %if.then109, label %if.else

if.then109:                                       ; preds = %if.end
  %64 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %64, i32 0, i32 2
  store i32 1, i32* %refine, align 8
  br label %if.end174

if.else:                                          ; preds = %if.end
  %65 = load i32, i32* @refine_ghost, align 4
  %tobool110 = icmp ne i32 %65, 0
  br i1 %tobool110, label %land.lhs.true, label %if.end173

land.lhs.true:                                    ; preds = %if.else
  %66 = load %struct.block*, %struct.block** %bp, align 8
  %level111 = getelementptr inbounds %struct.block, %struct.block* %66, i32 0, i32 1
  %67 = load i32, i32* %level111, align 4
  %tobool112 = icmp ne i32 %67, 0
  br i1 %tobool112, label %if.then113, label %if.end173

if.then113:                                       ; preds = %land.lhs.true
  %68 = load i32*, i32** @p2, align 8
  %69 = load i32, i32* @num_refine, align 4
  %70 = load %struct.block*, %struct.block** %bp, align 8
  %level114 = getelementptr inbounds %struct.block, %struct.block* %70, i32 0, i32 1
  %71 = load i32, i32* %level114, align 4
  %sub115 = sub nsw i32 %69, %71
  %add116 = add nsw i32 %sub115, 1
  %idxprom117 = sext i32 %add116 to i64
  %arrayidx118 = getelementptr inbounds i32, i32* %68, i64 %idxprom117
  %72 = load i32, i32* %arrayidx118, align 4
  store i32 %72, i32* %sz, align 4
  %73 = load i32, i32* %sz, align 4
  %conv119 = sitofp i32 %73 to double
  %74 = load i32, i32* @x_block_size, align 4
  %conv120 = sitofp i32 %74 to double
  %div121 = fdiv double %conv119, %conv120
  %75 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv122 = sitofp i32 %75 to double
  %div123 = fdiv double %div121, %conv122
  %arrayidx124 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx125 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx124, i64 0, i64 0
  %76 = load double, double* %arrayidx125, align 16
  %sub126 = fsub double %76, %div123
  store double %sub126, double* %arrayidx125, align 16
  %77 = load i32, i32* %sz, align 4
  %conv127 = sitofp i32 %77 to double
  %78 = load i32, i32* @x_block_size, align 4
  %conv128 = sitofp i32 %78 to double
  %div129 = fdiv double %conv127, %conv128
  %79 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %conv130 = sitofp i32 %79 to double
  %div131 = fdiv double %div129, %conv130
  %arrayidx132 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %arrayidx133 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx132, i64 0, i64 1
  %80 = load double, double* %arrayidx133, align 8
  %add134 = fadd double %80, %div131
  store double %add134, double* %arrayidx133, align 8
  %81 = load i32, i32* %sz, align 4
  %conv135 = sitofp i32 %81 to double
  %82 = load i32, i32* @y_block_size, align 4
  %conv136 = sitofp i32 %82 to double
  %div137 = fdiv double %conv135, %conv136
  %83 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv138 = sitofp i32 %83 to double
  %div139 = fdiv double %div137, %conv138
  %arrayidx140 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx141 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx140, i64 0, i64 0
  %84 = load double, double* %arrayidx141, align 16
  %sub142 = fsub double %84, %div139
  store double %sub142, double* %arrayidx141, align 16
  %85 = load i32, i32* %sz, align 4
  %conv143 = sitofp i32 %85 to double
  %86 = load i32, i32* @y_block_size, align 4
  %conv144 = sitofp i32 %86 to double
  %div145 = fdiv double %conv143, %conv144
  %87 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %conv146 = sitofp i32 %87 to double
  %div147 = fdiv double %div145, %conv146
  %arrayidx148 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 1
  %arrayidx149 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx148, i64 0, i64 1
  %88 = load double, double* %arrayidx149, align 8
  %add150 = fadd double %88, %div147
  store double %add150, double* %arrayidx149, align 8
  %89 = load i32, i32* %sz, align 4
  %conv151 = sitofp i32 %89 to double
  %90 = load i32, i32* @z_block_size, align 4
  %conv152 = sitofp i32 %90 to double
  %div153 = fdiv double %conv151, %conv152
  %91 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv154 = sitofp i32 %91 to double
  %div155 = fdiv double %div153, %conv154
  %arrayidx156 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx157 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx156, i64 0, i64 0
  %92 = load double, double* %arrayidx157, align 16
  %sub158 = fsub double %92, %div155
  store double %sub158, double* %arrayidx157, align 16
  %93 = load i32, i32* %sz, align 4
  %conv159 = sitofp i32 %93 to double
  %94 = load i32, i32* @z_block_size, align 4
  %conv160 = sitofp i32 %94 to double
  %div161 = fdiv double %conv159, %conv160
  %95 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %conv162 = sitofp i32 %95 to double
  %div163 = fdiv double %div161, %conv162
  %arrayidx164 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 2
  %arrayidx165 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx164, i64 0, i64 1
  %96 = load double, double* %arrayidx165, align 8
  %add166 = fadd double %96, %div163
  store double %add166, double* %arrayidx165, align 8
  %arraydecay167 = getelementptr inbounds [3 x [2 x double]], [3 x [2 x double]]* %cor, i64 0, i64 0
  %call168 = call i32 @check_block([2 x double]* %arraydecay167)
  %tobool169 = icmp ne i32 %call168, 0
  br i1 %tobool169, label %if.then170, label %if.end172

if.then170:                                       ; preds = %if.then113
  %97 = load %struct.block*, %struct.block** %bp, align 8
  %refine171 = getelementptr inbounds %struct.block, %struct.block* %97, i32 0, i32 2
  store i32 0, i32* %refine171, align 8
  br label %if.end172

if.end172:                                        ; preds = %if.then170, %if.then113
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %land.lhs.true, %if.else
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then109
  %98 = load %struct.block*, %struct.block** %bp, align 8
  %level175 = getelementptr inbounds %struct.block, %struct.block* %98, i32 0, i32 1
  %99 = load i32, i32* %level175, align 4
  %100 = load i32, i32* @num_refine, align 4
  %cmp176 = icmp eq i32 %99, %100
  br i1 %cmp176, label %land.lhs.true178, label %lor.lhs.false

land.lhs.true178:                                 ; preds = %if.end174
  %101 = load %struct.block*, %struct.block** %bp, align 8
  %refine179 = getelementptr inbounds %struct.block, %struct.block* %101, i32 0, i32 2
  %102 = load i32, i32* %refine179, align 8
  %cmp180 = icmp eq i32 %102, 1
  br i1 %cmp180, label %if.then184, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true178, %if.end174
  %103 = load %struct.block*, %struct.block** %bp, align 8
  %refine182 = getelementptr inbounds %struct.block, %struct.block* %103, i32 0, i32 2
  %104 = load i32, i32* %refine182, align 8
  %tobool183 = icmp ne i32 %104, 0
  br i1 %tobool183, label %if.end228, label %if.then184

if.then184:                                       ; preds = %lor.lhs.false, %land.lhs.true178
  %105 = load %struct.block*, %struct.block** %bp, align 8
  %refine185 = getelementptr inbounds %struct.block, %struct.block* %105, i32 0, i32 2
  store i32 0, i32* %refine185, align 8
  %106 = load %struct.block*, %struct.block** %bp, align 8
  %parent = getelementptr inbounds %struct.block, %struct.block* %106, i32 0, i32 4
  %107 = load i32, i32* %parent, align 8
  %cmp186 = icmp ne i32 %107, -1
  br i1 %cmp186, label %land.lhs.true188, label %if.end227

land.lhs.true188:                                 ; preds = %if.then184
  %108 = load %struct.block*, %struct.block** %bp, align 8
  %parent_node = getelementptr inbounds %struct.block, %struct.block* %108, i32 0, i32 5
  %109 = load i32, i32* %parent_node, align 4
  %110 = load i32, i32* @my_pe, align 4
  %cmp189 = icmp eq i32 %109, %110
  br i1 %cmp189, label %if.then191, label %if.end227

if.then191:                                       ; preds = %land.lhs.true188
  %111 = load %struct.parent*, %struct.parent** @parents, align 8
  %112 = load %struct.block*, %struct.block** %bp, align 8
  %parent192 = getelementptr inbounds %struct.block, %struct.block* %112, i32 0, i32 4
  %113 = load i32, i32* %parent192, align 8
  %idxprom193 = sext i32 %113 to i64
  %arrayidx194 = getelementptr inbounds %struct.parent, %struct.parent* %111, i64 %idxprom193
  store %struct.parent* %arrayidx194, %struct.parent** %pp, align 8
  %114 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine195 = getelementptr inbounds %struct.parent, %struct.parent* %114, i32 0, i32 5
  store i32 0, i32* %refine195, align 4
  store i32 0, i32* %c, align 4
  br label %for.cond196

for.cond196:                                      ; preds = %for.inc, %if.then191
  %115 = load i32, i32* %c, align 4
  %cmp197 = icmp slt i32 %115, 8
  br i1 %cmp197, label %for.body199, label %for.end

for.body199:                                      ; preds = %for.cond196
  %116 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node = getelementptr inbounds %struct.parent, %struct.parent* %116, i32 0, i32 7
  %117 = load i32, i32* %c, align 4
  %idxprom200 = sext i32 %117 to i64
  %arrayidx201 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node, i64 0, i64 %idxprom200
  %118 = load i32, i32* %arrayidx201, align 4
  %119 = load i32, i32* @my_pe, align 4
  %cmp202 = icmp eq i32 %118, %119
  br i1 %cmp202, label %land.lhs.true204, label %if.end226

land.lhs.true204:                                 ; preds = %for.body199
  %120 = load %struct.parent*, %struct.parent** %pp, align 8
  %child = getelementptr inbounds %struct.parent, %struct.parent* %120, i32 0, i32 6
  %121 = load i32, i32* %c, align 4
  %idxprom205 = sext i32 %121 to i64
  %arrayidx206 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom205
  %122 = load i32, i32* %arrayidx206, align 4
  %cmp207 = icmp sge i32 %122, 0
  br i1 %cmp207, label %if.then209, label %if.end226

if.then209:                                       ; preds = %land.lhs.true204
  %123 = load %struct.block*, %struct.block** @blocks, align 8
  %124 = load %struct.parent*, %struct.parent** %pp, align 8
  %child210 = getelementptr inbounds %struct.parent, %struct.parent* %124, i32 0, i32 6
  %125 = load i32, i32* %c, align 4
  %idxprom211 = sext i32 %125 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %child210, i64 0, i64 %idxprom211
  %126 = load i32, i32* %arrayidx212, align 4
  %idxprom213 = sext i32 %126 to i64
  %arrayidx214 = getelementptr inbounds %struct.block, %struct.block* %123, i64 %idxprom213
  %refine215 = getelementptr inbounds %struct.block, %struct.block* %arrayidx214, i32 0, i32 2
  %127 = load i32, i32* %refine215, align 8
  %cmp216 = icmp eq i32 %127, -1
  br i1 %cmp216, label %if.then218, label %if.end225

if.then218:                                       ; preds = %if.then209
  %128 = load %struct.block*, %struct.block** @blocks, align 8
  %129 = load %struct.parent*, %struct.parent** %pp, align 8
  %child219 = getelementptr inbounds %struct.parent, %struct.parent* %129, i32 0, i32 6
  %130 = load i32, i32* %c, align 4
  %idxprom220 = sext i32 %130 to i64
  %arrayidx221 = getelementptr inbounds [8 x i32], [8 x i32]* %child219, i64 0, i64 %idxprom220
  %131 = load i32, i32* %arrayidx221, align 4
  %idxprom222 = sext i32 %131 to i64
  %arrayidx223 = getelementptr inbounds %struct.block, %struct.block* %128, i64 %idxprom222
  %refine224 = getelementptr inbounds %struct.block, %struct.block* %arrayidx223, i32 0, i32 2
  store i32 0, i32* %refine224, align 8
  br label %if.end225

if.end225:                                        ; preds = %if.then218, %if.then209
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %land.lhs.true204, %for.body199
  br label %for.inc

for.inc:                                          ; preds = %if.end226
  %132 = load i32, i32* %c, align 4
  %inc = add nsw i32 %132, 1
  store i32 %inc, i32* %c, align 4
  br label %for.cond196

for.end:                                          ; preds = %for.cond196
  br label %if.end227

if.end227:                                        ; preds = %for.end, %land.lhs.true188, %if.then184
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %lor.lhs.false
  %133 = load %struct.block*, %struct.block** %bp, align 8
  %level229 = getelementptr inbounds %struct.block, %struct.block* %133, i32 0, i32 1
  %134 = load i32, i32* %level229, align 4
  %tobool230 = icmp ne i32 %134, 0
  br i1 %tobool230, label %if.end237, label %land.lhs.true231

land.lhs.true231:                                 ; preds = %if.end228
  %135 = load %struct.block*, %struct.block** %bp, align 8
  %refine232 = getelementptr inbounds %struct.block, %struct.block* %135, i32 0, i32 2
  %136 = load i32, i32* %refine232, align 8
  %cmp233 = icmp eq i32 %136, -1
  br i1 %cmp233, label %if.then235, label %if.end237

if.then235:                                       ; preds = %land.lhs.true231
  %137 = load %struct.block*, %struct.block** %bp, align 8
  %refine236 = getelementptr inbounds %struct.block, %struct.block* %137, i32 0, i32 2
  store i32 0, i32* %refine236, align 8
  br label %if.end237

if.end237:                                        ; preds = %if.then235, %land.lhs.true231, %if.end228
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %for.body
  br label %for.inc239

for.inc239:                                       ; preds = %if.end238
  %138 = load i32, i32* %in, align 4
  %inc240 = add nsw i32 %138, 1
  store i32 %inc240, i32* %in, align 4
  br label %for.cond

for.end241:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @check_block([2 x double]* %cor) #0 {
entry:
  %cor.addr = alloca [2 x double]*, align 8
  %o = alloca i32, align 4
  %tmp = alloca i32, align 4
  %ca = alloca i32, align 4
  %c1 = alloca i32, align 4
  %c2 = alloca i32, align 4
  %intersect = alloca i32, align 4
  %xc = alloca i32, align 4
  %xv = alloca i32, align 4
  %yc = alloca i32, align 4
  %yv = alloca i32, align 4
  %zc = alloca i32, align 4
  %zv = alloca i32, align 4
  %op = alloca %struct.object*, align 8
  store [2 x double]* %cor, [2 x double]** %cor.addr, align 8
  store i32 0, i32* %intersect, align 4
  store i32 0, i32* %o, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %o, align 4
  %1 = load i32, i32* @num_objects, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %struct.object*, %struct.object** @objects, align 8
  %3 = load i32, i32* %o, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds %struct.object, %struct.object* %2, i64 %idxprom
  store %struct.object* %arrayidx, %struct.object** %op, align 8
  %4 = load i32, i32* %intersect, align 4
  %cmp1 = icmp sgt i32 %4, 0
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.object*, %struct.object** %op, align 8
  %size = getelementptr inbounds %struct.object, %struct.object* %5, i32 0, i32 6
  %arrayidx2 = getelementptr inbounds [3 x double], [3 x double]* %size, i64 0, i64 0
  %6 = load double, double* %arrayidx2, align 8
  %cmp3 = fcmp olt double %6, 0.000000e+00
  br i1 %cmp3, label %if.then, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.object*, %struct.object** %op, align 8
  %size5 = getelementptr inbounds %struct.object, %struct.object* %7, i32 0, i32 6
  %arrayidx6 = getelementptr inbounds [3 x double], [3 x double]* %size5, i64 0, i64 1
  %8 = load double, double* %arrayidx6, align 8
  %cmp7 = fcmp olt double %8, 0.000000e+00
  br i1 %cmp7, label %if.then, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %9 = load %struct.object*, %struct.object** %op, align 8
  %size9 = getelementptr inbounds %struct.object, %struct.object* %9, i32 0, i32 6
  %arrayidx10 = getelementptr inbounds [3 x double], [3 x double]* %size9, i64 0, i64 2
  %10 = load double, double* %arrayidx10, align 8
  %cmp11 = fcmp olt double %10, 0.000000e+00
  br i1 %cmp11, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  br label %if.end2378

if.else:                                          ; preds = %lor.lhs.false8
  %11 = load %struct.object*, %struct.object** %op, align 8
  %type = getelementptr inbounds %struct.object, %struct.object* %11, i32 0, i32 0
  %12 = load i32, i32* %type, align 8
  %cmp12 = icmp eq i32 %12, 0
  br i1 %cmp12, label %if.then13, label %if.else235

if.then13:                                        ; preds = %if.else
  %13 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx14 = getelementptr inbounds [2 x double], [2 x double]* %13, i64 0
  %arrayidx15 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx14, i64 0, i64 1
  %14 = load double, double* %arrayidx15, align 8
  %15 = load %struct.object*, %struct.object** %op, align 8
  %cen = getelementptr inbounds %struct.object, %struct.object* %15, i32 0, i32 2
  %arrayidx16 = getelementptr inbounds [3 x double], [3 x double]* %cen, i64 0, i64 0
  %16 = load double, double* %arrayidx16, align 8
  %17 = load %struct.object*, %struct.object** %op, align 8
  %size17 = getelementptr inbounds %struct.object, %struct.object* %17, i32 0, i32 6
  %arrayidx18 = getelementptr inbounds [3 x double], [3 x double]* %size17, i64 0, i64 0
  %18 = load double, double* %arrayidx18, align 8
  %sub = fsub double %16, %18
  %cmp19 = fcmp ogt double %14, %sub
  br i1 %cmp19, label %land.lhs.true, label %if.end234

land.lhs.true:                                    ; preds = %if.then13
  %19 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx20 = getelementptr inbounds [2 x double], [2 x double]* %19, i64 0
  %arrayidx21 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx20, i64 0, i64 0
  %20 = load double, double* %arrayidx21, align 8
  %21 = load %struct.object*, %struct.object** %op, align 8
  %cen22 = getelementptr inbounds %struct.object, %struct.object* %21, i32 0, i32 2
  %arrayidx23 = getelementptr inbounds [3 x double], [3 x double]* %cen22, i64 0, i64 0
  %22 = load double, double* %arrayidx23, align 8
  %23 = load %struct.object*, %struct.object** %op, align 8
  %size24 = getelementptr inbounds %struct.object, %struct.object* %23, i32 0, i32 6
  %arrayidx25 = getelementptr inbounds [3 x double], [3 x double]* %size24, i64 0, i64 0
  %24 = load double, double* %arrayidx25, align 8
  %add = fadd double %22, %24
  %cmp26 = fcmp olt double %20, %add
  br i1 %cmp26, label %if.then27, label %if.end234

if.then27:                                        ; preds = %land.lhs.true
  %25 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx28 = getelementptr inbounds [2 x double], [2 x double]* %25, i64 0
  %arrayidx29 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx28, i64 0, i64 0
  %26 = load double, double* %arrayidx29, align 8
  %27 = load %struct.object*, %struct.object** %op, align 8
  %cen30 = getelementptr inbounds %struct.object, %struct.object* %27, i32 0, i32 2
  %arrayidx31 = getelementptr inbounds [3 x double], [3 x double]* %cen30, i64 0, i64 0
  %28 = load double, double* %arrayidx31, align 8
  %29 = load %struct.object*, %struct.object** %op, align 8
  %size32 = getelementptr inbounds %struct.object, %struct.object* %29, i32 0, i32 6
  %arrayidx33 = getelementptr inbounds [3 x double], [3 x double]* %size32, i64 0, i64 0
  %30 = load double, double* %arrayidx33, align 8
  %sub34 = fsub double %28, %30
  %cmp35 = fcmp olt double %26, %sub34
  br i1 %cmp35, label %land.lhs.true36, label %lor.lhs.false45

land.lhs.true36:                                  ; preds = %if.then27
  %31 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx37 = getelementptr inbounds [2 x double], [2 x double]* %31, i64 0
  %arrayidx38 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx37, i64 0, i64 1
  %32 = load double, double* %arrayidx38, align 8
  %33 = load %struct.object*, %struct.object** %op, align 8
  %cen39 = getelementptr inbounds %struct.object, %struct.object* %33, i32 0, i32 2
  %arrayidx40 = getelementptr inbounds [3 x double], [3 x double]* %cen39, i64 0, i64 0
  %34 = load double, double* %arrayidx40, align 8
  %35 = load %struct.object*, %struct.object** %op, align 8
  %size41 = getelementptr inbounds %struct.object, %struct.object* %35, i32 0, i32 6
  %arrayidx42 = getelementptr inbounds [3 x double], [3 x double]* %size41, i64 0, i64 0
  %36 = load double, double* %arrayidx42, align 8
  %add43 = fadd double %34, %36
  %cmp44 = fcmp olt double %32, %add43
  br i1 %cmp44, label %if.then63, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %land.lhs.true36, %if.then27
  %37 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx46 = getelementptr inbounds [2 x double], [2 x double]* %37, i64 0
  %arrayidx47 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx46, i64 0, i64 0
  %38 = load double, double* %arrayidx47, align 8
  %39 = load %struct.object*, %struct.object** %op, align 8
  %cen48 = getelementptr inbounds %struct.object, %struct.object* %39, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds [3 x double], [3 x double]* %cen48, i64 0, i64 0
  %40 = load double, double* %arrayidx49, align 8
  %41 = load %struct.object*, %struct.object** %op, align 8
  %size50 = getelementptr inbounds %struct.object, %struct.object* %41, i32 0, i32 6
  %arrayidx51 = getelementptr inbounds [3 x double], [3 x double]* %size50, i64 0, i64 0
  %42 = load double, double* %arrayidx51, align 8
  %sub52 = fsub double %40, %42
  %cmp53 = fcmp ogt double %38, %sub52
  br i1 %cmp53, label %land.lhs.true54, label %if.else100

land.lhs.true54:                                  ; preds = %lor.lhs.false45
  %43 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx55 = getelementptr inbounds [2 x double], [2 x double]* %43, i64 0
  %arrayidx56 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx55, i64 0, i64 1
  %44 = load double, double* %arrayidx56, align 8
  %45 = load %struct.object*, %struct.object** %op, align 8
  %cen57 = getelementptr inbounds %struct.object, %struct.object* %45, i32 0, i32 2
  %arrayidx58 = getelementptr inbounds [3 x double], [3 x double]* %cen57, i64 0, i64 0
  %46 = load double, double* %arrayidx58, align 8
  %47 = load %struct.object*, %struct.object** %op, align 8
  %size59 = getelementptr inbounds %struct.object, %struct.object* %47, i32 0, i32 6
  %arrayidx60 = getelementptr inbounds [3 x double], [3 x double]* %size59, i64 0, i64 0
  %48 = load double, double* %arrayidx60, align 8
  %add61 = fadd double %46, %48
  %cmp62 = fcmp ogt double %44, %add61
  br i1 %cmp62, label %if.then63, label %if.else100

if.then63:                                        ; preds = %land.lhs.true54, %land.lhs.true36
  %49 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx64 = getelementptr inbounds [2 x double], [2 x double]* %49, i64 1
  %arrayidx65 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx64, i64 0, i64 1
  %50 = load double, double* %arrayidx65, align 8
  %51 = load %struct.object*, %struct.object** %op, align 8
  %cen66 = getelementptr inbounds %struct.object, %struct.object* %51, i32 0, i32 2
  %arrayidx67 = getelementptr inbounds [3 x double], [3 x double]* %cen66, i64 0, i64 1
  %52 = load double, double* %arrayidx67, align 8
  %53 = load %struct.object*, %struct.object** %op, align 8
  %size68 = getelementptr inbounds %struct.object, %struct.object* %53, i32 0, i32 6
  %arrayidx69 = getelementptr inbounds [3 x double], [3 x double]* %size68, i64 0, i64 1
  %54 = load double, double* %arrayidx69, align 8
  %sub70 = fsub double %52, %54
  %cmp71 = fcmp ogt double %50, %sub70
  br i1 %cmp71, label %land.lhs.true72, label %if.end

land.lhs.true72:                                  ; preds = %if.then63
  %55 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx73 = getelementptr inbounds [2 x double], [2 x double]* %55, i64 1
  %arrayidx74 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx73, i64 0, i64 0
  %56 = load double, double* %arrayidx74, align 8
  %57 = load %struct.object*, %struct.object** %op, align 8
  %cen75 = getelementptr inbounds %struct.object, %struct.object* %57, i32 0, i32 2
  %arrayidx76 = getelementptr inbounds [3 x double], [3 x double]* %cen75, i64 0, i64 1
  %58 = load double, double* %arrayidx76, align 8
  %59 = load %struct.object*, %struct.object** %op, align 8
  %size77 = getelementptr inbounds %struct.object, %struct.object* %59, i32 0, i32 6
  %arrayidx78 = getelementptr inbounds [3 x double], [3 x double]* %size77, i64 0, i64 1
  %60 = load double, double* %arrayidx78, align 8
  %add79 = fadd double %58, %60
  %cmp80 = fcmp olt double %56, %add79
  br i1 %cmp80, label %land.lhs.true81, label %if.end

land.lhs.true81:                                  ; preds = %land.lhs.true72
  %61 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx82 = getelementptr inbounds [2 x double], [2 x double]* %61, i64 2
  %arrayidx83 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx82, i64 0, i64 1
  %62 = load double, double* %arrayidx83, align 8
  %63 = load %struct.object*, %struct.object** %op, align 8
  %cen84 = getelementptr inbounds %struct.object, %struct.object* %63, i32 0, i32 2
  %arrayidx85 = getelementptr inbounds [3 x double], [3 x double]* %cen84, i64 0, i64 2
  %64 = load double, double* %arrayidx85, align 8
  %65 = load %struct.object*, %struct.object** %op, align 8
  %size86 = getelementptr inbounds %struct.object, %struct.object* %65, i32 0, i32 6
  %arrayidx87 = getelementptr inbounds [3 x double], [3 x double]* %size86, i64 0, i64 2
  %66 = load double, double* %arrayidx87, align 8
  %sub88 = fsub double %64, %66
  %cmp89 = fcmp ogt double %62, %sub88
  br i1 %cmp89, label %land.lhs.true90, label %if.end

land.lhs.true90:                                  ; preds = %land.lhs.true81
  %67 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx91 = getelementptr inbounds [2 x double], [2 x double]* %67, i64 2
  %arrayidx92 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx91, i64 0, i64 0
  %68 = load double, double* %arrayidx92, align 8
  %69 = load %struct.object*, %struct.object** %op, align 8
  %cen93 = getelementptr inbounds %struct.object, %struct.object* %69, i32 0, i32 2
  %arrayidx94 = getelementptr inbounds [3 x double], [3 x double]* %cen93, i64 0, i64 2
  %70 = load double, double* %arrayidx94, align 8
  %71 = load %struct.object*, %struct.object** %op, align 8
  %size95 = getelementptr inbounds %struct.object, %struct.object* %71, i32 0, i32 6
  %arrayidx96 = getelementptr inbounds [3 x double], [3 x double]* %size95, i64 0, i64 2
  %72 = load double, double* %arrayidx96, align 8
  %add97 = fadd double %70, %72
  %cmp98 = fcmp olt double %68, %add97
  br i1 %cmp98, label %if.then99, label %if.end

if.then99:                                        ; preds = %land.lhs.true90
  store i32 1, i32* %intersect, align 4
  br label %if.end

if.end:                                           ; preds = %if.then99, %land.lhs.true90, %land.lhs.true81, %land.lhs.true72, %if.then63
  br label %if.end233

if.else100:                                       ; preds = %land.lhs.true54, %lor.lhs.false45
  %73 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx101 = getelementptr inbounds [2 x double], [2 x double]* %73, i64 1
  %arrayidx102 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx101, i64 0, i64 1
  %74 = load double, double* %arrayidx102, align 8
  %75 = load %struct.object*, %struct.object** %op, align 8
  %cen103 = getelementptr inbounds %struct.object, %struct.object* %75, i32 0, i32 2
  %arrayidx104 = getelementptr inbounds [3 x double], [3 x double]* %cen103, i64 0, i64 1
  %76 = load double, double* %arrayidx104, align 8
  %77 = load %struct.object*, %struct.object** %op, align 8
  %size105 = getelementptr inbounds %struct.object, %struct.object* %77, i32 0, i32 6
  %arrayidx106 = getelementptr inbounds [3 x double], [3 x double]* %size105, i64 0, i64 1
  %78 = load double, double* %arrayidx106, align 8
  %sub107 = fsub double %76, %78
  %cmp108 = fcmp ogt double %74, %sub107
  br i1 %cmp108, label %land.lhs.true109, label %if.else175

land.lhs.true109:                                 ; preds = %if.else100
  %79 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx110 = getelementptr inbounds [2 x double], [2 x double]* %79, i64 1
  %arrayidx111 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx110, i64 0, i64 0
  %80 = load double, double* %arrayidx111, align 8
  %81 = load %struct.object*, %struct.object** %op, align 8
  %cen112 = getelementptr inbounds %struct.object, %struct.object* %81, i32 0, i32 2
  %arrayidx113 = getelementptr inbounds [3 x double], [3 x double]* %cen112, i64 0, i64 1
  %82 = load double, double* %arrayidx113, align 8
  %83 = load %struct.object*, %struct.object** %op, align 8
  %size114 = getelementptr inbounds %struct.object, %struct.object* %83, i32 0, i32 6
  %arrayidx115 = getelementptr inbounds [3 x double], [3 x double]* %size114, i64 0, i64 1
  %84 = load double, double* %arrayidx115, align 8
  %add116 = fadd double %82, %84
  %cmp117 = fcmp olt double %80, %add116
  br i1 %cmp117, label %if.then118, label %if.else175

if.then118:                                       ; preds = %land.lhs.true109
  %85 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx119 = getelementptr inbounds [2 x double], [2 x double]* %85, i64 1
  %arrayidx120 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx119, i64 0, i64 0
  %86 = load double, double* %arrayidx120, align 8
  %87 = load %struct.object*, %struct.object** %op, align 8
  %cen121 = getelementptr inbounds %struct.object, %struct.object* %87, i32 0, i32 2
  %arrayidx122 = getelementptr inbounds [3 x double], [3 x double]* %cen121, i64 0, i64 1
  %88 = load double, double* %arrayidx122, align 8
  %89 = load %struct.object*, %struct.object** %op, align 8
  %size123 = getelementptr inbounds %struct.object, %struct.object* %89, i32 0, i32 6
  %arrayidx124 = getelementptr inbounds [3 x double], [3 x double]* %size123, i64 0, i64 1
  %90 = load double, double* %arrayidx124, align 8
  %sub125 = fsub double %88, %90
  %cmp126 = fcmp olt double %86, %sub125
  br i1 %cmp126, label %land.lhs.true127, label %lor.lhs.false136

land.lhs.true127:                                 ; preds = %if.then118
  %91 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx128 = getelementptr inbounds [2 x double], [2 x double]* %91, i64 1
  %arrayidx129 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx128, i64 0, i64 1
  %92 = load double, double* %arrayidx129, align 8
  %93 = load %struct.object*, %struct.object** %op, align 8
  %cen130 = getelementptr inbounds %struct.object, %struct.object* %93, i32 0, i32 2
  %arrayidx131 = getelementptr inbounds [3 x double], [3 x double]* %cen130, i64 0, i64 1
  %94 = load double, double* %arrayidx131, align 8
  %95 = load %struct.object*, %struct.object** %op, align 8
  %size132 = getelementptr inbounds %struct.object, %struct.object* %95, i32 0, i32 6
  %arrayidx133 = getelementptr inbounds [3 x double], [3 x double]* %size132, i64 0, i64 1
  %96 = load double, double* %arrayidx133, align 8
  %add134 = fadd double %94, %96
  %cmp135 = fcmp olt double %92, %add134
  br i1 %cmp135, label %if.then154, label %lor.lhs.false136

lor.lhs.false136:                                 ; preds = %land.lhs.true127, %if.then118
  %97 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx137 = getelementptr inbounds [2 x double], [2 x double]* %97, i64 1
  %arrayidx138 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx137, i64 0, i64 0
  %98 = load double, double* %arrayidx138, align 8
  %99 = load %struct.object*, %struct.object** %op, align 8
  %cen139 = getelementptr inbounds %struct.object, %struct.object* %99, i32 0, i32 2
  %arrayidx140 = getelementptr inbounds [3 x double], [3 x double]* %cen139, i64 0, i64 1
  %100 = load double, double* %arrayidx140, align 8
  %101 = load %struct.object*, %struct.object** %op, align 8
  %size141 = getelementptr inbounds %struct.object, %struct.object* %101, i32 0, i32 6
  %arrayidx142 = getelementptr inbounds [3 x double], [3 x double]* %size141, i64 0, i64 1
  %102 = load double, double* %arrayidx142, align 8
  %sub143 = fsub double %100, %102
  %cmp144 = fcmp ogt double %98, %sub143
  br i1 %cmp144, label %land.lhs.true145, label %if.end174

land.lhs.true145:                                 ; preds = %lor.lhs.false136
  %103 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx146 = getelementptr inbounds [2 x double], [2 x double]* %103, i64 1
  %arrayidx147 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx146, i64 0, i64 1
  %104 = load double, double* %arrayidx147, align 8
  %105 = load %struct.object*, %struct.object** %op, align 8
  %cen148 = getelementptr inbounds %struct.object, %struct.object* %105, i32 0, i32 2
  %arrayidx149 = getelementptr inbounds [3 x double], [3 x double]* %cen148, i64 0, i64 1
  %106 = load double, double* %arrayidx149, align 8
  %107 = load %struct.object*, %struct.object** %op, align 8
  %size150 = getelementptr inbounds %struct.object, %struct.object* %107, i32 0, i32 6
  %arrayidx151 = getelementptr inbounds [3 x double], [3 x double]* %size150, i64 0, i64 1
  %108 = load double, double* %arrayidx151, align 8
  %add152 = fadd double %106, %108
  %cmp153 = fcmp ogt double %104, %add152
  br i1 %cmp153, label %if.then154, label %if.end174

if.then154:                                       ; preds = %land.lhs.true145, %land.lhs.true127
  %109 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx155 = getelementptr inbounds [2 x double], [2 x double]* %109, i64 2
  %arrayidx156 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx155, i64 0, i64 1
  %110 = load double, double* %arrayidx156, align 8
  %111 = load %struct.object*, %struct.object** %op, align 8
  %cen157 = getelementptr inbounds %struct.object, %struct.object* %111, i32 0, i32 2
  %arrayidx158 = getelementptr inbounds [3 x double], [3 x double]* %cen157, i64 0, i64 2
  %112 = load double, double* %arrayidx158, align 8
  %113 = load %struct.object*, %struct.object** %op, align 8
  %size159 = getelementptr inbounds %struct.object, %struct.object* %113, i32 0, i32 6
  %arrayidx160 = getelementptr inbounds [3 x double], [3 x double]* %size159, i64 0, i64 2
  %114 = load double, double* %arrayidx160, align 8
  %sub161 = fsub double %112, %114
  %cmp162 = fcmp ogt double %110, %sub161
  br i1 %cmp162, label %land.lhs.true163, label %if.end173

land.lhs.true163:                                 ; preds = %if.then154
  %115 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx164 = getelementptr inbounds [2 x double], [2 x double]* %115, i64 2
  %arrayidx165 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx164, i64 0, i64 0
  %116 = load double, double* %arrayidx165, align 8
  %117 = load %struct.object*, %struct.object** %op, align 8
  %cen166 = getelementptr inbounds %struct.object, %struct.object* %117, i32 0, i32 2
  %arrayidx167 = getelementptr inbounds [3 x double], [3 x double]* %cen166, i64 0, i64 2
  %118 = load double, double* %arrayidx167, align 8
  %119 = load %struct.object*, %struct.object** %op, align 8
  %size168 = getelementptr inbounds %struct.object, %struct.object* %119, i32 0, i32 6
  %arrayidx169 = getelementptr inbounds [3 x double], [3 x double]* %size168, i64 0, i64 2
  %120 = load double, double* %arrayidx169, align 8
  %add170 = fadd double %118, %120
  %cmp171 = fcmp olt double %116, %add170
  br i1 %cmp171, label %if.then172, label %if.end173

if.then172:                                       ; preds = %land.lhs.true163
  store i32 1, i32* %intersect, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.then172, %land.lhs.true163, %if.then154
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %land.lhs.true145, %lor.lhs.false136
  br label %if.end232

if.else175:                                       ; preds = %land.lhs.true109, %if.else100
  %121 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx176 = getelementptr inbounds [2 x double], [2 x double]* %121, i64 2
  %arrayidx177 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx176, i64 0, i64 1
  %122 = load double, double* %arrayidx177, align 8
  %123 = load %struct.object*, %struct.object** %op, align 8
  %cen178 = getelementptr inbounds %struct.object, %struct.object* %123, i32 0, i32 2
  %arrayidx179 = getelementptr inbounds [3 x double], [3 x double]* %cen178, i64 0, i64 2
  %124 = load double, double* %arrayidx179, align 8
  %125 = load %struct.object*, %struct.object** %op, align 8
  %size180 = getelementptr inbounds %struct.object, %struct.object* %125, i32 0, i32 6
  %arrayidx181 = getelementptr inbounds [3 x double], [3 x double]* %size180, i64 0, i64 2
  %126 = load double, double* %arrayidx181, align 8
  %sub182 = fsub double %124, %126
  %cmp183 = fcmp ogt double %122, %sub182
  br i1 %cmp183, label %land.lhs.true184, label %if.end231

land.lhs.true184:                                 ; preds = %if.else175
  %127 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx185 = getelementptr inbounds [2 x double], [2 x double]* %127, i64 2
  %arrayidx186 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx185, i64 0, i64 0
  %128 = load double, double* %arrayidx186, align 8
  %129 = load %struct.object*, %struct.object** %op, align 8
  %cen187 = getelementptr inbounds %struct.object, %struct.object* %129, i32 0, i32 2
  %arrayidx188 = getelementptr inbounds [3 x double], [3 x double]* %cen187, i64 0, i64 2
  %130 = load double, double* %arrayidx188, align 8
  %131 = load %struct.object*, %struct.object** %op, align 8
  %size189 = getelementptr inbounds %struct.object, %struct.object* %131, i32 0, i32 6
  %arrayidx190 = getelementptr inbounds [3 x double], [3 x double]* %size189, i64 0, i64 2
  %132 = load double, double* %arrayidx190, align 8
  %add191 = fadd double %130, %132
  %cmp192 = fcmp olt double %128, %add191
  br i1 %cmp192, label %if.then193, label %if.end231

if.then193:                                       ; preds = %land.lhs.true184
  %133 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx194 = getelementptr inbounds [2 x double], [2 x double]* %133, i64 2
  %arrayidx195 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx194, i64 0, i64 0
  %134 = load double, double* %arrayidx195, align 8
  %135 = load %struct.object*, %struct.object** %op, align 8
  %cen196 = getelementptr inbounds %struct.object, %struct.object* %135, i32 0, i32 2
  %arrayidx197 = getelementptr inbounds [3 x double], [3 x double]* %cen196, i64 0, i64 2
  %136 = load double, double* %arrayidx197, align 8
  %137 = load %struct.object*, %struct.object** %op, align 8
  %size198 = getelementptr inbounds %struct.object, %struct.object* %137, i32 0, i32 6
  %arrayidx199 = getelementptr inbounds [3 x double], [3 x double]* %size198, i64 0, i64 2
  %138 = load double, double* %arrayidx199, align 8
  %sub200 = fsub double %136, %138
  %cmp201 = fcmp olt double %134, %sub200
  br i1 %cmp201, label %land.lhs.true202, label %lor.lhs.false211

land.lhs.true202:                                 ; preds = %if.then193
  %139 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx203 = getelementptr inbounds [2 x double], [2 x double]* %139, i64 2
  %arrayidx204 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx203, i64 0, i64 1
  %140 = load double, double* %arrayidx204, align 8
  %141 = load %struct.object*, %struct.object** %op, align 8
  %cen205 = getelementptr inbounds %struct.object, %struct.object* %141, i32 0, i32 2
  %arrayidx206 = getelementptr inbounds [3 x double], [3 x double]* %cen205, i64 0, i64 2
  %142 = load double, double* %arrayidx206, align 8
  %143 = load %struct.object*, %struct.object** %op, align 8
  %size207 = getelementptr inbounds %struct.object, %struct.object* %143, i32 0, i32 6
  %arrayidx208 = getelementptr inbounds [3 x double], [3 x double]* %size207, i64 0, i64 2
  %144 = load double, double* %arrayidx208, align 8
  %add209 = fadd double %142, %144
  %cmp210 = fcmp olt double %140, %add209
  br i1 %cmp210, label %if.then229, label %lor.lhs.false211

lor.lhs.false211:                                 ; preds = %land.lhs.true202, %if.then193
  %145 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx212 = getelementptr inbounds [2 x double], [2 x double]* %145, i64 2
  %arrayidx213 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx212, i64 0, i64 0
  %146 = load double, double* %arrayidx213, align 8
  %147 = load %struct.object*, %struct.object** %op, align 8
  %cen214 = getelementptr inbounds %struct.object, %struct.object* %147, i32 0, i32 2
  %arrayidx215 = getelementptr inbounds [3 x double], [3 x double]* %cen214, i64 0, i64 2
  %148 = load double, double* %arrayidx215, align 8
  %149 = load %struct.object*, %struct.object** %op, align 8
  %size216 = getelementptr inbounds %struct.object, %struct.object* %149, i32 0, i32 6
  %arrayidx217 = getelementptr inbounds [3 x double], [3 x double]* %size216, i64 0, i64 2
  %150 = load double, double* %arrayidx217, align 8
  %sub218 = fsub double %148, %150
  %cmp219 = fcmp ogt double %146, %sub218
  br i1 %cmp219, label %land.lhs.true220, label %if.end230

land.lhs.true220:                                 ; preds = %lor.lhs.false211
  %151 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx221 = getelementptr inbounds [2 x double], [2 x double]* %151, i64 2
  %arrayidx222 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx221, i64 0, i64 1
  %152 = load double, double* %arrayidx222, align 8
  %153 = load %struct.object*, %struct.object** %op, align 8
  %cen223 = getelementptr inbounds %struct.object, %struct.object* %153, i32 0, i32 2
  %arrayidx224 = getelementptr inbounds [3 x double], [3 x double]* %cen223, i64 0, i64 2
  %154 = load double, double* %arrayidx224, align 8
  %155 = load %struct.object*, %struct.object** %op, align 8
  %size225 = getelementptr inbounds %struct.object, %struct.object* %155, i32 0, i32 6
  %arrayidx226 = getelementptr inbounds [3 x double], [3 x double]* %size225, i64 0, i64 2
  %156 = load double, double* %arrayidx226, align 8
  %add227 = fadd double %154, %156
  %cmp228 = fcmp ogt double %152, %add227
  br i1 %cmp228, label %if.then229, label %if.end230

if.then229:                                       ; preds = %land.lhs.true220, %land.lhs.true202
  store i32 1, i32* %intersect, align 4
  br label %if.end230

if.end230:                                        ; preds = %if.then229, %land.lhs.true220, %lor.lhs.false211
  br label %if.end231

if.end231:                                        ; preds = %if.end230, %land.lhs.true184, %if.else175
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end174
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.end
  br label %if.end234

if.end234:                                        ; preds = %if.end233, %land.lhs.true, %if.then13
  br label %if.end2377

if.else235:                                       ; preds = %if.else
  %157 = load %struct.object*, %struct.object** %op, align 8
  %type236 = getelementptr inbounds %struct.object, %struct.object* %157, i32 0, i32 0
  %158 = load i32, i32* %type236, align 8
  %cmp237 = icmp eq i32 %158, 1
  br i1 %cmp237, label %if.then238, label %if.else294

if.then238:                                       ; preds = %if.else235
  %159 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx239 = getelementptr inbounds [2 x double], [2 x double]* %159, i64 0
  %arrayidx240 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx239, i64 0, i64 1
  %160 = load double, double* %arrayidx240, align 8
  %161 = load %struct.object*, %struct.object** %op, align 8
  %cen241 = getelementptr inbounds %struct.object, %struct.object* %161, i32 0, i32 2
  %arrayidx242 = getelementptr inbounds [3 x double], [3 x double]* %cen241, i64 0, i64 0
  %162 = load double, double* %arrayidx242, align 8
  %163 = load %struct.object*, %struct.object** %op, align 8
  %size243 = getelementptr inbounds %struct.object, %struct.object* %163, i32 0, i32 6
  %arrayidx244 = getelementptr inbounds [3 x double], [3 x double]* %size243, i64 0, i64 0
  %164 = load double, double* %arrayidx244, align 8
  %sub245 = fsub double %162, %164
  %cmp246 = fcmp ogt double %160, %sub245
  br i1 %cmp246, label %land.lhs.true247, label %if.end293

land.lhs.true247:                                 ; preds = %if.then238
  %165 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx248 = getelementptr inbounds [2 x double], [2 x double]* %165, i64 0
  %arrayidx249 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx248, i64 0, i64 0
  %166 = load double, double* %arrayidx249, align 8
  %167 = load %struct.object*, %struct.object** %op, align 8
  %cen250 = getelementptr inbounds %struct.object, %struct.object* %167, i32 0, i32 2
  %arrayidx251 = getelementptr inbounds [3 x double], [3 x double]* %cen250, i64 0, i64 0
  %168 = load double, double* %arrayidx251, align 8
  %169 = load %struct.object*, %struct.object** %op, align 8
  %size252 = getelementptr inbounds %struct.object, %struct.object* %169, i32 0, i32 6
  %arrayidx253 = getelementptr inbounds [3 x double], [3 x double]* %size252, i64 0, i64 0
  %170 = load double, double* %arrayidx253, align 8
  %add254 = fadd double %168, %170
  %cmp255 = fcmp olt double %166, %add254
  br i1 %cmp255, label %land.lhs.true256, label %if.end293

land.lhs.true256:                                 ; preds = %land.lhs.true247
  %171 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx257 = getelementptr inbounds [2 x double], [2 x double]* %171, i64 1
  %arrayidx258 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx257, i64 0, i64 1
  %172 = load double, double* %arrayidx258, align 8
  %173 = load %struct.object*, %struct.object** %op, align 8
  %cen259 = getelementptr inbounds %struct.object, %struct.object* %173, i32 0, i32 2
  %arrayidx260 = getelementptr inbounds [3 x double], [3 x double]* %cen259, i64 0, i64 1
  %174 = load double, double* %arrayidx260, align 8
  %175 = load %struct.object*, %struct.object** %op, align 8
  %size261 = getelementptr inbounds %struct.object, %struct.object* %175, i32 0, i32 6
  %arrayidx262 = getelementptr inbounds [3 x double], [3 x double]* %size261, i64 0, i64 1
  %176 = load double, double* %arrayidx262, align 8
  %sub263 = fsub double %174, %176
  %cmp264 = fcmp ogt double %172, %sub263
  br i1 %cmp264, label %land.lhs.true265, label %if.end293

land.lhs.true265:                                 ; preds = %land.lhs.true256
  %177 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx266 = getelementptr inbounds [2 x double], [2 x double]* %177, i64 1
  %arrayidx267 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx266, i64 0, i64 0
  %178 = load double, double* %arrayidx267, align 8
  %179 = load %struct.object*, %struct.object** %op, align 8
  %cen268 = getelementptr inbounds %struct.object, %struct.object* %179, i32 0, i32 2
  %arrayidx269 = getelementptr inbounds [3 x double], [3 x double]* %cen268, i64 0, i64 1
  %180 = load double, double* %arrayidx269, align 8
  %181 = load %struct.object*, %struct.object** %op, align 8
  %size270 = getelementptr inbounds %struct.object, %struct.object* %181, i32 0, i32 6
  %arrayidx271 = getelementptr inbounds [3 x double], [3 x double]* %size270, i64 0, i64 1
  %182 = load double, double* %arrayidx271, align 8
  %add272 = fadd double %180, %182
  %cmp273 = fcmp olt double %178, %add272
  br i1 %cmp273, label %land.lhs.true274, label %if.end293

land.lhs.true274:                                 ; preds = %land.lhs.true265
  %183 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx275 = getelementptr inbounds [2 x double], [2 x double]* %183, i64 2
  %arrayidx276 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx275, i64 0, i64 1
  %184 = load double, double* %arrayidx276, align 8
  %185 = load %struct.object*, %struct.object** %op, align 8
  %cen277 = getelementptr inbounds %struct.object, %struct.object* %185, i32 0, i32 2
  %arrayidx278 = getelementptr inbounds [3 x double], [3 x double]* %cen277, i64 0, i64 2
  %186 = load double, double* %arrayidx278, align 8
  %187 = load %struct.object*, %struct.object** %op, align 8
  %size279 = getelementptr inbounds %struct.object, %struct.object* %187, i32 0, i32 6
  %arrayidx280 = getelementptr inbounds [3 x double], [3 x double]* %size279, i64 0, i64 2
  %188 = load double, double* %arrayidx280, align 8
  %sub281 = fsub double %186, %188
  %cmp282 = fcmp ogt double %184, %sub281
  br i1 %cmp282, label %land.lhs.true283, label %if.end293

land.lhs.true283:                                 ; preds = %land.lhs.true274
  %189 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx284 = getelementptr inbounds [2 x double], [2 x double]* %189, i64 2
  %arrayidx285 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx284, i64 0, i64 0
  %190 = load double, double* %arrayidx285, align 8
  %191 = load %struct.object*, %struct.object** %op, align 8
  %cen286 = getelementptr inbounds %struct.object, %struct.object* %191, i32 0, i32 2
  %arrayidx287 = getelementptr inbounds [3 x double], [3 x double]* %cen286, i64 0, i64 2
  %192 = load double, double* %arrayidx287, align 8
  %193 = load %struct.object*, %struct.object** %op, align 8
  %size288 = getelementptr inbounds %struct.object, %struct.object* %193, i32 0, i32 6
  %arrayidx289 = getelementptr inbounds [3 x double], [3 x double]* %size288, i64 0, i64 2
  %194 = load double, double* %arrayidx289, align 8
  %add290 = fadd double %192, %194
  %cmp291 = fcmp olt double %190, %add290
  br i1 %cmp291, label %if.then292, label %if.end293

if.then292:                                       ; preds = %land.lhs.true283
  store i32 1, i32* %intersect, align 4
  br label %if.end293

if.end293:                                        ; preds = %if.then292, %land.lhs.true283, %land.lhs.true274, %land.lhs.true265, %land.lhs.true256, %land.lhs.true247, %if.then238
  br label %if.end2376

if.else294:                                       ; preds = %if.else235
  %195 = load %struct.object*, %struct.object** %op, align 8
  %type295 = getelementptr inbounds %struct.object, %struct.object* %195, i32 0, i32 0
  %196 = load i32, i32* %type295, align 8
  %cmp296 = icmp sge i32 %196, 2
  br i1 %cmp296, label %land.lhs.true297, label %if.else1242

land.lhs.true297:                                 ; preds = %if.else294
  %197 = load %struct.object*, %struct.object** %op, align 8
  %type298 = getelementptr inbounds %struct.object, %struct.object* %197, i32 0, i32 0
  %198 = load i32, i32* %type298, align 8
  %cmp299 = icmp sle i32 %198, 14
  br i1 %cmp299, label %land.lhs.true300, label %if.else1242

land.lhs.true300:                                 ; preds = %land.lhs.true297
  %199 = load %struct.object*, %struct.object** %op, align 8
  %type301 = getelementptr inbounds %struct.object, %struct.object* %199, i32 0, i32 0
  %200 = load i32, i32* %type301, align 8
  %rem = srem i32 %200, 2
  %tobool = icmp ne i32 %rem, 0
  br i1 %tobool, label %if.else1242, label %if.then302

if.then302:                                       ; preds = %land.lhs.true300
  %201 = load i32, i32* %intersect, align 4
  store i32 %201, i32* %tmp, align 4
  store i32 0, i32* %zc, align 4
  store i32 0, i32* %yc, align 4
  store i32 0, i32* %xc, align 4
  %202 = load %struct.object*, %struct.object** %op, align 8
  %cen303 = getelementptr inbounds %struct.object, %struct.object* %202, i32 0, i32 2
  %arrayidx304 = getelementptr inbounds [3 x double], [3 x double]* %cen303, i64 0, i64 0
  %203 = load double, double* %arrayidx304, align 8
  %204 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx305 = getelementptr inbounds [2 x double], [2 x double]* %204, i64 0
  %arrayidx306 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx305, i64 0, i64 0
  %205 = load double, double* %arrayidx306, align 8
  %cmp307 = fcmp olt double %203, %205
  br i1 %cmp307, label %if.then308, label %if.else309

if.then308:                                       ; preds = %if.then302
  store i32 0, i32* %xv, align 4
  br label %if.end329

if.else309:                                       ; preds = %if.then302
  %206 = load %struct.object*, %struct.object** %op, align 8
  %cen310 = getelementptr inbounds %struct.object, %struct.object* %206, i32 0, i32 2
  %arrayidx311 = getelementptr inbounds [3 x double], [3 x double]* %cen310, i64 0, i64 0
  %207 = load double, double* %arrayidx311, align 8
  %208 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx312 = getelementptr inbounds [2 x double], [2 x double]* %208, i64 0
  %arrayidx313 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx312, i64 0, i64 1
  %209 = load double, double* %arrayidx313, align 8
  %cmp314 = fcmp ogt double %207, %209
  br i1 %cmp314, label %if.then315, label %if.else316

if.then315:                                       ; preds = %if.else309
  store i32 1, i32* %xv, align 4
  br label %if.end328

if.else316:                                       ; preds = %if.else309
  store i32 1, i32* %xc, align 4
  %210 = load %struct.object*, %struct.object** %op, align 8
  %cen317 = getelementptr inbounds %struct.object, %struct.object* %210, i32 0, i32 2
  %arrayidx318 = getelementptr inbounds [3 x double], [3 x double]* %cen317, i64 0, i64 0
  %211 = load double, double* %arrayidx318, align 8
  %212 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx319 = getelementptr inbounds [2 x double], [2 x double]* %212, i64 0
  %arrayidx320 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx319, i64 0, i64 0
  %213 = load double, double* %arrayidx320, align 8
  %214 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx321 = getelementptr inbounds [2 x double], [2 x double]* %214, i64 0
  %arrayidx322 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx321, i64 0, i64 1
  %215 = load double, double* %arrayidx322, align 8
  %add323 = fadd double %213, %215
  %div = fdiv double %add323, 2.000000e+00
  %cmp324 = fcmp olt double %211, %div
  br i1 %cmp324, label %if.then325, label %if.else326

if.then325:                                       ; preds = %if.else316
  store i32 0, i32* %xv, align 4
  br label %if.end327

if.else326:                                       ; preds = %if.else316
  store i32 1, i32* %xv, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.else326, %if.then325
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then315
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then308
  %216 = load %struct.object*, %struct.object** %op, align 8
  %cen330 = getelementptr inbounds %struct.object, %struct.object* %216, i32 0, i32 2
  %arrayidx331 = getelementptr inbounds [3 x double], [3 x double]* %cen330, i64 0, i64 1
  %217 = load double, double* %arrayidx331, align 8
  %218 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx332 = getelementptr inbounds [2 x double], [2 x double]* %218, i64 1
  %arrayidx333 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx332, i64 0, i64 0
  %219 = load double, double* %arrayidx333, align 8
  %cmp334 = fcmp olt double %217, %219
  br i1 %cmp334, label %if.then335, label %if.else336

if.then335:                                       ; preds = %if.end329
  store i32 0, i32* %yv, align 4
  br label %if.end357

if.else336:                                       ; preds = %if.end329
  %220 = load %struct.object*, %struct.object** %op, align 8
  %cen337 = getelementptr inbounds %struct.object, %struct.object* %220, i32 0, i32 2
  %arrayidx338 = getelementptr inbounds [3 x double], [3 x double]* %cen337, i64 0, i64 1
  %221 = load double, double* %arrayidx338, align 8
  %222 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx339 = getelementptr inbounds [2 x double], [2 x double]* %222, i64 1
  %arrayidx340 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx339, i64 0, i64 1
  %223 = load double, double* %arrayidx340, align 8
  %cmp341 = fcmp ogt double %221, %223
  br i1 %cmp341, label %if.then342, label %if.else343

if.then342:                                       ; preds = %if.else336
  store i32 1, i32* %yv, align 4
  br label %if.end356

if.else343:                                       ; preds = %if.else336
  store i32 1, i32* %yc, align 4
  %224 = load %struct.object*, %struct.object** %op, align 8
  %cen344 = getelementptr inbounds %struct.object, %struct.object* %224, i32 0, i32 2
  %arrayidx345 = getelementptr inbounds [3 x double], [3 x double]* %cen344, i64 0, i64 1
  %225 = load double, double* %arrayidx345, align 8
  %226 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx346 = getelementptr inbounds [2 x double], [2 x double]* %226, i64 1
  %arrayidx347 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx346, i64 0, i64 0
  %227 = load double, double* %arrayidx347, align 8
  %228 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx348 = getelementptr inbounds [2 x double], [2 x double]* %228, i64 1
  %arrayidx349 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx348, i64 0, i64 1
  %229 = load double, double* %arrayidx349, align 8
  %add350 = fadd double %227, %229
  %div351 = fdiv double %add350, 2.000000e+00
  %cmp352 = fcmp olt double %225, %div351
  br i1 %cmp352, label %if.then353, label %if.else354

if.then353:                                       ; preds = %if.else343
  store i32 0, i32* %yv, align 4
  br label %if.end355

if.else354:                                       ; preds = %if.else343
  store i32 1, i32* %yv, align 4
  br label %if.end355

if.end355:                                        ; preds = %if.else354, %if.then353
  br label %if.end356

if.end356:                                        ; preds = %if.end355, %if.then342
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %if.then335
  %230 = load %struct.object*, %struct.object** %op, align 8
  %cen358 = getelementptr inbounds %struct.object, %struct.object* %230, i32 0, i32 2
  %arrayidx359 = getelementptr inbounds [3 x double], [3 x double]* %cen358, i64 0, i64 2
  %231 = load double, double* %arrayidx359, align 8
  %232 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx360 = getelementptr inbounds [2 x double], [2 x double]* %232, i64 2
  %arrayidx361 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx360, i64 0, i64 0
  %233 = load double, double* %arrayidx361, align 8
  %cmp362 = fcmp olt double %231, %233
  br i1 %cmp362, label %if.then363, label %if.else364

if.then363:                                       ; preds = %if.end357
  store i32 0, i32* %zv, align 4
  br label %if.end385

if.else364:                                       ; preds = %if.end357
  %234 = load %struct.object*, %struct.object** %op, align 8
  %cen365 = getelementptr inbounds %struct.object, %struct.object* %234, i32 0, i32 2
  %arrayidx366 = getelementptr inbounds [3 x double], [3 x double]* %cen365, i64 0, i64 2
  %235 = load double, double* %arrayidx366, align 8
  %236 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx367 = getelementptr inbounds [2 x double], [2 x double]* %236, i64 2
  %arrayidx368 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx367, i64 0, i64 1
  %237 = load double, double* %arrayidx368, align 8
  %cmp369 = fcmp ogt double %235, %237
  br i1 %cmp369, label %if.then370, label %if.else371

if.then370:                                       ; preds = %if.else364
  store i32 1, i32* %zv, align 4
  br label %if.end384

if.else371:                                       ; preds = %if.else364
  store i32 1, i32* %zc, align 4
  %238 = load %struct.object*, %struct.object** %op, align 8
  %cen372 = getelementptr inbounds %struct.object, %struct.object* %238, i32 0, i32 2
  %arrayidx373 = getelementptr inbounds [3 x double], [3 x double]* %cen372, i64 0, i64 2
  %239 = load double, double* %arrayidx373, align 8
  %240 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx374 = getelementptr inbounds [2 x double], [2 x double]* %240, i64 2
  %arrayidx375 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx374, i64 0, i64 0
  %241 = load double, double* %arrayidx375, align 8
  %242 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx376 = getelementptr inbounds [2 x double], [2 x double]* %242, i64 2
  %arrayidx377 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx376, i64 0, i64 1
  %243 = load double, double* %arrayidx377, align 8
  %add378 = fadd double %241, %243
  %div379 = fdiv double %add378, 2.000000e+00
  %cmp380 = fcmp olt double %239, %div379
  br i1 %cmp380, label %if.then381, label %if.else382

if.then381:                                       ; preds = %if.else371
  store i32 0, i32* %zv, align 4
  br label %if.end383

if.else382:                                       ; preds = %if.else371
  store i32 1, i32* %zv, align 4
  br label %if.end383

if.end383:                                        ; preds = %if.else382, %if.then381
  br label %if.end384

if.end384:                                        ; preds = %if.end383, %if.then370
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.then363
  %244 = load i32, i32* %xc, align 4
  %tobool386 = icmp ne i32 %244, 0
  br i1 %tobool386, label %if.then387, label %if.else732

if.then387:                                       ; preds = %if.end385
  %245 = load i32, i32* %yc, align 4
  %tobool388 = icmp ne i32 %245, 0
  br i1 %tobool388, label %if.then389, label %if.else539

if.then389:                                       ; preds = %if.then387
  %246 = load i32, i32* %zc, align 4
  %tobool390 = icmp ne i32 %246, 0
  br i1 %tobool390, label %if.then391, label %if.else459

if.then391:                                       ; preds = %if.then389
  %247 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx392 = getelementptr inbounds [2 x double], [2 x double]* %247, i64 0
  %248 = load i32, i32* %xv, align 4
  %sub393 = sub nsw i32 1, %248
  %idxprom394 = sext i32 %sub393 to i64
  %arrayidx395 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx392, i64 0, i64 %idxprom394
  %249 = load double, double* %arrayidx395, align 8
  %250 = load %struct.object*, %struct.object** %op, align 8
  %cen396 = getelementptr inbounds %struct.object, %struct.object* %250, i32 0, i32 2
  %arrayidx397 = getelementptr inbounds [3 x double], [3 x double]* %cen396, i64 0, i64 0
  %251 = load double, double* %arrayidx397, align 8
  %sub398 = fsub double %249, %251
  %252 = load %struct.object*, %struct.object** %op, align 8
  %size399 = getelementptr inbounds %struct.object, %struct.object* %252, i32 0, i32 6
  %arrayidx400 = getelementptr inbounds [3 x double], [3 x double]* %size399, i64 0, i64 0
  %253 = load double, double* %arrayidx400, align 8
  %div401 = fdiv double %sub398, %253
  %254 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx402 = getelementptr inbounds [2 x double], [2 x double]* %254, i64 0
  %255 = load i32, i32* %xv, align 4
  %sub403 = sub nsw i32 1, %255
  %idxprom404 = sext i32 %sub403 to i64
  %arrayidx405 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx402, i64 0, i64 %idxprom404
  %256 = load double, double* %arrayidx405, align 8
  %257 = load %struct.object*, %struct.object** %op, align 8
  %cen406 = getelementptr inbounds %struct.object, %struct.object* %257, i32 0, i32 2
  %arrayidx407 = getelementptr inbounds [3 x double], [3 x double]* %cen406, i64 0, i64 0
  %258 = load double, double* %arrayidx407, align 8
  %sub408 = fsub double %256, %258
  %259 = load %struct.object*, %struct.object** %op, align 8
  %size409 = getelementptr inbounds %struct.object, %struct.object* %259, i32 0, i32 6
  %arrayidx410 = getelementptr inbounds [3 x double], [3 x double]* %size409, i64 0, i64 0
  %260 = load double, double* %arrayidx410, align 8
  %div411 = fdiv double %sub408, %260
  %mul = fmul double %div401, %div411
  %261 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx412 = getelementptr inbounds [2 x double], [2 x double]* %261, i64 1
  %262 = load i32, i32* %yv, align 4
  %sub413 = sub nsw i32 1, %262
  %idxprom414 = sext i32 %sub413 to i64
  %arrayidx415 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx412, i64 0, i64 %idxprom414
  %263 = load double, double* %arrayidx415, align 8
  %264 = load %struct.object*, %struct.object** %op, align 8
  %cen416 = getelementptr inbounds %struct.object, %struct.object* %264, i32 0, i32 2
  %arrayidx417 = getelementptr inbounds [3 x double], [3 x double]* %cen416, i64 0, i64 1
  %265 = load double, double* %arrayidx417, align 8
  %sub418 = fsub double %263, %265
  %266 = load %struct.object*, %struct.object** %op, align 8
  %size419 = getelementptr inbounds %struct.object, %struct.object* %266, i32 0, i32 6
  %arrayidx420 = getelementptr inbounds [3 x double], [3 x double]* %size419, i64 0, i64 1
  %267 = load double, double* %arrayidx420, align 8
  %div421 = fdiv double %sub418, %267
  %268 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx422 = getelementptr inbounds [2 x double], [2 x double]* %268, i64 1
  %269 = load i32, i32* %yv, align 4
  %sub423 = sub nsw i32 1, %269
  %idxprom424 = sext i32 %sub423 to i64
  %arrayidx425 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx422, i64 0, i64 %idxprom424
  %270 = load double, double* %arrayidx425, align 8
  %271 = load %struct.object*, %struct.object** %op, align 8
  %cen426 = getelementptr inbounds %struct.object, %struct.object* %271, i32 0, i32 2
  %arrayidx427 = getelementptr inbounds [3 x double], [3 x double]* %cen426, i64 0, i64 1
  %272 = load double, double* %arrayidx427, align 8
  %sub428 = fsub double %270, %272
  %273 = load %struct.object*, %struct.object** %op, align 8
  %size429 = getelementptr inbounds %struct.object, %struct.object* %273, i32 0, i32 6
  %arrayidx430 = getelementptr inbounds [3 x double], [3 x double]* %size429, i64 0, i64 1
  %274 = load double, double* %arrayidx430, align 8
  %div431 = fdiv double %sub428, %274
  %mul432 = fmul double %div421, %div431
  %add433 = fadd double %mul, %mul432
  %275 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx434 = getelementptr inbounds [2 x double], [2 x double]* %275, i64 2
  %276 = load i32, i32* %zv, align 4
  %sub435 = sub nsw i32 1, %276
  %idxprom436 = sext i32 %sub435 to i64
  %arrayidx437 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx434, i64 0, i64 %idxprom436
  %277 = load double, double* %arrayidx437, align 8
  %278 = load %struct.object*, %struct.object** %op, align 8
  %cen438 = getelementptr inbounds %struct.object, %struct.object* %278, i32 0, i32 2
  %arrayidx439 = getelementptr inbounds [3 x double], [3 x double]* %cen438, i64 0, i64 2
  %279 = load double, double* %arrayidx439, align 8
  %sub440 = fsub double %277, %279
  %280 = load %struct.object*, %struct.object** %op, align 8
  %size441 = getelementptr inbounds %struct.object, %struct.object* %280, i32 0, i32 6
  %arrayidx442 = getelementptr inbounds [3 x double], [3 x double]* %size441, i64 0, i64 2
  %281 = load double, double* %arrayidx442, align 8
  %div443 = fdiv double %sub440, %281
  %282 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx444 = getelementptr inbounds [2 x double], [2 x double]* %282, i64 2
  %283 = load i32, i32* %zv, align 4
  %sub445 = sub nsw i32 1, %283
  %idxprom446 = sext i32 %sub445 to i64
  %arrayidx447 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx444, i64 0, i64 %idxprom446
  %284 = load double, double* %arrayidx447, align 8
  %285 = load %struct.object*, %struct.object** %op, align 8
  %cen448 = getelementptr inbounds %struct.object, %struct.object* %285, i32 0, i32 2
  %arrayidx449 = getelementptr inbounds [3 x double], [3 x double]* %cen448, i64 0, i64 2
  %286 = load double, double* %arrayidx449, align 8
  %sub450 = fsub double %284, %286
  %287 = load %struct.object*, %struct.object** %op, align 8
  %size451 = getelementptr inbounds %struct.object, %struct.object* %287, i32 0, i32 6
  %arrayidx452 = getelementptr inbounds [3 x double], [3 x double]* %size451, i64 0, i64 2
  %288 = load double, double* %arrayidx452, align 8
  %div453 = fdiv double %sub450, %288
  %mul454 = fmul double %div443, %div453
  %add455 = fadd double %add433, %mul454
  %cmp456 = fcmp ogt double %add455, 1.000000e+00
  br i1 %cmp456, label %if.then457, label %if.end458

if.then457:                                       ; preds = %if.then391
  store i32 1, i32* %intersect, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.then457, %if.then391
  br label %if.end538

if.else459:                                       ; preds = %if.then389
  %289 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx460 = getelementptr inbounds [2 x double], [2 x double]* %289, i64 2
  %290 = load i32, i32* %zv, align 4
  %idxprom461 = sext i32 %290 to i64
  %arrayidx462 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx460, i64 0, i64 %idxprom461
  %291 = load double, double* %arrayidx462, align 8
  %292 = load %struct.object*, %struct.object** %op, align 8
  %cen463 = getelementptr inbounds %struct.object, %struct.object* %292, i32 0, i32 2
  %arrayidx464 = getelementptr inbounds [3 x double], [3 x double]* %cen463, i64 0, i64 2
  %293 = load double, double* %arrayidx464, align 8
  %sub465 = fsub double %291, %293
  %294 = call double @llvm.fabs.f64(double %sub465)
  %295 = load %struct.object*, %struct.object** %op, align 8
  %size466 = getelementptr inbounds %struct.object, %struct.object* %295, i32 0, i32 6
  %arrayidx467 = getelementptr inbounds [3 x double], [3 x double]* %size466, i64 0, i64 2
  %296 = load double, double* %arrayidx467, align 8
  %cmp468 = fcmp olt double %294, %296
  br i1 %cmp468, label %land.lhs.true469, label %if.end537

land.lhs.true469:                                 ; preds = %if.else459
  %297 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx470 = getelementptr inbounds [2 x double], [2 x double]* %297, i64 0
  %298 = load i32, i32* %xv, align 4
  %sub471 = sub nsw i32 1, %298
  %idxprom472 = sext i32 %sub471 to i64
  %arrayidx473 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx470, i64 0, i64 %idxprom472
  %299 = load double, double* %arrayidx473, align 8
  %300 = load %struct.object*, %struct.object** %op, align 8
  %cen474 = getelementptr inbounds %struct.object, %struct.object* %300, i32 0, i32 2
  %arrayidx475 = getelementptr inbounds [3 x double], [3 x double]* %cen474, i64 0, i64 0
  %301 = load double, double* %arrayidx475, align 8
  %sub476 = fsub double %299, %301
  %302 = load %struct.object*, %struct.object** %op, align 8
  %size477 = getelementptr inbounds %struct.object, %struct.object* %302, i32 0, i32 6
  %arrayidx478 = getelementptr inbounds [3 x double], [3 x double]* %size477, i64 0, i64 0
  %303 = load double, double* %arrayidx478, align 8
  %div479 = fdiv double %sub476, %303
  %304 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx480 = getelementptr inbounds [2 x double], [2 x double]* %304, i64 0
  %305 = load i32, i32* %xv, align 4
  %sub481 = sub nsw i32 1, %305
  %idxprom482 = sext i32 %sub481 to i64
  %arrayidx483 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx480, i64 0, i64 %idxprom482
  %306 = load double, double* %arrayidx483, align 8
  %307 = load %struct.object*, %struct.object** %op, align 8
  %cen484 = getelementptr inbounds %struct.object, %struct.object* %307, i32 0, i32 2
  %arrayidx485 = getelementptr inbounds [3 x double], [3 x double]* %cen484, i64 0, i64 0
  %308 = load double, double* %arrayidx485, align 8
  %sub486 = fsub double %306, %308
  %309 = load %struct.object*, %struct.object** %op, align 8
  %size487 = getelementptr inbounds %struct.object, %struct.object* %309, i32 0, i32 6
  %arrayidx488 = getelementptr inbounds [3 x double], [3 x double]* %size487, i64 0, i64 0
  %310 = load double, double* %arrayidx488, align 8
  %div489 = fdiv double %sub486, %310
  %mul490 = fmul double %div479, %div489
  %311 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx491 = getelementptr inbounds [2 x double], [2 x double]* %311, i64 1
  %312 = load i32, i32* %yv, align 4
  %sub492 = sub nsw i32 1, %312
  %idxprom493 = sext i32 %sub492 to i64
  %arrayidx494 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx491, i64 0, i64 %idxprom493
  %313 = load double, double* %arrayidx494, align 8
  %314 = load %struct.object*, %struct.object** %op, align 8
  %cen495 = getelementptr inbounds %struct.object, %struct.object* %314, i32 0, i32 2
  %arrayidx496 = getelementptr inbounds [3 x double], [3 x double]* %cen495, i64 0, i64 1
  %315 = load double, double* %arrayidx496, align 8
  %sub497 = fsub double %313, %315
  %316 = load %struct.object*, %struct.object** %op, align 8
  %size498 = getelementptr inbounds %struct.object, %struct.object* %316, i32 0, i32 6
  %arrayidx499 = getelementptr inbounds [3 x double], [3 x double]* %size498, i64 0, i64 1
  %317 = load double, double* %arrayidx499, align 8
  %div500 = fdiv double %sub497, %317
  %318 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx501 = getelementptr inbounds [2 x double], [2 x double]* %318, i64 1
  %319 = load i32, i32* %yv, align 4
  %sub502 = sub nsw i32 1, %319
  %idxprom503 = sext i32 %sub502 to i64
  %arrayidx504 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx501, i64 0, i64 %idxprom503
  %320 = load double, double* %arrayidx504, align 8
  %321 = load %struct.object*, %struct.object** %op, align 8
  %cen505 = getelementptr inbounds %struct.object, %struct.object* %321, i32 0, i32 2
  %arrayidx506 = getelementptr inbounds [3 x double], [3 x double]* %cen505, i64 0, i64 1
  %322 = load double, double* %arrayidx506, align 8
  %sub507 = fsub double %320, %322
  %323 = load %struct.object*, %struct.object** %op, align 8
  %size508 = getelementptr inbounds %struct.object, %struct.object* %323, i32 0, i32 6
  %arrayidx509 = getelementptr inbounds [3 x double], [3 x double]* %size508, i64 0, i64 1
  %324 = load double, double* %arrayidx509, align 8
  %div510 = fdiv double %sub507, %324
  %mul511 = fmul double %div500, %div510
  %add512 = fadd double %mul490, %mul511
  %325 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx513 = getelementptr inbounds [2 x double], [2 x double]* %325, i64 2
  %326 = load i32, i32* %zv, align 4
  %sub514 = sub nsw i32 1, %326
  %idxprom515 = sext i32 %sub514 to i64
  %arrayidx516 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx513, i64 0, i64 %idxprom515
  %327 = load double, double* %arrayidx516, align 8
  %328 = load %struct.object*, %struct.object** %op, align 8
  %cen517 = getelementptr inbounds %struct.object, %struct.object* %328, i32 0, i32 2
  %arrayidx518 = getelementptr inbounds [3 x double], [3 x double]* %cen517, i64 0, i64 2
  %329 = load double, double* %arrayidx518, align 8
  %sub519 = fsub double %327, %329
  %330 = load %struct.object*, %struct.object** %op, align 8
  %size520 = getelementptr inbounds %struct.object, %struct.object* %330, i32 0, i32 6
  %arrayidx521 = getelementptr inbounds [3 x double], [3 x double]* %size520, i64 0, i64 2
  %331 = load double, double* %arrayidx521, align 8
  %div522 = fdiv double %sub519, %331
  %332 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx523 = getelementptr inbounds [2 x double], [2 x double]* %332, i64 2
  %333 = load i32, i32* %zv, align 4
  %sub524 = sub nsw i32 1, %333
  %idxprom525 = sext i32 %sub524 to i64
  %arrayidx526 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx523, i64 0, i64 %idxprom525
  %334 = load double, double* %arrayidx526, align 8
  %335 = load %struct.object*, %struct.object** %op, align 8
  %cen527 = getelementptr inbounds %struct.object, %struct.object* %335, i32 0, i32 2
  %arrayidx528 = getelementptr inbounds [3 x double], [3 x double]* %cen527, i64 0, i64 2
  %336 = load double, double* %arrayidx528, align 8
  %sub529 = fsub double %334, %336
  %337 = load %struct.object*, %struct.object** %op, align 8
  %size530 = getelementptr inbounds %struct.object, %struct.object* %337, i32 0, i32 6
  %arrayidx531 = getelementptr inbounds [3 x double], [3 x double]* %size530, i64 0, i64 2
  %338 = load double, double* %arrayidx531, align 8
  %div532 = fdiv double %sub529, %338
  %mul533 = fmul double %div522, %div532
  %add534 = fadd double %add512, %mul533
  %cmp535 = fcmp ogt double %add534, 1.000000e+00
  br i1 %cmp535, label %if.then536, label %if.end537

if.then536:                                       ; preds = %land.lhs.true469
  store i32 1, i32* %intersect, align 4
  br label %if.end537

if.end537:                                        ; preds = %if.then536, %land.lhs.true469, %if.else459
  br label %if.end538

if.end538:                                        ; preds = %if.end537, %if.end458
  br label %if.end731

if.else539:                                       ; preds = %if.then387
  %339 = load i32, i32* %zc, align 4
  %tobool540 = icmp ne i32 %339, 0
  br i1 %tobool540, label %if.then541, label %if.else620

if.then541:                                       ; preds = %if.else539
  %340 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx542 = getelementptr inbounds [2 x double], [2 x double]* %340, i64 1
  %341 = load i32, i32* %yv, align 4
  %idxprom543 = sext i32 %341 to i64
  %arrayidx544 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx542, i64 0, i64 %idxprom543
  %342 = load double, double* %arrayidx544, align 8
  %343 = load %struct.object*, %struct.object** %op, align 8
  %cen545 = getelementptr inbounds %struct.object, %struct.object* %343, i32 0, i32 2
  %arrayidx546 = getelementptr inbounds [3 x double], [3 x double]* %cen545, i64 0, i64 1
  %344 = load double, double* %arrayidx546, align 8
  %sub547 = fsub double %342, %344
  %345 = call double @llvm.fabs.f64(double %sub547)
  %346 = load %struct.object*, %struct.object** %op, align 8
  %size548 = getelementptr inbounds %struct.object, %struct.object* %346, i32 0, i32 6
  %arrayidx549 = getelementptr inbounds [3 x double], [3 x double]* %size548, i64 0, i64 1
  %347 = load double, double* %arrayidx549, align 8
  %cmp550 = fcmp olt double %345, %347
  br i1 %cmp550, label %land.lhs.true551, label %if.end619

land.lhs.true551:                                 ; preds = %if.then541
  %348 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx552 = getelementptr inbounds [2 x double], [2 x double]* %348, i64 0
  %349 = load i32, i32* %xv, align 4
  %sub553 = sub nsw i32 1, %349
  %idxprom554 = sext i32 %sub553 to i64
  %arrayidx555 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx552, i64 0, i64 %idxprom554
  %350 = load double, double* %arrayidx555, align 8
  %351 = load %struct.object*, %struct.object** %op, align 8
  %cen556 = getelementptr inbounds %struct.object, %struct.object* %351, i32 0, i32 2
  %arrayidx557 = getelementptr inbounds [3 x double], [3 x double]* %cen556, i64 0, i64 0
  %352 = load double, double* %arrayidx557, align 8
  %sub558 = fsub double %350, %352
  %353 = load %struct.object*, %struct.object** %op, align 8
  %size559 = getelementptr inbounds %struct.object, %struct.object* %353, i32 0, i32 6
  %arrayidx560 = getelementptr inbounds [3 x double], [3 x double]* %size559, i64 0, i64 0
  %354 = load double, double* %arrayidx560, align 8
  %div561 = fdiv double %sub558, %354
  %355 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx562 = getelementptr inbounds [2 x double], [2 x double]* %355, i64 0
  %356 = load i32, i32* %xv, align 4
  %sub563 = sub nsw i32 1, %356
  %idxprom564 = sext i32 %sub563 to i64
  %arrayidx565 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx562, i64 0, i64 %idxprom564
  %357 = load double, double* %arrayidx565, align 8
  %358 = load %struct.object*, %struct.object** %op, align 8
  %cen566 = getelementptr inbounds %struct.object, %struct.object* %358, i32 0, i32 2
  %arrayidx567 = getelementptr inbounds [3 x double], [3 x double]* %cen566, i64 0, i64 0
  %359 = load double, double* %arrayidx567, align 8
  %sub568 = fsub double %357, %359
  %360 = load %struct.object*, %struct.object** %op, align 8
  %size569 = getelementptr inbounds %struct.object, %struct.object* %360, i32 0, i32 6
  %arrayidx570 = getelementptr inbounds [3 x double], [3 x double]* %size569, i64 0, i64 0
  %361 = load double, double* %arrayidx570, align 8
  %div571 = fdiv double %sub568, %361
  %mul572 = fmul double %div561, %div571
  %362 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx573 = getelementptr inbounds [2 x double], [2 x double]* %362, i64 1
  %363 = load i32, i32* %yv, align 4
  %sub574 = sub nsw i32 1, %363
  %idxprom575 = sext i32 %sub574 to i64
  %arrayidx576 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx573, i64 0, i64 %idxprom575
  %364 = load double, double* %arrayidx576, align 8
  %365 = load %struct.object*, %struct.object** %op, align 8
  %cen577 = getelementptr inbounds %struct.object, %struct.object* %365, i32 0, i32 2
  %arrayidx578 = getelementptr inbounds [3 x double], [3 x double]* %cen577, i64 0, i64 1
  %366 = load double, double* %arrayidx578, align 8
  %sub579 = fsub double %364, %366
  %367 = load %struct.object*, %struct.object** %op, align 8
  %size580 = getelementptr inbounds %struct.object, %struct.object* %367, i32 0, i32 6
  %arrayidx581 = getelementptr inbounds [3 x double], [3 x double]* %size580, i64 0, i64 1
  %368 = load double, double* %arrayidx581, align 8
  %div582 = fdiv double %sub579, %368
  %369 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx583 = getelementptr inbounds [2 x double], [2 x double]* %369, i64 1
  %370 = load i32, i32* %yv, align 4
  %sub584 = sub nsw i32 1, %370
  %idxprom585 = sext i32 %sub584 to i64
  %arrayidx586 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx583, i64 0, i64 %idxprom585
  %371 = load double, double* %arrayidx586, align 8
  %372 = load %struct.object*, %struct.object** %op, align 8
  %cen587 = getelementptr inbounds %struct.object, %struct.object* %372, i32 0, i32 2
  %arrayidx588 = getelementptr inbounds [3 x double], [3 x double]* %cen587, i64 0, i64 1
  %373 = load double, double* %arrayidx588, align 8
  %sub589 = fsub double %371, %373
  %374 = load %struct.object*, %struct.object** %op, align 8
  %size590 = getelementptr inbounds %struct.object, %struct.object* %374, i32 0, i32 6
  %arrayidx591 = getelementptr inbounds [3 x double], [3 x double]* %size590, i64 0, i64 1
  %375 = load double, double* %arrayidx591, align 8
  %div592 = fdiv double %sub589, %375
  %mul593 = fmul double %div582, %div592
  %add594 = fadd double %mul572, %mul593
  %376 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx595 = getelementptr inbounds [2 x double], [2 x double]* %376, i64 2
  %377 = load i32, i32* %zv, align 4
  %sub596 = sub nsw i32 1, %377
  %idxprom597 = sext i32 %sub596 to i64
  %arrayidx598 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx595, i64 0, i64 %idxprom597
  %378 = load double, double* %arrayidx598, align 8
  %379 = load %struct.object*, %struct.object** %op, align 8
  %cen599 = getelementptr inbounds %struct.object, %struct.object* %379, i32 0, i32 2
  %arrayidx600 = getelementptr inbounds [3 x double], [3 x double]* %cen599, i64 0, i64 2
  %380 = load double, double* %arrayidx600, align 8
  %sub601 = fsub double %378, %380
  %381 = load %struct.object*, %struct.object** %op, align 8
  %size602 = getelementptr inbounds %struct.object, %struct.object* %381, i32 0, i32 6
  %arrayidx603 = getelementptr inbounds [3 x double], [3 x double]* %size602, i64 0, i64 2
  %382 = load double, double* %arrayidx603, align 8
  %div604 = fdiv double %sub601, %382
  %383 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx605 = getelementptr inbounds [2 x double], [2 x double]* %383, i64 2
  %384 = load i32, i32* %zv, align 4
  %sub606 = sub nsw i32 1, %384
  %idxprom607 = sext i32 %sub606 to i64
  %arrayidx608 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx605, i64 0, i64 %idxprom607
  %385 = load double, double* %arrayidx608, align 8
  %386 = load %struct.object*, %struct.object** %op, align 8
  %cen609 = getelementptr inbounds %struct.object, %struct.object* %386, i32 0, i32 2
  %arrayidx610 = getelementptr inbounds [3 x double], [3 x double]* %cen609, i64 0, i64 2
  %387 = load double, double* %arrayidx610, align 8
  %sub611 = fsub double %385, %387
  %388 = load %struct.object*, %struct.object** %op, align 8
  %size612 = getelementptr inbounds %struct.object, %struct.object* %388, i32 0, i32 6
  %arrayidx613 = getelementptr inbounds [3 x double], [3 x double]* %size612, i64 0, i64 2
  %389 = load double, double* %arrayidx613, align 8
  %div614 = fdiv double %sub611, %389
  %mul615 = fmul double %div604, %div614
  %add616 = fadd double %add594, %mul615
  %cmp617 = fcmp ogt double %add616, 1.000000e+00
  br i1 %cmp617, label %if.then618, label %if.end619

if.then618:                                       ; preds = %land.lhs.true551
  store i32 1, i32* %intersect, align 4
  br label %if.end619

if.end619:                                        ; preds = %if.then618, %land.lhs.true551, %if.then541
  br label %if.end730

if.else620:                                       ; preds = %if.else539
  %390 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx621 = getelementptr inbounds [2 x double], [2 x double]* %390, i64 1
  %391 = load i32, i32* %yv, align 4
  %idxprom622 = sext i32 %391 to i64
  %arrayidx623 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx621, i64 0, i64 %idxprom622
  %392 = load double, double* %arrayidx623, align 8
  %393 = load %struct.object*, %struct.object** %op, align 8
  %cen624 = getelementptr inbounds %struct.object, %struct.object* %393, i32 0, i32 2
  %arrayidx625 = getelementptr inbounds [3 x double], [3 x double]* %cen624, i64 0, i64 1
  %394 = load double, double* %arrayidx625, align 8
  %sub626 = fsub double %392, %394
  %395 = load %struct.object*, %struct.object** %op, align 8
  %size627 = getelementptr inbounds %struct.object, %struct.object* %395, i32 0, i32 6
  %arrayidx628 = getelementptr inbounds [3 x double], [3 x double]* %size627, i64 0, i64 1
  %396 = load double, double* %arrayidx628, align 8
  %div629 = fdiv double %sub626, %396
  %397 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx630 = getelementptr inbounds [2 x double], [2 x double]* %397, i64 1
  %398 = load i32, i32* %yv, align 4
  %idxprom631 = sext i32 %398 to i64
  %arrayidx632 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx630, i64 0, i64 %idxprom631
  %399 = load double, double* %arrayidx632, align 8
  %400 = load %struct.object*, %struct.object** %op, align 8
  %cen633 = getelementptr inbounds %struct.object, %struct.object* %400, i32 0, i32 2
  %arrayidx634 = getelementptr inbounds [3 x double], [3 x double]* %cen633, i64 0, i64 1
  %401 = load double, double* %arrayidx634, align 8
  %sub635 = fsub double %399, %401
  %402 = load %struct.object*, %struct.object** %op, align 8
  %size636 = getelementptr inbounds %struct.object, %struct.object* %402, i32 0, i32 6
  %arrayidx637 = getelementptr inbounds [3 x double], [3 x double]* %size636, i64 0, i64 1
  %403 = load double, double* %arrayidx637, align 8
  %div638 = fdiv double %sub635, %403
  %mul639 = fmul double %div629, %div638
  %404 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx640 = getelementptr inbounds [2 x double], [2 x double]* %404, i64 2
  %405 = load i32, i32* %zv, align 4
  %idxprom641 = sext i32 %405 to i64
  %arrayidx642 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx640, i64 0, i64 %idxprom641
  %406 = load double, double* %arrayidx642, align 8
  %407 = load %struct.object*, %struct.object** %op, align 8
  %cen643 = getelementptr inbounds %struct.object, %struct.object* %407, i32 0, i32 2
  %arrayidx644 = getelementptr inbounds [3 x double], [3 x double]* %cen643, i64 0, i64 2
  %408 = load double, double* %arrayidx644, align 8
  %sub645 = fsub double %406, %408
  %409 = load %struct.object*, %struct.object** %op, align 8
  %size646 = getelementptr inbounds %struct.object, %struct.object* %409, i32 0, i32 6
  %arrayidx647 = getelementptr inbounds [3 x double], [3 x double]* %size646, i64 0, i64 2
  %410 = load double, double* %arrayidx647, align 8
  %div648 = fdiv double %sub645, %410
  %411 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx649 = getelementptr inbounds [2 x double], [2 x double]* %411, i64 2
  %412 = load i32, i32* %zv, align 4
  %idxprom650 = sext i32 %412 to i64
  %arrayidx651 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx649, i64 0, i64 %idxprom650
  %413 = load double, double* %arrayidx651, align 8
  %414 = load %struct.object*, %struct.object** %op, align 8
  %cen652 = getelementptr inbounds %struct.object, %struct.object* %414, i32 0, i32 2
  %arrayidx653 = getelementptr inbounds [3 x double], [3 x double]* %cen652, i64 0, i64 2
  %415 = load double, double* %arrayidx653, align 8
  %sub654 = fsub double %413, %415
  %416 = load %struct.object*, %struct.object** %op, align 8
  %size655 = getelementptr inbounds %struct.object, %struct.object* %416, i32 0, i32 6
  %arrayidx656 = getelementptr inbounds [3 x double], [3 x double]* %size655, i64 0, i64 2
  %417 = load double, double* %arrayidx656, align 8
  %div657 = fdiv double %sub654, %417
  %mul658 = fmul double %div648, %div657
  %add659 = fadd double %mul639, %mul658
  %cmp660 = fcmp olt double %add659, 1.000000e+00
  br i1 %cmp660, label %land.lhs.true661, label %if.end729

land.lhs.true661:                                 ; preds = %if.else620
  %418 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx662 = getelementptr inbounds [2 x double], [2 x double]* %418, i64 0
  %419 = load i32, i32* %xv, align 4
  %sub663 = sub nsw i32 1, %419
  %idxprom664 = sext i32 %sub663 to i64
  %arrayidx665 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx662, i64 0, i64 %idxprom664
  %420 = load double, double* %arrayidx665, align 8
  %421 = load %struct.object*, %struct.object** %op, align 8
  %cen666 = getelementptr inbounds %struct.object, %struct.object* %421, i32 0, i32 2
  %arrayidx667 = getelementptr inbounds [3 x double], [3 x double]* %cen666, i64 0, i64 0
  %422 = load double, double* %arrayidx667, align 8
  %sub668 = fsub double %420, %422
  %423 = load %struct.object*, %struct.object** %op, align 8
  %size669 = getelementptr inbounds %struct.object, %struct.object* %423, i32 0, i32 6
  %arrayidx670 = getelementptr inbounds [3 x double], [3 x double]* %size669, i64 0, i64 0
  %424 = load double, double* %arrayidx670, align 8
  %div671 = fdiv double %sub668, %424
  %425 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx672 = getelementptr inbounds [2 x double], [2 x double]* %425, i64 0
  %426 = load i32, i32* %xv, align 4
  %sub673 = sub nsw i32 1, %426
  %idxprom674 = sext i32 %sub673 to i64
  %arrayidx675 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx672, i64 0, i64 %idxprom674
  %427 = load double, double* %arrayidx675, align 8
  %428 = load %struct.object*, %struct.object** %op, align 8
  %cen676 = getelementptr inbounds %struct.object, %struct.object* %428, i32 0, i32 2
  %arrayidx677 = getelementptr inbounds [3 x double], [3 x double]* %cen676, i64 0, i64 0
  %429 = load double, double* %arrayidx677, align 8
  %sub678 = fsub double %427, %429
  %430 = load %struct.object*, %struct.object** %op, align 8
  %size679 = getelementptr inbounds %struct.object, %struct.object* %430, i32 0, i32 6
  %arrayidx680 = getelementptr inbounds [3 x double], [3 x double]* %size679, i64 0, i64 0
  %431 = load double, double* %arrayidx680, align 8
  %div681 = fdiv double %sub678, %431
  %mul682 = fmul double %div671, %div681
  %432 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx683 = getelementptr inbounds [2 x double], [2 x double]* %432, i64 1
  %433 = load i32, i32* %yv, align 4
  %sub684 = sub nsw i32 1, %433
  %idxprom685 = sext i32 %sub684 to i64
  %arrayidx686 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx683, i64 0, i64 %idxprom685
  %434 = load double, double* %arrayidx686, align 8
  %435 = load %struct.object*, %struct.object** %op, align 8
  %cen687 = getelementptr inbounds %struct.object, %struct.object* %435, i32 0, i32 2
  %arrayidx688 = getelementptr inbounds [3 x double], [3 x double]* %cen687, i64 0, i64 1
  %436 = load double, double* %arrayidx688, align 8
  %sub689 = fsub double %434, %436
  %437 = load %struct.object*, %struct.object** %op, align 8
  %size690 = getelementptr inbounds %struct.object, %struct.object* %437, i32 0, i32 6
  %arrayidx691 = getelementptr inbounds [3 x double], [3 x double]* %size690, i64 0, i64 1
  %438 = load double, double* %arrayidx691, align 8
  %div692 = fdiv double %sub689, %438
  %439 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx693 = getelementptr inbounds [2 x double], [2 x double]* %439, i64 1
  %440 = load i32, i32* %yv, align 4
  %sub694 = sub nsw i32 1, %440
  %idxprom695 = sext i32 %sub694 to i64
  %arrayidx696 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx693, i64 0, i64 %idxprom695
  %441 = load double, double* %arrayidx696, align 8
  %442 = load %struct.object*, %struct.object** %op, align 8
  %cen697 = getelementptr inbounds %struct.object, %struct.object* %442, i32 0, i32 2
  %arrayidx698 = getelementptr inbounds [3 x double], [3 x double]* %cen697, i64 0, i64 1
  %443 = load double, double* %arrayidx698, align 8
  %sub699 = fsub double %441, %443
  %444 = load %struct.object*, %struct.object** %op, align 8
  %size700 = getelementptr inbounds %struct.object, %struct.object* %444, i32 0, i32 6
  %arrayidx701 = getelementptr inbounds [3 x double], [3 x double]* %size700, i64 0, i64 1
  %445 = load double, double* %arrayidx701, align 8
  %div702 = fdiv double %sub699, %445
  %mul703 = fmul double %div692, %div702
  %add704 = fadd double %mul682, %mul703
  %446 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx705 = getelementptr inbounds [2 x double], [2 x double]* %446, i64 2
  %447 = load i32, i32* %zv, align 4
  %sub706 = sub nsw i32 1, %447
  %idxprom707 = sext i32 %sub706 to i64
  %arrayidx708 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx705, i64 0, i64 %idxprom707
  %448 = load double, double* %arrayidx708, align 8
  %449 = load %struct.object*, %struct.object** %op, align 8
  %cen709 = getelementptr inbounds %struct.object, %struct.object* %449, i32 0, i32 2
  %arrayidx710 = getelementptr inbounds [3 x double], [3 x double]* %cen709, i64 0, i64 2
  %450 = load double, double* %arrayidx710, align 8
  %sub711 = fsub double %448, %450
  %451 = load %struct.object*, %struct.object** %op, align 8
  %size712 = getelementptr inbounds %struct.object, %struct.object* %451, i32 0, i32 6
  %arrayidx713 = getelementptr inbounds [3 x double], [3 x double]* %size712, i64 0, i64 2
  %452 = load double, double* %arrayidx713, align 8
  %div714 = fdiv double %sub711, %452
  %453 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx715 = getelementptr inbounds [2 x double], [2 x double]* %453, i64 2
  %454 = load i32, i32* %zv, align 4
  %sub716 = sub nsw i32 1, %454
  %idxprom717 = sext i32 %sub716 to i64
  %arrayidx718 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx715, i64 0, i64 %idxprom717
  %455 = load double, double* %arrayidx718, align 8
  %456 = load %struct.object*, %struct.object** %op, align 8
  %cen719 = getelementptr inbounds %struct.object, %struct.object* %456, i32 0, i32 2
  %arrayidx720 = getelementptr inbounds [3 x double], [3 x double]* %cen719, i64 0, i64 2
  %457 = load double, double* %arrayidx720, align 8
  %sub721 = fsub double %455, %457
  %458 = load %struct.object*, %struct.object** %op, align 8
  %size722 = getelementptr inbounds %struct.object, %struct.object* %458, i32 0, i32 6
  %arrayidx723 = getelementptr inbounds [3 x double], [3 x double]* %size722, i64 0, i64 2
  %459 = load double, double* %arrayidx723, align 8
  %div724 = fdiv double %sub721, %459
  %mul725 = fmul double %div714, %div724
  %add726 = fadd double %add704, %mul725
  %cmp727 = fcmp ogt double %add726, 1.000000e+00
  br i1 %cmp727, label %if.then728, label %if.end729

if.then728:                                       ; preds = %land.lhs.true661
  store i32 1, i32* %intersect, align 4
  br label %if.end729

if.end729:                                        ; preds = %if.then728, %land.lhs.true661, %if.else620
  br label %if.end730

if.end730:                                        ; preds = %if.end729, %if.end619
  br label %if.end731

if.end731:                                        ; preds = %if.end730, %if.end538
  br label %if.end1170

if.else732:                                       ; preds = %if.end385
  %460 = load i32, i32* %yc, align 4
  %tobool733 = icmp ne i32 %460, 0
  br i1 %tobool733, label %if.then734, label %if.else926

if.then734:                                       ; preds = %if.else732
  %461 = load i32, i32* %zc, align 4
  %tobool735 = icmp ne i32 %461, 0
  br i1 %tobool735, label %if.then736, label %if.else815

if.then736:                                       ; preds = %if.then734
  %462 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx737 = getelementptr inbounds [2 x double], [2 x double]* %462, i64 0
  %463 = load i32, i32* %xv, align 4
  %idxprom738 = sext i32 %463 to i64
  %arrayidx739 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx737, i64 0, i64 %idxprom738
  %464 = load double, double* %arrayidx739, align 8
  %465 = load %struct.object*, %struct.object** %op, align 8
  %cen740 = getelementptr inbounds %struct.object, %struct.object* %465, i32 0, i32 2
  %arrayidx741 = getelementptr inbounds [3 x double], [3 x double]* %cen740, i64 0, i64 0
  %466 = load double, double* %arrayidx741, align 8
  %sub742 = fsub double %464, %466
  %467 = call double @llvm.fabs.f64(double %sub742)
  %468 = load %struct.object*, %struct.object** %op, align 8
  %size743 = getelementptr inbounds %struct.object, %struct.object* %468, i32 0, i32 6
  %arrayidx744 = getelementptr inbounds [3 x double], [3 x double]* %size743, i64 0, i64 0
  %469 = load double, double* %arrayidx744, align 8
  %cmp745 = fcmp olt double %467, %469
  br i1 %cmp745, label %land.lhs.true746, label %if.end814

land.lhs.true746:                                 ; preds = %if.then736
  %470 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx747 = getelementptr inbounds [2 x double], [2 x double]* %470, i64 0
  %471 = load i32, i32* %xv, align 4
  %sub748 = sub nsw i32 1, %471
  %idxprom749 = sext i32 %sub748 to i64
  %arrayidx750 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx747, i64 0, i64 %idxprom749
  %472 = load double, double* %arrayidx750, align 8
  %473 = load %struct.object*, %struct.object** %op, align 8
  %cen751 = getelementptr inbounds %struct.object, %struct.object* %473, i32 0, i32 2
  %arrayidx752 = getelementptr inbounds [3 x double], [3 x double]* %cen751, i64 0, i64 0
  %474 = load double, double* %arrayidx752, align 8
  %sub753 = fsub double %472, %474
  %475 = load %struct.object*, %struct.object** %op, align 8
  %size754 = getelementptr inbounds %struct.object, %struct.object* %475, i32 0, i32 6
  %arrayidx755 = getelementptr inbounds [3 x double], [3 x double]* %size754, i64 0, i64 0
  %476 = load double, double* %arrayidx755, align 8
  %div756 = fdiv double %sub753, %476
  %477 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx757 = getelementptr inbounds [2 x double], [2 x double]* %477, i64 0
  %478 = load i32, i32* %xv, align 4
  %sub758 = sub nsw i32 1, %478
  %idxprom759 = sext i32 %sub758 to i64
  %arrayidx760 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx757, i64 0, i64 %idxprom759
  %479 = load double, double* %arrayidx760, align 8
  %480 = load %struct.object*, %struct.object** %op, align 8
  %cen761 = getelementptr inbounds %struct.object, %struct.object* %480, i32 0, i32 2
  %arrayidx762 = getelementptr inbounds [3 x double], [3 x double]* %cen761, i64 0, i64 0
  %481 = load double, double* %arrayidx762, align 8
  %sub763 = fsub double %479, %481
  %482 = load %struct.object*, %struct.object** %op, align 8
  %size764 = getelementptr inbounds %struct.object, %struct.object* %482, i32 0, i32 6
  %arrayidx765 = getelementptr inbounds [3 x double], [3 x double]* %size764, i64 0, i64 0
  %483 = load double, double* %arrayidx765, align 8
  %div766 = fdiv double %sub763, %483
  %mul767 = fmul double %div756, %div766
  %484 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx768 = getelementptr inbounds [2 x double], [2 x double]* %484, i64 1
  %485 = load i32, i32* %yv, align 4
  %sub769 = sub nsw i32 1, %485
  %idxprom770 = sext i32 %sub769 to i64
  %arrayidx771 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx768, i64 0, i64 %idxprom770
  %486 = load double, double* %arrayidx771, align 8
  %487 = load %struct.object*, %struct.object** %op, align 8
  %cen772 = getelementptr inbounds %struct.object, %struct.object* %487, i32 0, i32 2
  %arrayidx773 = getelementptr inbounds [3 x double], [3 x double]* %cen772, i64 0, i64 1
  %488 = load double, double* %arrayidx773, align 8
  %sub774 = fsub double %486, %488
  %489 = load %struct.object*, %struct.object** %op, align 8
  %size775 = getelementptr inbounds %struct.object, %struct.object* %489, i32 0, i32 6
  %arrayidx776 = getelementptr inbounds [3 x double], [3 x double]* %size775, i64 0, i64 1
  %490 = load double, double* %arrayidx776, align 8
  %div777 = fdiv double %sub774, %490
  %491 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx778 = getelementptr inbounds [2 x double], [2 x double]* %491, i64 1
  %492 = load i32, i32* %yv, align 4
  %sub779 = sub nsw i32 1, %492
  %idxprom780 = sext i32 %sub779 to i64
  %arrayidx781 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx778, i64 0, i64 %idxprom780
  %493 = load double, double* %arrayidx781, align 8
  %494 = load %struct.object*, %struct.object** %op, align 8
  %cen782 = getelementptr inbounds %struct.object, %struct.object* %494, i32 0, i32 2
  %arrayidx783 = getelementptr inbounds [3 x double], [3 x double]* %cen782, i64 0, i64 1
  %495 = load double, double* %arrayidx783, align 8
  %sub784 = fsub double %493, %495
  %496 = load %struct.object*, %struct.object** %op, align 8
  %size785 = getelementptr inbounds %struct.object, %struct.object* %496, i32 0, i32 6
  %arrayidx786 = getelementptr inbounds [3 x double], [3 x double]* %size785, i64 0, i64 1
  %497 = load double, double* %arrayidx786, align 8
  %div787 = fdiv double %sub784, %497
  %mul788 = fmul double %div777, %div787
  %add789 = fadd double %mul767, %mul788
  %498 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx790 = getelementptr inbounds [2 x double], [2 x double]* %498, i64 2
  %499 = load i32, i32* %zv, align 4
  %sub791 = sub nsw i32 1, %499
  %idxprom792 = sext i32 %sub791 to i64
  %arrayidx793 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx790, i64 0, i64 %idxprom792
  %500 = load double, double* %arrayidx793, align 8
  %501 = load %struct.object*, %struct.object** %op, align 8
  %cen794 = getelementptr inbounds %struct.object, %struct.object* %501, i32 0, i32 2
  %arrayidx795 = getelementptr inbounds [3 x double], [3 x double]* %cen794, i64 0, i64 2
  %502 = load double, double* %arrayidx795, align 8
  %sub796 = fsub double %500, %502
  %503 = load %struct.object*, %struct.object** %op, align 8
  %size797 = getelementptr inbounds %struct.object, %struct.object* %503, i32 0, i32 6
  %arrayidx798 = getelementptr inbounds [3 x double], [3 x double]* %size797, i64 0, i64 2
  %504 = load double, double* %arrayidx798, align 8
  %div799 = fdiv double %sub796, %504
  %505 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx800 = getelementptr inbounds [2 x double], [2 x double]* %505, i64 2
  %506 = load i32, i32* %zv, align 4
  %sub801 = sub nsw i32 1, %506
  %idxprom802 = sext i32 %sub801 to i64
  %arrayidx803 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx800, i64 0, i64 %idxprom802
  %507 = load double, double* %arrayidx803, align 8
  %508 = load %struct.object*, %struct.object** %op, align 8
  %cen804 = getelementptr inbounds %struct.object, %struct.object* %508, i32 0, i32 2
  %arrayidx805 = getelementptr inbounds [3 x double], [3 x double]* %cen804, i64 0, i64 2
  %509 = load double, double* %arrayidx805, align 8
  %sub806 = fsub double %507, %509
  %510 = load %struct.object*, %struct.object** %op, align 8
  %size807 = getelementptr inbounds %struct.object, %struct.object* %510, i32 0, i32 6
  %arrayidx808 = getelementptr inbounds [3 x double], [3 x double]* %size807, i64 0, i64 2
  %511 = load double, double* %arrayidx808, align 8
  %div809 = fdiv double %sub806, %511
  %mul810 = fmul double %div799, %div809
  %add811 = fadd double %add789, %mul810
  %cmp812 = fcmp ogt double %add811, 1.000000e+00
  br i1 %cmp812, label %if.then813, label %if.end814

if.then813:                                       ; preds = %land.lhs.true746
  store i32 1, i32* %intersect, align 4
  br label %if.end814

if.end814:                                        ; preds = %if.then813, %land.lhs.true746, %if.then736
  br label %if.end925

if.else815:                                       ; preds = %if.then734
  %512 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx816 = getelementptr inbounds [2 x double], [2 x double]* %512, i64 0
  %513 = load i32, i32* %xv, align 4
  %idxprom817 = sext i32 %513 to i64
  %arrayidx818 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx816, i64 0, i64 %idxprom817
  %514 = load double, double* %arrayidx818, align 8
  %515 = load %struct.object*, %struct.object** %op, align 8
  %cen819 = getelementptr inbounds %struct.object, %struct.object* %515, i32 0, i32 2
  %arrayidx820 = getelementptr inbounds [3 x double], [3 x double]* %cen819, i64 0, i64 0
  %516 = load double, double* %arrayidx820, align 8
  %sub821 = fsub double %514, %516
  %517 = load %struct.object*, %struct.object** %op, align 8
  %size822 = getelementptr inbounds %struct.object, %struct.object* %517, i32 0, i32 6
  %arrayidx823 = getelementptr inbounds [3 x double], [3 x double]* %size822, i64 0, i64 0
  %518 = load double, double* %arrayidx823, align 8
  %div824 = fdiv double %sub821, %518
  %519 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx825 = getelementptr inbounds [2 x double], [2 x double]* %519, i64 0
  %520 = load i32, i32* %xv, align 4
  %idxprom826 = sext i32 %520 to i64
  %arrayidx827 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx825, i64 0, i64 %idxprom826
  %521 = load double, double* %arrayidx827, align 8
  %522 = load %struct.object*, %struct.object** %op, align 8
  %cen828 = getelementptr inbounds %struct.object, %struct.object* %522, i32 0, i32 2
  %arrayidx829 = getelementptr inbounds [3 x double], [3 x double]* %cen828, i64 0, i64 0
  %523 = load double, double* %arrayidx829, align 8
  %sub830 = fsub double %521, %523
  %524 = load %struct.object*, %struct.object** %op, align 8
  %size831 = getelementptr inbounds %struct.object, %struct.object* %524, i32 0, i32 6
  %arrayidx832 = getelementptr inbounds [3 x double], [3 x double]* %size831, i64 0, i64 0
  %525 = load double, double* %arrayidx832, align 8
  %div833 = fdiv double %sub830, %525
  %mul834 = fmul double %div824, %div833
  %526 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx835 = getelementptr inbounds [2 x double], [2 x double]* %526, i64 2
  %527 = load i32, i32* %zv, align 4
  %idxprom836 = sext i32 %527 to i64
  %arrayidx837 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx835, i64 0, i64 %idxprom836
  %528 = load double, double* %arrayidx837, align 8
  %529 = load %struct.object*, %struct.object** %op, align 8
  %cen838 = getelementptr inbounds %struct.object, %struct.object* %529, i32 0, i32 2
  %arrayidx839 = getelementptr inbounds [3 x double], [3 x double]* %cen838, i64 0, i64 2
  %530 = load double, double* %arrayidx839, align 8
  %sub840 = fsub double %528, %530
  %531 = load %struct.object*, %struct.object** %op, align 8
  %size841 = getelementptr inbounds %struct.object, %struct.object* %531, i32 0, i32 6
  %arrayidx842 = getelementptr inbounds [3 x double], [3 x double]* %size841, i64 0, i64 2
  %532 = load double, double* %arrayidx842, align 8
  %div843 = fdiv double %sub840, %532
  %533 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx844 = getelementptr inbounds [2 x double], [2 x double]* %533, i64 2
  %534 = load i32, i32* %zv, align 4
  %idxprom845 = sext i32 %534 to i64
  %arrayidx846 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx844, i64 0, i64 %idxprom845
  %535 = load double, double* %arrayidx846, align 8
  %536 = load %struct.object*, %struct.object** %op, align 8
  %cen847 = getelementptr inbounds %struct.object, %struct.object* %536, i32 0, i32 2
  %arrayidx848 = getelementptr inbounds [3 x double], [3 x double]* %cen847, i64 0, i64 2
  %537 = load double, double* %arrayidx848, align 8
  %sub849 = fsub double %535, %537
  %538 = load %struct.object*, %struct.object** %op, align 8
  %size850 = getelementptr inbounds %struct.object, %struct.object* %538, i32 0, i32 6
  %arrayidx851 = getelementptr inbounds [3 x double], [3 x double]* %size850, i64 0, i64 2
  %539 = load double, double* %arrayidx851, align 8
  %div852 = fdiv double %sub849, %539
  %mul853 = fmul double %div843, %div852
  %add854 = fadd double %mul834, %mul853
  %cmp855 = fcmp olt double %add854, 1.000000e+00
  br i1 %cmp855, label %land.lhs.true856, label %if.end924

land.lhs.true856:                                 ; preds = %if.else815
  %540 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx857 = getelementptr inbounds [2 x double], [2 x double]* %540, i64 0
  %541 = load i32, i32* %xv, align 4
  %sub858 = sub nsw i32 1, %541
  %idxprom859 = sext i32 %sub858 to i64
  %arrayidx860 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx857, i64 0, i64 %idxprom859
  %542 = load double, double* %arrayidx860, align 8
  %543 = load %struct.object*, %struct.object** %op, align 8
  %cen861 = getelementptr inbounds %struct.object, %struct.object* %543, i32 0, i32 2
  %arrayidx862 = getelementptr inbounds [3 x double], [3 x double]* %cen861, i64 0, i64 0
  %544 = load double, double* %arrayidx862, align 8
  %sub863 = fsub double %542, %544
  %545 = load %struct.object*, %struct.object** %op, align 8
  %size864 = getelementptr inbounds %struct.object, %struct.object* %545, i32 0, i32 6
  %arrayidx865 = getelementptr inbounds [3 x double], [3 x double]* %size864, i64 0, i64 0
  %546 = load double, double* %arrayidx865, align 8
  %div866 = fdiv double %sub863, %546
  %547 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx867 = getelementptr inbounds [2 x double], [2 x double]* %547, i64 0
  %548 = load i32, i32* %xv, align 4
  %sub868 = sub nsw i32 1, %548
  %idxprom869 = sext i32 %sub868 to i64
  %arrayidx870 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx867, i64 0, i64 %idxprom869
  %549 = load double, double* %arrayidx870, align 8
  %550 = load %struct.object*, %struct.object** %op, align 8
  %cen871 = getelementptr inbounds %struct.object, %struct.object* %550, i32 0, i32 2
  %arrayidx872 = getelementptr inbounds [3 x double], [3 x double]* %cen871, i64 0, i64 0
  %551 = load double, double* %arrayidx872, align 8
  %sub873 = fsub double %549, %551
  %552 = load %struct.object*, %struct.object** %op, align 8
  %size874 = getelementptr inbounds %struct.object, %struct.object* %552, i32 0, i32 6
  %arrayidx875 = getelementptr inbounds [3 x double], [3 x double]* %size874, i64 0, i64 0
  %553 = load double, double* %arrayidx875, align 8
  %div876 = fdiv double %sub873, %553
  %mul877 = fmul double %div866, %div876
  %554 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx878 = getelementptr inbounds [2 x double], [2 x double]* %554, i64 1
  %555 = load i32, i32* %yv, align 4
  %sub879 = sub nsw i32 1, %555
  %idxprom880 = sext i32 %sub879 to i64
  %arrayidx881 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx878, i64 0, i64 %idxprom880
  %556 = load double, double* %arrayidx881, align 8
  %557 = load %struct.object*, %struct.object** %op, align 8
  %cen882 = getelementptr inbounds %struct.object, %struct.object* %557, i32 0, i32 2
  %arrayidx883 = getelementptr inbounds [3 x double], [3 x double]* %cen882, i64 0, i64 1
  %558 = load double, double* %arrayidx883, align 8
  %sub884 = fsub double %556, %558
  %559 = load %struct.object*, %struct.object** %op, align 8
  %size885 = getelementptr inbounds %struct.object, %struct.object* %559, i32 0, i32 6
  %arrayidx886 = getelementptr inbounds [3 x double], [3 x double]* %size885, i64 0, i64 1
  %560 = load double, double* %arrayidx886, align 8
  %div887 = fdiv double %sub884, %560
  %561 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx888 = getelementptr inbounds [2 x double], [2 x double]* %561, i64 1
  %562 = load i32, i32* %yv, align 4
  %sub889 = sub nsw i32 1, %562
  %idxprom890 = sext i32 %sub889 to i64
  %arrayidx891 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx888, i64 0, i64 %idxprom890
  %563 = load double, double* %arrayidx891, align 8
  %564 = load %struct.object*, %struct.object** %op, align 8
  %cen892 = getelementptr inbounds %struct.object, %struct.object* %564, i32 0, i32 2
  %arrayidx893 = getelementptr inbounds [3 x double], [3 x double]* %cen892, i64 0, i64 1
  %565 = load double, double* %arrayidx893, align 8
  %sub894 = fsub double %563, %565
  %566 = load %struct.object*, %struct.object** %op, align 8
  %size895 = getelementptr inbounds %struct.object, %struct.object* %566, i32 0, i32 6
  %arrayidx896 = getelementptr inbounds [3 x double], [3 x double]* %size895, i64 0, i64 1
  %567 = load double, double* %arrayidx896, align 8
  %div897 = fdiv double %sub894, %567
  %mul898 = fmul double %div887, %div897
  %add899 = fadd double %mul877, %mul898
  %568 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx900 = getelementptr inbounds [2 x double], [2 x double]* %568, i64 2
  %569 = load i32, i32* %zv, align 4
  %sub901 = sub nsw i32 1, %569
  %idxprom902 = sext i32 %sub901 to i64
  %arrayidx903 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx900, i64 0, i64 %idxprom902
  %570 = load double, double* %arrayidx903, align 8
  %571 = load %struct.object*, %struct.object** %op, align 8
  %cen904 = getelementptr inbounds %struct.object, %struct.object* %571, i32 0, i32 2
  %arrayidx905 = getelementptr inbounds [3 x double], [3 x double]* %cen904, i64 0, i64 2
  %572 = load double, double* %arrayidx905, align 8
  %sub906 = fsub double %570, %572
  %573 = load %struct.object*, %struct.object** %op, align 8
  %size907 = getelementptr inbounds %struct.object, %struct.object* %573, i32 0, i32 6
  %arrayidx908 = getelementptr inbounds [3 x double], [3 x double]* %size907, i64 0, i64 2
  %574 = load double, double* %arrayidx908, align 8
  %div909 = fdiv double %sub906, %574
  %575 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx910 = getelementptr inbounds [2 x double], [2 x double]* %575, i64 2
  %576 = load i32, i32* %zv, align 4
  %sub911 = sub nsw i32 1, %576
  %idxprom912 = sext i32 %sub911 to i64
  %arrayidx913 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx910, i64 0, i64 %idxprom912
  %577 = load double, double* %arrayidx913, align 8
  %578 = load %struct.object*, %struct.object** %op, align 8
  %cen914 = getelementptr inbounds %struct.object, %struct.object* %578, i32 0, i32 2
  %arrayidx915 = getelementptr inbounds [3 x double], [3 x double]* %cen914, i64 0, i64 2
  %579 = load double, double* %arrayidx915, align 8
  %sub916 = fsub double %577, %579
  %580 = load %struct.object*, %struct.object** %op, align 8
  %size917 = getelementptr inbounds %struct.object, %struct.object* %580, i32 0, i32 6
  %arrayidx918 = getelementptr inbounds [3 x double], [3 x double]* %size917, i64 0, i64 2
  %581 = load double, double* %arrayidx918, align 8
  %div919 = fdiv double %sub916, %581
  %mul920 = fmul double %div909, %div919
  %add921 = fadd double %add899, %mul920
  %cmp922 = fcmp ogt double %add921, 1.000000e+00
  br i1 %cmp922, label %if.then923, label %if.end924

if.then923:                                       ; preds = %land.lhs.true856
  store i32 1, i32* %intersect, align 4
  br label %if.end924

if.end924:                                        ; preds = %if.then923, %land.lhs.true856, %if.else815
  br label %if.end925

if.end925:                                        ; preds = %if.end924, %if.end814
  br label %if.end1169

if.else926:                                       ; preds = %if.else732
  %582 = load i32, i32* %zc, align 4
  %tobool927 = icmp ne i32 %582, 0
  br i1 %tobool927, label %if.then928, label %if.else1038

if.then928:                                       ; preds = %if.else926
  %583 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx929 = getelementptr inbounds [2 x double], [2 x double]* %583, i64 0
  %584 = load i32, i32* %xv, align 4
  %idxprom930 = sext i32 %584 to i64
  %arrayidx931 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx929, i64 0, i64 %idxprom930
  %585 = load double, double* %arrayidx931, align 8
  %586 = load %struct.object*, %struct.object** %op, align 8
  %cen932 = getelementptr inbounds %struct.object, %struct.object* %586, i32 0, i32 2
  %arrayidx933 = getelementptr inbounds [3 x double], [3 x double]* %cen932, i64 0, i64 0
  %587 = load double, double* %arrayidx933, align 8
  %sub934 = fsub double %585, %587
  %588 = load %struct.object*, %struct.object** %op, align 8
  %size935 = getelementptr inbounds %struct.object, %struct.object* %588, i32 0, i32 6
  %arrayidx936 = getelementptr inbounds [3 x double], [3 x double]* %size935, i64 0, i64 0
  %589 = load double, double* %arrayidx936, align 8
  %div937 = fdiv double %sub934, %589
  %590 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx938 = getelementptr inbounds [2 x double], [2 x double]* %590, i64 0
  %591 = load i32, i32* %xv, align 4
  %idxprom939 = sext i32 %591 to i64
  %arrayidx940 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx938, i64 0, i64 %idxprom939
  %592 = load double, double* %arrayidx940, align 8
  %593 = load %struct.object*, %struct.object** %op, align 8
  %cen941 = getelementptr inbounds %struct.object, %struct.object* %593, i32 0, i32 2
  %arrayidx942 = getelementptr inbounds [3 x double], [3 x double]* %cen941, i64 0, i64 0
  %594 = load double, double* %arrayidx942, align 8
  %sub943 = fsub double %592, %594
  %595 = load %struct.object*, %struct.object** %op, align 8
  %size944 = getelementptr inbounds %struct.object, %struct.object* %595, i32 0, i32 6
  %arrayidx945 = getelementptr inbounds [3 x double], [3 x double]* %size944, i64 0, i64 0
  %596 = load double, double* %arrayidx945, align 8
  %div946 = fdiv double %sub943, %596
  %mul947 = fmul double %div937, %div946
  %597 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx948 = getelementptr inbounds [2 x double], [2 x double]* %597, i64 1
  %598 = load i32, i32* %yv, align 4
  %idxprom949 = sext i32 %598 to i64
  %arrayidx950 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx948, i64 0, i64 %idxprom949
  %599 = load double, double* %arrayidx950, align 8
  %600 = load %struct.object*, %struct.object** %op, align 8
  %cen951 = getelementptr inbounds %struct.object, %struct.object* %600, i32 0, i32 2
  %arrayidx952 = getelementptr inbounds [3 x double], [3 x double]* %cen951, i64 0, i64 1
  %601 = load double, double* %arrayidx952, align 8
  %sub953 = fsub double %599, %601
  %602 = load %struct.object*, %struct.object** %op, align 8
  %size954 = getelementptr inbounds %struct.object, %struct.object* %602, i32 0, i32 6
  %arrayidx955 = getelementptr inbounds [3 x double], [3 x double]* %size954, i64 0, i64 1
  %603 = load double, double* %arrayidx955, align 8
  %div956 = fdiv double %sub953, %603
  %604 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx957 = getelementptr inbounds [2 x double], [2 x double]* %604, i64 1
  %605 = load i32, i32* %yv, align 4
  %idxprom958 = sext i32 %605 to i64
  %arrayidx959 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx957, i64 0, i64 %idxprom958
  %606 = load double, double* %arrayidx959, align 8
  %607 = load %struct.object*, %struct.object** %op, align 8
  %cen960 = getelementptr inbounds %struct.object, %struct.object* %607, i32 0, i32 2
  %arrayidx961 = getelementptr inbounds [3 x double], [3 x double]* %cen960, i64 0, i64 1
  %608 = load double, double* %arrayidx961, align 8
  %sub962 = fsub double %606, %608
  %609 = load %struct.object*, %struct.object** %op, align 8
  %size963 = getelementptr inbounds %struct.object, %struct.object* %609, i32 0, i32 6
  %arrayidx964 = getelementptr inbounds [3 x double], [3 x double]* %size963, i64 0, i64 1
  %610 = load double, double* %arrayidx964, align 8
  %div965 = fdiv double %sub962, %610
  %mul966 = fmul double %div956, %div965
  %add967 = fadd double %mul947, %mul966
  %cmp968 = fcmp olt double %add967, 1.000000e+00
  br i1 %cmp968, label %land.lhs.true969, label %if.end1037

land.lhs.true969:                                 ; preds = %if.then928
  %611 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx970 = getelementptr inbounds [2 x double], [2 x double]* %611, i64 0
  %612 = load i32, i32* %xv, align 4
  %sub971 = sub nsw i32 1, %612
  %idxprom972 = sext i32 %sub971 to i64
  %arrayidx973 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx970, i64 0, i64 %idxprom972
  %613 = load double, double* %arrayidx973, align 8
  %614 = load %struct.object*, %struct.object** %op, align 8
  %cen974 = getelementptr inbounds %struct.object, %struct.object* %614, i32 0, i32 2
  %arrayidx975 = getelementptr inbounds [3 x double], [3 x double]* %cen974, i64 0, i64 0
  %615 = load double, double* %arrayidx975, align 8
  %sub976 = fsub double %613, %615
  %616 = load %struct.object*, %struct.object** %op, align 8
  %size977 = getelementptr inbounds %struct.object, %struct.object* %616, i32 0, i32 6
  %arrayidx978 = getelementptr inbounds [3 x double], [3 x double]* %size977, i64 0, i64 0
  %617 = load double, double* %arrayidx978, align 8
  %div979 = fdiv double %sub976, %617
  %618 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx980 = getelementptr inbounds [2 x double], [2 x double]* %618, i64 0
  %619 = load i32, i32* %xv, align 4
  %sub981 = sub nsw i32 1, %619
  %idxprom982 = sext i32 %sub981 to i64
  %arrayidx983 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx980, i64 0, i64 %idxprom982
  %620 = load double, double* %arrayidx983, align 8
  %621 = load %struct.object*, %struct.object** %op, align 8
  %cen984 = getelementptr inbounds %struct.object, %struct.object* %621, i32 0, i32 2
  %arrayidx985 = getelementptr inbounds [3 x double], [3 x double]* %cen984, i64 0, i64 0
  %622 = load double, double* %arrayidx985, align 8
  %sub986 = fsub double %620, %622
  %623 = load %struct.object*, %struct.object** %op, align 8
  %size987 = getelementptr inbounds %struct.object, %struct.object* %623, i32 0, i32 6
  %arrayidx988 = getelementptr inbounds [3 x double], [3 x double]* %size987, i64 0, i64 0
  %624 = load double, double* %arrayidx988, align 8
  %div989 = fdiv double %sub986, %624
  %mul990 = fmul double %div979, %div989
  %625 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx991 = getelementptr inbounds [2 x double], [2 x double]* %625, i64 1
  %626 = load i32, i32* %yv, align 4
  %sub992 = sub nsw i32 1, %626
  %idxprom993 = sext i32 %sub992 to i64
  %arrayidx994 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx991, i64 0, i64 %idxprom993
  %627 = load double, double* %arrayidx994, align 8
  %628 = load %struct.object*, %struct.object** %op, align 8
  %cen995 = getelementptr inbounds %struct.object, %struct.object* %628, i32 0, i32 2
  %arrayidx996 = getelementptr inbounds [3 x double], [3 x double]* %cen995, i64 0, i64 1
  %629 = load double, double* %arrayidx996, align 8
  %sub997 = fsub double %627, %629
  %630 = load %struct.object*, %struct.object** %op, align 8
  %size998 = getelementptr inbounds %struct.object, %struct.object* %630, i32 0, i32 6
  %arrayidx999 = getelementptr inbounds [3 x double], [3 x double]* %size998, i64 0, i64 1
  %631 = load double, double* %arrayidx999, align 8
  %div1000 = fdiv double %sub997, %631
  %632 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1001 = getelementptr inbounds [2 x double], [2 x double]* %632, i64 1
  %633 = load i32, i32* %yv, align 4
  %sub1002 = sub nsw i32 1, %633
  %idxprom1003 = sext i32 %sub1002 to i64
  %arrayidx1004 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1001, i64 0, i64 %idxprom1003
  %634 = load double, double* %arrayidx1004, align 8
  %635 = load %struct.object*, %struct.object** %op, align 8
  %cen1005 = getelementptr inbounds %struct.object, %struct.object* %635, i32 0, i32 2
  %arrayidx1006 = getelementptr inbounds [3 x double], [3 x double]* %cen1005, i64 0, i64 1
  %636 = load double, double* %arrayidx1006, align 8
  %sub1007 = fsub double %634, %636
  %637 = load %struct.object*, %struct.object** %op, align 8
  %size1008 = getelementptr inbounds %struct.object, %struct.object* %637, i32 0, i32 6
  %arrayidx1009 = getelementptr inbounds [3 x double], [3 x double]* %size1008, i64 0, i64 1
  %638 = load double, double* %arrayidx1009, align 8
  %div1010 = fdiv double %sub1007, %638
  %mul1011 = fmul double %div1000, %div1010
  %add1012 = fadd double %mul990, %mul1011
  %639 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1013 = getelementptr inbounds [2 x double], [2 x double]* %639, i64 2
  %640 = load i32, i32* %zv, align 4
  %sub1014 = sub nsw i32 1, %640
  %idxprom1015 = sext i32 %sub1014 to i64
  %arrayidx1016 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1013, i64 0, i64 %idxprom1015
  %641 = load double, double* %arrayidx1016, align 8
  %642 = load %struct.object*, %struct.object** %op, align 8
  %cen1017 = getelementptr inbounds %struct.object, %struct.object* %642, i32 0, i32 2
  %arrayidx1018 = getelementptr inbounds [3 x double], [3 x double]* %cen1017, i64 0, i64 2
  %643 = load double, double* %arrayidx1018, align 8
  %sub1019 = fsub double %641, %643
  %644 = load %struct.object*, %struct.object** %op, align 8
  %size1020 = getelementptr inbounds %struct.object, %struct.object* %644, i32 0, i32 6
  %arrayidx1021 = getelementptr inbounds [3 x double], [3 x double]* %size1020, i64 0, i64 2
  %645 = load double, double* %arrayidx1021, align 8
  %div1022 = fdiv double %sub1019, %645
  %646 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1023 = getelementptr inbounds [2 x double], [2 x double]* %646, i64 2
  %647 = load i32, i32* %zv, align 4
  %sub1024 = sub nsw i32 1, %647
  %idxprom1025 = sext i32 %sub1024 to i64
  %arrayidx1026 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1023, i64 0, i64 %idxprom1025
  %648 = load double, double* %arrayidx1026, align 8
  %649 = load %struct.object*, %struct.object** %op, align 8
  %cen1027 = getelementptr inbounds %struct.object, %struct.object* %649, i32 0, i32 2
  %arrayidx1028 = getelementptr inbounds [3 x double], [3 x double]* %cen1027, i64 0, i64 2
  %650 = load double, double* %arrayidx1028, align 8
  %sub1029 = fsub double %648, %650
  %651 = load %struct.object*, %struct.object** %op, align 8
  %size1030 = getelementptr inbounds %struct.object, %struct.object* %651, i32 0, i32 6
  %arrayidx1031 = getelementptr inbounds [3 x double], [3 x double]* %size1030, i64 0, i64 2
  %652 = load double, double* %arrayidx1031, align 8
  %div1032 = fdiv double %sub1029, %652
  %mul1033 = fmul double %div1022, %div1032
  %add1034 = fadd double %add1012, %mul1033
  %cmp1035 = fcmp ogt double %add1034, 1.000000e+00
  br i1 %cmp1035, label %if.then1036, label %if.end1037

if.then1036:                                      ; preds = %land.lhs.true969
  store i32 1, i32* %intersect, align 4
  br label %if.end1037

if.end1037:                                       ; preds = %if.then1036, %land.lhs.true969, %if.then928
  br label %if.end1168

if.else1038:                                      ; preds = %if.else926
  %653 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1039 = getelementptr inbounds [2 x double], [2 x double]* %653, i64 0
  %654 = load i32, i32* %xv, align 4
  %idxprom1040 = sext i32 %654 to i64
  %arrayidx1041 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1039, i64 0, i64 %idxprom1040
  %655 = load double, double* %arrayidx1041, align 8
  %656 = load %struct.object*, %struct.object** %op, align 8
  %cen1042 = getelementptr inbounds %struct.object, %struct.object* %656, i32 0, i32 2
  %arrayidx1043 = getelementptr inbounds [3 x double], [3 x double]* %cen1042, i64 0, i64 0
  %657 = load double, double* %arrayidx1043, align 8
  %sub1044 = fsub double %655, %657
  %658 = load %struct.object*, %struct.object** %op, align 8
  %size1045 = getelementptr inbounds %struct.object, %struct.object* %658, i32 0, i32 6
  %arrayidx1046 = getelementptr inbounds [3 x double], [3 x double]* %size1045, i64 0, i64 0
  %659 = load double, double* %arrayidx1046, align 8
  %div1047 = fdiv double %sub1044, %659
  %660 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1048 = getelementptr inbounds [2 x double], [2 x double]* %660, i64 0
  %661 = load i32, i32* %xv, align 4
  %idxprom1049 = sext i32 %661 to i64
  %arrayidx1050 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1048, i64 0, i64 %idxprom1049
  %662 = load double, double* %arrayidx1050, align 8
  %663 = load %struct.object*, %struct.object** %op, align 8
  %cen1051 = getelementptr inbounds %struct.object, %struct.object* %663, i32 0, i32 2
  %arrayidx1052 = getelementptr inbounds [3 x double], [3 x double]* %cen1051, i64 0, i64 0
  %664 = load double, double* %arrayidx1052, align 8
  %sub1053 = fsub double %662, %664
  %665 = load %struct.object*, %struct.object** %op, align 8
  %size1054 = getelementptr inbounds %struct.object, %struct.object* %665, i32 0, i32 6
  %arrayidx1055 = getelementptr inbounds [3 x double], [3 x double]* %size1054, i64 0, i64 0
  %666 = load double, double* %arrayidx1055, align 8
  %div1056 = fdiv double %sub1053, %666
  %mul1057 = fmul double %div1047, %div1056
  %667 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1058 = getelementptr inbounds [2 x double], [2 x double]* %667, i64 1
  %668 = load i32, i32* %yv, align 4
  %idxprom1059 = sext i32 %668 to i64
  %arrayidx1060 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1058, i64 0, i64 %idxprom1059
  %669 = load double, double* %arrayidx1060, align 8
  %670 = load %struct.object*, %struct.object** %op, align 8
  %cen1061 = getelementptr inbounds %struct.object, %struct.object* %670, i32 0, i32 2
  %arrayidx1062 = getelementptr inbounds [3 x double], [3 x double]* %cen1061, i64 0, i64 1
  %671 = load double, double* %arrayidx1062, align 8
  %sub1063 = fsub double %669, %671
  %672 = load %struct.object*, %struct.object** %op, align 8
  %size1064 = getelementptr inbounds %struct.object, %struct.object* %672, i32 0, i32 6
  %arrayidx1065 = getelementptr inbounds [3 x double], [3 x double]* %size1064, i64 0, i64 1
  %673 = load double, double* %arrayidx1065, align 8
  %div1066 = fdiv double %sub1063, %673
  %674 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1067 = getelementptr inbounds [2 x double], [2 x double]* %674, i64 1
  %675 = load i32, i32* %yv, align 4
  %idxprom1068 = sext i32 %675 to i64
  %arrayidx1069 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1067, i64 0, i64 %idxprom1068
  %676 = load double, double* %arrayidx1069, align 8
  %677 = load %struct.object*, %struct.object** %op, align 8
  %cen1070 = getelementptr inbounds %struct.object, %struct.object* %677, i32 0, i32 2
  %arrayidx1071 = getelementptr inbounds [3 x double], [3 x double]* %cen1070, i64 0, i64 1
  %678 = load double, double* %arrayidx1071, align 8
  %sub1072 = fsub double %676, %678
  %679 = load %struct.object*, %struct.object** %op, align 8
  %size1073 = getelementptr inbounds %struct.object, %struct.object* %679, i32 0, i32 6
  %arrayidx1074 = getelementptr inbounds [3 x double], [3 x double]* %size1073, i64 0, i64 1
  %680 = load double, double* %arrayidx1074, align 8
  %div1075 = fdiv double %sub1072, %680
  %mul1076 = fmul double %div1066, %div1075
  %add1077 = fadd double %mul1057, %mul1076
  %681 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1078 = getelementptr inbounds [2 x double], [2 x double]* %681, i64 2
  %682 = load i32, i32* %zv, align 4
  %idxprom1079 = sext i32 %682 to i64
  %arrayidx1080 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1078, i64 0, i64 %idxprom1079
  %683 = load double, double* %arrayidx1080, align 8
  %684 = load %struct.object*, %struct.object** %op, align 8
  %cen1081 = getelementptr inbounds %struct.object, %struct.object* %684, i32 0, i32 2
  %arrayidx1082 = getelementptr inbounds [3 x double], [3 x double]* %cen1081, i64 0, i64 2
  %685 = load double, double* %arrayidx1082, align 8
  %sub1083 = fsub double %683, %685
  %686 = load %struct.object*, %struct.object** %op, align 8
  %size1084 = getelementptr inbounds %struct.object, %struct.object* %686, i32 0, i32 6
  %arrayidx1085 = getelementptr inbounds [3 x double], [3 x double]* %size1084, i64 0, i64 2
  %687 = load double, double* %arrayidx1085, align 8
  %div1086 = fdiv double %sub1083, %687
  %688 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1087 = getelementptr inbounds [2 x double], [2 x double]* %688, i64 2
  %689 = load i32, i32* %zv, align 4
  %idxprom1088 = sext i32 %689 to i64
  %arrayidx1089 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1087, i64 0, i64 %idxprom1088
  %690 = load double, double* %arrayidx1089, align 8
  %691 = load %struct.object*, %struct.object** %op, align 8
  %cen1090 = getelementptr inbounds %struct.object, %struct.object* %691, i32 0, i32 2
  %arrayidx1091 = getelementptr inbounds [3 x double], [3 x double]* %cen1090, i64 0, i64 2
  %692 = load double, double* %arrayidx1091, align 8
  %sub1092 = fsub double %690, %692
  %693 = load %struct.object*, %struct.object** %op, align 8
  %size1093 = getelementptr inbounds %struct.object, %struct.object* %693, i32 0, i32 6
  %arrayidx1094 = getelementptr inbounds [3 x double], [3 x double]* %size1093, i64 0, i64 2
  %694 = load double, double* %arrayidx1094, align 8
  %div1095 = fdiv double %sub1092, %694
  %mul1096 = fmul double %div1086, %div1095
  %add1097 = fadd double %add1077, %mul1096
  %cmp1098 = fcmp olt double %add1097, 1.000000e+00
  br i1 %cmp1098, label %land.lhs.true1099, label %if.end1167

land.lhs.true1099:                                ; preds = %if.else1038
  %695 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1100 = getelementptr inbounds [2 x double], [2 x double]* %695, i64 0
  %696 = load i32, i32* %xv, align 4
  %sub1101 = sub nsw i32 1, %696
  %idxprom1102 = sext i32 %sub1101 to i64
  %arrayidx1103 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1100, i64 0, i64 %idxprom1102
  %697 = load double, double* %arrayidx1103, align 8
  %698 = load %struct.object*, %struct.object** %op, align 8
  %cen1104 = getelementptr inbounds %struct.object, %struct.object* %698, i32 0, i32 2
  %arrayidx1105 = getelementptr inbounds [3 x double], [3 x double]* %cen1104, i64 0, i64 0
  %699 = load double, double* %arrayidx1105, align 8
  %sub1106 = fsub double %697, %699
  %700 = load %struct.object*, %struct.object** %op, align 8
  %size1107 = getelementptr inbounds %struct.object, %struct.object* %700, i32 0, i32 6
  %arrayidx1108 = getelementptr inbounds [3 x double], [3 x double]* %size1107, i64 0, i64 0
  %701 = load double, double* %arrayidx1108, align 8
  %div1109 = fdiv double %sub1106, %701
  %702 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1110 = getelementptr inbounds [2 x double], [2 x double]* %702, i64 0
  %703 = load i32, i32* %xv, align 4
  %sub1111 = sub nsw i32 1, %703
  %idxprom1112 = sext i32 %sub1111 to i64
  %arrayidx1113 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1110, i64 0, i64 %idxprom1112
  %704 = load double, double* %arrayidx1113, align 8
  %705 = load %struct.object*, %struct.object** %op, align 8
  %cen1114 = getelementptr inbounds %struct.object, %struct.object* %705, i32 0, i32 2
  %arrayidx1115 = getelementptr inbounds [3 x double], [3 x double]* %cen1114, i64 0, i64 0
  %706 = load double, double* %arrayidx1115, align 8
  %sub1116 = fsub double %704, %706
  %707 = load %struct.object*, %struct.object** %op, align 8
  %size1117 = getelementptr inbounds %struct.object, %struct.object* %707, i32 0, i32 6
  %arrayidx1118 = getelementptr inbounds [3 x double], [3 x double]* %size1117, i64 0, i64 0
  %708 = load double, double* %arrayidx1118, align 8
  %div1119 = fdiv double %sub1116, %708
  %mul1120 = fmul double %div1109, %div1119
  %709 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1121 = getelementptr inbounds [2 x double], [2 x double]* %709, i64 1
  %710 = load i32, i32* %yv, align 4
  %sub1122 = sub nsw i32 1, %710
  %idxprom1123 = sext i32 %sub1122 to i64
  %arrayidx1124 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1121, i64 0, i64 %idxprom1123
  %711 = load double, double* %arrayidx1124, align 8
  %712 = load %struct.object*, %struct.object** %op, align 8
  %cen1125 = getelementptr inbounds %struct.object, %struct.object* %712, i32 0, i32 2
  %arrayidx1126 = getelementptr inbounds [3 x double], [3 x double]* %cen1125, i64 0, i64 1
  %713 = load double, double* %arrayidx1126, align 8
  %sub1127 = fsub double %711, %713
  %714 = load %struct.object*, %struct.object** %op, align 8
  %size1128 = getelementptr inbounds %struct.object, %struct.object* %714, i32 0, i32 6
  %arrayidx1129 = getelementptr inbounds [3 x double], [3 x double]* %size1128, i64 0, i64 1
  %715 = load double, double* %arrayidx1129, align 8
  %div1130 = fdiv double %sub1127, %715
  %716 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1131 = getelementptr inbounds [2 x double], [2 x double]* %716, i64 1
  %717 = load i32, i32* %yv, align 4
  %sub1132 = sub nsw i32 1, %717
  %idxprom1133 = sext i32 %sub1132 to i64
  %arrayidx1134 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1131, i64 0, i64 %idxprom1133
  %718 = load double, double* %arrayidx1134, align 8
  %719 = load %struct.object*, %struct.object** %op, align 8
  %cen1135 = getelementptr inbounds %struct.object, %struct.object* %719, i32 0, i32 2
  %arrayidx1136 = getelementptr inbounds [3 x double], [3 x double]* %cen1135, i64 0, i64 1
  %720 = load double, double* %arrayidx1136, align 8
  %sub1137 = fsub double %718, %720
  %721 = load %struct.object*, %struct.object** %op, align 8
  %size1138 = getelementptr inbounds %struct.object, %struct.object* %721, i32 0, i32 6
  %arrayidx1139 = getelementptr inbounds [3 x double], [3 x double]* %size1138, i64 0, i64 1
  %722 = load double, double* %arrayidx1139, align 8
  %div1140 = fdiv double %sub1137, %722
  %mul1141 = fmul double %div1130, %div1140
  %add1142 = fadd double %mul1120, %mul1141
  %723 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1143 = getelementptr inbounds [2 x double], [2 x double]* %723, i64 2
  %724 = load i32, i32* %zv, align 4
  %sub1144 = sub nsw i32 1, %724
  %idxprom1145 = sext i32 %sub1144 to i64
  %arrayidx1146 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1143, i64 0, i64 %idxprom1145
  %725 = load double, double* %arrayidx1146, align 8
  %726 = load %struct.object*, %struct.object** %op, align 8
  %cen1147 = getelementptr inbounds %struct.object, %struct.object* %726, i32 0, i32 2
  %arrayidx1148 = getelementptr inbounds [3 x double], [3 x double]* %cen1147, i64 0, i64 2
  %727 = load double, double* %arrayidx1148, align 8
  %sub1149 = fsub double %725, %727
  %728 = load %struct.object*, %struct.object** %op, align 8
  %size1150 = getelementptr inbounds %struct.object, %struct.object* %728, i32 0, i32 6
  %arrayidx1151 = getelementptr inbounds [3 x double], [3 x double]* %size1150, i64 0, i64 2
  %729 = load double, double* %arrayidx1151, align 8
  %div1152 = fdiv double %sub1149, %729
  %730 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1153 = getelementptr inbounds [2 x double], [2 x double]* %730, i64 2
  %731 = load i32, i32* %zv, align 4
  %sub1154 = sub nsw i32 1, %731
  %idxprom1155 = sext i32 %sub1154 to i64
  %arrayidx1156 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1153, i64 0, i64 %idxprom1155
  %732 = load double, double* %arrayidx1156, align 8
  %733 = load %struct.object*, %struct.object** %op, align 8
  %cen1157 = getelementptr inbounds %struct.object, %struct.object* %733, i32 0, i32 2
  %arrayidx1158 = getelementptr inbounds [3 x double], [3 x double]* %cen1157, i64 0, i64 2
  %734 = load double, double* %arrayidx1158, align 8
  %sub1159 = fsub double %732, %734
  %735 = load %struct.object*, %struct.object** %op, align 8
  %size1160 = getelementptr inbounds %struct.object, %struct.object* %735, i32 0, i32 6
  %arrayidx1161 = getelementptr inbounds [3 x double], [3 x double]* %size1160, i64 0, i64 2
  %736 = load double, double* %arrayidx1161, align 8
  %div1162 = fdiv double %sub1159, %736
  %mul1163 = fmul double %div1152, %div1162
  %add1164 = fadd double %add1142, %mul1163
  %cmp1165 = fcmp ogt double %add1164, 1.000000e+00
  br i1 %cmp1165, label %if.then1166, label %if.end1167

if.then1166:                                      ; preds = %land.lhs.true1099
  store i32 1, i32* %intersect, align 4
  br label %if.end1167

if.end1167:                                       ; preds = %if.then1166, %land.lhs.true1099, %if.else1038
  br label %if.end1168

if.end1168:                                       ; preds = %if.end1167, %if.end1037
  br label %if.end1169

if.end1169:                                       ; preds = %if.end1168, %if.end925
  br label %if.end1170

if.end1170:                                       ; preds = %if.end1169, %if.end731
  %737 = load %struct.object*, %struct.object** %op, align 8
  %type1171 = getelementptr inbounds %struct.object, %struct.object* %737, i32 0, i32 0
  %738 = load i32, i32* %type1171, align 8
  %cmp1172 = icmp ne i32 %738, 2
  br i1 %cmp1172, label %land.lhs.true1173, label %if.end1241

land.lhs.true1173:                                ; preds = %if.end1170
  %739 = load i32, i32* %intersect, align 4
  %tobool1174 = icmp ne i32 %739, 0
  br i1 %tobool1174, label %if.then1175, label %if.end1241

if.then1175:                                      ; preds = %land.lhs.true1173
  %740 = load %struct.object*, %struct.object** %op, align 8
  %type1176 = getelementptr inbounds %struct.object, %struct.object* %740, i32 0, i32 0
  %741 = load i32, i32* %type1176, align 8
  %cmp1177 = icmp eq i32 %741, 4
  br i1 %cmp1177, label %land.lhs.true1178, label %if.else1185

land.lhs.true1178:                                ; preds = %if.then1175
  %742 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1179 = getelementptr inbounds [2 x double], [2 x double]* %742, i64 0
  %arrayidx1180 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1179, i64 0, i64 1
  %743 = load double, double* %arrayidx1180, align 8
  %744 = load %struct.object*, %struct.object** %op, align 8
  %cen1181 = getelementptr inbounds %struct.object, %struct.object* %744, i32 0, i32 2
  %arrayidx1182 = getelementptr inbounds [3 x double], [3 x double]* %cen1181, i64 0, i64 0
  %745 = load double, double* %arrayidx1182, align 8
  %cmp1183 = fcmp olt double %743, %745
  br i1 %cmp1183, label %if.then1184, label %if.else1185

if.then1184:                                      ; preds = %land.lhs.true1178
  %746 = load i32, i32* %tmp, align 4
  store i32 %746, i32* %intersect, align 4
  br label %if.end1240

if.else1185:                                      ; preds = %land.lhs.true1178, %if.then1175
  %747 = load %struct.object*, %struct.object** %op, align 8
  %type1186 = getelementptr inbounds %struct.object, %struct.object* %747, i32 0, i32 0
  %748 = load i32, i32* %type1186, align 8
  %cmp1187 = icmp eq i32 %748, 6
  br i1 %cmp1187, label %land.lhs.true1188, label %if.else1195

land.lhs.true1188:                                ; preds = %if.else1185
  %749 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1189 = getelementptr inbounds [2 x double], [2 x double]* %749, i64 0
  %arrayidx1190 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1189, i64 0, i64 0
  %750 = load double, double* %arrayidx1190, align 8
  %751 = load %struct.object*, %struct.object** %op, align 8
  %cen1191 = getelementptr inbounds %struct.object, %struct.object* %751, i32 0, i32 2
  %arrayidx1192 = getelementptr inbounds [3 x double], [3 x double]* %cen1191, i64 0, i64 0
  %752 = load double, double* %arrayidx1192, align 8
  %cmp1193 = fcmp ogt double %750, %752
  br i1 %cmp1193, label %if.then1194, label %if.else1195

if.then1194:                                      ; preds = %land.lhs.true1188
  %753 = load i32, i32* %tmp, align 4
  store i32 %753, i32* %intersect, align 4
  br label %if.end1239

if.else1195:                                      ; preds = %land.lhs.true1188, %if.else1185
  %754 = load %struct.object*, %struct.object** %op, align 8
  %type1196 = getelementptr inbounds %struct.object, %struct.object* %754, i32 0, i32 0
  %755 = load i32, i32* %type1196, align 8
  %cmp1197 = icmp eq i32 %755, 8
  br i1 %cmp1197, label %land.lhs.true1198, label %if.else1205

land.lhs.true1198:                                ; preds = %if.else1195
  %756 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1199 = getelementptr inbounds [2 x double], [2 x double]* %756, i64 1
  %arrayidx1200 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1199, i64 0, i64 1
  %757 = load double, double* %arrayidx1200, align 8
  %758 = load %struct.object*, %struct.object** %op, align 8
  %cen1201 = getelementptr inbounds %struct.object, %struct.object* %758, i32 0, i32 2
  %arrayidx1202 = getelementptr inbounds [3 x double], [3 x double]* %cen1201, i64 0, i64 1
  %759 = load double, double* %arrayidx1202, align 8
  %cmp1203 = fcmp olt double %757, %759
  br i1 %cmp1203, label %if.then1204, label %if.else1205

if.then1204:                                      ; preds = %land.lhs.true1198
  %760 = load i32, i32* %tmp, align 4
  store i32 %760, i32* %intersect, align 4
  br label %if.end1238

if.else1205:                                      ; preds = %land.lhs.true1198, %if.else1195
  %761 = load %struct.object*, %struct.object** %op, align 8
  %type1206 = getelementptr inbounds %struct.object, %struct.object* %761, i32 0, i32 0
  %762 = load i32, i32* %type1206, align 8
  %cmp1207 = icmp eq i32 %762, 10
  br i1 %cmp1207, label %land.lhs.true1208, label %if.else1215

land.lhs.true1208:                                ; preds = %if.else1205
  %763 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1209 = getelementptr inbounds [2 x double], [2 x double]* %763, i64 1
  %arrayidx1210 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1209, i64 0, i64 0
  %764 = load double, double* %arrayidx1210, align 8
  %765 = load %struct.object*, %struct.object** %op, align 8
  %cen1211 = getelementptr inbounds %struct.object, %struct.object* %765, i32 0, i32 2
  %arrayidx1212 = getelementptr inbounds [3 x double], [3 x double]* %cen1211, i64 0, i64 1
  %766 = load double, double* %arrayidx1212, align 8
  %cmp1213 = fcmp ogt double %764, %766
  br i1 %cmp1213, label %if.then1214, label %if.else1215

if.then1214:                                      ; preds = %land.lhs.true1208
  %767 = load i32, i32* %tmp, align 4
  store i32 %767, i32* %intersect, align 4
  br label %if.end1237

if.else1215:                                      ; preds = %land.lhs.true1208, %if.else1205
  %768 = load %struct.object*, %struct.object** %op, align 8
  %type1216 = getelementptr inbounds %struct.object, %struct.object* %768, i32 0, i32 0
  %769 = load i32, i32* %type1216, align 8
  %cmp1217 = icmp eq i32 %769, 12
  br i1 %cmp1217, label %land.lhs.true1218, label %if.else1225

land.lhs.true1218:                                ; preds = %if.else1215
  %770 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1219 = getelementptr inbounds [2 x double], [2 x double]* %770, i64 2
  %arrayidx1220 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1219, i64 0, i64 1
  %771 = load double, double* %arrayidx1220, align 8
  %772 = load %struct.object*, %struct.object** %op, align 8
  %cen1221 = getelementptr inbounds %struct.object, %struct.object* %772, i32 0, i32 2
  %arrayidx1222 = getelementptr inbounds [3 x double], [3 x double]* %cen1221, i64 0, i64 2
  %773 = load double, double* %arrayidx1222, align 8
  %cmp1223 = fcmp olt double %771, %773
  br i1 %cmp1223, label %if.then1224, label %if.else1225

if.then1224:                                      ; preds = %land.lhs.true1218
  %774 = load i32, i32* %tmp, align 4
  store i32 %774, i32* %intersect, align 4
  br label %if.end1236

if.else1225:                                      ; preds = %land.lhs.true1218, %if.else1215
  %775 = load %struct.object*, %struct.object** %op, align 8
  %type1226 = getelementptr inbounds %struct.object, %struct.object* %775, i32 0, i32 0
  %776 = load i32, i32* %type1226, align 8
  %cmp1227 = icmp eq i32 %776, 14
  br i1 %cmp1227, label %land.lhs.true1228, label %if.end1235

land.lhs.true1228:                                ; preds = %if.else1225
  %777 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1229 = getelementptr inbounds [2 x double], [2 x double]* %777, i64 2
  %arrayidx1230 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1229, i64 0, i64 0
  %778 = load double, double* %arrayidx1230, align 8
  %779 = load %struct.object*, %struct.object** %op, align 8
  %cen1231 = getelementptr inbounds %struct.object, %struct.object* %779, i32 0, i32 2
  %arrayidx1232 = getelementptr inbounds [3 x double], [3 x double]* %cen1231, i64 0, i64 2
  %780 = load double, double* %arrayidx1232, align 8
  %cmp1233 = fcmp ogt double %778, %780
  br i1 %cmp1233, label %if.then1234, label %if.end1235

if.then1234:                                      ; preds = %land.lhs.true1228
  %781 = load i32, i32* %tmp, align 4
  store i32 %781, i32* %intersect, align 4
  br label %if.end1235

if.end1235:                                       ; preds = %if.then1234, %land.lhs.true1228, %if.else1225
  br label %if.end1236

if.end1236:                                       ; preds = %if.end1235, %if.then1224
  br label %if.end1237

if.end1237:                                       ; preds = %if.end1236, %if.then1214
  br label %if.end1238

if.end1238:                                       ; preds = %if.end1237, %if.then1204
  br label %if.end1239

if.end1239:                                       ; preds = %if.end1238, %if.then1194
  br label %if.end1240

if.end1240:                                       ; preds = %if.end1239, %if.then1184
  br label %if.end1241

if.end1241:                                       ; preds = %if.end1240, %land.lhs.true1173, %if.end1170
  br label %if.end2375

if.else1242:                                      ; preds = %land.lhs.true300, %land.lhs.true297, %if.else294
  %782 = load %struct.object*, %struct.object** %op, align 8
  %type1243 = getelementptr inbounds %struct.object, %struct.object* %782, i32 0, i32 0
  %783 = load i32, i32* %type1243, align 8
  %cmp1244 = icmp sge i32 %783, 3
  br i1 %cmp1244, label %land.lhs.true1245, label %if.else1621

land.lhs.true1245:                                ; preds = %if.else1242
  %784 = load %struct.object*, %struct.object** %op, align 8
  %type1246 = getelementptr inbounds %struct.object, %struct.object* %784, i32 0, i32 0
  %785 = load i32, i32* %type1246, align 8
  %cmp1247 = icmp sle i32 %785, 15
  br i1 %cmp1247, label %land.lhs.true1248, label %if.else1621

land.lhs.true1248:                                ; preds = %land.lhs.true1245
  %786 = load %struct.object*, %struct.object** %op, align 8
  %type1249 = getelementptr inbounds %struct.object, %struct.object* %786, i32 0, i32 0
  %787 = load i32, i32* %type1249, align 8
  %rem1250 = srem i32 %787, 2
  %tobool1251 = icmp ne i32 %rem1250, 0
  br i1 %tobool1251, label %if.then1252, label %if.else1621

if.then1252:                                      ; preds = %land.lhs.true1248
  %788 = load i32, i32* %intersect, align 4
  store i32 %788, i32* %tmp, align 4
  store i32 0, i32* %zc, align 4
  store i32 0, i32* %yc, align 4
  store i32 0, i32* %xc, align 4
  %789 = load %struct.object*, %struct.object** %op, align 8
  %cen1253 = getelementptr inbounds %struct.object, %struct.object* %789, i32 0, i32 2
  %arrayidx1254 = getelementptr inbounds [3 x double], [3 x double]* %cen1253, i64 0, i64 0
  %790 = load double, double* %arrayidx1254, align 8
  %791 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1255 = getelementptr inbounds [2 x double], [2 x double]* %791, i64 0
  %arrayidx1256 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1255, i64 0, i64 0
  %792 = load double, double* %arrayidx1256, align 8
  %cmp1257 = fcmp olt double %790, %792
  br i1 %cmp1257, label %if.then1258, label %if.else1259

if.then1258:                                      ; preds = %if.then1252
  store i32 0, i32* %xv, align 4
  br label %if.end1268

if.else1259:                                      ; preds = %if.then1252
  %793 = load %struct.object*, %struct.object** %op, align 8
  %cen1260 = getelementptr inbounds %struct.object, %struct.object* %793, i32 0, i32 2
  %arrayidx1261 = getelementptr inbounds [3 x double], [3 x double]* %cen1260, i64 0, i64 0
  %794 = load double, double* %arrayidx1261, align 8
  %795 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1262 = getelementptr inbounds [2 x double], [2 x double]* %795, i64 0
  %arrayidx1263 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1262, i64 0, i64 1
  %796 = load double, double* %arrayidx1263, align 8
  %cmp1264 = fcmp ogt double %794, %796
  br i1 %cmp1264, label %if.then1265, label %if.else1266

if.then1265:                                      ; preds = %if.else1259
  store i32 1, i32* %xv, align 4
  br label %if.end1267

if.else1266:                                      ; preds = %if.else1259
  store i32 1, i32* %xc, align 4
  br label %if.end1267

if.end1267:                                       ; preds = %if.else1266, %if.then1265
  br label %if.end1268

if.end1268:                                       ; preds = %if.end1267, %if.then1258
  %797 = load %struct.object*, %struct.object** %op, align 8
  %cen1269 = getelementptr inbounds %struct.object, %struct.object* %797, i32 0, i32 2
  %arrayidx1270 = getelementptr inbounds [3 x double], [3 x double]* %cen1269, i64 0, i64 1
  %798 = load double, double* %arrayidx1270, align 8
  %799 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1271 = getelementptr inbounds [2 x double], [2 x double]* %799, i64 1
  %arrayidx1272 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1271, i64 0, i64 0
  %800 = load double, double* %arrayidx1272, align 8
  %cmp1273 = fcmp olt double %798, %800
  br i1 %cmp1273, label %if.then1274, label %if.else1275

if.then1274:                                      ; preds = %if.end1268
  store i32 0, i32* %yv, align 4
  br label %if.end1284

if.else1275:                                      ; preds = %if.end1268
  %801 = load %struct.object*, %struct.object** %op, align 8
  %cen1276 = getelementptr inbounds %struct.object, %struct.object* %801, i32 0, i32 2
  %arrayidx1277 = getelementptr inbounds [3 x double], [3 x double]* %cen1276, i64 0, i64 1
  %802 = load double, double* %arrayidx1277, align 8
  %803 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1278 = getelementptr inbounds [2 x double], [2 x double]* %803, i64 1
  %arrayidx1279 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1278, i64 0, i64 1
  %804 = load double, double* %arrayidx1279, align 8
  %cmp1280 = fcmp ogt double %802, %804
  br i1 %cmp1280, label %if.then1281, label %if.else1282

if.then1281:                                      ; preds = %if.else1275
  store i32 1, i32* %yv, align 4
  br label %if.end1283

if.else1282:                                      ; preds = %if.else1275
  store i32 1, i32* %yc, align 4
  br label %if.end1283

if.end1283:                                       ; preds = %if.else1282, %if.then1281
  br label %if.end1284

if.end1284:                                       ; preds = %if.end1283, %if.then1274
  %805 = load %struct.object*, %struct.object** %op, align 8
  %cen1285 = getelementptr inbounds %struct.object, %struct.object* %805, i32 0, i32 2
  %arrayidx1286 = getelementptr inbounds [3 x double], [3 x double]* %cen1285, i64 0, i64 2
  %806 = load double, double* %arrayidx1286, align 8
  %807 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1287 = getelementptr inbounds [2 x double], [2 x double]* %807, i64 2
  %arrayidx1288 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1287, i64 0, i64 0
  %808 = load double, double* %arrayidx1288, align 8
  %cmp1289 = fcmp olt double %806, %808
  br i1 %cmp1289, label %if.then1290, label %if.else1291

if.then1290:                                      ; preds = %if.end1284
  store i32 0, i32* %zv, align 4
  br label %if.end1300

if.else1291:                                      ; preds = %if.end1284
  %809 = load %struct.object*, %struct.object** %op, align 8
  %cen1292 = getelementptr inbounds %struct.object, %struct.object* %809, i32 0, i32 2
  %arrayidx1293 = getelementptr inbounds [3 x double], [3 x double]* %cen1292, i64 0, i64 2
  %810 = load double, double* %arrayidx1293, align 8
  %811 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1294 = getelementptr inbounds [2 x double], [2 x double]* %811, i64 2
  %arrayidx1295 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1294, i64 0, i64 1
  %812 = load double, double* %arrayidx1295, align 8
  %cmp1296 = fcmp ogt double %810, %812
  br i1 %cmp1296, label %if.then1297, label %if.else1298

if.then1297:                                      ; preds = %if.else1291
  store i32 1, i32* %zv, align 4
  br label %if.end1299

if.else1298:                                      ; preds = %if.else1291
  store i32 1, i32* %zc, align 4
  br label %if.end1299

if.end1299:                                       ; preds = %if.else1298, %if.then1297
  br label %if.end1300

if.end1300:                                       ; preds = %if.end1299, %if.then1290
  %813 = load i32, i32* %xc, align 4
  %tobool1301 = icmp ne i32 %813, 0
  br i1 %tobool1301, label %if.then1302, label %if.else1379

if.then1302:                                      ; preds = %if.end1300
  %814 = load i32, i32* %yc, align 4
  %tobool1303 = icmp ne i32 %814, 0
  br i1 %tobool1303, label %if.then1304, label %if.else1320

if.then1304:                                      ; preds = %if.then1302
  %815 = load i32, i32* %zc, align 4
  %tobool1305 = icmp ne i32 %815, 0
  br i1 %tobool1305, label %if.then1306, label %if.else1307

if.then1306:                                      ; preds = %if.then1304
  store i32 1, i32* %intersect, align 4
  br label %if.end1319

if.else1307:                                      ; preds = %if.then1304
  %816 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1308 = getelementptr inbounds [2 x double], [2 x double]* %816, i64 2
  %817 = load i32, i32* %zv, align 4
  %idxprom1309 = sext i32 %817 to i64
  %arrayidx1310 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1308, i64 0, i64 %idxprom1309
  %818 = load double, double* %arrayidx1310, align 8
  %819 = load %struct.object*, %struct.object** %op, align 8
  %cen1311 = getelementptr inbounds %struct.object, %struct.object* %819, i32 0, i32 2
  %arrayidx1312 = getelementptr inbounds [3 x double], [3 x double]* %cen1311, i64 0, i64 2
  %820 = load double, double* %arrayidx1312, align 8
  %sub1313 = fsub double %818, %820
  %821 = call double @llvm.fabs.f64(double %sub1313)
  %822 = load %struct.object*, %struct.object** %op, align 8
  %size1314 = getelementptr inbounds %struct.object, %struct.object* %822, i32 0, i32 6
  %arrayidx1315 = getelementptr inbounds [3 x double], [3 x double]* %size1314, i64 0, i64 2
  %823 = load double, double* %arrayidx1315, align 8
  %cmp1316 = fcmp olt double %821, %823
  br i1 %cmp1316, label %if.then1317, label %if.end1318

if.then1317:                                      ; preds = %if.else1307
  store i32 1, i32* %intersect, align 4
  br label %if.end1318

if.end1318:                                       ; preds = %if.then1317, %if.else1307
  br label %if.end1319

if.end1319:                                       ; preds = %if.end1318, %if.then1306
  br label %if.end1378

if.else1320:                                      ; preds = %if.then1302
  %824 = load i32, i32* %zc, align 4
  %tobool1321 = icmp ne i32 %824, 0
  br i1 %tobool1321, label %if.then1322, label %if.else1334

if.then1322:                                      ; preds = %if.else1320
  %825 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1323 = getelementptr inbounds [2 x double], [2 x double]* %825, i64 1
  %826 = load i32, i32* %yv, align 4
  %idxprom1324 = sext i32 %826 to i64
  %arrayidx1325 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1323, i64 0, i64 %idxprom1324
  %827 = load double, double* %arrayidx1325, align 8
  %828 = load %struct.object*, %struct.object** %op, align 8
  %cen1326 = getelementptr inbounds %struct.object, %struct.object* %828, i32 0, i32 2
  %arrayidx1327 = getelementptr inbounds [3 x double], [3 x double]* %cen1326, i64 0, i64 1
  %829 = load double, double* %arrayidx1327, align 8
  %sub1328 = fsub double %827, %829
  %830 = call double @llvm.fabs.f64(double %sub1328)
  %831 = load %struct.object*, %struct.object** %op, align 8
  %size1329 = getelementptr inbounds %struct.object, %struct.object* %831, i32 0, i32 6
  %arrayidx1330 = getelementptr inbounds [3 x double], [3 x double]* %size1329, i64 0, i64 1
  %832 = load double, double* %arrayidx1330, align 8
  %cmp1331 = fcmp olt double %830, %832
  br i1 %cmp1331, label %if.then1332, label %if.end1333

if.then1332:                                      ; preds = %if.then1322
  store i32 1, i32* %intersect, align 4
  br label %if.end1333

if.end1333:                                       ; preds = %if.then1332, %if.then1322
  br label %if.end1377

if.else1334:                                      ; preds = %if.else1320
  %833 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1335 = getelementptr inbounds [2 x double], [2 x double]* %833, i64 1
  %834 = load i32, i32* %yv, align 4
  %idxprom1336 = sext i32 %834 to i64
  %arrayidx1337 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1335, i64 0, i64 %idxprom1336
  %835 = load double, double* %arrayidx1337, align 8
  %836 = load %struct.object*, %struct.object** %op, align 8
  %cen1338 = getelementptr inbounds %struct.object, %struct.object* %836, i32 0, i32 2
  %arrayidx1339 = getelementptr inbounds [3 x double], [3 x double]* %cen1338, i64 0, i64 1
  %837 = load double, double* %arrayidx1339, align 8
  %sub1340 = fsub double %835, %837
  %838 = load %struct.object*, %struct.object** %op, align 8
  %size1341 = getelementptr inbounds %struct.object, %struct.object* %838, i32 0, i32 6
  %arrayidx1342 = getelementptr inbounds [3 x double], [3 x double]* %size1341, i64 0, i64 1
  %839 = load double, double* %arrayidx1342, align 8
  %div1343 = fdiv double %sub1340, %839
  %840 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1344 = getelementptr inbounds [2 x double], [2 x double]* %840, i64 1
  %841 = load i32, i32* %yv, align 4
  %idxprom1345 = sext i32 %841 to i64
  %arrayidx1346 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1344, i64 0, i64 %idxprom1345
  %842 = load double, double* %arrayidx1346, align 8
  %843 = load %struct.object*, %struct.object** %op, align 8
  %cen1347 = getelementptr inbounds %struct.object, %struct.object* %843, i32 0, i32 2
  %arrayidx1348 = getelementptr inbounds [3 x double], [3 x double]* %cen1347, i64 0, i64 1
  %844 = load double, double* %arrayidx1348, align 8
  %sub1349 = fsub double %842, %844
  %845 = load %struct.object*, %struct.object** %op, align 8
  %size1350 = getelementptr inbounds %struct.object, %struct.object* %845, i32 0, i32 6
  %arrayidx1351 = getelementptr inbounds [3 x double], [3 x double]* %size1350, i64 0, i64 1
  %846 = load double, double* %arrayidx1351, align 8
  %div1352 = fdiv double %sub1349, %846
  %mul1353 = fmul double %div1343, %div1352
  %847 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1354 = getelementptr inbounds [2 x double], [2 x double]* %847, i64 2
  %848 = load i32, i32* %zv, align 4
  %idxprom1355 = sext i32 %848 to i64
  %arrayidx1356 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1354, i64 0, i64 %idxprom1355
  %849 = load double, double* %arrayidx1356, align 8
  %850 = load %struct.object*, %struct.object** %op, align 8
  %cen1357 = getelementptr inbounds %struct.object, %struct.object* %850, i32 0, i32 2
  %arrayidx1358 = getelementptr inbounds [3 x double], [3 x double]* %cen1357, i64 0, i64 2
  %851 = load double, double* %arrayidx1358, align 8
  %sub1359 = fsub double %849, %851
  %852 = load %struct.object*, %struct.object** %op, align 8
  %size1360 = getelementptr inbounds %struct.object, %struct.object* %852, i32 0, i32 6
  %arrayidx1361 = getelementptr inbounds [3 x double], [3 x double]* %size1360, i64 0, i64 2
  %853 = load double, double* %arrayidx1361, align 8
  %div1362 = fdiv double %sub1359, %853
  %854 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1363 = getelementptr inbounds [2 x double], [2 x double]* %854, i64 2
  %855 = load i32, i32* %zv, align 4
  %idxprom1364 = sext i32 %855 to i64
  %arrayidx1365 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1363, i64 0, i64 %idxprom1364
  %856 = load double, double* %arrayidx1365, align 8
  %857 = load %struct.object*, %struct.object** %op, align 8
  %cen1366 = getelementptr inbounds %struct.object, %struct.object* %857, i32 0, i32 2
  %arrayidx1367 = getelementptr inbounds [3 x double], [3 x double]* %cen1366, i64 0, i64 2
  %858 = load double, double* %arrayidx1367, align 8
  %sub1368 = fsub double %856, %858
  %859 = load %struct.object*, %struct.object** %op, align 8
  %size1369 = getelementptr inbounds %struct.object, %struct.object* %859, i32 0, i32 6
  %arrayidx1370 = getelementptr inbounds [3 x double], [3 x double]* %size1369, i64 0, i64 2
  %860 = load double, double* %arrayidx1370, align 8
  %div1371 = fdiv double %sub1368, %860
  %mul1372 = fmul double %div1362, %div1371
  %add1373 = fadd double %mul1353, %mul1372
  %cmp1374 = fcmp olt double %add1373, 1.000000e+00
  br i1 %cmp1374, label %if.then1375, label %if.end1376

if.then1375:                                      ; preds = %if.else1334
  store i32 1, i32* %intersect, align 4
  br label %if.end1376

if.end1376:                                       ; preds = %if.then1375, %if.else1334
  br label %if.end1377

if.end1377:                                       ; preds = %if.end1376, %if.end1333
  br label %if.end1378

if.end1378:                                       ; preds = %if.end1377, %if.end1319
  br label %if.end1549

if.else1379:                                      ; preds = %if.end1300
  %861 = load i32, i32* %yc, align 4
  %tobool1380 = icmp ne i32 %861, 0
  br i1 %tobool1380, label %if.then1381, label %if.else1439

if.then1381:                                      ; preds = %if.else1379
  %862 = load i32, i32* %zc, align 4
  %tobool1382 = icmp ne i32 %862, 0
  br i1 %tobool1382, label %if.then1383, label %if.else1395

if.then1383:                                      ; preds = %if.then1381
  %863 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1384 = getelementptr inbounds [2 x double], [2 x double]* %863, i64 0
  %864 = load i32, i32* %xv, align 4
  %idxprom1385 = sext i32 %864 to i64
  %arrayidx1386 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1384, i64 0, i64 %idxprom1385
  %865 = load double, double* %arrayidx1386, align 8
  %866 = load %struct.object*, %struct.object** %op, align 8
  %cen1387 = getelementptr inbounds %struct.object, %struct.object* %866, i32 0, i32 2
  %arrayidx1388 = getelementptr inbounds [3 x double], [3 x double]* %cen1387, i64 0, i64 0
  %867 = load double, double* %arrayidx1388, align 8
  %sub1389 = fsub double %865, %867
  %868 = call double @llvm.fabs.f64(double %sub1389)
  %869 = load %struct.object*, %struct.object** %op, align 8
  %size1390 = getelementptr inbounds %struct.object, %struct.object* %869, i32 0, i32 6
  %arrayidx1391 = getelementptr inbounds [3 x double], [3 x double]* %size1390, i64 0, i64 0
  %870 = load double, double* %arrayidx1391, align 8
  %cmp1392 = fcmp olt double %868, %870
  br i1 %cmp1392, label %if.then1393, label %if.end1394

if.then1393:                                      ; preds = %if.then1383
  store i32 1, i32* %intersect, align 4
  br label %if.end1394

if.end1394:                                       ; preds = %if.then1393, %if.then1383
  br label %if.end1438

if.else1395:                                      ; preds = %if.then1381
  %871 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1396 = getelementptr inbounds [2 x double], [2 x double]* %871, i64 0
  %872 = load i32, i32* %xv, align 4
  %idxprom1397 = sext i32 %872 to i64
  %arrayidx1398 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1396, i64 0, i64 %idxprom1397
  %873 = load double, double* %arrayidx1398, align 8
  %874 = load %struct.object*, %struct.object** %op, align 8
  %cen1399 = getelementptr inbounds %struct.object, %struct.object* %874, i32 0, i32 2
  %arrayidx1400 = getelementptr inbounds [3 x double], [3 x double]* %cen1399, i64 0, i64 0
  %875 = load double, double* %arrayidx1400, align 8
  %sub1401 = fsub double %873, %875
  %876 = load %struct.object*, %struct.object** %op, align 8
  %size1402 = getelementptr inbounds %struct.object, %struct.object* %876, i32 0, i32 6
  %arrayidx1403 = getelementptr inbounds [3 x double], [3 x double]* %size1402, i64 0, i64 0
  %877 = load double, double* %arrayidx1403, align 8
  %div1404 = fdiv double %sub1401, %877
  %878 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1405 = getelementptr inbounds [2 x double], [2 x double]* %878, i64 0
  %879 = load i32, i32* %xv, align 4
  %idxprom1406 = sext i32 %879 to i64
  %arrayidx1407 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1405, i64 0, i64 %idxprom1406
  %880 = load double, double* %arrayidx1407, align 8
  %881 = load %struct.object*, %struct.object** %op, align 8
  %cen1408 = getelementptr inbounds %struct.object, %struct.object* %881, i32 0, i32 2
  %arrayidx1409 = getelementptr inbounds [3 x double], [3 x double]* %cen1408, i64 0, i64 0
  %882 = load double, double* %arrayidx1409, align 8
  %sub1410 = fsub double %880, %882
  %883 = load %struct.object*, %struct.object** %op, align 8
  %size1411 = getelementptr inbounds %struct.object, %struct.object* %883, i32 0, i32 6
  %arrayidx1412 = getelementptr inbounds [3 x double], [3 x double]* %size1411, i64 0, i64 0
  %884 = load double, double* %arrayidx1412, align 8
  %div1413 = fdiv double %sub1410, %884
  %mul1414 = fmul double %div1404, %div1413
  %885 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1415 = getelementptr inbounds [2 x double], [2 x double]* %885, i64 2
  %886 = load i32, i32* %zv, align 4
  %idxprom1416 = sext i32 %886 to i64
  %arrayidx1417 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1415, i64 0, i64 %idxprom1416
  %887 = load double, double* %arrayidx1417, align 8
  %888 = load %struct.object*, %struct.object** %op, align 8
  %cen1418 = getelementptr inbounds %struct.object, %struct.object* %888, i32 0, i32 2
  %arrayidx1419 = getelementptr inbounds [3 x double], [3 x double]* %cen1418, i64 0, i64 2
  %889 = load double, double* %arrayidx1419, align 8
  %sub1420 = fsub double %887, %889
  %890 = load %struct.object*, %struct.object** %op, align 8
  %size1421 = getelementptr inbounds %struct.object, %struct.object* %890, i32 0, i32 6
  %arrayidx1422 = getelementptr inbounds [3 x double], [3 x double]* %size1421, i64 0, i64 2
  %891 = load double, double* %arrayidx1422, align 8
  %div1423 = fdiv double %sub1420, %891
  %892 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1424 = getelementptr inbounds [2 x double], [2 x double]* %892, i64 2
  %893 = load i32, i32* %zv, align 4
  %idxprom1425 = sext i32 %893 to i64
  %arrayidx1426 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1424, i64 0, i64 %idxprom1425
  %894 = load double, double* %arrayidx1426, align 8
  %895 = load %struct.object*, %struct.object** %op, align 8
  %cen1427 = getelementptr inbounds %struct.object, %struct.object* %895, i32 0, i32 2
  %arrayidx1428 = getelementptr inbounds [3 x double], [3 x double]* %cen1427, i64 0, i64 2
  %896 = load double, double* %arrayidx1428, align 8
  %sub1429 = fsub double %894, %896
  %897 = load %struct.object*, %struct.object** %op, align 8
  %size1430 = getelementptr inbounds %struct.object, %struct.object* %897, i32 0, i32 6
  %arrayidx1431 = getelementptr inbounds [3 x double], [3 x double]* %size1430, i64 0, i64 2
  %898 = load double, double* %arrayidx1431, align 8
  %div1432 = fdiv double %sub1429, %898
  %mul1433 = fmul double %div1423, %div1432
  %add1434 = fadd double %mul1414, %mul1433
  %cmp1435 = fcmp olt double %add1434, 1.000000e+00
  br i1 %cmp1435, label %if.then1436, label %if.end1437

if.then1436:                                      ; preds = %if.else1395
  store i32 1, i32* %intersect, align 4
  br label %if.end1437

if.end1437:                                       ; preds = %if.then1436, %if.else1395
  br label %if.end1438

if.end1438:                                       ; preds = %if.end1437, %if.end1394
  br label %if.end1548

if.else1439:                                      ; preds = %if.else1379
  %899 = load i32, i32* %zc, align 4
  %tobool1440 = icmp ne i32 %899, 0
  br i1 %tobool1440, label %if.then1441, label %if.else1484

if.then1441:                                      ; preds = %if.else1439
  %900 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1442 = getelementptr inbounds [2 x double], [2 x double]* %900, i64 0
  %901 = load i32, i32* %xv, align 4
  %idxprom1443 = sext i32 %901 to i64
  %arrayidx1444 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1442, i64 0, i64 %idxprom1443
  %902 = load double, double* %arrayidx1444, align 8
  %903 = load %struct.object*, %struct.object** %op, align 8
  %cen1445 = getelementptr inbounds %struct.object, %struct.object* %903, i32 0, i32 2
  %arrayidx1446 = getelementptr inbounds [3 x double], [3 x double]* %cen1445, i64 0, i64 0
  %904 = load double, double* %arrayidx1446, align 8
  %sub1447 = fsub double %902, %904
  %905 = load %struct.object*, %struct.object** %op, align 8
  %size1448 = getelementptr inbounds %struct.object, %struct.object* %905, i32 0, i32 6
  %arrayidx1449 = getelementptr inbounds [3 x double], [3 x double]* %size1448, i64 0, i64 0
  %906 = load double, double* %arrayidx1449, align 8
  %div1450 = fdiv double %sub1447, %906
  %907 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1451 = getelementptr inbounds [2 x double], [2 x double]* %907, i64 0
  %908 = load i32, i32* %xv, align 4
  %idxprom1452 = sext i32 %908 to i64
  %arrayidx1453 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1451, i64 0, i64 %idxprom1452
  %909 = load double, double* %arrayidx1453, align 8
  %910 = load %struct.object*, %struct.object** %op, align 8
  %cen1454 = getelementptr inbounds %struct.object, %struct.object* %910, i32 0, i32 2
  %arrayidx1455 = getelementptr inbounds [3 x double], [3 x double]* %cen1454, i64 0, i64 0
  %911 = load double, double* %arrayidx1455, align 8
  %sub1456 = fsub double %909, %911
  %912 = load %struct.object*, %struct.object** %op, align 8
  %size1457 = getelementptr inbounds %struct.object, %struct.object* %912, i32 0, i32 6
  %arrayidx1458 = getelementptr inbounds [3 x double], [3 x double]* %size1457, i64 0, i64 0
  %913 = load double, double* %arrayidx1458, align 8
  %div1459 = fdiv double %sub1456, %913
  %mul1460 = fmul double %div1450, %div1459
  %914 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1461 = getelementptr inbounds [2 x double], [2 x double]* %914, i64 1
  %915 = load i32, i32* %yv, align 4
  %idxprom1462 = sext i32 %915 to i64
  %arrayidx1463 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1461, i64 0, i64 %idxprom1462
  %916 = load double, double* %arrayidx1463, align 8
  %917 = load %struct.object*, %struct.object** %op, align 8
  %cen1464 = getelementptr inbounds %struct.object, %struct.object* %917, i32 0, i32 2
  %arrayidx1465 = getelementptr inbounds [3 x double], [3 x double]* %cen1464, i64 0, i64 1
  %918 = load double, double* %arrayidx1465, align 8
  %sub1466 = fsub double %916, %918
  %919 = load %struct.object*, %struct.object** %op, align 8
  %size1467 = getelementptr inbounds %struct.object, %struct.object* %919, i32 0, i32 6
  %arrayidx1468 = getelementptr inbounds [3 x double], [3 x double]* %size1467, i64 0, i64 1
  %920 = load double, double* %arrayidx1468, align 8
  %div1469 = fdiv double %sub1466, %920
  %921 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1470 = getelementptr inbounds [2 x double], [2 x double]* %921, i64 1
  %922 = load i32, i32* %yv, align 4
  %idxprom1471 = sext i32 %922 to i64
  %arrayidx1472 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1470, i64 0, i64 %idxprom1471
  %923 = load double, double* %arrayidx1472, align 8
  %924 = load %struct.object*, %struct.object** %op, align 8
  %cen1473 = getelementptr inbounds %struct.object, %struct.object* %924, i32 0, i32 2
  %arrayidx1474 = getelementptr inbounds [3 x double], [3 x double]* %cen1473, i64 0, i64 1
  %925 = load double, double* %arrayidx1474, align 8
  %sub1475 = fsub double %923, %925
  %926 = load %struct.object*, %struct.object** %op, align 8
  %size1476 = getelementptr inbounds %struct.object, %struct.object* %926, i32 0, i32 6
  %arrayidx1477 = getelementptr inbounds [3 x double], [3 x double]* %size1476, i64 0, i64 1
  %927 = load double, double* %arrayidx1477, align 8
  %div1478 = fdiv double %sub1475, %927
  %mul1479 = fmul double %div1469, %div1478
  %add1480 = fadd double %mul1460, %mul1479
  %cmp1481 = fcmp olt double %add1480, 1.000000e+00
  br i1 %cmp1481, label %if.then1482, label %if.end1483

if.then1482:                                      ; preds = %if.then1441
  store i32 1, i32* %intersect, align 4
  br label %if.end1483

if.end1483:                                       ; preds = %if.then1482, %if.then1441
  br label %if.end1547

if.else1484:                                      ; preds = %if.else1439
  %928 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1485 = getelementptr inbounds [2 x double], [2 x double]* %928, i64 0
  %929 = load i32, i32* %xv, align 4
  %idxprom1486 = sext i32 %929 to i64
  %arrayidx1487 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1485, i64 0, i64 %idxprom1486
  %930 = load double, double* %arrayidx1487, align 8
  %931 = load %struct.object*, %struct.object** %op, align 8
  %cen1488 = getelementptr inbounds %struct.object, %struct.object* %931, i32 0, i32 2
  %arrayidx1489 = getelementptr inbounds [3 x double], [3 x double]* %cen1488, i64 0, i64 0
  %932 = load double, double* %arrayidx1489, align 8
  %sub1490 = fsub double %930, %932
  %933 = load %struct.object*, %struct.object** %op, align 8
  %size1491 = getelementptr inbounds %struct.object, %struct.object* %933, i32 0, i32 6
  %arrayidx1492 = getelementptr inbounds [3 x double], [3 x double]* %size1491, i64 0, i64 0
  %934 = load double, double* %arrayidx1492, align 8
  %div1493 = fdiv double %sub1490, %934
  %935 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1494 = getelementptr inbounds [2 x double], [2 x double]* %935, i64 0
  %936 = load i32, i32* %xv, align 4
  %idxprom1495 = sext i32 %936 to i64
  %arrayidx1496 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1494, i64 0, i64 %idxprom1495
  %937 = load double, double* %arrayidx1496, align 8
  %938 = load %struct.object*, %struct.object** %op, align 8
  %cen1497 = getelementptr inbounds %struct.object, %struct.object* %938, i32 0, i32 2
  %arrayidx1498 = getelementptr inbounds [3 x double], [3 x double]* %cen1497, i64 0, i64 0
  %939 = load double, double* %arrayidx1498, align 8
  %sub1499 = fsub double %937, %939
  %940 = load %struct.object*, %struct.object** %op, align 8
  %size1500 = getelementptr inbounds %struct.object, %struct.object* %940, i32 0, i32 6
  %arrayidx1501 = getelementptr inbounds [3 x double], [3 x double]* %size1500, i64 0, i64 0
  %941 = load double, double* %arrayidx1501, align 8
  %div1502 = fdiv double %sub1499, %941
  %mul1503 = fmul double %div1493, %div1502
  %942 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1504 = getelementptr inbounds [2 x double], [2 x double]* %942, i64 1
  %943 = load i32, i32* %yv, align 4
  %idxprom1505 = sext i32 %943 to i64
  %arrayidx1506 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1504, i64 0, i64 %idxprom1505
  %944 = load double, double* %arrayidx1506, align 8
  %945 = load %struct.object*, %struct.object** %op, align 8
  %cen1507 = getelementptr inbounds %struct.object, %struct.object* %945, i32 0, i32 2
  %arrayidx1508 = getelementptr inbounds [3 x double], [3 x double]* %cen1507, i64 0, i64 1
  %946 = load double, double* %arrayidx1508, align 8
  %sub1509 = fsub double %944, %946
  %947 = load %struct.object*, %struct.object** %op, align 8
  %size1510 = getelementptr inbounds %struct.object, %struct.object* %947, i32 0, i32 6
  %arrayidx1511 = getelementptr inbounds [3 x double], [3 x double]* %size1510, i64 0, i64 1
  %948 = load double, double* %arrayidx1511, align 8
  %div1512 = fdiv double %sub1509, %948
  %949 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1513 = getelementptr inbounds [2 x double], [2 x double]* %949, i64 1
  %950 = load i32, i32* %yv, align 4
  %idxprom1514 = sext i32 %950 to i64
  %arrayidx1515 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1513, i64 0, i64 %idxprom1514
  %951 = load double, double* %arrayidx1515, align 8
  %952 = load %struct.object*, %struct.object** %op, align 8
  %cen1516 = getelementptr inbounds %struct.object, %struct.object* %952, i32 0, i32 2
  %arrayidx1517 = getelementptr inbounds [3 x double], [3 x double]* %cen1516, i64 0, i64 1
  %953 = load double, double* %arrayidx1517, align 8
  %sub1518 = fsub double %951, %953
  %954 = load %struct.object*, %struct.object** %op, align 8
  %size1519 = getelementptr inbounds %struct.object, %struct.object* %954, i32 0, i32 6
  %arrayidx1520 = getelementptr inbounds [3 x double], [3 x double]* %size1519, i64 0, i64 1
  %955 = load double, double* %arrayidx1520, align 8
  %div1521 = fdiv double %sub1518, %955
  %mul1522 = fmul double %div1512, %div1521
  %add1523 = fadd double %mul1503, %mul1522
  %956 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1524 = getelementptr inbounds [2 x double], [2 x double]* %956, i64 2
  %957 = load i32, i32* %zv, align 4
  %idxprom1525 = sext i32 %957 to i64
  %arrayidx1526 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1524, i64 0, i64 %idxprom1525
  %958 = load double, double* %arrayidx1526, align 8
  %959 = load %struct.object*, %struct.object** %op, align 8
  %cen1527 = getelementptr inbounds %struct.object, %struct.object* %959, i32 0, i32 2
  %arrayidx1528 = getelementptr inbounds [3 x double], [3 x double]* %cen1527, i64 0, i64 2
  %960 = load double, double* %arrayidx1528, align 8
  %sub1529 = fsub double %958, %960
  %961 = load %struct.object*, %struct.object** %op, align 8
  %size1530 = getelementptr inbounds %struct.object, %struct.object* %961, i32 0, i32 6
  %arrayidx1531 = getelementptr inbounds [3 x double], [3 x double]* %size1530, i64 0, i64 2
  %962 = load double, double* %arrayidx1531, align 8
  %div1532 = fdiv double %sub1529, %962
  %963 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1533 = getelementptr inbounds [2 x double], [2 x double]* %963, i64 2
  %964 = load i32, i32* %zv, align 4
  %idxprom1534 = sext i32 %964 to i64
  %arrayidx1535 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1533, i64 0, i64 %idxprom1534
  %965 = load double, double* %arrayidx1535, align 8
  %966 = load %struct.object*, %struct.object** %op, align 8
  %cen1536 = getelementptr inbounds %struct.object, %struct.object* %966, i32 0, i32 2
  %arrayidx1537 = getelementptr inbounds [3 x double], [3 x double]* %cen1536, i64 0, i64 2
  %967 = load double, double* %arrayidx1537, align 8
  %sub1538 = fsub double %965, %967
  %968 = load %struct.object*, %struct.object** %op, align 8
  %size1539 = getelementptr inbounds %struct.object, %struct.object* %968, i32 0, i32 6
  %arrayidx1540 = getelementptr inbounds [3 x double], [3 x double]* %size1539, i64 0, i64 2
  %969 = load double, double* %arrayidx1540, align 8
  %div1541 = fdiv double %sub1538, %969
  %mul1542 = fmul double %div1532, %div1541
  %add1543 = fadd double %add1523, %mul1542
  %cmp1544 = fcmp olt double %add1543, 1.000000e+00
  br i1 %cmp1544, label %if.then1545, label %if.end1546

if.then1545:                                      ; preds = %if.else1484
  store i32 1, i32* %intersect, align 4
  br label %if.end1546

if.end1546:                                       ; preds = %if.then1545, %if.else1484
  br label %if.end1547

if.end1547:                                       ; preds = %if.end1546, %if.end1483
  br label %if.end1548

if.end1548:                                       ; preds = %if.end1547, %if.end1438
  br label %if.end1549

if.end1549:                                       ; preds = %if.end1548, %if.end1378
  %970 = load %struct.object*, %struct.object** %op, align 8
  %type1550 = getelementptr inbounds %struct.object, %struct.object* %970, i32 0, i32 0
  %971 = load i32, i32* %type1550, align 8
  %cmp1551 = icmp ne i32 %971, 3
  br i1 %cmp1551, label %land.lhs.true1552, label %if.end1620

land.lhs.true1552:                                ; preds = %if.end1549
  %972 = load i32, i32* %intersect, align 4
  %tobool1553 = icmp ne i32 %972, 0
  br i1 %tobool1553, label %if.then1554, label %if.end1620

if.then1554:                                      ; preds = %land.lhs.true1552
  %973 = load %struct.object*, %struct.object** %op, align 8
  %type1555 = getelementptr inbounds %struct.object, %struct.object* %973, i32 0, i32 0
  %974 = load i32, i32* %type1555, align 8
  %cmp1556 = icmp eq i32 %974, 5
  br i1 %cmp1556, label %land.lhs.true1557, label %if.else1564

land.lhs.true1557:                                ; preds = %if.then1554
  %975 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1558 = getelementptr inbounds [2 x double], [2 x double]* %975, i64 0
  %arrayidx1559 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1558, i64 0, i64 1
  %976 = load double, double* %arrayidx1559, align 8
  %977 = load %struct.object*, %struct.object** %op, align 8
  %cen1560 = getelementptr inbounds %struct.object, %struct.object* %977, i32 0, i32 2
  %arrayidx1561 = getelementptr inbounds [3 x double], [3 x double]* %cen1560, i64 0, i64 0
  %978 = load double, double* %arrayidx1561, align 8
  %cmp1562 = fcmp olt double %976, %978
  br i1 %cmp1562, label %if.then1563, label %if.else1564

if.then1563:                                      ; preds = %land.lhs.true1557
  %979 = load i32, i32* %tmp, align 4
  store i32 %979, i32* %intersect, align 4
  br label %if.end1619

if.else1564:                                      ; preds = %land.lhs.true1557, %if.then1554
  %980 = load %struct.object*, %struct.object** %op, align 8
  %type1565 = getelementptr inbounds %struct.object, %struct.object* %980, i32 0, i32 0
  %981 = load i32, i32* %type1565, align 8
  %cmp1566 = icmp eq i32 %981, 7
  br i1 %cmp1566, label %land.lhs.true1567, label %if.else1574

land.lhs.true1567:                                ; preds = %if.else1564
  %982 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1568 = getelementptr inbounds [2 x double], [2 x double]* %982, i64 0
  %arrayidx1569 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1568, i64 0, i64 0
  %983 = load double, double* %arrayidx1569, align 8
  %984 = load %struct.object*, %struct.object** %op, align 8
  %cen1570 = getelementptr inbounds %struct.object, %struct.object* %984, i32 0, i32 2
  %arrayidx1571 = getelementptr inbounds [3 x double], [3 x double]* %cen1570, i64 0, i64 0
  %985 = load double, double* %arrayidx1571, align 8
  %cmp1572 = fcmp ogt double %983, %985
  br i1 %cmp1572, label %if.then1573, label %if.else1574

if.then1573:                                      ; preds = %land.lhs.true1567
  %986 = load i32, i32* %tmp, align 4
  store i32 %986, i32* %intersect, align 4
  br label %if.end1618

if.else1574:                                      ; preds = %land.lhs.true1567, %if.else1564
  %987 = load %struct.object*, %struct.object** %op, align 8
  %type1575 = getelementptr inbounds %struct.object, %struct.object* %987, i32 0, i32 0
  %988 = load i32, i32* %type1575, align 8
  %cmp1576 = icmp eq i32 %988, 9
  br i1 %cmp1576, label %land.lhs.true1577, label %if.else1584

land.lhs.true1577:                                ; preds = %if.else1574
  %989 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1578 = getelementptr inbounds [2 x double], [2 x double]* %989, i64 1
  %arrayidx1579 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1578, i64 0, i64 1
  %990 = load double, double* %arrayidx1579, align 8
  %991 = load %struct.object*, %struct.object** %op, align 8
  %cen1580 = getelementptr inbounds %struct.object, %struct.object* %991, i32 0, i32 2
  %arrayidx1581 = getelementptr inbounds [3 x double], [3 x double]* %cen1580, i64 0, i64 1
  %992 = load double, double* %arrayidx1581, align 8
  %cmp1582 = fcmp olt double %990, %992
  br i1 %cmp1582, label %if.then1583, label %if.else1584

if.then1583:                                      ; preds = %land.lhs.true1577
  %993 = load i32, i32* %tmp, align 4
  store i32 %993, i32* %intersect, align 4
  br label %if.end1617

if.else1584:                                      ; preds = %land.lhs.true1577, %if.else1574
  %994 = load %struct.object*, %struct.object** %op, align 8
  %type1585 = getelementptr inbounds %struct.object, %struct.object* %994, i32 0, i32 0
  %995 = load i32, i32* %type1585, align 8
  %cmp1586 = icmp eq i32 %995, 11
  br i1 %cmp1586, label %land.lhs.true1587, label %if.else1594

land.lhs.true1587:                                ; preds = %if.else1584
  %996 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1588 = getelementptr inbounds [2 x double], [2 x double]* %996, i64 1
  %arrayidx1589 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1588, i64 0, i64 0
  %997 = load double, double* %arrayidx1589, align 8
  %998 = load %struct.object*, %struct.object** %op, align 8
  %cen1590 = getelementptr inbounds %struct.object, %struct.object* %998, i32 0, i32 2
  %arrayidx1591 = getelementptr inbounds [3 x double], [3 x double]* %cen1590, i64 0, i64 1
  %999 = load double, double* %arrayidx1591, align 8
  %cmp1592 = fcmp ogt double %997, %999
  br i1 %cmp1592, label %if.then1593, label %if.else1594

if.then1593:                                      ; preds = %land.lhs.true1587
  %1000 = load i32, i32* %tmp, align 4
  store i32 %1000, i32* %intersect, align 4
  br label %if.end1616

if.else1594:                                      ; preds = %land.lhs.true1587, %if.else1584
  %1001 = load %struct.object*, %struct.object** %op, align 8
  %type1595 = getelementptr inbounds %struct.object, %struct.object* %1001, i32 0, i32 0
  %1002 = load i32, i32* %type1595, align 8
  %cmp1596 = icmp eq i32 %1002, 13
  br i1 %cmp1596, label %land.lhs.true1597, label %if.else1604

land.lhs.true1597:                                ; preds = %if.else1594
  %1003 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1598 = getelementptr inbounds [2 x double], [2 x double]* %1003, i64 2
  %arrayidx1599 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1598, i64 0, i64 1
  %1004 = load double, double* %arrayidx1599, align 8
  %1005 = load %struct.object*, %struct.object** %op, align 8
  %cen1600 = getelementptr inbounds %struct.object, %struct.object* %1005, i32 0, i32 2
  %arrayidx1601 = getelementptr inbounds [3 x double], [3 x double]* %cen1600, i64 0, i64 2
  %1006 = load double, double* %arrayidx1601, align 8
  %cmp1602 = fcmp olt double %1004, %1006
  br i1 %cmp1602, label %if.then1603, label %if.else1604

if.then1603:                                      ; preds = %land.lhs.true1597
  %1007 = load i32, i32* %tmp, align 4
  store i32 %1007, i32* %intersect, align 4
  br label %if.end1615

if.else1604:                                      ; preds = %land.lhs.true1597, %if.else1594
  %1008 = load %struct.object*, %struct.object** %op, align 8
  %type1605 = getelementptr inbounds %struct.object, %struct.object* %1008, i32 0, i32 0
  %1009 = load i32, i32* %type1605, align 8
  %cmp1606 = icmp eq i32 %1009, 15
  br i1 %cmp1606, label %land.lhs.true1607, label %if.end1614

land.lhs.true1607:                                ; preds = %if.else1604
  %1010 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1608 = getelementptr inbounds [2 x double], [2 x double]* %1010, i64 2
  %arrayidx1609 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1608, i64 0, i64 0
  %1011 = load double, double* %arrayidx1609, align 8
  %1012 = load %struct.object*, %struct.object** %op, align 8
  %cen1610 = getelementptr inbounds %struct.object, %struct.object* %1012, i32 0, i32 2
  %arrayidx1611 = getelementptr inbounds [3 x double], [3 x double]* %cen1610, i64 0, i64 2
  %1013 = load double, double* %arrayidx1611, align 8
  %cmp1612 = fcmp ogt double %1011, %1013
  br i1 %cmp1612, label %if.then1613, label %if.end1614

if.then1613:                                      ; preds = %land.lhs.true1607
  %1014 = load i32, i32* %tmp, align 4
  store i32 %1014, i32* %intersect, align 4
  br label %if.end1614

if.end1614:                                       ; preds = %if.then1613, %land.lhs.true1607, %if.else1604
  br label %if.end1615

if.end1615:                                       ; preds = %if.end1614, %if.then1603
  br label %if.end1616

if.end1616:                                       ; preds = %if.end1615, %if.then1593
  br label %if.end1617

if.end1617:                                       ; preds = %if.end1616, %if.then1583
  br label %if.end1618

if.end1618:                                       ; preds = %if.end1617, %if.then1573
  br label %if.end1619

if.end1619:                                       ; preds = %if.end1618, %if.then1563
  br label %if.end1620

if.end1620:                                       ; preds = %if.end1619, %land.lhs.true1552, %if.end1549
  br label %if.end2374

if.else1621:                                      ; preds = %land.lhs.true1248, %land.lhs.true1245, %if.else1242
  %1015 = load %struct.object*, %struct.object** %op, align 8
  %type1622 = getelementptr inbounds %struct.object, %struct.object* %1015, i32 0, i32 0
  %1016 = load i32, i32* %type1622, align 8
  %cmp1623 = icmp eq i32 %1016, 20
  br i1 %cmp1623, label %if.then1630, label %lor.lhs.false1624

lor.lhs.false1624:                                ; preds = %if.else1621
  %1017 = load %struct.object*, %struct.object** %op, align 8
  %type1625 = getelementptr inbounds %struct.object, %struct.object* %1017, i32 0, i32 0
  %1018 = load i32, i32* %type1625, align 8
  %cmp1626 = icmp eq i32 %1018, 22
  br i1 %cmp1626, label %if.then1630, label %lor.lhs.false1627

lor.lhs.false1627:                                ; preds = %lor.lhs.false1624
  %1019 = load %struct.object*, %struct.object** %op, align 8
  %type1628 = getelementptr inbounds %struct.object, %struct.object* %1019, i32 0, i32 0
  %1020 = load i32, i32* %type1628, align 8
  %cmp1629 = icmp eq i32 %1020, 24
  br i1 %cmp1629, label %if.then1630, label %if.else2191

if.then1630:                                      ; preds = %lor.lhs.false1627, %lor.lhs.false1624, %if.else1621
  %1021 = load %struct.object*, %struct.object** %op, align 8
  %type1631 = getelementptr inbounds %struct.object, %struct.object* %1021, i32 0, i32 0
  %1022 = load i32, i32* %type1631, align 8
  %cmp1632 = icmp eq i32 %1022, 20
  br i1 %cmp1632, label %if.then1633, label %if.else1634

if.then1633:                                      ; preds = %if.then1630
  store i32 0, i32* %ca, align 4
  store i32 1, i32* %c1, align 4
  store i32 2, i32* %c2, align 4
  br label %if.end1640

if.else1634:                                      ; preds = %if.then1630
  %1023 = load %struct.object*, %struct.object** %op, align 8
  %type1635 = getelementptr inbounds %struct.object, %struct.object* %1023, i32 0, i32 0
  %1024 = load i32, i32* %type1635, align 8
  %cmp1636 = icmp eq i32 %1024, 22
  br i1 %cmp1636, label %if.then1637, label %if.else1638

if.then1637:                                      ; preds = %if.else1634
  store i32 1, i32* %ca, align 4
  store i32 2, i32* %c1, align 4
  store i32 0, i32* %c2, align 4
  br label %if.end1639

if.else1638:                                      ; preds = %if.else1634
  store i32 2, i32* %ca, align 4
  store i32 0, i32* %c1, align 4
  store i32 1, i32* %c2, align 4
  br label %if.end1639

if.end1639:                                       ; preds = %if.else1638, %if.then1637
  br label %if.end1640

if.end1640:                                       ; preds = %if.end1639, %if.then1633
  %1025 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1026 = load i32, i32* %ca, align 4
  %idxprom1641 = sext i32 %1026 to i64
  %arrayidx1642 = getelementptr inbounds [2 x double], [2 x double]* %1025, i64 %idxprom1641
  %arrayidx1643 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1642, i64 0, i64 1
  %1027 = load double, double* %arrayidx1643, align 8
  %1028 = load %struct.object*, %struct.object** %op, align 8
  %cen1644 = getelementptr inbounds %struct.object, %struct.object* %1028, i32 0, i32 2
  %1029 = load i32, i32* %ca, align 4
  %idxprom1645 = sext i32 %1029 to i64
  %arrayidx1646 = getelementptr inbounds [3 x double], [3 x double]* %cen1644, i64 0, i64 %idxprom1645
  %1030 = load double, double* %arrayidx1646, align 8
  %1031 = load %struct.object*, %struct.object** %op, align 8
  %size1647 = getelementptr inbounds %struct.object, %struct.object* %1031, i32 0, i32 6
  %1032 = load i32, i32* %ca, align 4
  %idxprom1648 = sext i32 %1032 to i64
  %arrayidx1649 = getelementptr inbounds [3 x double], [3 x double]* %size1647, i64 0, i64 %idxprom1648
  %1033 = load double, double* %arrayidx1649, align 8
  %sub1650 = fsub double %1030, %1033
  %cmp1651 = fcmp ogt double %1027, %sub1650
  br i1 %cmp1651, label %land.lhs.true1652, label %if.end2190

land.lhs.true1652:                                ; preds = %if.end1640
  %1034 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1035 = load i32, i32* %ca, align 4
  %idxprom1653 = sext i32 %1035 to i64
  %arrayidx1654 = getelementptr inbounds [2 x double], [2 x double]* %1034, i64 %idxprom1653
  %arrayidx1655 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1654, i64 0, i64 0
  %1036 = load double, double* %arrayidx1655, align 8
  %1037 = load %struct.object*, %struct.object** %op, align 8
  %cen1656 = getelementptr inbounds %struct.object, %struct.object* %1037, i32 0, i32 2
  %1038 = load i32, i32* %ca, align 4
  %idxprom1657 = sext i32 %1038 to i64
  %arrayidx1658 = getelementptr inbounds [3 x double], [3 x double]* %cen1656, i64 0, i64 %idxprom1657
  %1039 = load double, double* %arrayidx1658, align 8
  %1040 = load %struct.object*, %struct.object** %op, align 8
  %size1659 = getelementptr inbounds %struct.object, %struct.object* %1040, i32 0, i32 6
  %1041 = load i32, i32* %ca, align 4
  %idxprom1660 = sext i32 %1041 to i64
  %arrayidx1661 = getelementptr inbounds [3 x double], [3 x double]* %size1659, i64 0, i64 %idxprom1660
  %1042 = load double, double* %arrayidx1661, align 8
  %add1662 = fadd double %1039, %1042
  %cmp1663 = fcmp olt double %1036, %add1662
  br i1 %cmp1663, label %if.then1664, label %if.end2190

if.then1664:                                      ; preds = %land.lhs.true1652
  store i32 0, i32* %zc, align 4
  store i32 0, i32* %yc, align 4
  %1043 = load %struct.object*, %struct.object** %op, align 8
  %cen1665 = getelementptr inbounds %struct.object, %struct.object* %1043, i32 0, i32 2
  %1044 = load i32, i32* %c1, align 4
  %idxprom1666 = sext i32 %1044 to i64
  %arrayidx1667 = getelementptr inbounds [3 x double], [3 x double]* %cen1665, i64 0, i64 %idxprom1666
  %1045 = load double, double* %arrayidx1667, align 8
  %1046 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1047 = load i32, i32* %c1, align 4
  %idxprom1668 = sext i32 %1047 to i64
  %arrayidx1669 = getelementptr inbounds [2 x double], [2 x double]* %1046, i64 %idxprom1668
  %arrayidx1670 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1669, i64 0, i64 0
  %1048 = load double, double* %arrayidx1670, align 8
  %cmp1671 = fcmp olt double %1045, %1048
  br i1 %cmp1671, label %if.then1672, label %if.else1673

if.then1672:                                      ; preds = %if.then1664
  store i32 0, i32* %yv, align 4
  br label %if.end1699

if.else1673:                                      ; preds = %if.then1664
  %1049 = load %struct.object*, %struct.object** %op, align 8
  %cen1674 = getelementptr inbounds %struct.object, %struct.object* %1049, i32 0, i32 2
  %1050 = load i32, i32* %c1, align 4
  %idxprom1675 = sext i32 %1050 to i64
  %arrayidx1676 = getelementptr inbounds [3 x double], [3 x double]* %cen1674, i64 0, i64 %idxprom1675
  %1051 = load double, double* %arrayidx1676, align 8
  %1052 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1053 = load i32, i32* %c1, align 4
  %idxprom1677 = sext i32 %1053 to i64
  %arrayidx1678 = getelementptr inbounds [2 x double], [2 x double]* %1052, i64 %idxprom1677
  %arrayidx1679 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1678, i64 0, i64 1
  %1054 = load double, double* %arrayidx1679, align 8
  %cmp1680 = fcmp ogt double %1051, %1054
  br i1 %cmp1680, label %if.then1681, label %if.else1682

if.then1681:                                      ; preds = %if.else1673
  store i32 1, i32* %yv, align 4
  br label %if.end1698

if.else1682:                                      ; preds = %if.else1673
  store i32 1, i32* %yc, align 4
  %1055 = load %struct.object*, %struct.object** %op, align 8
  %cen1683 = getelementptr inbounds %struct.object, %struct.object* %1055, i32 0, i32 2
  %1056 = load i32, i32* %c1, align 4
  %idxprom1684 = sext i32 %1056 to i64
  %arrayidx1685 = getelementptr inbounds [3 x double], [3 x double]* %cen1683, i64 0, i64 %idxprom1684
  %1057 = load double, double* %arrayidx1685, align 8
  %1058 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1059 = load i32, i32* %c1, align 4
  %idxprom1686 = sext i32 %1059 to i64
  %arrayidx1687 = getelementptr inbounds [2 x double], [2 x double]* %1058, i64 %idxprom1686
  %arrayidx1688 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1687, i64 0, i64 0
  %1060 = load double, double* %arrayidx1688, align 8
  %1061 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1062 = load i32, i32* %c1, align 4
  %idxprom1689 = sext i32 %1062 to i64
  %arrayidx1690 = getelementptr inbounds [2 x double], [2 x double]* %1061, i64 %idxprom1689
  %arrayidx1691 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1690, i64 0, i64 1
  %1063 = load double, double* %arrayidx1691, align 8
  %add1692 = fadd double %1060, %1063
  %div1693 = fdiv double %add1692, 2.000000e+00
  %cmp1694 = fcmp olt double %1057, %div1693
  br i1 %cmp1694, label %if.then1695, label %if.else1696

if.then1695:                                      ; preds = %if.else1682
  store i32 0, i32* %yv, align 4
  br label %if.end1697

if.else1696:                                      ; preds = %if.else1682
  store i32 1, i32* %yv, align 4
  br label %if.end1697

if.end1697:                                       ; preds = %if.else1696, %if.then1695
  br label %if.end1698

if.end1698:                                       ; preds = %if.end1697, %if.then1681
  br label %if.end1699

if.end1699:                                       ; preds = %if.end1698, %if.then1672
  %1064 = load %struct.object*, %struct.object** %op, align 8
  %cen1700 = getelementptr inbounds %struct.object, %struct.object* %1064, i32 0, i32 2
  %1065 = load i32, i32* %c2, align 4
  %idxprom1701 = sext i32 %1065 to i64
  %arrayidx1702 = getelementptr inbounds [3 x double], [3 x double]* %cen1700, i64 0, i64 %idxprom1701
  %1066 = load double, double* %arrayidx1702, align 8
  %1067 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1068 = load i32, i32* %c2, align 4
  %idxprom1703 = sext i32 %1068 to i64
  %arrayidx1704 = getelementptr inbounds [2 x double], [2 x double]* %1067, i64 %idxprom1703
  %arrayidx1705 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1704, i64 0, i64 0
  %1069 = load double, double* %arrayidx1705, align 8
  %cmp1706 = fcmp olt double %1066, %1069
  br i1 %cmp1706, label %if.then1707, label %if.else1708

if.then1707:                                      ; preds = %if.end1699
  store i32 0, i32* %zv, align 4
  br label %if.end1734

if.else1708:                                      ; preds = %if.end1699
  %1070 = load %struct.object*, %struct.object** %op, align 8
  %cen1709 = getelementptr inbounds %struct.object, %struct.object* %1070, i32 0, i32 2
  %1071 = load i32, i32* %c2, align 4
  %idxprom1710 = sext i32 %1071 to i64
  %arrayidx1711 = getelementptr inbounds [3 x double], [3 x double]* %cen1709, i64 0, i64 %idxprom1710
  %1072 = load double, double* %arrayidx1711, align 8
  %1073 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1074 = load i32, i32* %c2, align 4
  %idxprom1712 = sext i32 %1074 to i64
  %arrayidx1713 = getelementptr inbounds [2 x double], [2 x double]* %1073, i64 %idxprom1712
  %arrayidx1714 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1713, i64 0, i64 1
  %1075 = load double, double* %arrayidx1714, align 8
  %cmp1715 = fcmp ogt double %1072, %1075
  br i1 %cmp1715, label %if.then1716, label %if.else1717

if.then1716:                                      ; preds = %if.else1708
  store i32 1, i32* %zv, align 4
  br label %if.end1733

if.else1717:                                      ; preds = %if.else1708
  store i32 1, i32* %zc, align 4
  %1076 = load %struct.object*, %struct.object** %op, align 8
  %cen1718 = getelementptr inbounds %struct.object, %struct.object* %1076, i32 0, i32 2
  %1077 = load i32, i32* %c2, align 4
  %idxprom1719 = sext i32 %1077 to i64
  %arrayidx1720 = getelementptr inbounds [3 x double], [3 x double]* %cen1718, i64 0, i64 %idxprom1719
  %1078 = load double, double* %arrayidx1720, align 8
  %1079 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1080 = load i32, i32* %c2, align 4
  %idxprom1721 = sext i32 %1080 to i64
  %arrayidx1722 = getelementptr inbounds [2 x double], [2 x double]* %1079, i64 %idxprom1721
  %arrayidx1723 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1722, i64 0, i64 0
  %1081 = load double, double* %arrayidx1723, align 8
  %1082 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1083 = load i32, i32* %c2, align 4
  %idxprom1724 = sext i32 %1083 to i64
  %arrayidx1725 = getelementptr inbounds [2 x double], [2 x double]* %1082, i64 %idxprom1724
  %arrayidx1726 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1725, i64 0, i64 1
  %1084 = load double, double* %arrayidx1726, align 8
  %add1727 = fadd double %1081, %1084
  %div1728 = fdiv double %add1727, 2.000000e+00
  %cmp1729 = fcmp olt double %1078, %div1728
  br i1 %cmp1729, label %if.then1730, label %if.else1731

if.then1730:                                      ; preds = %if.else1717
  store i32 0, i32* %zv, align 4
  br label %if.end1732

if.else1731:                                      ; preds = %if.else1717
  store i32 1, i32* %zv, align 4
  br label %if.end1732

if.end1732:                                       ; preds = %if.else1731, %if.then1730
  br label %if.end1733

if.end1733:                                       ; preds = %if.end1732, %if.then1716
  br label %if.end1734

if.end1734:                                       ; preds = %if.end1733, %if.then1707
  %1085 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1735 = getelementptr inbounds [2 x double], [2 x double]* %1085, i64 0
  %arrayidx1736 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1735, i64 0, i64 0
  %1086 = load double, double* %arrayidx1736, align 8
  %1087 = load %struct.object*, %struct.object** %op, align 8
  %cen1737 = getelementptr inbounds %struct.object, %struct.object* %1087, i32 0, i32 2
  %arrayidx1738 = getelementptr inbounds [3 x double], [3 x double]* %cen1737, i64 0, i64 0
  %1088 = load double, double* %arrayidx1738, align 8
  %1089 = load %struct.object*, %struct.object** %op, align 8
  %size1739 = getelementptr inbounds %struct.object, %struct.object* %1089, i32 0, i32 6
  %arrayidx1740 = getelementptr inbounds [3 x double], [3 x double]* %size1739, i64 0, i64 0
  %1090 = load double, double* %arrayidx1740, align 8
  %sub1741 = fsub double %1088, %1090
  %cmp1742 = fcmp olt double %1086, %sub1741
  br i1 %cmp1742, label %land.lhs.true1743, label %lor.lhs.false1752

land.lhs.true1743:                                ; preds = %if.end1734
  %1091 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1744 = getelementptr inbounds [2 x double], [2 x double]* %1091, i64 0
  %arrayidx1745 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1744, i64 0, i64 1
  %1092 = load double, double* %arrayidx1745, align 8
  %1093 = load %struct.object*, %struct.object** %op, align 8
  %cen1746 = getelementptr inbounds %struct.object, %struct.object* %1093, i32 0, i32 2
  %arrayidx1747 = getelementptr inbounds [3 x double], [3 x double]* %cen1746, i64 0, i64 0
  %1094 = load double, double* %arrayidx1747, align 8
  %1095 = load %struct.object*, %struct.object** %op, align 8
  %size1748 = getelementptr inbounds %struct.object, %struct.object* %1095, i32 0, i32 6
  %arrayidx1749 = getelementptr inbounds [3 x double], [3 x double]* %size1748, i64 0, i64 0
  %1096 = load double, double* %arrayidx1749, align 8
  %add1750 = fadd double %1094, %1096
  %cmp1751 = fcmp olt double %1092, %add1750
  br i1 %cmp1751, label %if.then1770, label %lor.lhs.false1752

lor.lhs.false1752:                                ; preds = %land.lhs.true1743, %if.end1734
  %1097 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1753 = getelementptr inbounds [2 x double], [2 x double]* %1097, i64 0
  %arrayidx1754 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1753, i64 0, i64 0
  %1098 = load double, double* %arrayidx1754, align 8
  %1099 = load %struct.object*, %struct.object** %op, align 8
  %cen1755 = getelementptr inbounds %struct.object, %struct.object* %1099, i32 0, i32 2
  %arrayidx1756 = getelementptr inbounds [3 x double], [3 x double]* %cen1755, i64 0, i64 0
  %1100 = load double, double* %arrayidx1756, align 8
  %1101 = load %struct.object*, %struct.object** %op, align 8
  %size1757 = getelementptr inbounds %struct.object, %struct.object* %1101, i32 0, i32 6
  %arrayidx1758 = getelementptr inbounds [3 x double], [3 x double]* %size1757, i64 0, i64 0
  %1102 = load double, double* %arrayidx1758, align 8
  %sub1759 = fsub double %1100, %1102
  %cmp1760 = fcmp ogt double %1098, %sub1759
  br i1 %cmp1760, label %land.lhs.true1761, label %if.else1865

land.lhs.true1761:                                ; preds = %lor.lhs.false1752
  %1103 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %arrayidx1762 = getelementptr inbounds [2 x double], [2 x double]* %1103, i64 0
  %arrayidx1763 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1762, i64 0, i64 1
  %1104 = load double, double* %arrayidx1763, align 8
  %1105 = load %struct.object*, %struct.object** %op, align 8
  %cen1764 = getelementptr inbounds %struct.object, %struct.object* %1105, i32 0, i32 2
  %arrayidx1765 = getelementptr inbounds [3 x double], [3 x double]* %cen1764, i64 0, i64 0
  %1106 = load double, double* %arrayidx1765, align 8
  %1107 = load %struct.object*, %struct.object** %op, align 8
  %size1766 = getelementptr inbounds %struct.object, %struct.object* %1107, i32 0, i32 6
  %arrayidx1767 = getelementptr inbounds [3 x double], [3 x double]* %size1766, i64 0, i64 0
  %1108 = load double, double* %arrayidx1767, align 8
  %add1768 = fadd double %1106, %1108
  %cmp1769 = fcmp ogt double %1104, %add1768
  br i1 %cmp1769, label %if.then1770, label %if.else1865

if.then1770:                                      ; preds = %land.lhs.true1761, %land.lhs.true1743
  %1109 = load i32, i32* %yc, align 4
  %tobool1771 = icmp ne i32 %1109, 0
  br i1 %tobool1771, label %if.then1772, label %if.else1791

if.then1772:                                      ; preds = %if.then1770
  %1110 = load i32, i32* %zc, align 4
  %tobool1773 = icmp ne i32 %1110, 0
  br i1 %tobool1773, label %if.then1774, label %if.else1775

if.then1774:                                      ; preds = %if.then1772
  store i32 1, i32* %intersect, align 4
  br label %if.end1790

if.else1775:                                      ; preds = %if.then1772
  %1111 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1112 = load i32, i32* %c2, align 4
  %idxprom1776 = sext i32 %1112 to i64
  %arrayidx1777 = getelementptr inbounds [2 x double], [2 x double]* %1111, i64 %idxprom1776
  %1113 = load i32, i32* %zv, align 4
  %idxprom1778 = sext i32 %1113 to i64
  %arrayidx1779 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1777, i64 0, i64 %idxprom1778
  %1114 = load double, double* %arrayidx1779, align 8
  %1115 = load %struct.object*, %struct.object** %op, align 8
  %cen1780 = getelementptr inbounds %struct.object, %struct.object* %1115, i32 0, i32 2
  %1116 = load i32, i32* %c2, align 4
  %idxprom1781 = sext i32 %1116 to i64
  %arrayidx1782 = getelementptr inbounds [3 x double], [3 x double]* %cen1780, i64 0, i64 %idxprom1781
  %1117 = load double, double* %arrayidx1782, align 8
  %sub1783 = fsub double %1114, %1117
  %1118 = call double @llvm.fabs.f64(double %sub1783)
  %1119 = load %struct.object*, %struct.object** %op, align 8
  %size1784 = getelementptr inbounds %struct.object, %struct.object* %1119, i32 0, i32 6
  %1120 = load i32, i32* %c2, align 4
  %idxprom1785 = sext i32 %1120 to i64
  %arrayidx1786 = getelementptr inbounds [3 x double], [3 x double]* %size1784, i64 0, i64 %idxprom1785
  %1121 = load double, double* %arrayidx1786, align 8
  %cmp1787 = fcmp olt double %1118, %1121
  br i1 %cmp1787, label %if.then1788, label %if.end1789

if.then1788:                                      ; preds = %if.else1775
  store i32 1, i32* %intersect, align 4
  br label %if.end1789

if.end1789:                                       ; preds = %if.then1788, %if.else1775
  br label %if.end1790

if.end1790:                                       ; preds = %if.end1789, %if.then1774
  br label %if.end1864

if.else1791:                                      ; preds = %if.then1770
  %1122 = load i32, i32* %zc, align 4
  %tobool1792 = icmp ne i32 %1122, 0
  br i1 %tobool1792, label %if.then1793, label %if.else1808

if.then1793:                                      ; preds = %if.else1791
  %1123 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1124 = load i32, i32* %c1, align 4
  %idxprom1794 = sext i32 %1124 to i64
  %arrayidx1795 = getelementptr inbounds [2 x double], [2 x double]* %1123, i64 %idxprom1794
  %1125 = load i32, i32* %yv, align 4
  %idxprom1796 = sext i32 %1125 to i64
  %arrayidx1797 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1795, i64 0, i64 %idxprom1796
  %1126 = load double, double* %arrayidx1797, align 8
  %1127 = load %struct.object*, %struct.object** %op, align 8
  %cen1798 = getelementptr inbounds %struct.object, %struct.object* %1127, i32 0, i32 2
  %1128 = load i32, i32* %c1, align 4
  %idxprom1799 = sext i32 %1128 to i64
  %arrayidx1800 = getelementptr inbounds [3 x double], [3 x double]* %cen1798, i64 0, i64 %idxprom1799
  %1129 = load double, double* %arrayidx1800, align 8
  %sub1801 = fsub double %1126, %1129
  %1130 = call double @llvm.fabs.f64(double %sub1801)
  %1131 = load %struct.object*, %struct.object** %op, align 8
  %size1802 = getelementptr inbounds %struct.object, %struct.object* %1131, i32 0, i32 6
  %1132 = load i32, i32* %c1, align 4
  %idxprom1803 = sext i32 %1132 to i64
  %arrayidx1804 = getelementptr inbounds [3 x double], [3 x double]* %size1802, i64 0, i64 %idxprom1803
  %1133 = load double, double* %arrayidx1804, align 8
  %cmp1805 = fcmp olt double %1130, %1133
  br i1 %cmp1805, label %if.then1806, label %if.end1807

if.then1806:                                      ; preds = %if.then1793
  store i32 1, i32* %intersect, align 4
  br label %if.end1807

if.end1807:                                       ; preds = %if.then1806, %if.then1793
  br label %if.end1863

if.else1808:                                      ; preds = %if.else1791
  %1134 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1135 = load i32, i32* %c1, align 4
  %idxprom1809 = sext i32 %1135 to i64
  %arrayidx1810 = getelementptr inbounds [2 x double], [2 x double]* %1134, i64 %idxprom1809
  %1136 = load i32, i32* %yv, align 4
  %idxprom1811 = sext i32 %1136 to i64
  %arrayidx1812 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1810, i64 0, i64 %idxprom1811
  %1137 = load double, double* %arrayidx1812, align 8
  %1138 = load %struct.object*, %struct.object** %op, align 8
  %cen1813 = getelementptr inbounds %struct.object, %struct.object* %1138, i32 0, i32 2
  %1139 = load i32, i32* %c1, align 4
  %idxprom1814 = sext i32 %1139 to i64
  %arrayidx1815 = getelementptr inbounds [3 x double], [3 x double]* %cen1813, i64 0, i64 %idxprom1814
  %1140 = load double, double* %arrayidx1815, align 8
  %sub1816 = fsub double %1137, %1140
  %1141 = load %struct.object*, %struct.object** %op, align 8
  %size1817 = getelementptr inbounds %struct.object, %struct.object* %1141, i32 0, i32 6
  %1142 = load i32, i32* %c1, align 4
  %idxprom1818 = sext i32 %1142 to i64
  %arrayidx1819 = getelementptr inbounds [3 x double], [3 x double]* %size1817, i64 0, i64 %idxprom1818
  %1143 = load double, double* %arrayidx1819, align 8
  %div1820 = fdiv double %sub1816, %1143
  %1144 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1145 = load i32, i32* %c1, align 4
  %idxprom1821 = sext i32 %1145 to i64
  %arrayidx1822 = getelementptr inbounds [2 x double], [2 x double]* %1144, i64 %idxprom1821
  %1146 = load i32, i32* %yv, align 4
  %idxprom1823 = sext i32 %1146 to i64
  %arrayidx1824 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1822, i64 0, i64 %idxprom1823
  %1147 = load double, double* %arrayidx1824, align 8
  %1148 = load %struct.object*, %struct.object** %op, align 8
  %cen1825 = getelementptr inbounds %struct.object, %struct.object* %1148, i32 0, i32 2
  %1149 = load i32, i32* %c1, align 4
  %idxprom1826 = sext i32 %1149 to i64
  %arrayidx1827 = getelementptr inbounds [3 x double], [3 x double]* %cen1825, i64 0, i64 %idxprom1826
  %1150 = load double, double* %arrayidx1827, align 8
  %sub1828 = fsub double %1147, %1150
  %1151 = load %struct.object*, %struct.object** %op, align 8
  %size1829 = getelementptr inbounds %struct.object, %struct.object* %1151, i32 0, i32 6
  %1152 = load i32, i32* %c1, align 4
  %idxprom1830 = sext i32 %1152 to i64
  %arrayidx1831 = getelementptr inbounds [3 x double], [3 x double]* %size1829, i64 0, i64 %idxprom1830
  %1153 = load double, double* %arrayidx1831, align 8
  %div1832 = fdiv double %sub1828, %1153
  %mul1833 = fmul double %div1820, %div1832
  %1154 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1155 = load i32, i32* %c2, align 4
  %idxprom1834 = sext i32 %1155 to i64
  %arrayidx1835 = getelementptr inbounds [2 x double], [2 x double]* %1154, i64 %idxprom1834
  %1156 = load i32, i32* %zv, align 4
  %idxprom1836 = sext i32 %1156 to i64
  %arrayidx1837 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1835, i64 0, i64 %idxprom1836
  %1157 = load double, double* %arrayidx1837, align 8
  %1158 = load %struct.object*, %struct.object** %op, align 8
  %cen1838 = getelementptr inbounds %struct.object, %struct.object* %1158, i32 0, i32 2
  %1159 = load i32, i32* %c2, align 4
  %idxprom1839 = sext i32 %1159 to i64
  %arrayidx1840 = getelementptr inbounds [3 x double], [3 x double]* %cen1838, i64 0, i64 %idxprom1839
  %1160 = load double, double* %arrayidx1840, align 8
  %sub1841 = fsub double %1157, %1160
  %1161 = load %struct.object*, %struct.object** %op, align 8
  %size1842 = getelementptr inbounds %struct.object, %struct.object* %1161, i32 0, i32 6
  %1162 = load i32, i32* %c2, align 4
  %idxprom1843 = sext i32 %1162 to i64
  %arrayidx1844 = getelementptr inbounds [3 x double], [3 x double]* %size1842, i64 0, i64 %idxprom1843
  %1163 = load double, double* %arrayidx1844, align 8
  %div1845 = fdiv double %sub1841, %1163
  %1164 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1165 = load i32, i32* %c2, align 4
  %idxprom1846 = sext i32 %1165 to i64
  %arrayidx1847 = getelementptr inbounds [2 x double], [2 x double]* %1164, i64 %idxprom1846
  %1166 = load i32, i32* %zv, align 4
  %idxprom1848 = sext i32 %1166 to i64
  %arrayidx1849 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1847, i64 0, i64 %idxprom1848
  %1167 = load double, double* %arrayidx1849, align 8
  %1168 = load %struct.object*, %struct.object** %op, align 8
  %cen1850 = getelementptr inbounds %struct.object, %struct.object* %1168, i32 0, i32 2
  %1169 = load i32, i32* %c2, align 4
  %idxprom1851 = sext i32 %1169 to i64
  %arrayidx1852 = getelementptr inbounds [3 x double], [3 x double]* %cen1850, i64 0, i64 %idxprom1851
  %1170 = load double, double* %arrayidx1852, align 8
  %sub1853 = fsub double %1167, %1170
  %1171 = load %struct.object*, %struct.object** %op, align 8
  %size1854 = getelementptr inbounds %struct.object, %struct.object* %1171, i32 0, i32 6
  %1172 = load i32, i32* %c2, align 4
  %idxprom1855 = sext i32 %1172 to i64
  %arrayidx1856 = getelementptr inbounds [3 x double], [3 x double]* %size1854, i64 0, i64 %idxprom1855
  %1173 = load double, double* %arrayidx1856, align 8
  %div1857 = fdiv double %sub1853, %1173
  %mul1858 = fmul double %div1845, %div1857
  %add1859 = fadd double %mul1833, %mul1858
  %cmp1860 = fcmp olt double %add1859, 1.000000e+00
  br i1 %cmp1860, label %if.then1861, label %if.end1862

if.then1861:                                      ; preds = %if.else1808
  store i32 1, i32* %intersect, align 4
  br label %if.end1862

if.end1862:                                       ; preds = %if.then1861, %if.else1808
  br label %if.end1863

if.end1863:                                       ; preds = %if.end1862, %if.end1807
  br label %if.end1864

if.end1864:                                       ; preds = %if.end1863, %if.end1790
  br label %if.end2189

if.else1865:                                      ; preds = %land.lhs.true1761, %lor.lhs.false1752
  %1174 = load i32, i32* %yc, align 4
  %tobool1866 = icmp ne i32 %1174, 0
  br i1 %tobool1866, label %if.then1867, label %if.else2001

if.then1867:                                      ; preds = %if.else1865
  %1175 = load i32, i32* %zc, align 4
  %tobool1868 = icmp ne i32 %1175, 0
  br i1 %tobool1868, label %if.then1869, label %if.else1928

if.then1869:                                      ; preds = %if.then1867
  %1176 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1177 = load i32, i32* %c1, align 4
  %idxprom1870 = sext i32 %1177 to i64
  %arrayidx1871 = getelementptr inbounds [2 x double], [2 x double]* %1176, i64 %idxprom1870
  %1178 = load i32, i32* %yv, align 4
  %sub1872 = sub nsw i32 1, %1178
  %idxprom1873 = sext i32 %sub1872 to i64
  %arrayidx1874 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1871, i64 0, i64 %idxprom1873
  %1179 = load double, double* %arrayidx1874, align 8
  %1180 = load %struct.object*, %struct.object** %op, align 8
  %cen1875 = getelementptr inbounds %struct.object, %struct.object* %1180, i32 0, i32 2
  %1181 = load i32, i32* %c1, align 4
  %idxprom1876 = sext i32 %1181 to i64
  %arrayidx1877 = getelementptr inbounds [3 x double], [3 x double]* %cen1875, i64 0, i64 %idxprom1876
  %1182 = load double, double* %arrayidx1877, align 8
  %sub1878 = fsub double %1179, %1182
  %1183 = load %struct.object*, %struct.object** %op, align 8
  %size1879 = getelementptr inbounds %struct.object, %struct.object* %1183, i32 0, i32 6
  %1184 = load i32, i32* %c1, align 4
  %idxprom1880 = sext i32 %1184 to i64
  %arrayidx1881 = getelementptr inbounds [3 x double], [3 x double]* %size1879, i64 0, i64 %idxprom1880
  %1185 = load double, double* %arrayidx1881, align 8
  %div1882 = fdiv double %sub1878, %1185
  %1186 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1187 = load i32, i32* %c1, align 4
  %idxprom1883 = sext i32 %1187 to i64
  %arrayidx1884 = getelementptr inbounds [2 x double], [2 x double]* %1186, i64 %idxprom1883
  %1188 = load i32, i32* %yv, align 4
  %sub1885 = sub nsw i32 1, %1188
  %idxprom1886 = sext i32 %sub1885 to i64
  %arrayidx1887 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1884, i64 0, i64 %idxprom1886
  %1189 = load double, double* %arrayidx1887, align 8
  %1190 = load %struct.object*, %struct.object** %op, align 8
  %cen1888 = getelementptr inbounds %struct.object, %struct.object* %1190, i32 0, i32 2
  %1191 = load i32, i32* %c1, align 4
  %idxprom1889 = sext i32 %1191 to i64
  %arrayidx1890 = getelementptr inbounds [3 x double], [3 x double]* %cen1888, i64 0, i64 %idxprom1889
  %1192 = load double, double* %arrayidx1890, align 8
  %sub1891 = fsub double %1189, %1192
  %1193 = load %struct.object*, %struct.object** %op, align 8
  %size1892 = getelementptr inbounds %struct.object, %struct.object* %1193, i32 0, i32 6
  %1194 = load i32, i32* %c1, align 4
  %idxprom1893 = sext i32 %1194 to i64
  %arrayidx1894 = getelementptr inbounds [3 x double], [3 x double]* %size1892, i64 0, i64 %idxprom1893
  %1195 = load double, double* %arrayidx1894, align 8
  %div1895 = fdiv double %sub1891, %1195
  %mul1896 = fmul double %div1882, %div1895
  %1196 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1197 = load i32, i32* %c2, align 4
  %idxprom1897 = sext i32 %1197 to i64
  %arrayidx1898 = getelementptr inbounds [2 x double], [2 x double]* %1196, i64 %idxprom1897
  %1198 = load i32, i32* %zv, align 4
  %sub1899 = sub nsw i32 1, %1198
  %idxprom1900 = sext i32 %sub1899 to i64
  %arrayidx1901 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1898, i64 0, i64 %idxprom1900
  %1199 = load double, double* %arrayidx1901, align 8
  %1200 = load %struct.object*, %struct.object** %op, align 8
  %cen1902 = getelementptr inbounds %struct.object, %struct.object* %1200, i32 0, i32 2
  %1201 = load i32, i32* %c2, align 4
  %idxprom1903 = sext i32 %1201 to i64
  %arrayidx1904 = getelementptr inbounds [3 x double], [3 x double]* %cen1902, i64 0, i64 %idxprom1903
  %1202 = load double, double* %arrayidx1904, align 8
  %sub1905 = fsub double %1199, %1202
  %1203 = load %struct.object*, %struct.object** %op, align 8
  %size1906 = getelementptr inbounds %struct.object, %struct.object* %1203, i32 0, i32 6
  %1204 = load i32, i32* %c2, align 4
  %idxprom1907 = sext i32 %1204 to i64
  %arrayidx1908 = getelementptr inbounds [3 x double], [3 x double]* %size1906, i64 0, i64 %idxprom1907
  %1205 = load double, double* %arrayidx1908, align 8
  %div1909 = fdiv double %sub1905, %1205
  %1206 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1207 = load i32, i32* %c2, align 4
  %idxprom1910 = sext i32 %1207 to i64
  %arrayidx1911 = getelementptr inbounds [2 x double], [2 x double]* %1206, i64 %idxprom1910
  %1208 = load i32, i32* %zv, align 4
  %sub1912 = sub nsw i32 1, %1208
  %idxprom1913 = sext i32 %sub1912 to i64
  %arrayidx1914 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1911, i64 0, i64 %idxprom1913
  %1209 = load double, double* %arrayidx1914, align 8
  %1210 = load %struct.object*, %struct.object** %op, align 8
  %cen1915 = getelementptr inbounds %struct.object, %struct.object* %1210, i32 0, i32 2
  %1211 = load i32, i32* %c2, align 4
  %idxprom1916 = sext i32 %1211 to i64
  %arrayidx1917 = getelementptr inbounds [3 x double], [3 x double]* %cen1915, i64 0, i64 %idxprom1916
  %1212 = load double, double* %arrayidx1917, align 8
  %sub1918 = fsub double %1209, %1212
  %1213 = load %struct.object*, %struct.object** %op, align 8
  %size1919 = getelementptr inbounds %struct.object, %struct.object* %1213, i32 0, i32 6
  %1214 = load i32, i32* %c2, align 4
  %idxprom1920 = sext i32 %1214 to i64
  %arrayidx1921 = getelementptr inbounds [3 x double], [3 x double]* %size1919, i64 0, i64 %idxprom1920
  %1215 = load double, double* %arrayidx1921, align 8
  %div1922 = fdiv double %sub1918, %1215
  %mul1923 = fmul double %div1909, %div1922
  %add1924 = fadd double %mul1896, %mul1923
  %cmp1925 = fcmp ogt double %add1924, 1.000000e+00
  br i1 %cmp1925, label %if.then1926, label %if.end1927

if.then1926:                                      ; preds = %if.then1869
  store i32 1, i32* %intersect, align 4
  br label %if.end1927

if.end1927:                                       ; preds = %if.then1926, %if.then1869
  br label %if.end2000

if.else1928:                                      ; preds = %if.then1867
  %1216 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1217 = load i32, i32* %c2, align 4
  %idxprom1929 = sext i32 %1217 to i64
  %arrayidx1930 = getelementptr inbounds [2 x double], [2 x double]* %1216, i64 %idxprom1929
  %1218 = load i32, i32* %zv, align 4
  %idxprom1931 = sext i32 %1218 to i64
  %arrayidx1932 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1930, i64 0, i64 %idxprom1931
  %1219 = load double, double* %arrayidx1932, align 8
  %1220 = load %struct.object*, %struct.object** %op, align 8
  %cen1933 = getelementptr inbounds %struct.object, %struct.object* %1220, i32 0, i32 2
  %1221 = load i32, i32* %c2, align 4
  %idxprom1934 = sext i32 %1221 to i64
  %arrayidx1935 = getelementptr inbounds [3 x double], [3 x double]* %cen1933, i64 0, i64 %idxprom1934
  %1222 = load double, double* %arrayidx1935, align 8
  %sub1936 = fsub double %1219, %1222
  %1223 = call double @llvm.fabs.f64(double %sub1936)
  %1224 = load %struct.object*, %struct.object** %op, align 8
  %size1937 = getelementptr inbounds %struct.object, %struct.object* %1224, i32 0, i32 6
  %1225 = load i32, i32* %c2, align 4
  %idxprom1938 = sext i32 %1225 to i64
  %arrayidx1939 = getelementptr inbounds [3 x double], [3 x double]* %size1937, i64 0, i64 %idxprom1938
  %1226 = load double, double* %arrayidx1939, align 8
  %cmp1940 = fcmp olt double %1223, %1226
  br i1 %cmp1940, label %land.lhs.true1941, label %if.end1999

land.lhs.true1941:                                ; preds = %if.else1928
  %1227 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1228 = load i32, i32* %c1, align 4
  %idxprom1942 = sext i32 %1228 to i64
  %arrayidx1943 = getelementptr inbounds [2 x double], [2 x double]* %1227, i64 %idxprom1942
  %1229 = load i32, i32* %yv, align 4
  %sub1944 = sub nsw i32 1, %1229
  %idxprom1945 = sext i32 %sub1944 to i64
  %arrayidx1946 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1943, i64 0, i64 %idxprom1945
  %1230 = load double, double* %arrayidx1946, align 8
  %1231 = load %struct.object*, %struct.object** %op, align 8
  %cen1947 = getelementptr inbounds %struct.object, %struct.object* %1231, i32 0, i32 2
  %1232 = load i32, i32* %c1, align 4
  %idxprom1948 = sext i32 %1232 to i64
  %arrayidx1949 = getelementptr inbounds [3 x double], [3 x double]* %cen1947, i64 0, i64 %idxprom1948
  %1233 = load double, double* %arrayidx1949, align 8
  %sub1950 = fsub double %1230, %1233
  %1234 = load %struct.object*, %struct.object** %op, align 8
  %size1951 = getelementptr inbounds %struct.object, %struct.object* %1234, i32 0, i32 6
  %1235 = load i32, i32* %c1, align 4
  %idxprom1952 = sext i32 %1235 to i64
  %arrayidx1953 = getelementptr inbounds [3 x double], [3 x double]* %size1951, i64 0, i64 %idxprom1952
  %1236 = load double, double* %arrayidx1953, align 8
  %div1954 = fdiv double %sub1950, %1236
  %1237 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1238 = load i32, i32* %c1, align 4
  %idxprom1955 = sext i32 %1238 to i64
  %arrayidx1956 = getelementptr inbounds [2 x double], [2 x double]* %1237, i64 %idxprom1955
  %1239 = load i32, i32* %yv, align 4
  %sub1957 = sub nsw i32 1, %1239
  %idxprom1958 = sext i32 %sub1957 to i64
  %arrayidx1959 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1956, i64 0, i64 %idxprom1958
  %1240 = load double, double* %arrayidx1959, align 8
  %1241 = load %struct.object*, %struct.object** %op, align 8
  %cen1960 = getelementptr inbounds %struct.object, %struct.object* %1241, i32 0, i32 2
  %1242 = load i32, i32* %c1, align 4
  %idxprom1961 = sext i32 %1242 to i64
  %arrayidx1962 = getelementptr inbounds [3 x double], [3 x double]* %cen1960, i64 0, i64 %idxprom1961
  %1243 = load double, double* %arrayidx1962, align 8
  %sub1963 = fsub double %1240, %1243
  %1244 = load %struct.object*, %struct.object** %op, align 8
  %size1964 = getelementptr inbounds %struct.object, %struct.object* %1244, i32 0, i32 6
  %1245 = load i32, i32* %c1, align 4
  %idxprom1965 = sext i32 %1245 to i64
  %arrayidx1966 = getelementptr inbounds [3 x double], [3 x double]* %size1964, i64 0, i64 %idxprom1965
  %1246 = load double, double* %arrayidx1966, align 8
  %div1967 = fdiv double %sub1963, %1246
  %mul1968 = fmul double %div1954, %div1967
  %1247 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1248 = load i32, i32* %c2, align 4
  %idxprom1969 = sext i32 %1248 to i64
  %arrayidx1970 = getelementptr inbounds [2 x double], [2 x double]* %1247, i64 %idxprom1969
  %1249 = load i32, i32* %zv, align 4
  %sub1971 = sub nsw i32 1, %1249
  %idxprom1972 = sext i32 %sub1971 to i64
  %arrayidx1973 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1970, i64 0, i64 %idxprom1972
  %1250 = load double, double* %arrayidx1973, align 8
  %1251 = load %struct.object*, %struct.object** %op, align 8
  %cen1974 = getelementptr inbounds %struct.object, %struct.object* %1251, i32 0, i32 2
  %1252 = load i32, i32* %c2, align 4
  %idxprom1975 = sext i32 %1252 to i64
  %arrayidx1976 = getelementptr inbounds [3 x double], [3 x double]* %cen1974, i64 0, i64 %idxprom1975
  %1253 = load double, double* %arrayidx1976, align 8
  %sub1977 = fsub double %1250, %1253
  %1254 = load %struct.object*, %struct.object** %op, align 8
  %size1978 = getelementptr inbounds %struct.object, %struct.object* %1254, i32 0, i32 6
  %1255 = load i32, i32* %c2, align 4
  %idxprom1979 = sext i32 %1255 to i64
  %arrayidx1980 = getelementptr inbounds [3 x double], [3 x double]* %size1978, i64 0, i64 %idxprom1979
  %1256 = load double, double* %arrayidx1980, align 8
  %div1981 = fdiv double %sub1977, %1256
  %1257 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1258 = load i32, i32* %c2, align 4
  %idxprom1982 = sext i32 %1258 to i64
  %arrayidx1983 = getelementptr inbounds [2 x double], [2 x double]* %1257, i64 %idxprom1982
  %1259 = load i32, i32* %zv, align 4
  %sub1984 = sub nsw i32 1, %1259
  %idxprom1985 = sext i32 %sub1984 to i64
  %arrayidx1986 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx1983, i64 0, i64 %idxprom1985
  %1260 = load double, double* %arrayidx1986, align 8
  %1261 = load %struct.object*, %struct.object** %op, align 8
  %cen1987 = getelementptr inbounds %struct.object, %struct.object* %1261, i32 0, i32 2
  %1262 = load i32, i32* %c2, align 4
  %idxprom1988 = sext i32 %1262 to i64
  %arrayidx1989 = getelementptr inbounds [3 x double], [3 x double]* %cen1987, i64 0, i64 %idxprom1988
  %1263 = load double, double* %arrayidx1989, align 8
  %sub1990 = fsub double %1260, %1263
  %1264 = load %struct.object*, %struct.object** %op, align 8
  %size1991 = getelementptr inbounds %struct.object, %struct.object* %1264, i32 0, i32 6
  %1265 = load i32, i32* %c2, align 4
  %idxprom1992 = sext i32 %1265 to i64
  %arrayidx1993 = getelementptr inbounds [3 x double], [3 x double]* %size1991, i64 0, i64 %idxprom1992
  %1266 = load double, double* %arrayidx1993, align 8
  %div1994 = fdiv double %sub1990, %1266
  %mul1995 = fmul double %div1981, %div1994
  %add1996 = fadd double %mul1968, %mul1995
  %cmp1997 = fcmp ogt double %add1996, 1.000000e+00
  br i1 %cmp1997, label %if.then1998, label %if.end1999

if.then1998:                                      ; preds = %land.lhs.true1941
  store i32 1, i32* %intersect, align 4
  br label %if.end1999

if.end1999:                                       ; preds = %if.then1998, %land.lhs.true1941, %if.else1928
  br label %if.end2000

if.end2000:                                       ; preds = %if.end1999, %if.end1927
  br label %if.end2188

if.else2001:                                      ; preds = %if.else1865
  %1267 = load i32, i32* %zc, align 4
  %tobool2002 = icmp ne i32 %1267, 0
  br i1 %tobool2002, label %if.then2003, label %if.else2075

if.then2003:                                      ; preds = %if.else2001
  %1268 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1269 = load i32, i32* %c1, align 4
  %idxprom2004 = sext i32 %1269 to i64
  %arrayidx2005 = getelementptr inbounds [2 x double], [2 x double]* %1268, i64 %idxprom2004
  %1270 = load i32, i32* %yv, align 4
  %idxprom2006 = sext i32 %1270 to i64
  %arrayidx2007 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2005, i64 0, i64 %idxprom2006
  %1271 = load double, double* %arrayidx2007, align 8
  %1272 = load %struct.object*, %struct.object** %op, align 8
  %cen2008 = getelementptr inbounds %struct.object, %struct.object* %1272, i32 0, i32 2
  %1273 = load i32, i32* %c1, align 4
  %idxprom2009 = sext i32 %1273 to i64
  %arrayidx2010 = getelementptr inbounds [3 x double], [3 x double]* %cen2008, i64 0, i64 %idxprom2009
  %1274 = load double, double* %arrayidx2010, align 8
  %sub2011 = fsub double %1271, %1274
  %1275 = call double @llvm.fabs.f64(double %sub2011)
  %1276 = load %struct.object*, %struct.object** %op, align 8
  %size2012 = getelementptr inbounds %struct.object, %struct.object* %1276, i32 0, i32 6
  %1277 = load i32, i32* %c1, align 4
  %idxprom2013 = sext i32 %1277 to i64
  %arrayidx2014 = getelementptr inbounds [3 x double], [3 x double]* %size2012, i64 0, i64 %idxprom2013
  %1278 = load double, double* %arrayidx2014, align 8
  %cmp2015 = fcmp olt double %1275, %1278
  br i1 %cmp2015, label %land.lhs.true2016, label %if.end2074

land.lhs.true2016:                                ; preds = %if.then2003
  %1279 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1280 = load i32, i32* %c1, align 4
  %idxprom2017 = sext i32 %1280 to i64
  %arrayidx2018 = getelementptr inbounds [2 x double], [2 x double]* %1279, i64 %idxprom2017
  %1281 = load i32, i32* %yv, align 4
  %sub2019 = sub nsw i32 1, %1281
  %idxprom2020 = sext i32 %sub2019 to i64
  %arrayidx2021 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2018, i64 0, i64 %idxprom2020
  %1282 = load double, double* %arrayidx2021, align 8
  %1283 = load %struct.object*, %struct.object** %op, align 8
  %cen2022 = getelementptr inbounds %struct.object, %struct.object* %1283, i32 0, i32 2
  %1284 = load i32, i32* %c1, align 4
  %idxprom2023 = sext i32 %1284 to i64
  %arrayidx2024 = getelementptr inbounds [3 x double], [3 x double]* %cen2022, i64 0, i64 %idxprom2023
  %1285 = load double, double* %arrayidx2024, align 8
  %sub2025 = fsub double %1282, %1285
  %1286 = load %struct.object*, %struct.object** %op, align 8
  %size2026 = getelementptr inbounds %struct.object, %struct.object* %1286, i32 0, i32 6
  %1287 = load i32, i32* %c1, align 4
  %idxprom2027 = sext i32 %1287 to i64
  %arrayidx2028 = getelementptr inbounds [3 x double], [3 x double]* %size2026, i64 0, i64 %idxprom2027
  %1288 = load double, double* %arrayidx2028, align 8
  %div2029 = fdiv double %sub2025, %1288
  %1289 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1290 = load i32, i32* %c1, align 4
  %idxprom2030 = sext i32 %1290 to i64
  %arrayidx2031 = getelementptr inbounds [2 x double], [2 x double]* %1289, i64 %idxprom2030
  %1291 = load i32, i32* %yv, align 4
  %sub2032 = sub nsw i32 1, %1291
  %idxprom2033 = sext i32 %sub2032 to i64
  %arrayidx2034 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2031, i64 0, i64 %idxprom2033
  %1292 = load double, double* %arrayidx2034, align 8
  %1293 = load %struct.object*, %struct.object** %op, align 8
  %cen2035 = getelementptr inbounds %struct.object, %struct.object* %1293, i32 0, i32 2
  %1294 = load i32, i32* %c1, align 4
  %idxprom2036 = sext i32 %1294 to i64
  %arrayidx2037 = getelementptr inbounds [3 x double], [3 x double]* %cen2035, i64 0, i64 %idxprom2036
  %1295 = load double, double* %arrayidx2037, align 8
  %sub2038 = fsub double %1292, %1295
  %1296 = load %struct.object*, %struct.object** %op, align 8
  %size2039 = getelementptr inbounds %struct.object, %struct.object* %1296, i32 0, i32 6
  %1297 = load i32, i32* %c1, align 4
  %idxprom2040 = sext i32 %1297 to i64
  %arrayidx2041 = getelementptr inbounds [3 x double], [3 x double]* %size2039, i64 0, i64 %idxprom2040
  %1298 = load double, double* %arrayidx2041, align 8
  %div2042 = fdiv double %sub2038, %1298
  %mul2043 = fmul double %div2029, %div2042
  %1299 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1300 = load i32, i32* %c2, align 4
  %idxprom2044 = sext i32 %1300 to i64
  %arrayidx2045 = getelementptr inbounds [2 x double], [2 x double]* %1299, i64 %idxprom2044
  %1301 = load i32, i32* %zv, align 4
  %sub2046 = sub nsw i32 1, %1301
  %idxprom2047 = sext i32 %sub2046 to i64
  %arrayidx2048 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2045, i64 0, i64 %idxprom2047
  %1302 = load double, double* %arrayidx2048, align 8
  %1303 = load %struct.object*, %struct.object** %op, align 8
  %cen2049 = getelementptr inbounds %struct.object, %struct.object* %1303, i32 0, i32 2
  %1304 = load i32, i32* %c2, align 4
  %idxprom2050 = sext i32 %1304 to i64
  %arrayidx2051 = getelementptr inbounds [3 x double], [3 x double]* %cen2049, i64 0, i64 %idxprom2050
  %1305 = load double, double* %arrayidx2051, align 8
  %sub2052 = fsub double %1302, %1305
  %1306 = load %struct.object*, %struct.object** %op, align 8
  %size2053 = getelementptr inbounds %struct.object, %struct.object* %1306, i32 0, i32 6
  %1307 = load i32, i32* %c2, align 4
  %idxprom2054 = sext i32 %1307 to i64
  %arrayidx2055 = getelementptr inbounds [3 x double], [3 x double]* %size2053, i64 0, i64 %idxprom2054
  %1308 = load double, double* %arrayidx2055, align 8
  %div2056 = fdiv double %sub2052, %1308
  %1309 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1310 = load i32, i32* %c2, align 4
  %idxprom2057 = sext i32 %1310 to i64
  %arrayidx2058 = getelementptr inbounds [2 x double], [2 x double]* %1309, i64 %idxprom2057
  %1311 = load i32, i32* %zv, align 4
  %sub2059 = sub nsw i32 1, %1311
  %idxprom2060 = sext i32 %sub2059 to i64
  %arrayidx2061 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2058, i64 0, i64 %idxprom2060
  %1312 = load double, double* %arrayidx2061, align 8
  %1313 = load %struct.object*, %struct.object** %op, align 8
  %cen2062 = getelementptr inbounds %struct.object, %struct.object* %1313, i32 0, i32 2
  %1314 = load i32, i32* %c2, align 4
  %idxprom2063 = sext i32 %1314 to i64
  %arrayidx2064 = getelementptr inbounds [3 x double], [3 x double]* %cen2062, i64 0, i64 %idxprom2063
  %1315 = load double, double* %arrayidx2064, align 8
  %sub2065 = fsub double %1312, %1315
  %1316 = load %struct.object*, %struct.object** %op, align 8
  %size2066 = getelementptr inbounds %struct.object, %struct.object* %1316, i32 0, i32 6
  %1317 = load i32, i32* %c2, align 4
  %idxprom2067 = sext i32 %1317 to i64
  %arrayidx2068 = getelementptr inbounds [3 x double], [3 x double]* %size2066, i64 0, i64 %idxprom2067
  %1318 = load double, double* %arrayidx2068, align 8
  %div2069 = fdiv double %sub2065, %1318
  %mul2070 = fmul double %div2056, %div2069
  %add2071 = fadd double %mul2043, %mul2070
  %cmp2072 = fcmp ogt double %add2071, 1.000000e+00
  br i1 %cmp2072, label %if.then2073, label %if.end2074

if.then2073:                                      ; preds = %land.lhs.true2016
  store i32 1, i32* %intersect, align 4
  br label %if.end2074

if.end2074:                                       ; preds = %if.then2073, %land.lhs.true2016, %if.then2003
  br label %if.end2187

if.else2075:                                      ; preds = %if.else2001
  %1319 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1320 = load i32, i32* %c1, align 4
  %idxprom2076 = sext i32 %1320 to i64
  %arrayidx2077 = getelementptr inbounds [2 x double], [2 x double]* %1319, i64 %idxprom2076
  %1321 = load i32, i32* %yv, align 4
  %idxprom2078 = sext i32 %1321 to i64
  %arrayidx2079 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2077, i64 0, i64 %idxprom2078
  %1322 = load double, double* %arrayidx2079, align 8
  %1323 = load %struct.object*, %struct.object** %op, align 8
  %cen2080 = getelementptr inbounds %struct.object, %struct.object* %1323, i32 0, i32 2
  %1324 = load i32, i32* %c1, align 4
  %idxprom2081 = sext i32 %1324 to i64
  %arrayidx2082 = getelementptr inbounds [3 x double], [3 x double]* %cen2080, i64 0, i64 %idxprom2081
  %1325 = load double, double* %arrayidx2082, align 8
  %sub2083 = fsub double %1322, %1325
  %1326 = load %struct.object*, %struct.object** %op, align 8
  %size2084 = getelementptr inbounds %struct.object, %struct.object* %1326, i32 0, i32 6
  %1327 = load i32, i32* %c1, align 4
  %idxprom2085 = sext i32 %1327 to i64
  %arrayidx2086 = getelementptr inbounds [3 x double], [3 x double]* %size2084, i64 0, i64 %idxprom2085
  %1328 = load double, double* %arrayidx2086, align 8
  %div2087 = fdiv double %sub2083, %1328
  %1329 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1330 = load i32, i32* %c1, align 4
  %idxprom2088 = sext i32 %1330 to i64
  %arrayidx2089 = getelementptr inbounds [2 x double], [2 x double]* %1329, i64 %idxprom2088
  %1331 = load i32, i32* %yv, align 4
  %idxprom2090 = sext i32 %1331 to i64
  %arrayidx2091 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2089, i64 0, i64 %idxprom2090
  %1332 = load double, double* %arrayidx2091, align 8
  %1333 = load %struct.object*, %struct.object** %op, align 8
  %cen2092 = getelementptr inbounds %struct.object, %struct.object* %1333, i32 0, i32 2
  %1334 = load i32, i32* %c1, align 4
  %idxprom2093 = sext i32 %1334 to i64
  %arrayidx2094 = getelementptr inbounds [3 x double], [3 x double]* %cen2092, i64 0, i64 %idxprom2093
  %1335 = load double, double* %arrayidx2094, align 8
  %sub2095 = fsub double %1332, %1335
  %1336 = load %struct.object*, %struct.object** %op, align 8
  %size2096 = getelementptr inbounds %struct.object, %struct.object* %1336, i32 0, i32 6
  %1337 = load i32, i32* %c1, align 4
  %idxprom2097 = sext i32 %1337 to i64
  %arrayidx2098 = getelementptr inbounds [3 x double], [3 x double]* %size2096, i64 0, i64 %idxprom2097
  %1338 = load double, double* %arrayidx2098, align 8
  %div2099 = fdiv double %sub2095, %1338
  %mul2100 = fmul double %div2087, %div2099
  %1339 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1340 = load i32, i32* %c2, align 4
  %idxprom2101 = sext i32 %1340 to i64
  %arrayidx2102 = getelementptr inbounds [2 x double], [2 x double]* %1339, i64 %idxprom2101
  %1341 = load i32, i32* %zv, align 4
  %idxprom2103 = sext i32 %1341 to i64
  %arrayidx2104 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2102, i64 0, i64 %idxprom2103
  %1342 = load double, double* %arrayidx2104, align 8
  %1343 = load %struct.object*, %struct.object** %op, align 8
  %cen2105 = getelementptr inbounds %struct.object, %struct.object* %1343, i32 0, i32 2
  %1344 = load i32, i32* %c2, align 4
  %idxprom2106 = sext i32 %1344 to i64
  %arrayidx2107 = getelementptr inbounds [3 x double], [3 x double]* %cen2105, i64 0, i64 %idxprom2106
  %1345 = load double, double* %arrayidx2107, align 8
  %sub2108 = fsub double %1342, %1345
  %1346 = load %struct.object*, %struct.object** %op, align 8
  %size2109 = getelementptr inbounds %struct.object, %struct.object* %1346, i32 0, i32 6
  %1347 = load i32, i32* %c2, align 4
  %idxprom2110 = sext i32 %1347 to i64
  %arrayidx2111 = getelementptr inbounds [3 x double], [3 x double]* %size2109, i64 0, i64 %idxprom2110
  %1348 = load double, double* %arrayidx2111, align 8
  %div2112 = fdiv double %sub2108, %1348
  %1349 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1350 = load i32, i32* %c2, align 4
  %idxprom2113 = sext i32 %1350 to i64
  %arrayidx2114 = getelementptr inbounds [2 x double], [2 x double]* %1349, i64 %idxprom2113
  %1351 = load i32, i32* %zv, align 4
  %idxprom2115 = sext i32 %1351 to i64
  %arrayidx2116 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2114, i64 0, i64 %idxprom2115
  %1352 = load double, double* %arrayidx2116, align 8
  %1353 = load %struct.object*, %struct.object** %op, align 8
  %cen2117 = getelementptr inbounds %struct.object, %struct.object* %1353, i32 0, i32 2
  %1354 = load i32, i32* %c2, align 4
  %idxprom2118 = sext i32 %1354 to i64
  %arrayidx2119 = getelementptr inbounds [3 x double], [3 x double]* %cen2117, i64 0, i64 %idxprom2118
  %1355 = load double, double* %arrayidx2119, align 8
  %sub2120 = fsub double %1352, %1355
  %1356 = load %struct.object*, %struct.object** %op, align 8
  %size2121 = getelementptr inbounds %struct.object, %struct.object* %1356, i32 0, i32 6
  %1357 = load i32, i32* %c2, align 4
  %idxprom2122 = sext i32 %1357 to i64
  %arrayidx2123 = getelementptr inbounds [3 x double], [3 x double]* %size2121, i64 0, i64 %idxprom2122
  %1358 = load double, double* %arrayidx2123, align 8
  %div2124 = fdiv double %sub2120, %1358
  %mul2125 = fmul double %div2112, %div2124
  %add2126 = fadd double %mul2100, %mul2125
  %cmp2127 = fcmp olt double %add2126, 1.000000e+00
  br i1 %cmp2127, label %land.lhs.true2128, label %if.end2186

land.lhs.true2128:                                ; preds = %if.else2075
  %1359 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1360 = load i32, i32* %c1, align 4
  %idxprom2129 = sext i32 %1360 to i64
  %arrayidx2130 = getelementptr inbounds [2 x double], [2 x double]* %1359, i64 %idxprom2129
  %1361 = load i32, i32* %yv, align 4
  %sub2131 = sub nsw i32 1, %1361
  %idxprom2132 = sext i32 %sub2131 to i64
  %arrayidx2133 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2130, i64 0, i64 %idxprom2132
  %1362 = load double, double* %arrayidx2133, align 8
  %1363 = load %struct.object*, %struct.object** %op, align 8
  %cen2134 = getelementptr inbounds %struct.object, %struct.object* %1363, i32 0, i32 2
  %1364 = load i32, i32* %c1, align 4
  %idxprom2135 = sext i32 %1364 to i64
  %arrayidx2136 = getelementptr inbounds [3 x double], [3 x double]* %cen2134, i64 0, i64 %idxprom2135
  %1365 = load double, double* %arrayidx2136, align 8
  %sub2137 = fsub double %1362, %1365
  %1366 = load %struct.object*, %struct.object** %op, align 8
  %size2138 = getelementptr inbounds %struct.object, %struct.object* %1366, i32 0, i32 6
  %1367 = load i32, i32* %c1, align 4
  %idxprom2139 = sext i32 %1367 to i64
  %arrayidx2140 = getelementptr inbounds [3 x double], [3 x double]* %size2138, i64 0, i64 %idxprom2139
  %1368 = load double, double* %arrayidx2140, align 8
  %div2141 = fdiv double %sub2137, %1368
  %1369 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1370 = load i32, i32* %c1, align 4
  %idxprom2142 = sext i32 %1370 to i64
  %arrayidx2143 = getelementptr inbounds [2 x double], [2 x double]* %1369, i64 %idxprom2142
  %1371 = load i32, i32* %yv, align 4
  %sub2144 = sub nsw i32 1, %1371
  %idxprom2145 = sext i32 %sub2144 to i64
  %arrayidx2146 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2143, i64 0, i64 %idxprom2145
  %1372 = load double, double* %arrayidx2146, align 8
  %1373 = load %struct.object*, %struct.object** %op, align 8
  %cen2147 = getelementptr inbounds %struct.object, %struct.object* %1373, i32 0, i32 2
  %1374 = load i32, i32* %c1, align 4
  %idxprom2148 = sext i32 %1374 to i64
  %arrayidx2149 = getelementptr inbounds [3 x double], [3 x double]* %cen2147, i64 0, i64 %idxprom2148
  %1375 = load double, double* %arrayidx2149, align 8
  %sub2150 = fsub double %1372, %1375
  %1376 = load %struct.object*, %struct.object** %op, align 8
  %size2151 = getelementptr inbounds %struct.object, %struct.object* %1376, i32 0, i32 6
  %1377 = load i32, i32* %c1, align 4
  %idxprom2152 = sext i32 %1377 to i64
  %arrayidx2153 = getelementptr inbounds [3 x double], [3 x double]* %size2151, i64 0, i64 %idxprom2152
  %1378 = load double, double* %arrayidx2153, align 8
  %div2154 = fdiv double %sub2150, %1378
  %mul2155 = fmul double %div2141, %div2154
  %1379 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1380 = load i32, i32* %c2, align 4
  %idxprom2156 = sext i32 %1380 to i64
  %arrayidx2157 = getelementptr inbounds [2 x double], [2 x double]* %1379, i64 %idxprom2156
  %1381 = load i32, i32* %zv, align 4
  %sub2158 = sub nsw i32 1, %1381
  %idxprom2159 = sext i32 %sub2158 to i64
  %arrayidx2160 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2157, i64 0, i64 %idxprom2159
  %1382 = load double, double* %arrayidx2160, align 8
  %1383 = load %struct.object*, %struct.object** %op, align 8
  %cen2161 = getelementptr inbounds %struct.object, %struct.object* %1383, i32 0, i32 2
  %1384 = load i32, i32* %c2, align 4
  %idxprom2162 = sext i32 %1384 to i64
  %arrayidx2163 = getelementptr inbounds [3 x double], [3 x double]* %cen2161, i64 0, i64 %idxprom2162
  %1385 = load double, double* %arrayidx2163, align 8
  %sub2164 = fsub double %1382, %1385
  %1386 = load %struct.object*, %struct.object** %op, align 8
  %size2165 = getelementptr inbounds %struct.object, %struct.object* %1386, i32 0, i32 6
  %1387 = load i32, i32* %c2, align 4
  %idxprom2166 = sext i32 %1387 to i64
  %arrayidx2167 = getelementptr inbounds [3 x double], [3 x double]* %size2165, i64 0, i64 %idxprom2166
  %1388 = load double, double* %arrayidx2167, align 8
  %div2168 = fdiv double %sub2164, %1388
  %1389 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1390 = load i32, i32* %c2, align 4
  %idxprom2169 = sext i32 %1390 to i64
  %arrayidx2170 = getelementptr inbounds [2 x double], [2 x double]* %1389, i64 %idxprom2169
  %1391 = load i32, i32* %zv, align 4
  %sub2171 = sub nsw i32 1, %1391
  %idxprom2172 = sext i32 %sub2171 to i64
  %arrayidx2173 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2170, i64 0, i64 %idxprom2172
  %1392 = load double, double* %arrayidx2173, align 8
  %1393 = load %struct.object*, %struct.object** %op, align 8
  %cen2174 = getelementptr inbounds %struct.object, %struct.object* %1393, i32 0, i32 2
  %1394 = load i32, i32* %c2, align 4
  %idxprom2175 = sext i32 %1394 to i64
  %arrayidx2176 = getelementptr inbounds [3 x double], [3 x double]* %cen2174, i64 0, i64 %idxprom2175
  %1395 = load double, double* %arrayidx2176, align 8
  %sub2177 = fsub double %1392, %1395
  %1396 = load %struct.object*, %struct.object** %op, align 8
  %size2178 = getelementptr inbounds %struct.object, %struct.object* %1396, i32 0, i32 6
  %1397 = load i32, i32* %c2, align 4
  %idxprom2179 = sext i32 %1397 to i64
  %arrayidx2180 = getelementptr inbounds [3 x double], [3 x double]* %size2178, i64 0, i64 %idxprom2179
  %1398 = load double, double* %arrayidx2180, align 8
  %div2181 = fdiv double %sub2177, %1398
  %mul2182 = fmul double %div2168, %div2181
  %add2183 = fadd double %mul2155, %mul2182
  %cmp2184 = fcmp ogt double %add2183, 1.000000e+00
  br i1 %cmp2184, label %if.then2185, label %if.end2186

if.then2185:                                      ; preds = %land.lhs.true2128
  store i32 1, i32* %intersect, align 4
  br label %if.end2186

if.end2186:                                       ; preds = %if.then2185, %land.lhs.true2128, %if.else2075
  br label %if.end2187

if.end2187:                                       ; preds = %if.end2186, %if.end2074
  br label %if.end2188

if.end2188:                                       ; preds = %if.end2187, %if.end2000
  br label %if.end2189

if.end2189:                                       ; preds = %if.end2188, %if.end1864
  br label %if.end2190

if.end2190:                                       ; preds = %if.end2189, %land.lhs.true1652, %if.end1640
  br label %if.end2373

if.else2191:                                      ; preds = %lor.lhs.false1627
  %1399 = load %struct.object*, %struct.object** %op, align 8
  %type2192 = getelementptr inbounds %struct.object, %struct.object* %1399, i32 0, i32 0
  %1400 = load i32, i32* %type2192, align 8
  %cmp2193 = icmp eq i32 %1400, 21
  br i1 %cmp2193, label %if.then2200, label %lor.lhs.false2194

lor.lhs.false2194:                                ; preds = %if.else2191
  %1401 = load %struct.object*, %struct.object** %op, align 8
  %type2195 = getelementptr inbounds %struct.object, %struct.object* %1401, i32 0, i32 0
  %1402 = load i32, i32* %type2195, align 8
  %cmp2196 = icmp eq i32 %1402, 23
  br i1 %cmp2196, label %if.then2200, label %lor.lhs.false2197

lor.lhs.false2197:                                ; preds = %lor.lhs.false2194
  %1403 = load %struct.object*, %struct.object** %op, align 8
  %type2198 = getelementptr inbounds %struct.object, %struct.object* %1403, i32 0, i32 0
  %1404 = load i32, i32* %type2198, align 8
  %cmp2199 = icmp eq i32 %1404, 25
  br i1 %cmp2199, label %if.then2200, label %if.else2370

if.then2200:                                      ; preds = %lor.lhs.false2197, %lor.lhs.false2194, %if.else2191
  %1405 = load %struct.object*, %struct.object** %op, align 8
  %type2201 = getelementptr inbounds %struct.object, %struct.object* %1405, i32 0, i32 0
  %1406 = load i32, i32* %type2201, align 8
  %cmp2202 = icmp eq i32 %1406, 21
  br i1 %cmp2202, label %if.then2203, label %if.else2204

if.then2203:                                      ; preds = %if.then2200
  store i32 0, i32* %ca, align 4
  store i32 1, i32* %c1, align 4
  store i32 2, i32* %c2, align 4
  br label %if.end2210

if.else2204:                                      ; preds = %if.then2200
  %1407 = load %struct.object*, %struct.object** %op, align 8
  %type2205 = getelementptr inbounds %struct.object, %struct.object* %1407, i32 0, i32 0
  %1408 = load i32, i32* %type2205, align 8
  %cmp2206 = icmp eq i32 %1408, 23
  br i1 %cmp2206, label %if.then2207, label %if.else2208

if.then2207:                                      ; preds = %if.else2204
  store i32 1, i32* %ca, align 4
  store i32 2, i32* %c1, align 4
  store i32 0, i32* %c2, align 4
  br label %if.end2209

if.else2208:                                      ; preds = %if.else2204
  store i32 2, i32* %ca, align 4
  store i32 0, i32* %c1, align 4
  store i32 1, i32* %c2, align 4
  br label %if.end2209

if.end2209:                                       ; preds = %if.else2208, %if.then2207
  br label %if.end2210

if.end2210:                                       ; preds = %if.end2209, %if.then2203
  %1409 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1410 = load i32, i32* %ca, align 4
  %idxprom2211 = sext i32 %1410 to i64
  %arrayidx2212 = getelementptr inbounds [2 x double], [2 x double]* %1409, i64 %idxprom2211
  %arrayidx2213 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2212, i64 0, i64 1
  %1411 = load double, double* %arrayidx2213, align 8
  %1412 = load %struct.object*, %struct.object** %op, align 8
  %cen2214 = getelementptr inbounds %struct.object, %struct.object* %1412, i32 0, i32 2
  %1413 = load i32, i32* %ca, align 4
  %idxprom2215 = sext i32 %1413 to i64
  %arrayidx2216 = getelementptr inbounds [3 x double], [3 x double]* %cen2214, i64 0, i64 %idxprom2215
  %1414 = load double, double* %arrayidx2216, align 8
  %1415 = load %struct.object*, %struct.object** %op, align 8
  %size2217 = getelementptr inbounds %struct.object, %struct.object* %1415, i32 0, i32 6
  %1416 = load i32, i32* %ca, align 4
  %idxprom2218 = sext i32 %1416 to i64
  %arrayidx2219 = getelementptr inbounds [3 x double], [3 x double]* %size2217, i64 0, i64 %idxprom2218
  %1417 = load double, double* %arrayidx2219, align 8
  %sub2220 = fsub double %1414, %1417
  %cmp2221 = fcmp ogt double %1411, %sub2220
  br i1 %cmp2221, label %land.lhs.true2222, label %if.end2369

land.lhs.true2222:                                ; preds = %if.end2210
  %1418 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1419 = load i32, i32* %ca, align 4
  %idxprom2223 = sext i32 %1419 to i64
  %arrayidx2224 = getelementptr inbounds [2 x double], [2 x double]* %1418, i64 %idxprom2223
  %arrayidx2225 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2224, i64 0, i64 0
  %1420 = load double, double* %arrayidx2225, align 8
  %1421 = load %struct.object*, %struct.object** %op, align 8
  %cen2226 = getelementptr inbounds %struct.object, %struct.object* %1421, i32 0, i32 2
  %1422 = load i32, i32* %ca, align 4
  %idxprom2227 = sext i32 %1422 to i64
  %arrayidx2228 = getelementptr inbounds [3 x double], [3 x double]* %cen2226, i64 0, i64 %idxprom2227
  %1423 = load double, double* %arrayidx2228, align 8
  %1424 = load %struct.object*, %struct.object** %op, align 8
  %size2229 = getelementptr inbounds %struct.object, %struct.object* %1424, i32 0, i32 6
  %1425 = load i32, i32* %ca, align 4
  %idxprom2230 = sext i32 %1425 to i64
  %arrayidx2231 = getelementptr inbounds [3 x double], [3 x double]* %size2229, i64 0, i64 %idxprom2230
  %1426 = load double, double* %arrayidx2231, align 8
  %add2232 = fadd double %1423, %1426
  %cmp2233 = fcmp olt double %1420, %add2232
  br i1 %cmp2233, label %if.then2234, label %if.end2369

if.then2234:                                      ; preds = %land.lhs.true2222
  store i32 0, i32* %zc, align 4
  store i32 0, i32* %yc, align 4
  %1427 = load %struct.object*, %struct.object** %op, align 8
  %cen2235 = getelementptr inbounds %struct.object, %struct.object* %1427, i32 0, i32 2
  %1428 = load i32, i32* %c1, align 4
  %idxprom2236 = sext i32 %1428 to i64
  %arrayidx2237 = getelementptr inbounds [3 x double], [3 x double]* %cen2235, i64 0, i64 %idxprom2236
  %1429 = load double, double* %arrayidx2237, align 8
  %1430 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1431 = load i32, i32* %c1, align 4
  %idxprom2238 = sext i32 %1431 to i64
  %arrayidx2239 = getelementptr inbounds [2 x double], [2 x double]* %1430, i64 %idxprom2238
  %arrayidx2240 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2239, i64 0, i64 0
  %1432 = load double, double* %arrayidx2240, align 8
  %cmp2241 = fcmp olt double %1429, %1432
  br i1 %cmp2241, label %if.then2242, label %if.else2243

if.then2242:                                      ; preds = %if.then2234
  store i32 0, i32* %yv, align 4
  br label %if.end2254

if.else2243:                                      ; preds = %if.then2234
  %1433 = load %struct.object*, %struct.object** %op, align 8
  %cen2244 = getelementptr inbounds %struct.object, %struct.object* %1433, i32 0, i32 2
  %1434 = load i32, i32* %c1, align 4
  %idxprom2245 = sext i32 %1434 to i64
  %arrayidx2246 = getelementptr inbounds [3 x double], [3 x double]* %cen2244, i64 0, i64 %idxprom2245
  %1435 = load double, double* %arrayidx2246, align 8
  %1436 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1437 = load i32, i32* %c1, align 4
  %idxprom2247 = sext i32 %1437 to i64
  %arrayidx2248 = getelementptr inbounds [2 x double], [2 x double]* %1436, i64 %idxprom2247
  %arrayidx2249 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2248, i64 0, i64 1
  %1438 = load double, double* %arrayidx2249, align 8
  %cmp2250 = fcmp ogt double %1435, %1438
  br i1 %cmp2250, label %if.then2251, label %if.else2252

if.then2251:                                      ; preds = %if.else2243
  store i32 1, i32* %yv, align 4
  br label %if.end2253

if.else2252:                                      ; preds = %if.else2243
  store i32 1, i32* %yc, align 4
  br label %if.end2253

if.end2253:                                       ; preds = %if.else2252, %if.then2251
  br label %if.end2254

if.end2254:                                       ; preds = %if.end2253, %if.then2242
  %1439 = load %struct.object*, %struct.object** %op, align 8
  %cen2255 = getelementptr inbounds %struct.object, %struct.object* %1439, i32 0, i32 2
  %1440 = load i32, i32* %c2, align 4
  %idxprom2256 = sext i32 %1440 to i64
  %arrayidx2257 = getelementptr inbounds [3 x double], [3 x double]* %cen2255, i64 0, i64 %idxprom2256
  %1441 = load double, double* %arrayidx2257, align 8
  %1442 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1443 = load i32, i32* %c2, align 4
  %idxprom2258 = sext i32 %1443 to i64
  %arrayidx2259 = getelementptr inbounds [2 x double], [2 x double]* %1442, i64 %idxprom2258
  %arrayidx2260 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2259, i64 0, i64 0
  %1444 = load double, double* %arrayidx2260, align 8
  %cmp2261 = fcmp olt double %1441, %1444
  br i1 %cmp2261, label %if.then2262, label %if.else2263

if.then2262:                                      ; preds = %if.end2254
  store i32 0, i32* %zv, align 4
  br label %if.end2274

if.else2263:                                      ; preds = %if.end2254
  %1445 = load %struct.object*, %struct.object** %op, align 8
  %cen2264 = getelementptr inbounds %struct.object, %struct.object* %1445, i32 0, i32 2
  %1446 = load i32, i32* %c2, align 4
  %idxprom2265 = sext i32 %1446 to i64
  %arrayidx2266 = getelementptr inbounds [3 x double], [3 x double]* %cen2264, i64 0, i64 %idxprom2265
  %1447 = load double, double* %arrayidx2266, align 8
  %1448 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1449 = load i32, i32* %c2, align 4
  %idxprom2267 = sext i32 %1449 to i64
  %arrayidx2268 = getelementptr inbounds [2 x double], [2 x double]* %1448, i64 %idxprom2267
  %arrayidx2269 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2268, i64 0, i64 1
  %1450 = load double, double* %arrayidx2269, align 8
  %cmp2270 = fcmp ogt double %1447, %1450
  br i1 %cmp2270, label %if.then2271, label %if.else2272

if.then2271:                                      ; preds = %if.else2263
  store i32 1, i32* %zv, align 4
  br label %if.end2273

if.else2272:                                      ; preds = %if.else2263
  store i32 1, i32* %zc, align 4
  br label %if.end2273

if.end2273:                                       ; preds = %if.else2272, %if.then2271
  br label %if.end2274

if.end2274:                                       ; preds = %if.end2273, %if.then2262
  %1451 = load i32, i32* %yc, align 4
  %tobool2275 = icmp ne i32 %1451, 0
  br i1 %tobool2275, label %if.then2276, label %if.else2295

if.then2276:                                      ; preds = %if.end2274
  %1452 = load i32, i32* %zc, align 4
  %tobool2277 = icmp ne i32 %1452, 0
  br i1 %tobool2277, label %if.then2278, label %if.else2279

if.then2278:                                      ; preds = %if.then2276
  store i32 1, i32* %intersect, align 4
  br label %if.end2294

if.else2279:                                      ; preds = %if.then2276
  %1453 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1454 = load i32, i32* %c2, align 4
  %idxprom2280 = sext i32 %1454 to i64
  %arrayidx2281 = getelementptr inbounds [2 x double], [2 x double]* %1453, i64 %idxprom2280
  %1455 = load i32, i32* %zv, align 4
  %idxprom2282 = sext i32 %1455 to i64
  %arrayidx2283 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2281, i64 0, i64 %idxprom2282
  %1456 = load double, double* %arrayidx2283, align 8
  %1457 = load %struct.object*, %struct.object** %op, align 8
  %cen2284 = getelementptr inbounds %struct.object, %struct.object* %1457, i32 0, i32 2
  %1458 = load i32, i32* %c2, align 4
  %idxprom2285 = sext i32 %1458 to i64
  %arrayidx2286 = getelementptr inbounds [3 x double], [3 x double]* %cen2284, i64 0, i64 %idxprom2285
  %1459 = load double, double* %arrayidx2286, align 8
  %sub2287 = fsub double %1456, %1459
  %1460 = call double @llvm.fabs.f64(double %sub2287)
  %1461 = load %struct.object*, %struct.object** %op, align 8
  %size2288 = getelementptr inbounds %struct.object, %struct.object* %1461, i32 0, i32 6
  %1462 = load i32, i32* %c2, align 4
  %idxprom2289 = sext i32 %1462 to i64
  %arrayidx2290 = getelementptr inbounds [3 x double], [3 x double]* %size2288, i64 0, i64 %idxprom2289
  %1463 = load double, double* %arrayidx2290, align 8
  %cmp2291 = fcmp olt double %1460, %1463
  br i1 %cmp2291, label %if.then2292, label %if.end2293

if.then2292:                                      ; preds = %if.else2279
  store i32 1, i32* %intersect, align 4
  br label %if.end2293

if.end2293:                                       ; preds = %if.then2292, %if.else2279
  br label %if.end2294

if.end2294:                                       ; preds = %if.end2293, %if.then2278
  br label %if.end2368

if.else2295:                                      ; preds = %if.end2274
  %1464 = load i32, i32* %zc, align 4
  %tobool2296 = icmp ne i32 %1464, 0
  br i1 %tobool2296, label %if.then2297, label %if.else2312

if.then2297:                                      ; preds = %if.else2295
  %1465 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1466 = load i32, i32* %c1, align 4
  %idxprom2298 = sext i32 %1466 to i64
  %arrayidx2299 = getelementptr inbounds [2 x double], [2 x double]* %1465, i64 %idxprom2298
  %1467 = load i32, i32* %yv, align 4
  %idxprom2300 = sext i32 %1467 to i64
  %arrayidx2301 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2299, i64 0, i64 %idxprom2300
  %1468 = load double, double* %arrayidx2301, align 8
  %1469 = load %struct.object*, %struct.object** %op, align 8
  %cen2302 = getelementptr inbounds %struct.object, %struct.object* %1469, i32 0, i32 2
  %1470 = load i32, i32* %c1, align 4
  %idxprom2303 = sext i32 %1470 to i64
  %arrayidx2304 = getelementptr inbounds [3 x double], [3 x double]* %cen2302, i64 0, i64 %idxprom2303
  %1471 = load double, double* %arrayidx2304, align 8
  %sub2305 = fsub double %1468, %1471
  %1472 = call double @llvm.fabs.f64(double %sub2305)
  %1473 = load %struct.object*, %struct.object** %op, align 8
  %size2306 = getelementptr inbounds %struct.object, %struct.object* %1473, i32 0, i32 6
  %1474 = load i32, i32* %c1, align 4
  %idxprom2307 = sext i32 %1474 to i64
  %arrayidx2308 = getelementptr inbounds [3 x double], [3 x double]* %size2306, i64 0, i64 %idxprom2307
  %1475 = load double, double* %arrayidx2308, align 8
  %cmp2309 = fcmp olt double %1472, %1475
  br i1 %cmp2309, label %if.then2310, label %if.end2311

if.then2310:                                      ; preds = %if.then2297
  store i32 1, i32* %intersect, align 4
  br label %if.end2311

if.end2311:                                       ; preds = %if.then2310, %if.then2297
  br label %if.end2367

if.else2312:                                      ; preds = %if.else2295
  %1476 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1477 = load i32, i32* %c1, align 4
  %idxprom2313 = sext i32 %1477 to i64
  %arrayidx2314 = getelementptr inbounds [2 x double], [2 x double]* %1476, i64 %idxprom2313
  %1478 = load i32, i32* %yv, align 4
  %idxprom2315 = sext i32 %1478 to i64
  %arrayidx2316 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2314, i64 0, i64 %idxprom2315
  %1479 = load double, double* %arrayidx2316, align 8
  %1480 = load %struct.object*, %struct.object** %op, align 8
  %cen2317 = getelementptr inbounds %struct.object, %struct.object* %1480, i32 0, i32 2
  %1481 = load i32, i32* %c1, align 4
  %idxprom2318 = sext i32 %1481 to i64
  %arrayidx2319 = getelementptr inbounds [3 x double], [3 x double]* %cen2317, i64 0, i64 %idxprom2318
  %1482 = load double, double* %arrayidx2319, align 8
  %sub2320 = fsub double %1479, %1482
  %1483 = load %struct.object*, %struct.object** %op, align 8
  %size2321 = getelementptr inbounds %struct.object, %struct.object* %1483, i32 0, i32 6
  %1484 = load i32, i32* %c1, align 4
  %idxprom2322 = sext i32 %1484 to i64
  %arrayidx2323 = getelementptr inbounds [3 x double], [3 x double]* %size2321, i64 0, i64 %idxprom2322
  %1485 = load double, double* %arrayidx2323, align 8
  %div2324 = fdiv double %sub2320, %1485
  %1486 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1487 = load i32, i32* %c1, align 4
  %idxprom2325 = sext i32 %1487 to i64
  %arrayidx2326 = getelementptr inbounds [2 x double], [2 x double]* %1486, i64 %idxprom2325
  %1488 = load i32, i32* %yv, align 4
  %idxprom2327 = sext i32 %1488 to i64
  %arrayidx2328 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2326, i64 0, i64 %idxprom2327
  %1489 = load double, double* %arrayidx2328, align 8
  %1490 = load %struct.object*, %struct.object** %op, align 8
  %cen2329 = getelementptr inbounds %struct.object, %struct.object* %1490, i32 0, i32 2
  %1491 = load i32, i32* %c1, align 4
  %idxprom2330 = sext i32 %1491 to i64
  %arrayidx2331 = getelementptr inbounds [3 x double], [3 x double]* %cen2329, i64 0, i64 %idxprom2330
  %1492 = load double, double* %arrayidx2331, align 8
  %sub2332 = fsub double %1489, %1492
  %1493 = load %struct.object*, %struct.object** %op, align 8
  %size2333 = getelementptr inbounds %struct.object, %struct.object* %1493, i32 0, i32 6
  %1494 = load i32, i32* %c1, align 4
  %idxprom2334 = sext i32 %1494 to i64
  %arrayidx2335 = getelementptr inbounds [3 x double], [3 x double]* %size2333, i64 0, i64 %idxprom2334
  %1495 = load double, double* %arrayidx2335, align 8
  %div2336 = fdiv double %sub2332, %1495
  %mul2337 = fmul double %div2324, %div2336
  %1496 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1497 = load i32, i32* %c2, align 4
  %idxprom2338 = sext i32 %1497 to i64
  %arrayidx2339 = getelementptr inbounds [2 x double], [2 x double]* %1496, i64 %idxprom2338
  %1498 = load i32, i32* %zv, align 4
  %idxprom2340 = sext i32 %1498 to i64
  %arrayidx2341 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2339, i64 0, i64 %idxprom2340
  %1499 = load double, double* %arrayidx2341, align 8
  %1500 = load %struct.object*, %struct.object** %op, align 8
  %cen2342 = getelementptr inbounds %struct.object, %struct.object* %1500, i32 0, i32 2
  %1501 = load i32, i32* %c2, align 4
  %idxprom2343 = sext i32 %1501 to i64
  %arrayidx2344 = getelementptr inbounds [3 x double], [3 x double]* %cen2342, i64 0, i64 %idxprom2343
  %1502 = load double, double* %arrayidx2344, align 8
  %sub2345 = fsub double %1499, %1502
  %1503 = load %struct.object*, %struct.object** %op, align 8
  %size2346 = getelementptr inbounds %struct.object, %struct.object* %1503, i32 0, i32 6
  %1504 = load i32, i32* %c2, align 4
  %idxprom2347 = sext i32 %1504 to i64
  %arrayidx2348 = getelementptr inbounds [3 x double], [3 x double]* %size2346, i64 0, i64 %idxprom2347
  %1505 = load double, double* %arrayidx2348, align 8
  %div2349 = fdiv double %sub2345, %1505
  %1506 = load [2 x double]*, [2 x double]** %cor.addr, align 8
  %1507 = load i32, i32* %c2, align 4
  %idxprom2350 = sext i32 %1507 to i64
  %arrayidx2351 = getelementptr inbounds [2 x double], [2 x double]* %1506, i64 %idxprom2350
  %1508 = load i32, i32* %zv, align 4
  %idxprom2352 = sext i32 %1508 to i64
  %arrayidx2353 = getelementptr inbounds [2 x double], [2 x double]* %arrayidx2351, i64 0, i64 %idxprom2352
  %1509 = load double, double* %arrayidx2353, align 8
  %1510 = load %struct.object*, %struct.object** %op, align 8
  %cen2354 = getelementptr inbounds %struct.object, %struct.object* %1510, i32 0, i32 2
  %1511 = load i32, i32* %c2, align 4
  %idxprom2355 = sext i32 %1511 to i64
  %arrayidx2356 = getelementptr inbounds [3 x double], [3 x double]* %cen2354, i64 0, i64 %idxprom2355
  %1512 = load double, double* %arrayidx2356, align 8
  %sub2357 = fsub double %1509, %1512
  %1513 = load %struct.object*, %struct.object** %op, align 8
  %size2358 = getelementptr inbounds %struct.object, %struct.object* %1513, i32 0, i32 6
  %1514 = load i32, i32* %c2, align 4
  %idxprom2359 = sext i32 %1514 to i64
  %arrayidx2360 = getelementptr inbounds [3 x double], [3 x double]* %size2358, i64 0, i64 %idxprom2359
  %1515 = load double, double* %arrayidx2360, align 8
  %div2361 = fdiv double %sub2357, %1515
  %mul2362 = fmul double %div2349, %div2361
  %add2363 = fadd double %mul2337, %mul2362
  %cmp2364 = fcmp olt double %add2363, 1.000000e+00
  br i1 %cmp2364, label %if.then2365, label %if.end2366

if.then2365:                                      ; preds = %if.else2312
  store i32 1, i32* %intersect, align 4
  br label %if.end2366

if.end2366:                                       ; preds = %if.then2365, %if.else2312
  br label %if.end2367

if.end2367:                                       ; preds = %if.end2366, %if.end2311
  br label %if.end2368

if.end2368:                                       ; preds = %if.end2367, %if.end2294
  br label %if.end2369

if.end2369:                                       ; preds = %if.end2368, %land.lhs.true2222, %if.end2210
  br label %if.end2372

if.else2370:                                      ; preds = %lor.lhs.false2197
  %1516 = load %struct.object*, %struct.object** %op, align 8
  %type2371 = getelementptr inbounds %struct.object, %struct.object* %1516, i32 0, i32 0
  %1517 = load i32, i32* %type2371, align 8
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i64 0, i64 0), i32 %1517)
  br label %if.end2372

if.end2372:                                       ; preds = %if.else2370, %if.end2369
  br label %if.end2373

if.end2373:                                       ; preds = %if.end2372, %if.end2190
  br label %if.end2374

if.end2374:                                       ; preds = %if.end2373, %if.end1620
  br label %if.end2375

if.end2375:                                       ; preds = %if.end2374, %if.end1241
  br label %if.end2376

if.end2376:                                       ; preds = %if.end2375, %if.end293
  br label %if.end2377

if.end2377:                                       ; preds = %if.end2376, %if.end234
  br label %if.end2378

if.end2378:                                       ; preds = %if.end2377, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end2378
  %1518 = load i32, i32* %o, align 4
  %inc = add nsw i32 %1518, 1
  store i32 %inc, i32* %o, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %1519 = load i32, i32* %intersect, align 4
  ret i32 %1519
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @plot(i32 %ts) #0 {
entry:
  %ts.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %total_num_blocks = alloca i32, align 4
  %buf = alloca i32*, align 8
  %buf_size = alloca i32, align 4
  %size = alloca i32, align 4
  %fname = alloca [20 x i8], align 16
  %bp = alloca %struct.block*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  store i32 %ts, i32* %ts.addr, align 4
  %arrayidx = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 0
  store i8 112, i8* %arrayidx, align 16
  %arrayidx1 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 1
  store i8 108, i8* %arrayidx1, align 1
  %arrayidx2 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 2
  store i8 111, i8* %arrayidx2, align 2
  %arrayidx3 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 3
  store i8 116, i8* %arrayidx3, align 1
  %arrayidx4 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 4
  store i8 46, i8* %arrayidx4, align 4
  store i32 1, i32* %n, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4
  %1 = load i32, i32* @num_tsteps, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %j, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %j, align 4
  %3 = load i32, i32* %n, align 4
  %mul = mul nsw i32 %3, 10
  store i32 %mul, i32* %n, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %n, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc10, %for.end
  %4 = load i32, i32* %i, align 4
  %5 = load i32, i32* %j, align 4
  %cmp6 = icmp sle i32 %4, %5
  br i1 %cmp6, label %for.body7, label %for.end13

for.body7:                                        ; preds = %for.cond5
  %6 = load i32, i32* %ts.addr, align 4
  %7 = load i32, i32* %n, align 4
  %div = sdiv i32 %6, %7
  %rem = srem i32 %div, 10
  %add = add nsw i32 48, %rem
  %conv = trunc i32 %add to i8
  %8 = load i32, i32* %j, align 4
  %add8 = add nsw i32 5, %8
  %9 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %add8, %9
  %idxprom = sext i32 %sub to i64
  %arrayidx9 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 %idxprom
  store i8 %conv, i8* %arrayidx9, align 1
  br label %for.inc10

for.inc10:                                        ; preds = %for.body7
  %10 = load i32, i32* %i, align 4
  %inc11 = add nsw i32 %10, 1
  store i32 %inc11, i32* %i, align 4
  %11 = load i32, i32* %n, align 4
  %mul12 = mul nsw i32 %11, 10
  store i32 %mul12, i32* %n, align 4
  br label %for.cond5

for.end13:                                        ; preds = %for.cond5
  %12 = load i32, i32* %j, align 4
  %add14 = add nsw i32 6, %12
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 %idxprom15
  store i8 0, i8* %arrayidx16, align 1
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %fname, i64 0, i64 0
  %call = call %struct._IO_FILE* @fopen(i8* %arraydecay, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.86, i64 0, i64 0))
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8
  store i32 0, i32* %total_num_blocks, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc24, %for.end13
  %13 = load i32, i32* %i, align 4
  %14 = load i32, i32* @num_refine, align 4
  %cmp18 = icmp sle i32 %13, %14
  br i1 %cmp18, label %for.body20, label %for.end26

for.body20:                                       ; preds = %for.cond17
  %15 = load i32*, i32** @num_blocks, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %16 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %15, i64 %idxprom21
  %17 = load i32, i32* %arrayidx22, align 4
  %18 = load i32, i32* %total_num_blocks, align 4
  %add23 = add nsw i32 %18, %17
  store i32 %add23, i32* %total_num_blocks, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %for.body20
  %19 = load i32, i32* %i, align 4
  %inc25 = add nsw i32 %19, 1
  store i32 %inc25, i32* %i, align 4
  br label %for.cond17

for.end26:                                        ; preds = %for.cond17
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %21 = load i32, i32* %total_num_blocks, align 4
  %22 = load i32, i32* @num_refine, align 4
  %23 = load i32, i32* @npx, align 4
  %24 = load i32, i32* @init_block_x, align 4
  %mul27 = mul nsw i32 %23, %24
  %25 = load i32, i32* @npy, align 4
  %26 = load i32, i32* @init_block_y, align 4
  %mul28 = mul nsw i32 %25, %26
  %27 = load i32, i32* @npz, align 4
  %28 = load i32, i32* @init_block_z, align 4
  %mul29 = mul nsw i32 %27, %28
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.87, i64 0, i64 0), i32 %21, i32 %22, i32 %mul27, i32 %mul28, i32 %mul29)
  store i32 0, i32* %buf_size, align 4
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %30 = load i32, i32* @num_active, align 4
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.88, i64 0, i64 0), i32 %30)
  store i32 0, i32* %n, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc46, %for.end26
  %31 = load i32, i32* %n, align 4
  %32 = load i32, i32* @max_active_block, align 4
  %cmp33 = icmp slt i32 %31, %32
  br i1 %cmp33, label %for.body35, label %for.end48

for.body35:                                       ; preds = %for.cond32
  %33 = load %struct.block*, %struct.block** @blocks, align 8
  %34 = load i32, i32* %n, align 4
  %idxprom36 = sext i32 %34 to i64
  %arrayidx37 = getelementptr inbounds %struct.block, %struct.block* %33, i64 %idxprom36
  store %struct.block* %arrayidx37, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx37, i32 0, i32 0
  %35 = load i32, i32* %number, align 8
  %cmp38 = icmp sge i32 %35, 0
  br i1 %cmp38, label %if.then, label %if.end

if.then:                                          ; preds = %for.body35
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %37 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %37, i32 0, i32 1
  %38 = load i32, i32* %level, align 4
  %39 = load %struct.block*, %struct.block** %bp, align 8
  %cen = getelementptr inbounds %struct.block, %struct.block* %39, i32 0, i32 10
  %arrayidx40 = getelementptr inbounds [3 x i32], [3 x i32]* %cen, i64 0, i64 0
  %40 = load i32, i32* %arrayidx40, align 4
  %41 = load %struct.block*, %struct.block** %bp, align 8
  %cen41 = getelementptr inbounds %struct.block, %struct.block* %41, i32 0, i32 10
  %arrayidx42 = getelementptr inbounds [3 x i32], [3 x i32]* %cen41, i64 0, i64 1
  %42 = load i32, i32* %arrayidx42, align 4
  %43 = load %struct.block*, %struct.block** %bp, align 8
  %cen43 = getelementptr inbounds %struct.block, %struct.block* %43, i32 0, i32 10
  %arrayidx44 = getelementptr inbounds [3 x i32], [3 x i32]* %cen43, i64 0, i64 2
  %44 = load i32, i32* %arrayidx44, align 4
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.89, i64 0, i64 0), i32 %38, i32 %40, i32 %42, i32 %44)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body35
  br label %for.inc46

for.inc46:                                        ; preds = %if.end
  %45 = load i32, i32* %n, align 4
  %inc47 = add nsw i32 %45, 1
  store i32 %inc47, i32* %n, align 4
  br label %for.cond32

for.end48:                                        ; preds = %for.cond32
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call49 = call i32 @fclose(%struct._IO_FILE* %46)
  ret void
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @profile() #0 {
entry:
  %i = alloca i32, align 4
  %total_gflops = alloca double, align 8
  %gflops_rank = alloca double, align 8
  %total_fp_ops = alloca double, align 8
  %total_fp_adds = alloca double, align 8
  %total_fp_divs = alloca double, align 8
  %op = alloca %struct.object*, align 8
  %version = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i64 0, i64 0), i8** %version, align 8
  call void @calculate_results()
  %0 = load i64, i64* @total_blocks, align 8
  %conv = sitofp i64 %0 to double
  %1 = load i32, i32* @x_block_size, align 4
  %conv1 = sitofp i32 %1 to double
  %mul = fmul double %conv, %conv1
  %2 = load i32, i32* @y_block_size, align 4
  %conv2 = sitofp i32 %2 to double
  %mul3 = fmul double %mul, %conv2
  %3 = load i32, i32* @z_block_size, align 4
  %conv4 = sitofp i32 %3 to double
  %mul5 = fmul double %mul3, %conv4
  store double %mul5, double* %total_fp_divs, align 8
  %4 = load i32, i32* @stencil, align 4
  %cmp = icmp eq i32 %4, 7
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load double, double* %total_fp_divs, align 8
  %mul7 = fmul double 6.000000e+00, %5
  store double %mul7, double* %total_fp_adds, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load double, double* %total_fp_divs, align 8
  %mul8 = fmul double 2.600000e+01, %6
  store double %mul8, double* %total_fp_adds, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load double, double* %total_fp_divs, align 8
  %8 = load double, double* %total_fp_adds, align 8
  %add = fadd double %7, %8
  store double %add, double* %total_fp_ops, align 8
  %9 = load double, double* %total_fp_ops, align 8
  %10 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %mul9 = fmul double %10, 1.024000e+03
  %mul10 = fmul double %mul9, 1.024000e+03
  %mul11 = fmul double %mul10, 1.024000e+03
  %div = fdiv double %9, %mul11
  store double %div, double* %total_gflops, align 8
  %11 = load double, double* %total_gflops, align 8
  %12 = load i32, i32* @num_pes, align 4
  %conv12 = sitofp i32 %12 to double
  %div13 = fdiv double %11, %conv12
  store double %div13, double* %gflops_rank, align 8
  %13 = load i32, i32* @my_pe, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.end853, label %if.then14

if.then14:                                        ; preds = %if.end
  %14 = load i32, i32* @report_perf, align 4
  %and = and i32 %14, 1
  %tobool15 = icmp ne i32 %and, 0
  br i1 %tobool15, label %if.then16, label %if.end132

if.then16:                                        ; preds = %if.then14
  %call = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.93, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.94, i64 0, i64 0))
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.95, i64 0, i64 0))
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %17 = load i8*, i8** %version, align 8
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4.96, i64 0, i64 0), i8* %17)
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %19 = load i32, i32* @num_pes, align 4
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.97, i64 0, i64 0), i32 %19)
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %21 = load i32, i32* @init_block_x, align 4
  %call20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.98, i64 0, i64 0), i32 %21)
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %23 = load i32, i32* @init_block_y, align 4
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7.99, i64 0, i64 0), i32 %23)
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %25 = load i32, i32* @init_block_z, align 4
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8.100, i64 0, i64 0), i32 %25)
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %27 = load i32, i32* @x_block_size, align 4
  %call23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9.101, i64 0, i64 0), i32 %27)
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %29 = load i32, i32* @y_block_size, align 4
  %call24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10.102, i64 0, i64 0), i32 %29)
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %31 = load i32, i32* @z_block_size, align 4
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11.103, i64 0, i64 0), i32 %31)
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %33 = load i32, i32* @permute, align 4
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12.104, i64 0, i64 0), i32 %33)
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %35 = load i32, i32* @max_num_blocks, align 4
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13.105, i64 0, i64 0), i32 %35)
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %37 = load i32, i32* @code, align 4
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14.106, i64 0, i64 0), i32 %37)
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %39 = load i32, i32* @num_refine, align 4
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15.107, i64 0, i64 0), i32 %39)
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %41 = load i32, i32* @block_change, align 4
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16.108, i64 0, i64 0), i32 %41)
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %43 = load i32, i32* @refine_ghost, align 4
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17.109, i64 0, i64 0), i32 %43)
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %45 = load i32, i32* @uniform_refine, align 4
  %call32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.110, i64 0, i64 0), i32 %45)
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %47 = load i32, i32* @num_objects, align 4
  %call33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19.111, i64 0, i64 0), i32 %47)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then16
  %48 = load i32, i32* %i, align 4
  %49 = load i32, i32* @num_objects, align 4
  %cmp34 = icmp slt i32 %48, %49
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %50 = load %struct.object*, %struct.object** @objects, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom = sext i32 %51 to i64
  %arrayidx = getelementptr inbounds %struct.object, %struct.object* %50, i64 %idxprom
  store %struct.object* %arrayidx, %struct.object** %op, align 8
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %53 = load i32, i32* %i, align 4
  %54 = load %struct.object*, %struct.object** %op, align 8
  %type = getelementptr inbounds %struct.object, %struct.object* %54, i32 0, i32 0
  %55 = load i32, i32* %type, align 8
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20.112, i64 0, i64 0), i32 %53, i32 %55)
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %57 = load i32, i32* %i, align 4
  %58 = load %struct.object*, %struct.object** %op, align 8
  %bounce = getelementptr inbounds %struct.object, %struct.object* %58, i32 0, i32 1
  %59 = load i32, i32* %bounce, align 4
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21.113, i64 0, i64 0), i32 %57, i32 %59)
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %61 = load i32, i32* %i, align 4
  %62 = load %struct.object*, %struct.object** %op, align 8
  %cen = getelementptr inbounds %struct.object, %struct.object* %62, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [3 x double], [3 x double]* %cen, i64 0, i64 0
  %63 = load double, double* %arrayidx38, align 8
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.114, i64 0, i64 0), i32 %61, double %63)
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %65 = load i32, i32* %i, align 4
  %66 = load %struct.object*, %struct.object** %op, align 8
  %cen40 = getelementptr inbounds %struct.object, %struct.object* %66, i32 0, i32 2
  %arrayidx41 = getelementptr inbounds [3 x double], [3 x double]* %cen40, i64 0, i64 1
  %67 = load double, double* %arrayidx41, align 8
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.23.115, i64 0, i64 0), i32 %65, double %67)
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %69 = load i32, i32* %i, align 4
  %70 = load %struct.object*, %struct.object** %op, align 8
  %cen43 = getelementptr inbounds %struct.object, %struct.object* %70, i32 0, i32 2
  %arrayidx44 = getelementptr inbounds [3 x double], [3 x double]* %cen43, i64 0, i64 2
  %71 = load double, double* %arrayidx44, align 8
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24.116, i64 0, i64 0), i32 %69, double %71)
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %73 = load i32, i32* %i, align 4
  %74 = load %struct.object*, %struct.object** %op, align 8
  %move = getelementptr inbounds %struct.object, %struct.object* %74, i32 0, i32 4
  %arrayidx46 = getelementptr inbounds [3 x double], [3 x double]* %move, i64 0, i64 0
  %75 = load double, double* %arrayidx46, align 8
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25.117, i64 0, i64 0), i32 %73, double %75)
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %77 = load i32, i32* %i, align 4
  %78 = load %struct.object*, %struct.object** %op, align 8
  %move48 = getelementptr inbounds %struct.object, %struct.object* %78, i32 0, i32 4
  %arrayidx49 = getelementptr inbounds [3 x double], [3 x double]* %move48, i64 0, i64 1
  %79 = load double, double* %arrayidx49, align 8
  %call50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26.118, i64 0, i64 0), i32 %77, double %79)
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %81 = load i32, i32* %i, align 4
  %82 = load %struct.object*, %struct.object** %op, align 8
  %move51 = getelementptr inbounds %struct.object, %struct.object* %82, i32 0, i32 4
  %arrayidx52 = getelementptr inbounds [3 x double], [3 x double]* %move51, i64 0, i64 2
  %83 = load double, double* %arrayidx52, align 8
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27.119, i64 0, i64 0), i32 %81, double %83)
  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %85 = load i32, i32* %i, align 4
  %86 = load %struct.object*, %struct.object** %op, align 8
  %size = getelementptr inbounds %struct.object, %struct.object* %86, i32 0, i32 6
  %arrayidx54 = getelementptr inbounds [3 x double], [3 x double]* %size, i64 0, i64 0
  %87 = load double, double* %arrayidx54, align 8
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.120, i64 0, i64 0), i32 %85, double %87)
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %89 = load i32, i32* %i, align 4
  %90 = load %struct.object*, %struct.object** %op, align 8
  %size56 = getelementptr inbounds %struct.object, %struct.object* %90, i32 0, i32 6
  %arrayidx57 = getelementptr inbounds [3 x double], [3 x double]* %size56, i64 0, i64 1
  %91 = load double, double* %arrayidx57, align 8
  %call58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29.121, i64 0, i64 0), i32 %89, double %91)
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %93 = load i32, i32* %i, align 4
  %94 = load %struct.object*, %struct.object** %op, align 8
  %size59 = getelementptr inbounds %struct.object, %struct.object* %94, i32 0, i32 6
  %arrayidx60 = getelementptr inbounds [3 x double], [3 x double]* %size59, i64 0, i64 2
  %95 = load double, double* %arrayidx60, align 8
  %call61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30.122, i64 0, i64 0), i32 %93, double %95)
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %97 = load i32, i32* %i, align 4
  %98 = load %struct.object*, %struct.object** %op, align 8
  %inc = getelementptr inbounds %struct.object, %struct.object* %98, i32 0, i32 8
  %arrayidx62 = getelementptr inbounds [3 x double], [3 x double]* %inc, i64 0, i64 0
  %99 = load double, double* %arrayidx62, align 8
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31.123, i64 0, i64 0), i32 %97, double %99)
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %101 = load i32, i32* %i, align 4
  %102 = load %struct.object*, %struct.object** %op, align 8
  %inc64 = getelementptr inbounds %struct.object, %struct.object* %102, i32 0, i32 8
  %arrayidx65 = getelementptr inbounds [3 x double], [3 x double]* %inc64, i64 0, i64 1
  %103 = load double, double* %arrayidx65, align 8
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32.124, i64 0, i64 0), i32 %101, double %103)
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %105 = load i32, i32* %i, align 4
  %106 = load %struct.object*, %struct.object** %op, align 8
  %inc67 = getelementptr inbounds %struct.object, %struct.object* %106, i32 0, i32 8
  %arrayidx68 = getelementptr inbounds [3 x double], [3 x double]* %inc67, i64 0, i64 2
  %107 = load double, double* %arrayidx68, align 8
  %call69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33.125, i64 0, i64 0), i32 %105, double %107)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %108 = load i32, i32* %i, align 4
  %inc70 = add nsw i32 %108, 1
  store i32 %inc70, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %110 = load i32, i32* @num_tsteps, align 4
  %call71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.34.126, i64 0, i64 0), i32 %110)
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %112 = load i32, i32* @stages_per_ts, align 4
  %call72 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35.127, i64 0, i64 0), i32 %112)
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %114 = load i32, i32* @checksum_freq, align 4
  %call73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36.128, i64 0, i64 0), i32 %114)
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %116 = load i32, i32* @refine_freq, align 4
  %call74 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37.129, i64 0, i64 0), i32 %116)
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %118 = load i32, i32* @plot_freq, align 4
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38.130, i64 0, i64 0), i32 %118)
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %120 = load i32, i32* @num_vars, align 4
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %119, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39.131, i64 0, i64 0), i32 %120)
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %122 = load i32, i32* @stencil, align 4
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40.132, i64 0, i64 0), i32 %122)
  %123 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %124 = load i32, i32* @comm_vars, align 4
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %123, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41.133, i64 0, i64 0), i32 %124)
  %125 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %126 = load i32, i32* @error_tol, align 4
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %125, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42.134, i64 0, i64 0), i32 %126)
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %128 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43.135, i64 0, i64 0), double %128)
  %129 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %130 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %129, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44.136, i64 0, i64 0), double %130)
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %132 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45.137, i64 0, i64 0), double %132)
  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %134 = load double, double* %total_gflops, align 8
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %133, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46.138, i64 0, i64 0), double %134)
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %136 = load double, double* %gflops_rank, align 8
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47.139, i64 0, i64 0), double %136)
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %138 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48.140, i64 0, i64 0), double %138)
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %140 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 5), align 8
  %call86 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %139, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49.141, i64 0, i64 0), double %140)
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %142 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 6), align 16
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %141, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.50.142, i64 0, i64 0), double %142)
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %144 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 7), align 8
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.51.143, i64 0, i64 0), double %144)
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %146 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 75), align 8
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %145, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.52.144, i64 0, i64 0), double %146)
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %148 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 76), align 16
  %call90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53.145, i64 0, i64 0), double %148)
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %150 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 74), align 16
  %call91 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %149, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.54.146, i64 0, i64 0), double %150)
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %152 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 10), align 16
  %call92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55.147, i64 0, i64 0), double %152)
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %154 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 14), align 16
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %153, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56.148, i64 0, i64 0), double %154)
  %155 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %156 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 15), align 8
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %155, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57.149, i64 0, i64 0), double %156)
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %158 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 16), align 16
  %call95 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.58.150, i64 0, i64 0), double %158)
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %160 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 84), align 16
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %159, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.59.151, i64 0, i64 0), double %160)
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %162 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 85), align 8
  %call97 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %161, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60.152, i64 0, i64 0), double %162)
  %163 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %164 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 83), align 8
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %163, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.61.153, i64 0, i64 0), double %164)
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %166 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 19), align 8
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62.154, i64 0, i64 0), double %166)
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %168 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 23), align 8
  %call100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63.155, i64 0, i64 0), double %168)
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %170 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 24), align 16
  %call101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %169, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64.156, i64 0, i64 0), double %170)
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %172 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 25), align 8
  %call102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %171, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.65.157, i64 0, i64 0), double %172)
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %174 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 93), align 8
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %173, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.66.158, i64 0, i64 0), double %174)
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %176 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 94), align 16
  %call104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %175, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67.159, i64 0, i64 0), double %176)
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %178 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 92), align 16
  %call105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %177, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68.160, i64 0, i64 0), double %178)
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %180 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 28), align 16
  %call106 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.161, i64 0, i64 0), double %180)
  %181 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %182 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 32), align 16
  %call107 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %181, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70.162, i64 0, i64 0), double %182)
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %184 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 33), align 8
  %call108 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71.163, i64 0, i64 0), double %184)
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %186 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 34), align 16
  %call109 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72.164, i64 0, i64 0), double %186)
  %187 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %188 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 102), align 16
  %call110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %187, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.73.165, i64 0, i64 0), double %188)
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %190 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 103), align 8
  %call111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %189, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.74.166, i64 0, i64 0), double %190)
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %192 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 101), align 8
  %call112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.75.167, i64 0, i64 0), double %192)
  %193 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %194 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %call113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %193, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.76.168, i64 0, i64 0), double %194)
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %196 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %call114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %195, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.77.169, i64 0, i64 0), double %196)
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %198 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %call115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %197, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78.170, i64 0, i64 0), double %198)
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %200 = load i64, i64* @total_blocks, align 8
  %conv116 = sitofp i64 %200 to double
  %201 = load i32, i32* @num_tsteps, align 4
  %202 = load i32, i32* @stages_per_ts, align 4
  %mul117 = mul nsw i32 %201, %202
  %conv118 = sitofp i32 %mul117 to double
  %div119 = fdiv double %conv116, %conv118
  %call120 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %199, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79.171, i64 0, i64 0), double %div119)
  %203 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %204 = load i32, i32* @nb_min, align 4
  %call121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %203, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.80.172, i64 0, i64 0), i32 %204)
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %206 = load i32, i32* @nb_max, align 4
  %call122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %205, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81.173, i64 0, i64 0), i32 %206)
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %208 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %call123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82.174, i64 0, i64 0), double %208)
  %209 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %210 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %call124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %209, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83.175, i64 0, i64 0), double %210)
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %212 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %call125 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %211, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84, i64 0, i64 0), double %212)
  %213 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %214 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %call126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %213, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.85, i64 0, i64 0), double %214)
  %215 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %216 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %call127 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %215, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86.176, i64 0, i64 0), double %216)
  %217 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %218 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %call128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %217, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87, i64 0, i64 0), double %218)
  %219 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %220 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %call129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %219, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.88, i64 0, i64 0), double %220)
  %221 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %222 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %call130 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %221, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.89, i64 0, i64 0), double %222)
  %223 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call131 = call i32 @fclose(%struct._IO_FILE* %223)
  br label %if.end132

if.end132:                                        ; preds = %for.end, %if.then14
  %224 = load i32, i32* @report_perf, align 4
  %and133 = and i32 %224, 2
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %if.end552

if.then135:                                       ; preds = %if.end132
  %call136 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.94, i64 0, i64 0))
  store %struct._IO_FILE* %call136, %struct._IO_FILE** %fp, align 8
  %225 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call137 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %225, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.91, i64 0, i64 0))
  %226 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %226, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92.177, i64 0, i64 0))
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %228 = load i8*, i8** %version, align 8
  %call139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %227, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* %228)
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %229, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i64 0, i64 0))
  %230 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %231 = load i32, i32* @init_block_x, align 4
  %232 = load i32, i32* @init_block_y, align 4
  %233 = load i32, i32* @init_block_z, align 4
  %call141 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %230, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i64 0, i64 0), i32 %231, i32 %232, i32 %233)
  %234 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %235 = load i32, i32* @x_block_size, align 4
  %236 = load i32, i32* @y_block_size, align 4
  %237 = load i32, i32* @z_block_size, align 4
  %call142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %234, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i32 %235, i32 %236, i32 %237)
  %238 = load i32, i32* @permute, align 4
  %tobool143 = icmp ne i32 %238, 0
  br i1 %tobool143, label %if.then144, label %if.end146

if.then144:                                       ; preds = %if.then135
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call145 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %239, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i64 0, i64 0))
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %if.then135
  %240 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %241 = load i32, i32* @max_num_blocks, align 4
  %call147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %240, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0), i32 %241)
  %242 = load i32, i32* @target_active, align 4
  %tobool148 = icmp ne i32 %242, 0
  br i1 %tobool148, label %if.then149, label %if.end151

if.then149:                                       ; preds = %if.end146
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %244 = load i32, i32* @target_active, align 4
  %call150 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i64 0, i64 0), i32 %244)
  br label %if.end151

if.end151:                                        ; preds = %if.then149, %if.end146
  %245 = load i32, i32* @target_max, align 4
  %tobool152 = icmp ne i32 %245, 0
  br i1 %tobool152, label %if.then153, label %if.end155

if.then153:                                       ; preds = %if.end151
  %246 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %247 = load i32, i32* @target_max, align 4
  %call154 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %246, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %247)
  br label %if.end155

if.end155:                                        ; preds = %if.then153, %if.end151
  %248 = load i32, i32* @target_min, align 4
  %tobool156 = icmp ne i32 %248, 0
  br i1 %tobool156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %if.end155
  %249 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %250 = load i32, i32* @target_min, align 4
  %call158 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %249, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i64 0, i64 0), i32 %250)
  br label %if.end159

if.end159:                                        ; preds = %if.then157, %if.end155
  %251 = load i32, i32* @code, align 4
  %tobool160 = icmp ne i32 %251, 0
  br i1 %tobool160, label %if.then161, label %if.end163

if.then161:                                       ; preds = %if.end159
  %252 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %253 = load i32, i32* @code, align 4
  %call162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %252, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i32 %253)
  br label %if.end163

if.end163:                                        ; preds = %if.then161, %if.end159
  %254 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %255 = load i32, i32* @num_refine, align 4
  %call164 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %254, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i32 %255)
  %256 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %257 = load i32, i32* @block_change, align 4
  %call165 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %256, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i64 0, i64 0), i32 %257)
  %258 = load i32, i32* @refine_ghost, align 4
  %tobool166 = icmp ne i32 %258, 0
  br i1 %tobool166, label %if.then167, label %if.end169

if.then167:                                       ; preds = %if.end163
  %259 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %259, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i64 0, i64 0))
  br label %if.end169

if.end169:                                        ; preds = %if.then167, %if.end163
  %260 = load i32, i32* @uniform_refine, align 4
  %tobool170 = icmp ne i32 %260, 0
  br i1 %tobool170, label %if.then171, label %if.else173

if.then171:                                       ; preds = %if.end169
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call172 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %261, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i64 0, i64 0))
  br label %if.end416

if.else173:                                       ; preds = %if.end169
  %262 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %263 = load i32, i32* @num_objects, align 4
  %call174 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %262, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i64 0, i64 0), i32 %263)
  store i32 0, i32* %i, align 4
  br label %for.cond175

for.cond175:                                      ; preds = %for.inc413, %if.else173
  %264 = load i32, i32* %i, align 4
  %265 = load i32, i32* @num_objects, align 4
  %cmp176 = icmp slt i32 %264, %265
  br i1 %cmp176, label %for.body178, label %for.end415

for.body178:                                      ; preds = %for.cond175
  %266 = load %struct.object*, %struct.object** @objects, align 8
  %267 = load i32, i32* %i, align 4
  %idxprom179 = sext i32 %267 to i64
  %arrayidx180 = getelementptr inbounds %struct.object, %struct.object* %266, i64 %idxprom179
  store %struct.object* %arrayidx180, %struct.object** %op, align 8
  %268 = load %struct.object*, %struct.object** %op, align 8
  %type181 = getelementptr inbounds %struct.object, %struct.object* %268, i32 0, i32 0
  %269 = load i32, i32* %type181, align 8
  %cmp182 = icmp eq i32 %269, 0
  br i1 %cmp182, label %if.then184, label %if.else186

if.then184:                                       ; preds = %for.body178
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %271 = load i32, i32* %i, align 4
  %call185 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i32 %271)
  br label %if.end333

if.else186:                                       ; preds = %for.body178
  %272 = load %struct.object*, %struct.object** %op, align 8
  %type187 = getelementptr inbounds %struct.object, %struct.object* %272, i32 0, i32 0
  %273 = load i32, i32* %type187, align 8
  %cmp188 = icmp eq i32 %273, 1
  br i1 %cmp188, label %if.then190, label %if.else192

if.then190:                                       ; preds = %if.else186
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %275 = load i32, i32* %i, align 4
  %call191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %274, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i64 0, i64 0), i32 %275)
  br label %if.end332

if.else192:                                       ; preds = %if.else186
  %276 = load %struct.object*, %struct.object** %op, align 8
  %type193 = getelementptr inbounds %struct.object, %struct.object* %276, i32 0, i32 0
  %277 = load i32, i32* %type193, align 8
  %cmp194 = icmp eq i32 %277, 2
  br i1 %cmp194, label %if.then196, label %if.else198

if.then196:                                       ; preds = %if.else192
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %279 = load i32, i32* %i, align 4
  %call197 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %278, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i64 0, i64 0), i32 %279)
  br label %if.end331

if.else198:                                       ; preds = %if.else192
  %280 = load %struct.object*, %struct.object** %op, align 8
  %type199 = getelementptr inbounds %struct.object, %struct.object* %280, i32 0, i32 0
  %281 = load i32, i32* %type199, align 8
  %cmp200 = icmp eq i32 %281, 3
  br i1 %cmp200, label %if.then202, label %if.else204

if.then202:                                       ; preds = %if.else198
  %282 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %283 = load i32, i32* %i, align 4
  %call203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %282, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i64 0, i64 0), i32 %283)
  br label %if.end330

if.else204:                                       ; preds = %if.else198
  %284 = load %struct.object*, %struct.object** %op, align 8
  %type205 = getelementptr inbounds %struct.object, %struct.object* %284, i32 0, i32 0
  %285 = load i32, i32* %type205, align 8
  %cmp206 = icmp eq i32 %285, 4
  br i1 %cmp206, label %if.then208, label %if.else210

if.then208:                                       ; preds = %if.else204
  %286 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %287 = load i32, i32* %i, align 4
  %call209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %286, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i64 0, i64 0), i32 %287)
  br label %if.end329

if.else210:                                       ; preds = %if.else204
  %288 = load %struct.object*, %struct.object** %op, align 8
  %type211 = getelementptr inbounds %struct.object, %struct.object* %288, i32 0, i32 0
  %289 = load i32, i32* %type211, align 8
  %cmp212 = icmp eq i32 %289, 5
  br i1 %cmp212, label %if.then214, label %if.else216

if.then214:                                       ; preds = %if.else210
  %290 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %291 = load i32, i32* %i, align 4
  %call215 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %290, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i64 0, i64 0), i32 %291)
  br label %if.end328

if.else216:                                       ; preds = %if.else210
  %292 = load %struct.object*, %struct.object** %op, align 8
  %type217 = getelementptr inbounds %struct.object, %struct.object* %292, i32 0, i32 0
  %293 = load i32, i32* %type217, align 8
  %cmp218 = icmp eq i32 %293, 6
  br i1 %cmp218, label %if.then220, label %if.else222

if.then220:                                       ; preds = %if.else216
  %294 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %295 = load i32, i32* %i, align 4
  %call221 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %294, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0), i32 %295)
  br label %if.end327

if.else222:                                       ; preds = %if.else216
  %296 = load %struct.object*, %struct.object** %op, align 8
  %type223 = getelementptr inbounds %struct.object, %struct.object* %296, i32 0, i32 0
  %297 = load i32, i32* %type223, align 8
  %cmp224 = icmp eq i32 %297, 7
  br i1 %cmp224, label %if.then226, label %if.else228

if.then226:                                       ; preds = %if.else222
  %298 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %299 = load i32, i32* %i, align 4
  %call227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %298, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i64 0, i64 0), i32 %299)
  br label %if.end326

if.else228:                                       ; preds = %if.else222
  %300 = load %struct.object*, %struct.object** %op, align 8
  %type229 = getelementptr inbounds %struct.object, %struct.object* %300, i32 0, i32 0
  %301 = load i32, i32* %type229, align 8
  %cmp230 = icmp eq i32 %301, 8
  br i1 %cmp230, label %if.then232, label %if.else234

if.then232:                                       ; preds = %if.else228
  %302 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %303 = load i32, i32* %i, align 4
  %call233 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %302, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i64 0, i64 0), i32 %303)
  br label %if.end325

if.else234:                                       ; preds = %if.else228
  %304 = load %struct.object*, %struct.object** %op, align 8
  %type235 = getelementptr inbounds %struct.object, %struct.object* %304, i32 0, i32 0
  %305 = load i32, i32* %type235, align 8
  %cmp236 = icmp eq i32 %305, 9
  br i1 %cmp236, label %if.then238, label %if.else240

if.then238:                                       ; preds = %if.else234
  %306 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %307 = load i32, i32* %i, align 4
  %call239 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %306, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i64 0, i64 0), i32 %307)
  br label %if.end324

if.else240:                                       ; preds = %if.else234
  %308 = load %struct.object*, %struct.object** %op, align 8
  %type241 = getelementptr inbounds %struct.object, %struct.object* %308, i32 0, i32 0
  %309 = load i32, i32* %type241, align 8
  %cmp242 = icmp eq i32 %309, 10
  br i1 %cmp242, label %if.then244, label %if.else246

if.then244:                                       ; preds = %if.else240
  %310 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %311 = load i32, i32* %i, align 4
  %call245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %310, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i64 0, i64 0), i32 %311)
  br label %if.end323

if.else246:                                       ; preds = %if.else240
  %312 = load %struct.object*, %struct.object** %op, align 8
  %type247 = getelementptr inbounds %struct.object, %struct.object* %312, i32 0, i32 0
  %313 = load i32, i32* %type247, align 8
  %cmp248 = icmp eq i32 %313, 11
  br i1 %cmp248, label %if.then250, label %if.else252

if.then250:                                       ; preds = %if.else246
  %314 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %315 = load i32, i32* %i, align 4
  %call251 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %314, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %315)
  br label %if.end322

if.else252:                                       ; preds = %if.else246
  %316 = load %struct.object*, %struct.object** %op, align 8
  %type253 = getelementptr inbounds %struct.object, %struct.object* %316, i32 0, i32 0
  %317 = load i32, i32* %type253, align 8
  %cmp254 = icmp eq i32 %317, 12
  br i1 %cmp254, label %if.then256, label %if.else258

if.then256:                                       ; preds = %if.else252
  %318 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %319 = load i32, i32* %i, align 4
  %call257 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %318, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0), i32 %319)
  br label %if.end321

if.else258:                                       ; preds = %if.else252
  %320 = load %struct.object*, %struct.object** %op, align 8
  %type259 = getelementptr inbounds %struct.object, %struct.object* %320, i32 0, i32 0
  %321 = load i32, i32* %type259, align 8
  %cmp260 = icmp eq i32 %321, 13
  br i1 %cmp260, label %if.then262, label %if.else264

if.then262:                                       ; preds = %if.else258
  %322 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %323 = load i32, i32* %i, align 4
  %call263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %322, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i64 0, i64 0), i32 %323)
  br label %if.end320

if.else264:                                       ; preds = %if.else258
  %324 = load %struct.object*, %struct.object** %op, align 8
  %type265 = getelementptr inbounds %struct.object, %struct.object* %324, i32 0, i32 0
  %325 = load i32, i32* %type265, align 8
  %cmp266 = icmp eq i32 %325, 14
  br i1 %cmp266, label %if.then268, label %if.else270

if.then268:                                       ; preds = %if.else264
  %326 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %327 = load i32, i32* %i, align 4
  %call269 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %326, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i64 0, i64 0), i32 %327)
  br label %if.end319

if.else270:                                       ; preds = %if.else264
  %328 = load %struct.object*, %struct.object** %op, align 8
  %type271 = getelementptr inbounds %struct.object, %struct.object* %328, i32 0, i32 0
  %329 = load i32, i32* %type271, align 8
  %cmp272 = icmp eq i32 %329, 15
  br i1 %cmp272, label %if.then274, label %if.else276

if.then274:                                       ; preds = %if.else270
  %330 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %331 = load i32, i32* %i, align 4
  %call275 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %330, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i32 %331)
  br label %if.end318

if.else276:                                       ; preds = %if.else270
  %332 = load %struct.object*, %struct.object** %op, align 8
  %type277 = getelementptr inbounds %struct.object, %struct.object* %332, i32 0, i32 0
  %333 = load i32, i32* %type277, align 8
  %cmp278 = icmp eq i32 %333, 20
  br i1 %cmp278, label %if.then280, label %if.else282

if.then280:                                       ; preds = %if.else276
  %334 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %335 = load i32, i32* %i, align 4
  %call281 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %334, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i64 0, i64 0), i32 %335)
  br label %if.end317

if.else282:                                       ; preds = %if.else276
  %336 = load %struct.object*, %struct.object** %op, align 8
  %type283 = getelementptr inbounds %struct.object, %struct.object* %336, i32 0, i32 0
  %337 = load i32, i32* %type283, align 8
  %cmp284 = icmp eq i32 %337, 21
  br i1 %cmp284, label %if.then286, label %if.else288

if.then286:                                       ; preds = %if.else282
  %338 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %339 = load i32, i32* %i, align 4
  %call287 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %338, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i64 0, i64 0), i32 %339)
  br label %if.end316

if.else288:                                       ; preds = %if.else282
  %340 = load %struct.object*, %struct.object** %op, align 8
  %type289 = getelementptr inbounds %struct.object, %struct.object* %340, i32 0, i32 0
  %341 = load i32, i32* %type289, align 8
  %cmp290 = icmp eq i32 %341, 22
  br i1 %cmp290, label %if.then292, label %if.else294

if.then292:                                       ; preds = %if.else288
  %342 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %343 = load i32, i32* %i, align 4
  %call293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %342, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i64 0, i64 0), i32 %343)
  br label %if.end315

if.else294:                                       ; preds = %if.else288
  %344 = load %struct.object*, %struct.object** %op, align 8
  %type295 = getelementptr inbounds %struct.object, %struct.object* %344, i32 0, i32 0
  %345 = load i32, i32* %type295, align 8
  %cmp296 = icmp eq i32 %345, 23
  br i1 %cmp296, label %if.then298, label %if.else300

if.then298:                                       ; preds = %if.else294
  %346 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %347 = load i32, i32* %i, align 4
  %call299 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %346, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i32 %347)
  br label %if.end314

if.else300:                                       ; preds = %if.else294
  %348 = load %struct.object*, %struct.object** %op, align 8
  %type301 = getelementptr inbounds %struct.object, %struct.object* %348, i32 0, i32 0
  %349 = load i32, i32* %type301, align 8
  %cmp302 = icmp eq i32 %349, 24
  br i1 %cmp302, label %if.then304, label %if.else306

if.then304:                                       ; preds = %if.else300
  %350 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %351 = load i32, i32* %i, align 4
  %call305 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %350, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i64 0, i64 0), i32 %351)
  br label %if.end313

if.else306:                                       ; preds = %if.else300
  %352 = load %struct.object*, %struct.object** %op, align 8
  %type307 = getelementptr inbounds %struct.object, %struct.object* %352, i32 0, i32 0
  %353 = load i32, i32* %type307, align 8
  %cmp308 = icmp eq i32 %353, 25
  br i1 %cmp308, label %if.then310, label %if.end312

if.then310:                                       ; preds = %if.else306
  %354 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %355 = load i32, i32* %i, align 4
  %call311 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %354, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i64 0, i64 0), i32 %355)
  br label %if.end312

if.end312:                                        ; preds = %if.then310, %if.else306
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %if.then304
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %if.then298
  br label %if.end315

if.end315:                                        ; preds = %if.end314, %if.then292
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.then286
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.then280
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then274
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then268
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then262
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then256
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.then250
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then244
  br label %if.end324

if.end324:                                        ; preds = %if.end323, %if.then238
  br label %if.end325

if.end325:                                        ; preds = %if.end324, %if.then232
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %if.then226
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.then220
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then214
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then208
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then202
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.then196
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then190
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then184
  %356 = load %struct.object*, %struct.object** %op, align 8
  %bounce334 = getelementptr inbounds %struct.object, %struct.object* %356, i32 0, i32 1
  %357 = load i32, i32* %bounce334, align 4
  %cmp335 = icmp eq i32 %357, 0
  br i1 %cmp335, label %if.then337, label %if.else339

if.then337:                                       ; preds = %if.end333
  %358 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call338 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %358, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i64 0, i64 0))
  br label %if.end341

if.else339:                                       ; preds = %if.end333
  %359 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call340 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %359, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.131, i64 0, i64 0))
  br label %if.end341

if.end341:                                        ; preds = %if.else339, %if.then337
  %360 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %361 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen = getelementptr inbounds %struct.object, %struct.object* %361, i32 0, i32 3
  %arrayidx342 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen, i64 0, i64 0
  %362 = load double, double* %arrayidx342, align 8
  %363 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen343 = getelementptr inbounds %struct.object, %struct.object* %363, i32 0, i32 3
  %arrayidx344 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen343, i64 0, i64 1
  %364 = load double, double* %arrayidx344, align 8
  %365 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen345 = getelementptr inbounds %struct.object, %struct.object* %365, i32 0, i32 3
  %arrayidx346 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen345, i64 0, i64 2
  %366 = load double, double* %arrayidx346, align 8
  %call347 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %360, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), double %362, double %364, double %366)
  %367 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %368 = load %struct.object*, %struct.object** %op, align 8
  %cen348 = getelementptr inbounds %struct.object, %struct.object* %368, i32 0, i32 2
  %arrayidx349 = getelementptr inbounds [3 x double], [3 x double]* %cen348, i64 0, i64 0
  %369 = load double, double* %arrayidx349, align 8
  %370 = load %struct.object*, %struct.object** %op, align 8
  %cen350 = getelementptr inbounds %struct.object, %struct.object* %370, i32 0, i32 2
  %arrayidx351 = getelementptr inbounds [3 x double], [3 x double]* %cen350, i64 0, i64 1
  %371 = load double, double* %arrayidx351, align 8
  %372 = load %struct.object*, %struct.object** %op, align 8
  %cen352 = getelementptr inbounds %struct.object, %struct.object* %372, i32 0, i32 2
  %arrayidx353 = getelementptr inbounds [3 x double], [3 x double]* %cen352, i64 0, i64 2
  %373 = load double, double* %arrayidx353, align 8
  %call354 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %367, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0), double %369, double %371, double %373)
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %375 = load %struct.object*, %struct.object** %op, align 8
  %orig_move = getelementptr inbounds %struct.object, %struct.object* %375, i32 0, i32 5
  %arrayidx355 = getelementptr inbounds [3 x double], [3 x double]* %orig_move, i64 0, i64 0
  %376 = load double, double* %arrayidx355, align 8
  %377 = load %struct.object*, %struct.object** %op, align 8
  %orig_move356 = getelementptr inbounds %struct.object, %struct.object* %377, i32 0, i32 5
  %arrayidx357 = getelementptr inbounds [3 x double], [3 x double]* %orig_move356, i64 0, i64 1
  %378 = load double, double* %arrayidx357, align 8
  %379 = load %struct.object*, %struct.object** %op, align 8
  %orig_move358 = getelementptr inbounds %struct.object, %struct.object* %379, i32 0, i32 5
  %arrayidx359 = getelementptr inbounds [3 x double], [3 x double]* %orig_move358, i64 0, i64 2
  %380 = load double, double* %arrayidx359, align 8
  %call360 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %374, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i64 0, i64 0), double %376, double %378, double %380)
  %381 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %382 = load %struct.object*, %struct.object** %op, align 8
  %orig_move361 = getelementptr inbounds %struct.object, %struct.object* %382, i32 0, i32 5
  %arrayidx362 = getelementptr inbounds [3 x double], [3 x double]* %orig_move361, i64 0, i64 0
  %383 = load double, double* %arrayidx362, align 8
  %384 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %385 = load i32, i32* @x_block_size, align 4
  %mul363 = mul nsw i32 %384, %385
  %conv364 = sitofp i32 %mul363 to double
  %mul365 = fmul double %383, %conv364
  %386 = load %struct.object*, %struct.object** %op, align 8
  %orig_move366 = getelementptr inbounds %struct.object, %struct.object* %386, i32 0, i32 5
  %arrayidx367 = getelementptr inbounds [3 x double], [3 x double]* %orig_move366, i64 0, i64 1
  %387 = load double, double* %arrayidx367, align 8
  %388 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %389 = load i32, i32* @y_block_size, align 4
  %mul368 = mul nsw i32 %388, %389
  %conv369 = sitofp i32 %mul368 to double
  %mul370 = fmul double %387, %conv369
  %390 = load %struct.object*, %struct.object** %op, align 8
  %orig_move371 = getelementptr inbounds %struct.object, %struct.object* %390, i32 0, i32 5
  %arrayidx372 = getelementptr inbounds [3 x double], [3 x double]* %orig_move371, i64 0, i64 2
  %391 = load double, double* %arrayidx372, align 8
  %392 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %393 = load i32, i32* @z_block_size, align 4
  %mul373 = mul nsw i32 %392, %393
  %conv374 = sitofp i32 %mul373 to double
  %mul375 = fmul double %391, %conv374
  %call376 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %381, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i64 0, i64 0), double %mul365, double %mul370, double %mul375)
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %395 = load %struct.object*, %struct.object** %op, align 8
  %orig_size = getelementptr inbounds %struct.object, %struct.object* %395, i32 0, i32 7
  %arrayidx377 = getelementptr inbounds [3 x double], [3 x double]* %orig_size, i64 0, i64 0
  %396 = load double, double* %arrayidx377, align 8
  %397 = load %struct.object*, %struct.object** %op, align 8
  %orig_size378 = getelementptr inbounds %struct.object, %struct.object* %397, i32 0, i32 7
  %arrayidx379 = getelementptr inbounds [3 x double], [3 x double]* %orig_size378, i64 0, i64 1
  %398 = load double, double* %arrayidx379, align 8
  %399 = load %struct.object*, %struct.object** %op, align 8
  %orig_size380 = getelementptr inbounds %struct.object, %struct.object* %399, i32 0, i32 7
  %arrayidx381 = getelementptr inbounds [3 x double], [3 x double]* %orig_size380, i64 0, i64 2
  %400 = load double, double* %arrayidx381, align 8
  %call382 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %394, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), double %396, double %398, double %400)
  %401 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %402 = load %struct.object*, %struct.object** %op, align 8
  %size383 = getelementptr inbounds %struct.object, %struct.object* %402, i32 0, i32 6
  %arrayidx384 = getelementptr inbounds [3 x double], [3 x double]* %size383, i64 0, i64 0
  %403 = load double, double* %arrayidx384, align 8
  %404 = load %struct.object*, %struct.object** %op, align 8
  %size385 = getelementptr inbounds %struct.object, %struct.object* %404, i32 0, i32 6
  %arrayidx386 = getelementptr inbounds [3 x double], [3 x double]* %size385, i64 0, i64 1
  %405 = load double, double* %arrayidx386, align 8
  %406 = load %struct.object*, %struct.object** %op, align 8
  %size387 = getelementptr inbounds %struct.object, %struct.object* %406, i32 0, i32 6
  %arrayidx388 = getelementptr inbounds [3 x double], [3 x double]* %size387, i64 0, i64 2
  %407 = load double, double* %arrayidx388, align 8
  %call389 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %401, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), double %403, double %405, double %407)
  %408 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %409 = load %struct.object*, %struct.object** %op, align 8
  %inc390 = getelementptr inbounds %struct.object, %struct.object* %409, i32 0, i32 8
  %arrayidx391 = getelementptr inbounds [3 x double], [3 x double]* %inc390, i64 0, i64 0
  %410 = load double, double* %arrayidx391, align 8
  %411 = load %struct.object*, %struct.object** %op, align 8
  %inc392 = getelementptr inbounds %struct.object, %struct.object* %411, i32 0, i32 8
  %arrayidx393 = getelementptr inbounds [3 x double], [3 x double]* %inc392, i64 0, i64 1
  %412 = load double, double* %arrayidx393, align 8
  %413 = load %struct.object*, %struct.object** %op, align 8
  %inc394 = getelementptr inbounds %struct.object, %struct.object* %413, i32 0, i32 8
  %arrayidx395 = getelementptr inbounds [3 x double], [3 x double]* %inc394, i64 0, i64 2
  %414 = load double, double* %arrayidx395, align 8
  %call396 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %408, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i64 0, i64 0), double %410, double %412, double %414)
  %415 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %416 = load %struct.object*, %struct.object** %op, align 8
  %inc397 = getelementptr inbounds %struct.object, %struct.object* %416, i32 0, i32 8
  %arrayidx398 = getelementptr inbounds [3 x double], [3 x double]* %inc397, i64 0, i64 0
  %417 = load double, double* %arrayidx398, align 8
  %418 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %419 = load i32, i32* @x_block_size, align 4
  %mul399 = mul nsw i32 %418, %419
  %conv400 = sitofp i32 %mul399 to double
  %mul401 = fmul double %417, %conv400
  %420 = load %struct.object*, %struct.object** %op, align 8
  %inc402 = getelementptr inbounds %struct.object, %struct.object* %420, i32 0, i32 8
  %arrayidx403 = getelementptr inbounds [3 x double], [3 x double]* %inc402, i64 0, i64 1
  %421 = load double, double* %arrayidx403, align 8
  %422 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %423 = load i32, i32* @y_block_size, align 4
  %mul404 = mul nsw i32 %422, %423
  %conv405 = sitofp i32 %mul404 to double
  %mul406 = fmul double %421, %conv405
  %424 = load %struct.object*, %struct.object** %op, align 8
  %inc407 = getelementptr inbounds %struct.object, %struct.object* %424, i32 0, i32 8
  %arrayidx408 = getelementptr inbounds [3 x double], [3 x double]* %inc407, i64 0, i64 2
  %425 = load double, double* %arrayidx408, align 8
  %426 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %427 = load i32, i32* @z_block_size, align 4
  %mul409 = mul nsw i32 %426, %427
  %conv410 = sitofp i32 %mul409 to double
  %mul411 = fmul double %425, %conv410
  %call412 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %415, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0), double %mul401, double %mul406, double %mul411)
  br label %for.inc413

for.inc413:                                       ; preds = %if.end341
  %428 = load i32, i32* %i, align 4
  %inc414 = add nsw i32 %428, 1
  store i32 %inc414, i32* %i, align 4
  br label %for.cond175

for.end415:                                       ; preds = %for.cond175
  br label %if.end416

if.end416:                                        ; preds = %for.end415, %if.then171
  %429 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %430 = load i32, i32* @num_tsteps, align 4
  %call417 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %429, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i64 0, i64 0), i32 %430)
  %431 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %432 = load i32, i32* @stages_per_ts, align 4
  %call418 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %431, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i64 0, i64 0), i32 %432)
  %433 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %434 = load i32, i32* @checksum_freq, align 4
  %call419 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %433, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i64 0, i64 0), i32 %434)
  %435 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %436 = load i32, i32* @refine_freq, align 4
  %call420 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %435, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i64 0, i64 0), i32 %436)
  %437 = load i32, i32* @plot_freq, align 4
  %tobool421 = icmp ne i32 %437, 0
  br i1 %tobool421, label %if.then422, label %if.else424

if.then422:                                       ; preds = %if.end416
  %438 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %439 = load i32, i32* @plot_freq, align 4
  %call423 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %438, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i64 0, i64 0), i32 %439)
  br label %if.end426

if.else424:                                       ; preds = %if.end416
  %440 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call425 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %440, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.145, i64 0, i64 0))
  br label %if.end426

if.end426:                                        ; preds = %if.else424, %if.then422
  %441 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %442 = load i32, i32* @num_vars, align 4
  %443 = load i32, i32* @stencil, align 4
  %call427 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %441, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i64 0, i64 0), i32 %442, i32 %443)
  %444 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %445 = load i32, i32* @comm_vars, align 4
  %call428 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %444, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i64 0, i64 0), i32 %445)
  %446 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %447 = load i32, i32* @error_tol, align 4
  %call429 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %446, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i64 0, i64 0), i32 %447)
  %448 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %449 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 0), align 16
  %call430 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %448, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.149, i64 0, i64 0), double %449)
  %450 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %451 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 110), align 16
  %call431 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %450, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.150, i64 0, i64 0), double %451)
  %452 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %453 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 111), align 8
  %call432 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %452, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.151, i64 0, i64 0), double %453)
  %454 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call433 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %454, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0))
  %455 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call434 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %455, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.153, i64 0, i64 0))
  %456 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call435 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %456, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  %457 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %458 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 38), align 16
  %call436 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %457, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %458)
  %459 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %460 = load double, double* %total_gflops, align 8
  %call437 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %459, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.156, i64 0, i64 0), double %460)
  %461 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %462 = load double, double* %gflops_rank, align 8
  %call438 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %461, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.157, i64 0, i64 0), double %462)
  %463 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %464 = load double, double* %total_fp_ops, align 8
  %call439 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %463, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.158, i64 0, i64 0), double %464)
  %465 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %466 = load double, double* %total_fp_adds, align 8
  %call440 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %465, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.159, i64 0, i64 0), double %466)
  %467 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %468 = load double, double* %total_fp_divs, align 8
  %call441 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %467, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.160, i64 0, i64 0), double %468)
  %469 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call442 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %469, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0))
  %470 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call443 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %470, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i64 0, i64 0))
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call444 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %471, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  %472 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %473 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 37), align 8
  %call445 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %472, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %473)
  store i32 0, i32* %i, align 4
  br label %for.cond446

for.cond446:                                      ; preds = %for.inc505, %if.end426
  %474 = load i32, i32* %i, align 4
  %cmp447 = icmp slt i32 %474, 4
  br i1 %cmp447, label %for.body449, label %for.end507

for.body449:                                      ; preds = %for.cond446
  %475 = load i32, i32* %i, align 4
  %cmp450 = icmp eq i32 %475, 0
  br i1 %cmp450, label %if.then452, label %if.else454

if.then452:                                       ; preds = %for.body449
  %476 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call453 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %476, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.162, i64 0, i64 0))
  br label %if.end468

if.else454:                                       ; preds = %for.body449
  %477 = load i32, i32* %i, align 4
  %cmp455 = icmp eq i32 %477, 1
  br i1 %cmp455, label %if.then457, label %if.else459

if.then457:                                       ; preds = %if.else454
  %478 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call458 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %478, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.163, i64 0, i64 0))
  br label %if.end467

if.else459:                                       ; preds = %if.else454
  %479 = load i32, i32* %i, align 4
  %cmp460 = icmp eq i32 %479, 2
  br i1 %cmp460, label %if.then462, label %if.else464

if.then462:                                       ; preds = %if.else459
  %480 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call463 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %480, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.164, i64 0, i64 0))
  br label %if.end466

if.else464:                                       ; preds = %if.else459
  %481 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call465 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %481, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.165, i64 0, i64 0))
  br label %if.end466

if.end466:                                        ; preds = %if.else464, %if.then462
  br label %if.end467

if.end467:                                        ; preds = %if.end466, %if.then457
  br label %if.end468

if.end468:                                        ; preds = %if.end467, %if.then452
  %482 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call469 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %482, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.166, i64 0, i64 0))
  %483 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %484 = load i32, i32* %i, align 4
  %mul470 = mul nsw i32 9, %484
  %add471 = add nsw i32 1, %mul470
  %idxprom472 = sext i32 %add471 to i64
  %arrayidx473 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom472
  %485 = load double, double* %arrayidx473, align 8
  %call474 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %483, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.167, i64 0, i64 0), double %485)
  %486 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %487 = load i32, i32* %i, align 4
  %mul475 = mul nsw i32 9, %487
  %add476 = add nsw i32 5, %mul475
  %idxprom477 = sext i32 %add476 to i64
  %arrayidx478 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom477
  %488 = load double, double* %arrayidx478, align 8
  %call479 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %486, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.168, i64 0, i64 0), double %488)
  %489 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %490 = load i32, i32* %i, align 4
  %mul480 = mul nsw i32 9, %490
  %add481 = add nsw i32 6, %mul480
  %idxprom482 = sext i32 %add481 to i64
  %arrayidx483 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom482
  %491 = load double, double* %arrayidx483, align 8
  %call484 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %489, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.169, i64 0, i64 0), double %491)
  %492 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %493 = load i32, i32* %i, align 4
  %mul485 = mul nsw i32 9, %493
  %add486 = add nsw i32 7, %mul485
  %idxprom487 = sext i32 %add486 to i64
  %arrayidx488 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom487
  %494 = load double, double* %arrayidx488, align 8
  %call489 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %492, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.170, i64 0, i64 0), double %494)
  %495 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %496 = load i32, i32* %i, align 4
  %mul490 = mul nsw i32 9, %496
  %add491 = add nsw i32 75, %mul490
  %idxprom492 = sext i32 %add491 to i64
  %arrayidx493 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom492
  %497 = load double, double* %arrayidx493, align 8
  %call494 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %495, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.171, i64 0, i64 0), double %497)
  %498 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %499 = load i32, i32* %i, align 4
  %mul495 = mul nsw i32 9, %499
  %add496 = add nsw i32 76, %mul495
  %idxprom497 = sext i32 %add496 to i64
  %arrayidx498 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom497
  %500 = load double, double* %arrayidx498, align 8
  %call499 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %498, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.172, i64 0, i64 0), double %500)
  %501 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %502 = load i32, i32* %i, align 4
  %mul500 = mul nsw i32 9, %502
  %add501 = add nsw i32 74, %mul500
  %idxprom502 = sext i32 %add501 to i64
  %arrayidx503 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom502
  %503 = load double, double* %arrayidx503, align 8
  %call504 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %501, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.173, i64 0, i64 0), double %503)
  br label %for.inc505

for.inc505:                                       ; preds = %if.end468
  %504 = load i32, i32* %i, align 4
  %inc506 = add nsw i32 %504, 1
  store i32 %inc506, i32* %i, align 4
  br label %for.cond446

for.end507:                                       ; preds = %for.cond446
  %505 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call508 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %505, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.174, i64 0, i64 0))
  %506 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call509 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %506, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.175, i64 0, i64 0))
  %507 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call510 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %507, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  %508 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %509 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 39), align 8
  %call511 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %508, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %509)
  %510 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %511 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 41), align 8
  %call512 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %510, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.176, i64 0, i64 0), double %511)
  %512 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %513 = load i32, i32* @total_red, align 4
  %call513 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %512, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.177, i64 0, i64 0), i32 %513)
  %514 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %515 = load i32, i32* @num_vars, align 4
  %call514 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %514, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.178, i64 0, i64 0), i32 %515)
  %516 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call515 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %516, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0))
  %517 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call516 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %517, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0))
  %518 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call517 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %518, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  %519 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %520 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 42), align 16
  %call518 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %519, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %520)
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %522 = load i32, i32* @nrs, align 4
  %call519 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %521, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.180, i64 0, i64 0), i32 %522)
  %523 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %524 = load i64, i64* @total_blocks, align 8
  %call520 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %523, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.181, i64 0, i64 0), i64 %524)
  %525 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %526 = load i64, i64* @total_blocks, align 8
  %conv521 = sitofp i64 %526 to double
  %527 = load i32, i32* @num_tsteps, align 4
  %528 = load i32, i32* @stages_per_ts, align 4
  %mul522 = mul nsw i32 %527, %528
  %conv523 = sitofp i32 %mul522 to double
  %div524 = fdiv double %conv521, %conv523
  %529 = load i32, i32* @nb_min, align 4
  %530 = load i32, i32* @nb_max, align 4
  %call525 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %525, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.182, i64 0, i64 0), double %div524, i32 %529, i32 %530)
  %531 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %532 = load i32, i32* @global_max_b, align 4
  %call526 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %531, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.183, i64 0, i64 0), i32 %532)
  %533 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %534 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 104), align 16
  %call527 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %533, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.184, i64 0, i64 0), double %534)
  %535 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %536 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 105), align 8
  %call528 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %535, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.185, i64 0, i64 0), double %536)
  %537 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call529 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %537, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.186, i64 0, i64 0))
  %538 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %539 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 43), align 8
  %call530 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %538, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.187, i64 0, i64 0), double %539)
  %540 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %541 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 44), align 16
  %call531 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %540, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.188, i64 0, i64 0), double %541)
  %542 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %543 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 46), align 16
  %call532 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %542, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.189, i64 0, i64 0), double %543)
  %544 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %545 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 47), align 8
  %call533 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %544, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.190, i64 0, i64 0), double %545)
  %546 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %547 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 45), align 8
  %call534 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %546, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.191, i64 0, i64 0), double %547)
  %548 = load i32, i32* @target_active, align 4
  %tobool535 = icmp ne i32 %548, 0
  br i1 %tobool535, label %if.then536, label %if.end544

if.then536:                                       ; preds = %for.end507
  %549 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %550 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 52), align 16
  %call537 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %549, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.192, i64 0, i64 0), double %550)
  %551 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %552 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 53), align 8
  %call538 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %551, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.193, i64 0, i64 0), double %552)
  %553 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %554 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 54), align 16
  %call539 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %553, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i64 0, i64 0), double %554)
  %555 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %556 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 58), align 16
  %call540 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %555, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.195, i64 0, i64 0), double %556)
  %557 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %558 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 59), align 8
  %call541 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %557, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.196, i64 0, i64 0), double %558)
  %559 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %560 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 60), align 16
  %call542 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %559, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.194, i64 0, i64 0), double %560)
  %561 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %562 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 61), align 8
  %call543 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %561, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.197, i64 0, i64 0), double %562)
  br label %if.end544

if.end544:                                        ; preds = %if.then536, %for.end507
  %563 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call545 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %563, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.152, i64 0, i64 0))
  %564 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call546 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %564, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.198, i64 0, i64 0))
  %565 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call547 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %565, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.154, i64 0, i64 0))
  %566 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %567 = load double, double* getelementptr inbounds ([128 x double], [128 x double]* @average, i64 0, i64 67), align 8
  %call548 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %566, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.155, i64 0, i64 0), double %567)
  %568 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %569 = load i32, i32* @nps, align 4
  %call549 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %568, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.199, i64 0, i64 0), i32 %569)
  %570 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call550 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %570, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.200, i64 0, i64 0))
  %571 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8
  %call551 = call i32 @fclose(%struct._IO_FILE* %571)
  br label %if.end552

if.end552:                                        ; preds = %if.end544, %if.end132
  %572 = load i32, i32* @report_perf, align 4
  %and553 = and i32 %572, 4
  %tobool554 = icmp ne i32 %and553, 0
  br i1 %tobool554, label %if.then555, label %if.end852

if.then555:                                       ; preds = %if.end552
  %call556 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.91, i64 0, i64 0))
  %call557 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.92.177, i64 0, i64 0))
  %573 = load i8*, i8** %version, align 8
  %call558 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.93, i64 0, i64 0), i8* %573)
  %call559 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.94, i64 0, i64 0))
  %574 = load i32, i32* @init_block_x, align 4
  %575 = load i32, i32* @init_block_y, align 4
  %576 = load i32, i32* @init_block_z, align 4
  %call560 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.95, i64 0, i64 0), i32 %574, i32 %575, i32 %576)
  %577 = load i32, i32* @x_block_size, align 4
  %578 = load i32, i32* @y_block_size, align 4
  %579 = load i32, i32* @z_block_size, align 4
  %call561 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.96, i64 0, i64 0), i32 %577, i32 %578, i32 %579)
  %580 = load i32, i32* @permute, align 4
  %tobool562 = icmp ne i32 %580, 0
  br i1 %tobool562, label %if.then563, label %if.end565

if.then563:                                       ; preds = %if.then555
  %call564 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.97, i64 0, i64 0))
  br label %if.end565

if.end565:                                        ; preds = %if.then563, %if.then555
  %581 = load i32, i32* @max_num_blocks, align 4
  %call566 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.98, i64 0, i64 0), i32 %581)
  %582 = load i32, i32* @target_active, align 4
  %tobool567 = icmp ne i32 %582, 0
  br i1 %tobool567, label %if.then568, label %if.end570

if.then568:                                       ; preds = %if.end565
  %583 = load i32, i32* @target_active, align 4
  %call569 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.99, i64 0, i64 0), i32 %583)
  br label %if.end570

if.end570:                                        ; preds = %if.then568, %if.end565
  %584 = load i32, i32* @target_max, align 4
  %tobool571 = icmp ne i32 %584, 0
  br i1 %tobool571, label %if.then572, label %if.end574

if.then572:                                       ; preds = %if.end570
  %585 = load i32, i32* @target_max, align 4
  %call573 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %585)
  br label %if.end574

if.end574:                                        ; preds = %if.then572, %if.end570
  %586 = load i32, i32* @target_min, align 4
  %tobool575 = icmp ne i32 %586, 0
  br i1 %tobool575, label %if.then576, label %if.end578

if.then576:                                       ; preds = %if.end574
  %587 = load i32, i32* @target_min, align 4
  %call577 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.101, i64 0, i64 0), i32 %587)
  br label %if.end578

if.end578:                                        ; preds = %if.then576, %if.end574
  %588 = load i32, i32* @code, align 4
  %tobool579 = icmp ne i32 %588, 0
  br i1 %tobool579, label %if.then580, label %if.end582

if.then580:                                       ; preds = %if.end578
  %589 = load i32, i32* @code, align 4
  %call581 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0), i32 %589)
  br label %if.end582

if.end582:                                        ; preds = %if.then580, %if.end578
  %590 = load i32, i32* @num_refine, align 4
  %call583 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i32 %590)
  %591 = load i32, i32* @block_change, align 4
  %call584 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.104, i64 0, i64 0), i32 %591)
  %592 = load i32, i32* @refine_ghost, align 4
  %tobool585 = icmp ne i32 %592, 0
  br i1 %tobool585, label %if.then586, label %if.end588

if.then586:                                       ; preds = %if.end582
  %call587 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.105, i64 0, i64 0))
  br label %if.end588

if.end588:                                        ; preds = %if.then586, %if.end582
  %593 = load i32, i32* @uniform_refine, align 4
  %tobool589 = icmp ne i32 %593, 0
  br i1 %tobool589, label %if.then590, label %if.else592

if.then590:                                       ; preds = %if.end588
  %call591 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.106, i64 0, i64 0))
  br label %if.end838

if.else592:                                       ; preds = %if.end588
  %594 = load i32, i32* @num_objects, align 4
  %call593 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.107, i64 0, i64 0), i32 %594)
  store i32 0, i32* %i, align 4
  br label %for.cond594

for.cond594:                                      ; preds = %for.inc835, %if.else592
  %595 = load i32, i32* %i, align 4
  %596 = load i32, i32* @num_objects, align 4
  %cmp595 = icmp slt i32 %595, %596
  br i1 %cmp595, label %for.body597, label %for.end837

for.body597:                                      ; preds = %for.cond594
  %597 = load %struct.object*, %struct.object** @objects, align 8
  %598 = load i32, i32* %i, align 4
  %idxprom598 = sext i32 %598 to i64
  %arrayidx599 = getelementptr inbounds %struct.object, %struct.object* %597, i64 %idxprom598
  store %struct.object* %arrayidx599, %struct.object** %op, align 8
  %599 = load %struct.object*, %struct.object** %op, align 8
  %type600 = getelementptr inbounds %struct.object, %struct.object* %599, i32 0, i32 0
  %600 = load i32, i32* %type600, align 8
  %cmp601 = icmp eq i32 %600, 0
  br i1 %cmp601, label %if.then603, label %if.else605

if.then603:                                       ; preds = %for.body597
  %601 = load i32, i32* %i, align 4
  %call604 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i32 %601)
  br label %if.end752

if.else605:                                       ; preds = %for.body597
  %602 = load %struct.object*, %struct.object** %op, align 8
  %type606 = getelementptr inbounds %struct.object, %struct.object* %602, i32 0, i32 0
  %603 = load i32, i32* %type606, align 8
  %cmp607 = icmp eq i32 %603, 1
  br i1 %cmp607, label %if.then609, label %if.else611

if.then609:                                       ; preds = %if.else605
  %604 = load i32, i32* %i, align 4
  %call610 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.109, i64 0, i64 0), i32 %604)
  br label %if.end751

if.else611:                                       ; preds = %if.else605
  %605 = load %struct.object*, %struct.object** %op, align 8
  %type612 = getelementptr inbounds %struct.object, %struct.object* %605, i32 0, i32 0
  %606 = load i32, i32* %type612, align 8
  %cmp613 = icmp eq i32 %606, 2
  br i1 %cmp613, label %if.then615, label %if.else617

if.then615:                                       ; preds = %if.else611
  %607 = load i32, i32* %i, align 4
  %call616 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.110, i64 0, i64 0), i32 %607)
  br label %if.end750

if.else617:                                       ; preds = %if.else611
  %608 = load %struct.object*, %struct.object** %op, align 8
  %type618 = getelementptr inbounds %struct.object, %struct.object* %608, i32 0, i32 0
  %609 = load i32, i32* %type618, align 8
  %cmp619 = icmp eq i32 %609, 3
  br i1 %cmp619, label %if.then621, label %if.else623

if.then621:                                       ; preds = %if.else617
  %610 = load i32, i32* %i, align 4
  %call622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.111, i64 0, i64 0), i32 %610)
  br label %if.end749

if.else623:                                       ; preds = %if.else617
  %611 = load %struct.object*, %struct.object** %op, align 8
  %type624 = getelementptr inbounds %struct.object, %struct.object* %611, i32 0, i32 0
  %612 = load i32, i32* %type624, align 8
  %cmp625 = icmp eq i32 %612, 4
  br i1 %cmp625, label %if.then627, label %if.else629

if.then627:                                       ; preds = %if.else623
  %613 = load i32, i32* %i, align 4
  %call628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.112, i64 0, i64 0), i32 %613)
  br label %if.end748

if.else629:                                       ; preds = %if.else623
  %614 = load %struct.object*, %struct.object** %op, align 8
  %type630 = getelementptr inbounds %struct.object, %struct.object* %614, i32 0, i32 0
  %615 = load i32, i32* %type630, align 8
  %cmp631 = icmp eq i32 %615, 5
  br i1 %cmp631, label %if.then633, label %if.else635

if.then633:                                       ; preds = %if.else629
  %616 = load i32, i32* %i, align 4
  %call634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.113, i64 0, i64 0), i32 %616)
  br label %if.end747

if.else635:                                       ; preds = %if.else629
  %617 = load %struct.object*, %struct.object** %op, align 8
  %type636 = getelementptr inbounds %struct.object, %struct.object* %617, i32 0, i32 0
  %618 = load i32, i32* %type636, align 8
  %cmp637 = icmp eq i32 %618, 6
  br i1 %cmp637, label %if.then639, label %if.else641

if.then639:                                       ; preds = %if.else635
  %619 = load i32, i32* %i, align 4
  %call640 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.114, i64 0, i64 0), i32 %619)
  br label %if.end746

if.else641:                                       ; preds = %if.else635
  %620 = load %struct.object*, %struct.object** %op, align 8
  %type642 = getelementptr inbounds %struct.object, %struct.object* %620, i32 0, i32 0
  %621 = load i32, i32* %type642, align 8
  %cmp643 = icmp eq i32 %621, 7
  br i1 %cmp643, label %if.then645, label %if.else647

if.then645:                                       ; preds = %if.else641
  %622 = load i32, i32* %i, align 4
  %call646 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.115, i64 0, i64 0), i32 %622)
  br label %if.end745

if.else647:                                       ; preds = %if.else641
  %623 = load %struct.object*, %struct.object** %op, align 8
  %type648 = getelementptr inbounds %struct.object, %struct.object* %623, i32 0, i32 0
  %624 = load i32, i32* %type648, align 8
  %cmp649 = icmp eq i32 %624, 8
  br i1 %cmp649, label %if.then651, label %if.else653

if.then651:                                       ; preds = %if.else647
  %625 = load i32, i32* %i, align 4
  %call652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i64 0, i64 0), i32 %625)
  br label %if.end744

if.else653:                                       ; preds = %if.else647
  %626 = load %struct.object*, %struct.object** %op, align 8
  %type654 = getelementptr inbounds %struct.object, %struct.object* %626, i32 0, i32 0
  %627 = load i32, i32* %type654, align 8
  %cmp655 = icmp eq i32 %627, 9
  br i1 %cmp655, label %if.then657, label %if.else659

if.then657:                                       ; preds = %if.else653
  %628 = load i32, i32* %i, align 4
  %call658 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.117, i64 0, i64 0), i32 %628)
  br label %if.end743

if.else659:                                       ; preds = %if.else653
  %629 = load %struct.object*, %struct.object** %op, align 8
  %type660 = getelementptr inbounds %struct.object, %struct.object* %629, i32 0, i32 0
  %630 = load i32, i32* %type660, align 8
  %cmp661 = icmp eq i32 %630, 10
  br i1 %cmp661, label %if.then663, label %if.else665

if.then663:                                       ; preds = %if.else659
  %631 = load i32, i32* %i, align 4
  %call664 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i64 0, i64 0), i32 %631)
  br label %if.end742

if.else665:                                       ; preds = %if.else659
  %632 = load %struct.object*, %struct.object** %op, align 8
  %type666 = getelementptr inbounds %struct.object, %struct.object* %632, i32 0, i32 0
  %633 = load i32, i32* %type666, align 8
  %cmp667 = icmp eq i32 %633, 11
  br i1 %cmp667, label %if.then669, label %if.else671

if.then669:                                       ; preds = %if.else665
  %634 = load i32, i32* %i, align 4
  %call670 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %634)
  br label %if.end741

if.else671:                                       ; preds = %if.else665
  %635 = load %struct.object*, %struct.object** %op, align 8
  %type672 = getelementptr inbounds %struct.object, %struct.object* %635, i32 0, i32 0
  %636 = load i32, i32* %type672, align 8
  %cmp673 = icmp eq i32 %636, 12
  br i1 %cmp673, label %if.then675, label %if.else677

if.then675:                                       ; preds = %if.else671
  %637 = load i32, i32* %i, align 4
  %call676 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0), i32 %637)
  br label %if.end740

if.else677:                                       ; preds = %if.else671
  %638 = load %struct.object*, %struct.object** %op, align 8
  %type678 = getelementptr inbounds %struct.object, %struct.object* %638, i32 0, i32 0
  %639 = load i32, i32* %type678, align 8
  %cmp679 = icmp eq i32 %639, 13
  br i1 %cmp679, label %if.then681, label %if.else683

if.then681:                                       ; preds = %if.else677
  %640 = load i32, i32* %i, align 4
  %call682 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.121, i64 0, i64 0), i32 %640)
  br label %if.end739

if.else683:                                       ; preds = %if.else677
  %641 = load %struct.object*, %struct.object** %op, align 8
  %type684 = getelementptr inbounds %struct.object, %struct.object* %641, i32 0, i32 0
  %642 = load i32, i32* %type684, align 8
  %cmp685 = icmp eq i32 %642, 14
  br i1 %cmp685, label %if.then687, label %if.else689

if.then687:                                       ; preds = %if.else683
  %643 = load i32, i32* %i, align 4
  %call688 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.122, i64 0, i64 0), i32 %643)
  br label %if.end738

if.else689:                                       ; preds = %if.else683
  %644 = load %struct.object*, %struct.object** %op, align 8
  %type690 = getelementptr inbounds %struct.object, %struct.object* %644, i32 0, i32 0
  %645 = load i32, i32* %type690, align 8
  %cmp691 = icmp eq i32 %645, 15
  br i1 %cmp691, label %if.then693, label %if.else695

if.then693:                                       ; preds = %if.else689
  %646 = load i32, i32* %i, align 4
  %call694 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i32 %646)
  br label %if.end737

if.else695:                                       ; preds = %if.else689
  %647 = load %struct.object*, %struct.object** %op, align 8
  %type696 = getelementptr inbounds %struct.object, %struct.object* %647, i32 0, i32 0
  %648 = load i32, i32* %type696, align 8
  %cmp697 = icmp eq i32 %648, 20
  br i1 %cmp697, label %if.then699, label %if.else701

if.then699:                                       ; preds = %if.else695
  %649 = load i32, i32* %i, align 4
  %call700 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.124, i64 0, i64 0), i32 %649)
  br label %if.end736

if.else701:                                       ; preds = %if.else695
  %650 = load %struct.object*, %struct.object** %op, align 8
  %type702 = getelementptr inbounds %struct.object, %struct.object* %650, i32 0, i32 0
  %651 = load i32, i32* %type702, align 8
  %cmp703 = icmp eq i32 %651, 21
  br i1 %cmp703, label %if.then705, label %if.else707

if.then705:                                       ; preds = %if.else701
  %652 = load i32, i32* %i, align 4
  %call706 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.125, i64 0, i64 0), i32 %652)
  br label %if.end735

if.else707:                                       ; preds = %if.else701
  %653 = load %struct.object*, %struct.object** %op, align 8
  %type708 = getelementptr inbounds %struct.object, %struct.object* %653, i32 0, i32 0
  %654 = load i32, i32* %type708, align 8
  %cmp709 = icmp eq i32 %654, 22
  br i1 %cmp709, label %if.then711, label %if.else713

if.then711:                                       ; preds = %if.else707
  %655 = load i32, i32* %i, align 4
  %call712 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.126, i64 0, i64 0), i32 %655)
  br label %if.end734

if.else713:                                       ; preds = %if.else707
  %656 = load %struct.object*, %struct.object** %op, align 8
  %type714 = getelementptr inbounds %struct.object, %struct.object* %656, i32 0, i32 0
  %657 = load i32, i32* %type714, align 8
  %cmp715 = icmp eq i32 %657, 23
  br i1 %cmp715, label %if.then717, label %if.else719

if.then717:                                       ; preds = %if.else713
  %658 = load i32, i32* %i, align 4
  %call718 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i32 %658)
  br label %if.end733

if.else719:                                       ; preds = %if.else713
  %659 = load %struct.object*, %struct.object** %op, align 8
  %type720 = getelementptr inbounds %struct.object, %struct.object* %659, i32 0, i32 0
  %660 = load i32, i32* %type720, align 8
  %cmp721 = icmp eq i32 %660, 24
  br i1 %cmp721, label %if.then723, label %if.else725

if.then723:                                       ; preds = %if.else719
  %661 = load i32, i32* %i, align 4
  %call724 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.128, i64 0, i64 0), i32 %661)
  br label %if.end732

if.else725:                                       ; preds = %if.else719
  %662 = load %struct.object*, %struct.object** %op, align 8
  %type726 = getelementptr inbounds %struct.object, %struct.object* %662, i32 0, i32 0
  %663 = load i32, i32* %type726, align 8
  %cmp727 = icmp eq i32 %663, 25
  br i1 %cmp727, label %if.then729, label %if.end731

if.then729:                                       ; preds = %if.else725
  %664 = load i32, i32* %i, align 4
  %call730 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.129, i64 0, i64 0), i32 %664)
  br label %if.end731

if.end731:                                        ; preds = %if.then729, %if.else725
  br label %if.end732

if.end732:                                        ; preds = %if.end731, %if.then723
  br label %if.end733

if.end733:                                        ; preds = %if.end732, %if.then717
  br label %if.end734

if.end734:                                        ; preds = %if.end733, %if.then711
  br label %if.end735

if.end735:                                        ; preds = %if.end734, %if.then705
  br label %if.end736

if.end736:                                        ; preds = %if.end735, %if.then699
  br label %if.end737

if.end737:                                        ; preds = %if.end736, %if.then693
  br label %if.end738

if.end738:                                        ; preds = %if.end737, %if.then687
  br label %if.end739

if.end739:                                        ; preds = %if.end738, %if.then681
  br label %if.end740

if.end740:                                        ; preds = %if.end739, %if.then675
  br label %if.end741

if.end741:                                        ; preds = %if.end740, %if.then669
  br label %if.end742

if.end742:                                        ; preds = %if.end741, %if.then663
  br label %if.end743

if.end743:                                        ; preds = %if.end742, %if.then657
  br label %if.end744

if.end744:                                        ; preds = %if.end743, %if.then651
  br label %if.end745

if.end745:                                        ; preds = %if.end744, %if.then645
  br label %if.end746

if.end746:                                        ; preds = %if.end745, %if.then639
  br label %if.end747

if.end747:                                        ; preds = %if.end746, %if.then633
  br label %if.end748

if.end748:                                        ; preds = %if.end747, %if.then627
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then621
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then615
  br label %if.end751

if.end751:                                        ; preds = %if.end750, %if.then609
  br label %if.end752

if.end752:                                        ; preds = %if.end751, %if.then603
  %665 = load %struct.object*, %struct.object** %op, align 8
  %bounce753 = getelementptr inbounds %struct.object, %struct.object* %665, i32 0, i32 1
  %666 = load i32, i32* %bounce753, align 4
  %cmp754 = icmp eq i32 %666, 0
  br i1 %cmp754, label %if.then756, label %if.else758

if.then756:                                       ; preds = %if.end752
  %call757 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.130, i64 0, i64 0))
  br label %if.end760

if.else758:                                       ; preds = %if.end752
  %call759 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.131, i64 0, i64 0))
  br label %if.end760

if.end760:                                        ; preds = %if.else758, %if.then756
  %667 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen761 = getelementptr inbounds %struct.object, %struct.object* %667, i32 0, i32 3
  %arrayidx762 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen761, i64 0, i64 0
  %668 = load double, double* %arrayidx762, align 8
  %669 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen763 = getelementptr inbounds %struct.object, %struct.object* %669, i32 0, i32 3
  %arrayidx764 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen763, i64 0, i64 1
  %670 = load double, double* %arrayidx764, align 8
  %671 = load %struct.object*, %struct.object** %op, align 8
  %orig_cen765 = getelementptr inbounds %struct.object, %struct.object* %671, i32 0, i32 3
  %arrayidx766 = getelementptr inbounds [3 x double], [3 x double]* %orig_cen765, i64 0, i64 2
  %672 = load double, double* %arrayidx766, align 8
  %call767 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.132, i64 0, i64 0), double %668, double %670, double %672)
  %673 = load %struct.object*, %struct.object** %op, align 8
  %cen768 = getelementptr inbounds %struct.object, %struct.object* %673, i32 0, i32 2
  %arrayidx769 = getelementptr inbounds [3 x double], [3 x double]* %cen768, i64 0, i64 0
  %674 = load double, double* %arrayidx769, align 8
  %675 = load %struct.object*, %struct.object** %op, align 8
  %cen770 = getelementptr inbounds %struct.object, %struct.object* %675, i32 0, i32 2
  %arrayidx771 = getelementptr inbounds [3 x double], [3 x double]* %cen770, i64 0, i64 1
  %676 = load double, double* %arrayidx771, align 8
  %677 = load %struct.object*, %struct.object** %op, align 8
  %cen772 = getelementptr inbounds %struct.object, %struct.object* %677, i32 0, i32 2
  %arrayidx773 = getelementptr inbounds [3 x double], [3 x double]* %cen772, i64 0, i64 2
  %678 = load double, double* %arrayidx773, align 8
  %call774 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.133, i64 0, i64 0), double %674, double %676, double %678)
  %679 = load %struct.object*, %struct.object** %op, align 8
  %orig_move775 = getelementptr inbounds %struct.object, %struct.object* %679, i32 0, i32 5
  %arrayidx776 = getelementptr inbounds [3 x double], [3 x double]* %orig_move775, i64 0, i64 0
  %680 = load double, double* %arrayidx776, align 8
  %681 = load %struct.object*, %struct.object** %op, align 8
  %orig_move777 = getelementptr inbounds %struct.object, %struct.object* %681, i32 0, i32 5
  %arrayidx778 = getelementptr inbounds [3 x double], [3 x double]* %orig_move777, i64 0, i64 1
  %682 = load double, double* %arrayidx778, align 8
  %683 = load %struct.object*, %struct.object** %op, align 8
  %orig_move779 = getelementptr inbounds %struct.object, %struct.object* %683, i32 0, i32 5
  %arrayidx780 = getelementptr inbounds [3 x double], [3 x double]* %orig_move779, i64 0, i64 2
  %684 = load double, double* %arrayidx780, align 8
  %call781 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.134, i64 0, i64 0), double %680, double %682, double %684)
  %685 = load %struct.object*, %struct.object** %op, align 8
  %orig_move782 = getelementptr inbounds %struct.object, %struct.object* %685, i32 0, i32 5
  %arrayidx783 = getelementptr inbounds [3 x double], [3 x double]* %orig_move782, i64 0, i64 0
  %686 = load double, double* %arrayidx783, align 8
  %687 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %688 = load i32, i32* @x_block_size, align 4
  %mul784 = mul nsw i32 %687, %688
  %conv785 = sitofp i32 %mul784 to double
  %mul786 = fmul double %686, %conv785
  %689 = load %struct.object*, %struct.object** %op, align 8
  %orig_move787 = getelementptr inbounds %struct.object, %struct.object* %689, i32 0, i32 5
  %arrayidx788 = getelementptr inbounds [3 x double], [3 x double]* %orig_move787, i64 0, i64 1
  %690 = load double, double* %arrayidx788, align 8
  %691 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %692 = load i32, i32* @y_block_size, align 4
  %mul789 = mul nsw i32 %691, %692
  %conv790 = sitofp i32 %mul789 to double
  %mul791 = fmul double %690, %conv790
  %693 = load %struct.object*, %struct.object** %op, align 8
  %orig_move792 = getelementptr inbounds %struct.object, %struct.object* %693, i32 0, i32 5
  %arrayidx793 = getelementptr inbounds [3 x double], [3 x double]* %orig_move792, i64 0, i64 2
  %694 = load double, double* %arrayidx793, align 8
  %695 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %696 = load i32, i32* @z_block_size, align 4
  %mul794 = mul nsw i32 %695, %696
  %conv795 = sitofp i32 %mul794 to double
  %mul796 = fmul double %694, %conv795
  %call797 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.135, i64 0, i64 0), double %mul786, double %mul791, double %mul796)
  %697 = load %struct.object*, %struct.object** %op, align 8
  %orig_size798 = getelementptr inbounds %struct.object, %struct.object* %697, i32 0, i32 7
  %arrayidx799 = getelementptr inbounds [3 x double], [3 x double]* %orig_size798, i64 0, i64 0
  %698 = load double, double* %arrayidx799, align 8
  %699 = load %struct.object*, %struct.object** %op, align 8
  %orig_size800 = getelementptr inbounds %struct.object, %struct.object* %699, i32 0, i32 7
  %arrayidx801 = getelementptr inbounds [3 x double], [3 x double]* %orig_size800, i64 0, i64 1
  %700 = load double, double* %arrayidx801, align 8
  %701 = load %struct.object*, %struct.object** %op, align 8
  %orig_size802 = getelementptr inbounds %struct.object, %struct.object* %701, i32 0, i32 7
  %arrayidx803 = getelementptr inbounds [3 x double], [3 x double]* %orig_size802, i64 0, i64 2
  %702 = load double, double* %arrayidx803, align 8
  %call804 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.136, i64 0, i64 0), double %698, double %700, double %702)
  %703 = load %struct.object*, %struct.object** %op, align 8
  %size805 = getelementptr inbounds %struct.object, %struct.object* %703, i32 0, i32 6
  %arrayidx806 = getelementptr inbounds [3 x double], [3 x double]* %size805, i64 0, i64 0
  %704 = load double, double* %arrayidx806, align 8
  %705 = load %struct.object*, %struct.object** %op, align 8
  %size807 = getelementptr inbounds %struct.object, %struct.object* %705, i32 0, i32 6
  %arrayidx808 = getelementptr inbounds [3 x double], [3 x double]* %size807, i64 0, i64 1
  %706 = load double, double* %arrayidx808, align 8
  %707 = load %struct.object*, %struct.object** %op, align 8
  %size809 = getelementptr inbounds %struct.object, %struct.object* %707, i32 0, i32 6
  %arrayidx810 = getelementptr inbounds [3 x double], [3 x double]* %size809, i64 0, i64 2
  %708 = load double, double* %arrayidx810, align 8
  %call811 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.137, i64 0, i64 0), double %704, double %706, double %708)
  %709 = load %struct.object*, %struct.object** %op, align 8
  %inc812 = getelementptr inbounds %struct.object, %struct.object* %709, i32 0, i32 8
  %arrayidx813 = getelementptr inbounds [3 x double], [3 x double]* %inc812, i64 0, i64 0
  %710 = load double, double* %arrayidx813, align 8
  %711 = load %struct.object*, %struct.object** %op, align 8
  %inc814 = getelementptr inbounds %struct.object, %struct.object* %711, i32 0, i32 8
  %arrayidx815 = getelementptr inbounds [3 x double], [3 x double]* %inc814, i64 0, i64 1
  %712 = load double, double* %arrayidx815, align 8
  %713 = load %struct.object*, %struct.object** %op, align 8
  %inc816 = getelementptr inbounds %struct.object, %struct.object* %713, i32 0, i32 8
  %arrayidx817 = getelementptr inbounds [3 x double], [3 x double]* %inc816, i64 0, i64 2
  %714 = load double, double* %arrayidx817, align 8
  %call818 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i64 0, i64 0), double %710, double %712, double %714)
  %715 = load %struct.object*, %struct.object** %op, align 8
  %inc819 = getelementptr inbounds %struct.object, %struct.object* %715, i32 0, i32 8
  %arrayidx820 = getelementptr inbounds [3 x double], [3 x double]* %inc819, i64 0, i64 0
  %716 = load double, double* %arrayidx820, align 8
  %717 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 0), align 4
  %718 = load i32, i32* @x_block_size, align 4
  %mul821 = mul nsw i32 %717, %718
  %conv822 = sitofp i32 %mul821 to double
  %mul823 = fmul double %716, %conv822
  %719 = load %struct.object*, %struct.object** %op, align 8
  %inc824 = getelementptr inbounds %struct.object, %struct.object* %719, i32 0, i32 8
  %arrayidx825 = getelementptr inbounds [3 x double], [3 x double]* %inc824, i64 0, i64 1
  %720 = load double, double* %arrayidx825, align 8
  %721 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 1), align 4
  %722 = load i32, i32* @y_block_size, align 4
  %mul826 = mul nsw i32 %721, %722
  %conv827 = sitofp i32 %mul826 to double
  %mul828 = fmul double %720, %conv827
  %723 = load %struct.object*, %struct.object** %op, align 8
  %inc829 = getelementptr inbounds %struct.object, %struct.object* %723, i32 0, i32 8
  %arrayidx830 = getelementptr inbounds [3 x double], [3 x double]* %inc829, i64 0, i64 2
  %724 = load double, double* %arrayidx830, align 8
  %725 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @mesh_size, i64 0, i64 2), align 4
  %726 = load i32, i32* @z_block_size, align 4
  %mul831 = mul nsw i32 %725, %726
  %conv832 = sitofp i32 %mul831 to double
  %mul833 = fmul double %724, %conv832
  %call834 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.139, i64 0, i64 0), double %mul823, double %mul828, double %mul833)
  br label %for.inc835

for.inc835:                                       ; preds = %if.end760
  %727 = load i32, i32* %i, align 4
  %inc836 = add nsw i32 %727, 1
  store i32 %inc836, i32* %i, align 4
  br label %for.cond594

for.end837:                                       ; preds = %for.cond594
  br label %if.end838

if.end838:                                        ; preds = %for.end837, %if.then590
  %728 = load i32, i32* @num_tsteps, align 4
  %call839 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i64 0, i64 0), i32 %728)
  %729 = load i32, i32* @stages_per_ts, align 4
  %call840 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.141, i64 0, i64 0), i32 %729)
  %730 = load i32, i32* @checksum_freq, align 4
  %call841 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.142, i64 0, i64 0), i32 %730)
  %731 = load i32, i32* @refine_freq, align 4
  %call842 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.143, i64 0, i64 0), i32 %731)
  %732 = load i32, i32* @plot_freq, align 4
  %tobool843 = icmp ne i32 %732, 0
  br i1 %tobool843, label %if.then844, label %if.else846

if.then844:                                       ; preds = %if.end838
  %733 = load i32, i32* @plot_freq, align 4
  %call845 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.144, i64 0, i64 0), i32 %733)
  br label %if.end848

if.else846:                                       ; preds = %if.end838
  %call847 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.145, i64 0, i64 0))
  br label %if.end848

if.end848:                                        ; preds = %if.else846, %if.then844
  %734 = load i32, i32* @num_vars, align 4
  %735 = load i32, i32* @stencil, align 4
  %call849 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.146, i64 0, i64 0), i32 %734, i32 %735)
  %736 = load i32, i32* @comm_vars, align 4
  %call850 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.147, i64 0, i64 0), i32 %736)
  %737 = load i32, i32* @error_tol, align 4
  %call851 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.148, i64 0, i64 0), i32 %737)
  br label %if.end852

if.end852:                                        ; preds = %if.end848, %if.end552
  br label %if.end853

if.end853:                                        ; preds = %if.end852, %if.end
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @calculate_results() #0 {
entry:
  %results = alloca [128 x double], align 16
  %i = alloca i32, align 4
  %0 = load double, double* @timer_all, align 8
  %arrayidx = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 0
  store double %0, double* %arrayidx, align 16
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %1, 9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4
  %add = add nsw i32 %2, 1
  %idxprom = sext i32 %add to i64
  %arrayidx1 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx1, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc36, %for.end
  %4 = load i32, i32* %i, align 4
  %cmp3 = icmp slt i32 %4, 3
  br i1 %cmp3, label %for.body4, label %for.end38

for.body4:                                        ; preds = %for.cond2
  %5 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %5 to i64
  %arrayidx6 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %idxprom5
  %6 = load double, double* %arrayidx6, align 8
  %7 = load i32, i32* %i, align 4
  %mul = mul nsw i32 9, %7
  %add7 = add nsw i32 10, %mul
  %idxprom8 = sext i32 %add7 to i64
  %arrayidx9 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom8
  store double %6, double* %arrayidx9, align 8
  %arrayidx10 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 1
  %8 = load double, double* %arrayidx10, align 8
  %add11 = fadd double %8, %6
  store double %add11, double* %arrayidx10, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %9 to i64
  %arrayidx13 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %idxprom12
  %10 = load double, double* %arrayidx13, align 8
  %11 = load i32, i32* %i, align 4
  %mul14 = mul nsw i32 9, %11
  %add15 = add nsw i32 14, %mul14
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom16
  store double %10, double* %arrayidx17, align 8
  %arrayidx18 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 5
  %12 = load double, double* %arrayidx18, align 8
  %add19 = fadd double %12, %10
  store double %add19, double* %arrayidx18, align 8
  %13 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %13 to i64
  %arrayidx21 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %idxprom20
  %14 = load double, double* %arrayidx21, align 8
  %15 = load i32, i32* %i, align 4
  %mul22 = mul nsw i32 9, %15
  %add23 = add nsw i32 15, %mul22
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom24
  store double %14, double* %arrayidx25, align 8
  %arrayidx26 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 6
  %16 = load double, double* %arrayidx26, align 16
  %add27 = fadd double %16, %14
  store double %add27, double* %arrayidx26, align 16
  %17 = load i32, i32* %i, align 4
  %idxprom28 = sext i32 %17 to i64
  %arrayidx29 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %idxprom28
  %18 = load double, double* %arrayidx29, align 8
  %19 = load i32, i32* %i, align 4
  %mul30 = mul nsw i32 9, %19
  %add31 = add nsw i32 16, %mul30
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom32
  store double %18, double* %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 7
  %20 = load double, double* %arrayidx34, align 8
  %add35 = fadd double %20, %18
  store double %add35, double* %arrayidx34, align 8
  br label %for.inc36

for.inc36:                                        ; preds = %for.body4
  %21 = load i32, i32* %i, align 4
  %inc37 = add nsw i32 %21, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond2

for.end38:                                        ; preds = %for.cond2
  %22 = load double, double* @timer_comm_all, align 8
  %arrayidx39 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 37
  store double %22, double* %arrayidx39, align 8
  %23 = load double, double* @timer_calc_all, align 8
  %arrayidx40 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 38
  store double %23, double* %arrayidx40, align 16
  %24 = load double, double* @timer_cs_all, align 8
  %arrayidx41 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 39
  store double %24, double* %arrayidx41, align 8
  %25 = load double, double* @timer_cs_calc, align 8
  %arrayidx42 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 41
  store double %25, double* %arrayidx42, align 8
  %26 = load double, double* @timer_refine_all, align 8
  %arrayidx43 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 42
  store double %26, double* %arrayidx43, align 16
  %27 = load double, double* @timer_refine_co, align 8
  %arrayidx44 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 43
  store double %27, double* %arrayidx44, align 8
  %28 = load double, double* @timer_refine_mr, align 8
  %arrayidx45 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 44
  store double %28, double* %arrayidx45, align 16
  %29 = load double, double* @timer_refine_cc, align 8
  %arrayidx46 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 45
  store double %29, double* %arrayidx46, align 8
  %30 = load double, double* @timer_refine_sb, align 8
  %arrayidx47 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 46
  store double %30, double* %arrayidx47, align 16
  %31 = load double, double* @timer_cb_all, align 8
  %arrayidx48 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 47
  store double %31, double* %arrayidx48, align 8
  %32 = load double, double* @timer_target_all, align 8
  %arrayidx49 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 52
  store double %32, double* %arrayidx49, align 16
  %33 = load double, double* @timer_target_rb, align 8
  %arrayidx50 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 53
  store double %33, double* %arrayidx50, align 8
  %34 = load double, double* @timer_target_dc, align 8
  %arrayidx51 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 54
  store double %34, double* %arrayidx51, align 16
  %35 = load double, double* @timer_target_cb, align 8
  %arrayidx52 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 58
  store double %35, double* %arrayidx52, align 16
  %36 = load double, double* @timer_target_ab, align 8
  %arrayidx53 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 59
  store double %36, double* %arrayidx53, align 8
  %37 = load double, double* @timer_target_da, align 8
  %arrayidx54 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 60
  store double %37, double* %arrayidx54, align 16
  %38 = load double, double* @timer_target_sb, align 8
  %arrayidx55 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 61
  store double %38, double* %arrayidx55, align 8
  %39 = load double, double* @timer_plot, align 8
  %arrayidx56 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 67
  store double %39, double* %arrayidx56, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc63, %for.end38
  %40 = load i32, i32* %i, align 4
  %cmp58 = icmp slt i32 %40, 9
  br i1 %cmp58, label %for.body59, label %for.end65

for.body59:                                       ; preds = %for.cond57
  %41 = load i32, i32* %i, align 4
  %add60 = add nsw i32 68, %41
  %idxprom61 = sext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom61
  store double 0.000000e+00, double* %arrayidx62, align 8
  br label %for.inc63

for.inc63:                                        ; preds = %for.body59
  %42 = load i32, i32* %i, align 4
  %inc64 = add nsw i32 %42, 1
  store i32 %inc64, i32* %i, align 4
  br label %for.cond57

for.end65:                                        ; preds = %for.cond57
  store i32 0, i32* %i, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc95, %for.end65
  %43 = load i32, i32* %i, align 4
  %cmp67 = icmp slt i32 %43, 3
  br i1 %cmp67, label %for.body68, label %for.end97

for.body68:                                       ; preds = %for.cond66
  %44 = load i32, i32* %i, align 4
  %idxprom69 = sext i32 %44 to i64
  %arrayidx70 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %idxprom69
  %45 = load i32, i32* %arrayidx70, align 4
  %conv = sitofp i32 %45 to double
  %46 = load i32, i32* %i, align 4
  %mul71 = mul nsw i32 9, %46
  %add72 = add nsw i32 83, %mul71
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom73
  store double %conv, double* %arrayidx74, align 8
  %arrayidx75 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 74
  %47 = load double, double* %arrayidx75, align 16
  %add76 = fadd double %47, %conv
  store double %add76, double* %arrayidx75, align 16
  %48 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %48 to i64
  %arrayidx78 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %idxprom77
  %49 = load i32, i32* %arrayidx78, align 4
  %conv79 = sitofp i32 %49 to double
  %50 = load i32, i32* %i, align 4
  %mul80 = mul nsw i32 9, %50
  %add81 = add nsw i32 84, %mul80
  %idxprom82 = sext i32 %add81 to i64
  %arrayidx83 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom82
  store double %conv79, double* %arrayidx83, align 8
  %arrayidx84 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 75
  %51 = load double, double* %arrayidx84, align 8
  %add85 = fadd double %51, %conv79
  store double %add85, double* %arrayidx84, align 8
  %52 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %52 to i64
  %arrayidx87 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %idxprom86
  %53 = load i32, i32* %arrayidx87, align 4
  %conv88 = sitofp i32 %53 to double
  %54 = load i32, i32* %i, align 4
  %mul89 = mul nsw i32 9, %54
  %add90 = add nsw i32 85, %mul89
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom91
  store double %conv88, double* %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 76
  %55 = load double, double* %arrayidx93, align 16
  %add94 = fadd double %55, %conv88
  store double %add94, double* %arrayidx93, align 16
  br label %for.inc95

for.inc95:                                        ; preds = %for.body68
  %56 = load i32, i32* %i, align 4
  %inc96 = add nsw i32 %56, 1
  store i32 %inc96, i32* %i, align 4
  br label %for.cond66

for.end97:                                        ; preds = %for.cond66
  %57 = load i32, i32* @num_refined, align 4
  %conv98 = sitofp i32 %57 to double
  %arrayidx99 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 104
  store double %conv98, double* %arrayidx99, align 16
  %58 = load i32, i32* @num_reformed, align 4
  %conv100 = sitofp i32 %58 to double
  %arrayidx101 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 105
  store double %conv100, double* %arrayidx101, align 8
  %59 = load i32, i32* @counter_malloc, align 4
  %conv102 = sitofp i32 %59 to double
  %arrayidx103 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 110
  store double %conv102, double* %arrayidx103, align 16
  %60 = load double, double* @size_malloc, align 8
  %arrayidx104 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 111
  store double %60, double* %arrayidx104, align 8
  %61 = load i32, i32* @counter_malloc_init, align 4
  %conv105 = sitofp i32 %61 to double
  %arrayidx106 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 112
  store double %conv105, double* %arrayidx106, align 16
  %62 = load double, double* @size_malloc_init, align 8
  %arrayidx107 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 113
  store double %62, double* %arrayidx107, align 8
  %63 = load i32, i32* @counter_malloc, align 4
  %64 = load i32, i32* @counter_malloc_init, align 4
  %sub = sub nsw i32 %63, %64
  %conv108 = sitofp i32 %sub to double
  %arrayidx109 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 114
  store double %conv108, double* %arrayidx109, align 16
  %65 = load double, double* @size_malloc, align 8
  %66 = load double, double* @size_malloc_init, align 8
  %sub110 = fsub double %65, %66
  %arrayidx111 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 115
  store double %sub110, double* %arrayidx111, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond112

for.cond112:                                      ; preds = %for.inc120, %for.end97
  %67 = load i32, i32* %i, align 4
  %cmp113 = icmp slt i32 %67, 128
  br i1 %cmp113, label %for.body115, label %for.end122

for.body115:                                      ; preds = %for.cond112
  %68 = load i32, i32* %i, align 4
  %idxprom116 = sext i32 %68 to i64
  %arrayidx117 = getelementptr inbounds [128 x double], [128 x double]* %results, i64 0, i64 %idxprom116
  %69 = load double, double* %arrayidx117, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [128 x double], [128 x double]* @average, i64 0, i64 %idxprom118
  store double %69, double* %arrayidx119, align 8
  br label %for.inc120

for.inc120:                                       ; preds = %for.body115
  %71 = load i32, i32* %i, align 4
  %inc121 = add nsw i32 %71, 1
  store i32 %inc121, i32* %i, align 4
  br label %for.cond112

for.end122:                                       ; preds = %for.cond112
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init_profile() #0 {
entry:
  %i = alloca i32, align 4
  store double 0.000000e+00, double* @timer_all, align 8
  store double 0.000000e+00, double* @timer_comm_all, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_dir, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %2 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_same, i64 0, i64 %idxprom1
  store double 0.000000e+00, double* %arrayidx2, align 8
  %3 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %3 to i64
  %arrayidx4 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_diff, i64 0, i64 %idxprom3
  store double 0.000000e+00, double* %arrayidx4, align 8
  %4 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %4 to i64
  %arrayidx6 = getelementptr inbounds [3 x double], [3 x double]* @timer_comm_bc, i64 0, i64 %idxprom5
  store double 0.000000e+00, double* %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @timer_calc_all, align 8
  store double 0.000000e+00, double* @timer_cs_all, align 8
  store double 0.000000e+00, double* @timer_cs_calc, align 8
  store double 0.000000e+00, double* @timer_refine_all, align 8
  store double 0.000000e+00, double* @timer_refine_co, align 8
  store double 0.000000e+00, double* @timer_refine_mr, align 8
  store double 0.000000e+00, double* @timer_refine_cc, align 8
  store double 0.000000e+00, double* @timer_refine_sb, align 8
  store double 0.000000e+00, double* @timer_cb_all, align 8
  store double 0.000000e+00, double* @timer_target_all, align 8
  store double 0.000000e+00, double* @timer_target_rb, align 8
  store double 0.000000e+00, double* @timer_target_dc, align 8
  store double 0.000000e+00, double* @timer_target_cb, align 8
  store double 0.000000e+00, double* @timer_target_ab, align 8
  store double 0.000000e+00, double* @timer_target_da, align 8
  store double 0.000000e+00, double* @timer_target_sb, align 8
  store double 0.000000e+00, double* @timer_plot, align 8
  store i64 0, i64* @total_blocks, align 8
  store i32 0, i32* @nrs, align 4
  store i32 0, i32* @nps, align 4
  store i32 0, i32* @num_refined, align 4
  store i32 0, i32* @num_reformed, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc16, %for.end
  %6 = load i32, i32* %i, align 4
  %cmp8 = icmp slt i32 %6, 3
  br i1 %cmp8, label %for.body9, label %for.end18

for.body9:                                        ; preds = %for.cond7
  %7 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %7 to i64
  %arrayidx11 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_bc, i64 0, i64 %idxprom10
  store i32 0, i32* %arrayidx11, align 4
  %8 = load i32, i32* %i, align 4
  %idxprom12 = sext i32 %8 to i64
  %arrayidx13 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_same, i64 0, i64 %idxprom12
  store i32 0, i32* %arrayidx13, align 4
  %9 = load i32, i32* %i, align 4
  %idxprom14 = sext i32 %9 to i64
  %arrayidx15 = getelementptr inbounds [3 x i32], [3 x i32]* @counter_diff, i64 0, i64 %idxprom14
  store i32 0, i32* %arrayidx15, align 4
  br label %for.inc16

for.inc16:                                        ; preds = %for.body9
  %10 = load i32, i32* %i, align 4
  %inc17 = add nsw i32 %10, 1
  store i32 %inc17, i32* %i, align 4
  br label %for.cond7

for.end18:                                        ; preds = %for.cond7
  store i32 0, i32* @total_red, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @refine(i32 %ts) #0 {
entry:
  %ts.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %in = alloca i32, align 4
  %min_b = alloca i32, align 4
  %max_b = alloca i32, align 4
  %sum_b = alloca i32, align 4
  %num_refine_step = alloca i32, align 4
  %num_split = alloca i32, align 4
  %nm_r = alloca i32, align 4
  %nm_c = alloca i32, align 4
  %nm_t = alloca i32, align 4
  %ratio = alloca double, align 8
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %t5 = alloca double, align 8
  %bp = alloca %struct.block*, align 8
  store i32 %ts, i32* %ts.addr, align 4
  store double 0.000000e+00, double* %t4, align 8
  %call = call double @timer()
  store double %call, double* %t1, align 8
  %0 = load i32, i32* %ts.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @block_change, align 4
  store i32 %1, i32* %num_refine_step, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %2 = load i32, i32* @num_refine, align 4
  store i32 %2, i32* %num_refine_step, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc56, %if.end
  %3 = load i32, i32* %i, align 4
  %4 = load i32, i32* %num_refine_step, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end58

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* @num_refine, align 4
  store i32 %5, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %j, align 4
  %cmp2 = icmp sge i32 %6, 0
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %7 = load i32*, i32** @num_blocks, align 8
  %8 = load i32, i32* %j, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4
  %tobool4 = icmp ne i32 %9, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %for.body3
  %10 = load i32, i32* %j, align 4
  store i32 %10, i32* @cur_max_level, align 4
  br label %for.end

if.end6:                                          ; preds = %for.body3
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %11 = load i32, i32* %j, align 4
  %dec = add nsw i32 %11, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %if.then5, %for.cond1
  call void @reset_all()
  %12 = load i32, i32* @uniform_refine, align 4
  %tobool7 = icmp ne i32 %12, 0
  br i1 %tobool7, label %if.then8, label %if.else29

if.then8:                                         ; preds = %for.end
  store i32 0, i32* %in, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc27, %if.then8
  %13 = load i32, i32* %in, align 4
  %14 = load i32*, i32** @sorted_index, align 8
  %15 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %15, 1
  %idxprom10 = sext i32 %add to i64
  %arrayidx11 = getelementptr inbounds i32, i32* %14, i64 %idxprom10
  %16 = load i32, i32* %arrayidx11, align 4
  %cmp12 = icmp slt i32 %13, %16
  br i1 %cmp12, label %for.body13, label %for.end28

for.body13:                                       ; preds = %for.cond9
  %17 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %18 = load i32, i32* %in, align 4
  %idxprom14 = sext i32 %18 to i64
  %arrayidx15 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %17, i64 %idxprom14
  %n16 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx15, i32 0, i32 1
  %19 = load i32, i32* %n16, align 4
  store i32 %19, i32* %n, align 4
  %20 = load %struct.block*, %struct.block** @blocks, align 8
  %21 = load i32, i32* %n, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds %struct.block, %struct.block* %20, i64 %idxprom17
  store %struct.block* %arrayidx18, %struct.block** %bp, align 8
  %22 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %22, i32 0, i32 0
  %23 = load i32, i32* %number, align 8
  %cmp19 = icmp sge i32 %23, 0
  br i1 %cmp19, label %if.then20, label %if.end26

if.then20:                                        ; preds = %for.body13
  %24 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %24, i32 0, i32 1
  %25 = load i32, i32* %level, align 4
  %26 = load i32, i32* @num_refine, align 4
  %cmp21 = icmp slt i32 %25, %26
  br i1 %cmp21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.then20
  %27 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %27, i32 0, i32 2
  store i32 1, i32* %refine, align 8
  br label %if.end25

if.else23:                                        ; preds = %if.then20
  %28 = load %struct.block*, %struct.block** %bp, align 8
  %refine24 = getelementptr inbounds %struct.block, %struct.block* %28, i32 0, i32 2
  store i32 0, i32* %refine24, align 8
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %for.body13
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %29 = load i32, i32* %in, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %in, align 4
  br label %for.cond9

for.end28:                                        ; preds = %for.cond9
  br label %if.end36

if.else29:                                        ; preds = %for.end
  %call30 = call double @timer()
  store double %call30, double* %t2, align 8
  call void @check_objects()
  %call31 = call double @timer()
  %30 = load double, double* %t2, align 8
  %sub = fsub double %call31, %30
  %31 = load double, double* @timer_refine_co, align 8
  %add32 = fadd double %31, %sub
  store double %add32, double* @timer_refine_co, align 8
  %call33 = call double @timer()
  %32 = load double, double* %t2, align 8
  %sub34 = fsub double %call33, %32
  %33 = load double, double* %t4, align 8
  %add35 = fadd double %33, %sub34
  store double %add35, double* %t4, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.else29, %for.end28
  %call37 = call double @timer()
  store double %call37, double* %t2, align 8
  %call38 = call i32 @refine_level()
  store i32 %call38, i32* %num_split, align 4
  %call39 = call double @timer()
  store double %call39, double* %t5, align 8
  %34 = load double, double* %t5, align 8
  %35 = load double, double* %t2, align 8
  %sub40 = fsub double %34, %35
  %36 = load double, double* @timer_refine_mr, align 8
  %add41 = fadd double %36, %sub40
  store double %add41, double* @timer_refine_mr, align 8
  %37 = load double, double* %t5, align 8
  %38 = load double, double* %t2, align 8
  %sub42 = fsub double %37, %38
  %39 = load double, double* %t4, align 8
  %add43 = fadd double %39, %sub42
  store double %add43, double* %t4, align 8
  %call44 = call double @timer()
  store double %call44, double* %t2, align 8
  call void @split_blocks()
  %call45 = call double @timer()
  store double %call45, double* %t5, align 8
  %40 = load double, double* %t5, align 8
  %41 = load double, double* %t2, align 8
  %sub46 = fsub double %40, %41
  %42 = load double, double* @timer_refine_sb, align 8
  %add47 = fadd double %42, %sub46
  store double %add47, double* @timer_refine_sb, align 8
  %43 = load double, double* %t5, align 8
  %44 = load double, double* %t2, align 8
  %sub48 = fsub double %43, %44
  %45 = load double, double* %t4, align 8
  %add49 = fadd double %45, %sub48
  store double %add49, double* %t4, align 8
  %call50 = call double @timer()
  store double %call50, double* %t2, align 8
  call void @consolidate_blocks()
  %call51 = call double @timer()
  store double %call51, double* %t5, align 8
  %46 = load double, double* %t5, align 8
  %47 = load double, double* %t2, align 8
  %sub52 = fsub double %46, %47
  %48 = load double, double* @timer_cb_all, align 8
  %add53 = fadd double %48, %sub52
  store double %add53, double* @timer_cb_all, align 8
  %49 = load double, double* %t5, align 8
  %50 = load double, double* %t2, align 8
  %sub54 = fsub double %49, %50
  %51 = load double, double* %t4, align 8
  %add55 = fadd double %51, %sub54
  store double %add55, double* %t4, align 8
  br label %for.inc56

for.inc56:                                        ; preds = %if.end36
  %52 = load i32, i32* %i, align 4
  %inc57 = add nsw i32 %52, 1
  store i32 %inc57, i32* %i, align 4
  br label %for.cond

for.end58:                                        ; preds = %for.cond
  %53 = load i32, i32* @target_active, align 4
  %tobool59 = icmp ne i32 %53, 0
  br i1 %tobool59, label %if.then63, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end58
  %54 = load i32, i32* @target_max, align 4
  %tobool60 = icmp ne i32 %54, 0
  br i1 %tobool60, label %if.then63, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %lor.lhs.false
  %55 = load i32, i32* @target_min, align 4
  %tobool62 = icmp ne i32 %55, 0
  br i1 %tobool62, label %if.then63, label %if.end118

if.then63:                                        ; preds = %lor.lhs.false61, %lor.lhs.false, %for.end58
  %56 = load i32, i32* @my_pe, align 4
  %tobool64 = icmp ne i32 %56, 0
  br i1 %tobool64, label %if.end76, label %if.then65

if.then65:                                        ; preds = %if.then63
  store i32 0, i32* %j, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc72, %if.then65
  %57 = load i32, i32* %j, align 4
  %58 = load i32, i32* @num_refine, align 4
  %cmp67 = icmp sle i32 %57, %58
  br i1 %cmp67, label %for.body68, label %for.end74

for.body68:                                       ; preds = %for.cond66
  %59 = load i32, i32* %j, align 4
  %60 = load i32, i32* %ts.addr, align 4
  %61 = load i32*, i32** @num_blocks, align 8
  %62 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %62 to i64
  %arrayidx70 = getelementptr inbounds i32, i32* %61, i64 %idxprom69
  %63 = load i32, i32* %arrayidx70, align 4
  %call71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.201, i64 0, i64 0), i32 %59, i32 %60, i32 %63)
  br label %for.inc72

for.inc72:                                        ; preds = %for.body68
  %64 = load i32, i32* %j, align 4
  %inc73 = add nsw i32 %64, 1
  store i32 %inc73, i32* %j, align 4
  br label %for.cond66

for.end74:                                        ; preds = %for.cond66
  %call75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.202, i64 0, i64 0))
  br label %if.end76

if.end76:                                         ; preds = %for.end74, %if.then63
  %call77 = call double @timer()
  store double %call77, double* %t2, align 8
  %65 = load i32*, i32** @num_blocks, align 8
  %arrayidx78 = getelementptr inbounds i32, i32* %65, i64 0
  %66 = load i32, i32* %arrayidx78, align 4
  store i32 %66, i32* @global_active, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc85, %if.end76
  %67 = load i32, i32* %i, align 4
  %68 = load i32, i32* @num_refine, align 4
  %cmp80 = icmp sle i32 %67, %68
  br i1 %cmp80, label %for.body81, label %for.end87

for.body81:                                       ; preds = %for.cond79
  %69 = load i32*, i32** @num_blocks, align 8
  %70 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %70 to i64
  %arrayidx83 = getelementptr inbounds i32, i32* %69, i64 %idxprom82
  %71 = load i32, i32* %arrayidx83, align 4
  %72 = load i32, i32* @global_active, align 4
  %add84 = add nsw i32 %72, %71
  store i32 %add84, i32* @global_active, align 4
  br label %for.inc85

for.inc85:                                        ; preds = %for.body81
  %73 = load i32, i32* %i, align 4
  %inc86 = add nsw i32 %73, 1
  store i32 %inc86, i32* %i, align 4
  br label %for.cond79

for.end87:                                        ; preds = %for.cond79
  %74 = load i32, i32* @target_active, align 4
  %tobool88 = icmp ne i32 %74, 0
  br i1 %tobool88, label %land.lhs.true, label %lor.lhs.false91

land.lhs.true:                                    ; preds = %for.end87
  %75 = load i32, i32* @global_active, align 4
  %76 = load i32, i32* @num_pes, align 4
  %77 = load i32, i32* @target_active, align 4
  %mul = mul nsw i32 %76, %77
  %add89 = add nsw i32 %mul, 3
  %cmp90 = icmp sgt i32 %75, %add89
  br i1 %cmp90, label %if.then96, label %lor.lhs.false91

lor.lhs.false91:                                  ; preds = %land.lhs.true, %for.end87
  %78 = load i32, i32* @target_max, align 4
  %tobool92 = icmp ne i32 %78, 0
  br i1 %tobool92, label %land.lhs.true93, label %if.else99

land.lhs.true93:                                  ; preds = %lor.lhs.false91
  %79 = load i32, i32* @global_active, align 4
  %80 = load i32, i32* @num_pes, align 4
  %81 = load i32, i32* @target_max, align 4
  %mul94 = mul nsw i32 %80, %81
  %cmp95 = icmp sgt i32 %79, %mul94
  br i1 %cmp95, label %if.then96, label %if.else99

if.then96:                                        ; preds = %land.lhs.true93, %land.lhs.true
  %call97 = call i32 (...) bitcast (i32 ()* @reduce_blocks to i32 (...)*)()
  %82 = load i32, i32* %nm_t, align 4
  %add98 = add nsw i32 %82, %call97
  store i32 %add98, i32* %nm_t, align 4
  br label %if.end112

if.else99:                                        ; preds = %land.lhs.true93, %lor.lhs.false91
  %83 = load i32, i32* @target_active, align 4
  %tobool100 = icmp ne i32 %83, 0
  br i1 %tobool100, label %land.lhs.true101, label %lor.lhs.false105

land.lhs.true101:                                 ; preds = %if.else99
  %84 = load i32, i32* @global_active, align 4
  %85 = load i32, i32* @num_pes, align 4
  %86 = load i32, i32* @target_active, align 4
  %mul102 = mul nsw i32 %85, %86
  %sub103 = sub nsw i32 %mul102, 3
  %cmp104 = icmp slt i32 %84, %sub103
  br i1 %cmp104, label %if.then110, label %lor.lhs.false105

lor.lhs.false105:                                 ; preds = %land.lhs.true101, %if.else99
  %87 = load i32, i32* @target_min, align 4
  %tobool106 = icmp ne i32 %87, 0
  br i1 %tobool106, label %land.lhs.true107, label %if.end111

land.lhs.true107:                                 ; preds = %lor.lhs.false105
  %88 = load i32, i32* @global_active, align 4
  %89 = load i32, i32* @num_pes, align 4
  %90 = load i32, i32* @target_min, align 4
  %mul108 = mul nsw i32 %89, %90
  %cmp109 = icmp slt i32 %88, %mul108
  br i1 %cmp109, label %if.then110, label %if.end111

if.then110:                                       ; preds = %land.lhs.true107, %land.lhs.true101
  call void (...) bitcast (void ()* @add_blocks to void (...)*)()
  br label %if.end111

if.end111:                                        ; preds = %if.then110, %land.lhs.true107, %lor.lhs.false105
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then96
  %call113 = call double @timer()
  store double %call113, double* %t5, align 8
  %91 = load double, double* %t5, align 8
  %92 = load double, double* %t2, align 8
  %sub114 = fsub double %91, %92
  %93 = load double, double* @timer_target_all, align 8
  %add115 = fadd double %93, %sub114
  store double %add115, double* @timer_target_all, align 8
  %94 = load double, double* %t5, align 8
  %95 = load double, double* %t2, align 8
  %sub116 = fsub double %94, %95
  %96 = load double, double* %t4, align 8
  %add117 = fadd double %96, %sub116
  store double %add117, double* %t4, align 8
  br label %if.end118

if.end118:                                        ; preds = %if.end112, %lor.lhs.false61
  %call119 = call double @timer()
  store double %call119, double* %t2, align 8
  %97 = load i32, i32* @num_active, align 4
  %98 = load i32, i32* @local_max_b, align 4
  %cmp120 = icmp sgt i32 %97, %98
  br i1 %cmp120, label %if.then121, label %if.end122

if.then121:                                       ; preds = %if.end118
  %99 = load i32, i32* @num_active, align 4
  store i32 %99, i32* @local_max_b, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %if.end118
  %100 = load i32, i32* @local_max_b, align 4
  %101 = load i32, i32* @global_max_b, align 4
  %cmp123 = icmp sgt i32 %100, %101
  br i1 %cmp123, label %if.then124, label %if.end125

if.then124:                                       ; preds = %if.end122
  %102 = load i32, i32* @local_max_b, align 4
  store i32 %102, i32* @global_max_b, align 4
  br label %if.end125

if.end125:                                        ; preds = %if.then124, %if.end122
  store i32 0, i32* %j, align 4
  br label %for.cond126

for.cond126:                                      ; preds = %for.inc145, %if.end125
  %103 = load i32, i32* %j, align 4
  %104 = load i32, i32* @num_refine, align 4
  %cmp127 = icmp sle i32 %103, %104
  br i1 %cmp127, label %for.body128, label %for.end147

for.body128:                                      ; preds = %for.cond126
  %105 = load i32, i32* %j, align 4
  %tobool129 = icmp ne i32 %105, 0
  br i1 %tobool129, label %if.else132, label %if.then130

if.then130:                                       ; preds = %for.body128
  %106 = load i32*, i32** @num_blocks, align 8
  %arrayidx131 = getelementptr inbounds i32, i32* %106, i64 0
  %107 = load i32, i32* %arrayidx131, align 4
  store i32 %107, i32* @global_active, align 4
  br label %if.end136

if.else132:                                       ; preds = %for.body128
  %108 = load i32*, i32** @num_blocks, align 8
  %109 = load i32, i32* %j, align 4
  %idxprom133 = sext i32 %109 to i64
  %arrayidx134 = getelementptr inbounds i32, i32* %108, i64 %idxprom133
  %110 = load i32, i32* %arrayidx134, align 4
  %111 = load i32, i32* @global_active, align 4
  %add135 = add nsw i32 %111, %110
  store i32 %add135, i32* @global_active, align 4
  br label %if.end136

if.end136:                                        ; preds = %if.else132, %if.then130
  %112 = load i32, i32* @my_pe, align 4
  %tobool137 = icmp ne i32 %112, 0
  br i1 %tobool137, label %if.end144, label %land.lhs.true138

land.lhs.true138:                                 ; preds = %if.end136
  %113 = load i32, i32* @report_perf, align 4
  %and = and i32 %113, 8
  %tobool139 = icmp ne i32 %and, 0
  br i1 %tobool139, label %if.then140, label %if.end144

if.then140:                                       ; preds = %land.lhs.true138
  %114 = load i32, i32* %j, align 4
  %115 = load i32, i32* %ts.addr, align 4
  %116 = load i32*, i32** @num_blocks, align 8
  %117 = load i32, i32* %j, align 4
  %idxprom141 = sext i32 %117 to i64
  %arrayidx142 = getelementptr inbounds i32, i32* %116, i64 %idxprom141
  %118 = load i32, i32* %arrayidx142, align 4
  %call143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.203, i64 0, i64 0), i32 %114, i32 %115, i32 %118)
  br label %if.end144

if.end144:                                        ; preds = %if.then140, %land.lhs.true138, %if.end136
  br label %for.inc145

for.inc145:                                       ; preds = %if.end144
  %119 = load i32, i32* %j, align 4
  %inc146 = add nsw i32 %119, 1
  store i32 %inc146, i32* %j, align 4
  br label %for.cond126

for.end147:                                       ; preds = %for.cond126
  %120 = load i32, i32* @my_pe, align 4
  %tobool148 = icmp ne i32 %120, 0
  br i1 %tobool148, label %if.end154, label %land.lhs.true149

land.lhs.true149:                                 ; preds = %for.end147
  %121 = load i32, i32* @report_perf, align 4
  %and150 = and i32 %121, 8
  %tobool151 = icmp ne i32 %and150, 0
  br i1 %tobool151, label %if.then152, label %if.end154

if.then152:                                       ; preds = %land.lhs.true149
  %call153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.202, i64 0, i64 0))
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %land.lhs.true149, %for.end147
  %call155 = call double @timer()
  %122 = load double, double* %t2, align 8
  %sub156 = fsub double %call155, %122
  %123 = load double, double* %t4, align 8
  %add157 = fadd double %123, %sub156
  store double %add157, double* %t4, align 8
  %call158 = call double @timer()
  store double %call158, double* %t5, align 8
  %124 = load double, double* %t5, align 8
  %125 = load double, double* %t1, align 8
  %sub159 = fsub double %124, %125
  %126 = load double, double* %t4, align 8
  %sub160 = fsub double %sub159, %126
  %127 = load double, double* @timer_refine_cc, align 8
  %add161 = fadd double %127, %sub160
  store double %add161, double* @timer_refine_cc, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @reset_all() #0 {
entry:
  %n = alloca i32, align 4
  %c = alloca i32, align 4
  %in = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  store i32 0, i32* %in, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %in, align 4
  %1 = load i32*, i32** @sorted_index, align 8
  %2 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %2, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %cmp = icmp slt i32 %0, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %5 = load i32, i32* %in, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %4, i64 %idxprom1
  %n3 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx2, i32 0, i32 1
  %6 = load i32, i32* %n3, align 4
  store i32 %6, i32* %n, align 4
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom4
  store %struct.block* %arrayidx5, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx5, i32 0, i32 0
  %9 = load i32, i32* %number, align 8
  %cmp6 = icmp sge i32 %9, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %10, i32 0, i32 2
  store i32 -1, i32* %refine, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %in, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %in, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %n, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc60, %for.end
  %12 = load i32, i32* %n, align 4
  %13 = load i32, i32* @max_active_parent, align 4
  %cmp8 = icmp slt i32 %12, %13
  br i1 %cmp8, label %for.body9, label %for.end62

for.body9:                                        ; preds = %for.cond7
  %14 = load %struct.parent*, %struct.parent** @parents, align 8
  %15 = load i32, i32* %n, align 4
  %idxprom10 = sext i32 %15 to i64
  %arrayidx11 = getelementptr inbounds %struct.parent, %struct.parent* %14, i64 %idxprom10
  store %struct.parent* %arrayidx11, %struct.parent** %pp, align 8
  %number12 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx11, i32 0, i32 0
  %16 = load i32, i32* %number12, align 4
  %cmp13 = icmp sge i32 %16, 0
  br i1 %cmp13, label %if.then14, label %if.end59

if.then14:                                        ; preds = %for.body9
  %17 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine15 = getelementptr inbounds %struct.parent, %struct.parent* %17, i32 0, i32 5
  store i32 -1, i32* %refine15, align 4
  store i32 0, i32* %c, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc25, %if.then14
  %18 = load i32, i32* %c, align 4
  %cmp17 = icmp slt i32 %18, 8
  br i1 %cmp17, label %for.body18, label %for.end27

for.body18:                                       ; preds = %for.cond16
  %19 = load %struct.parent*, %struct.parent** %pp, align 8
  %child = getelementptr inbounds %struct.parent, %struct.parent* %19, i32 0, i32 6
  %20 = load i32, i32* %c, align 4
  %idxprom19 = sext i32 %20 to i64
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom19
  %21 = load i32, i32* %arrayidx20, align 4
  %cmp21 = icmp slt i32 %21, 0
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %for.body18
  %22 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine23 = getelementptr inbounds %struct.parent, %struct.parent* %22, i32 0, i32 5
  store i32 0, i32* %refine23, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %for.body18
  br label %for.inc25

for.inc25:                                        ; preds = %if.end24
  %23 = load i32, i32* %c, align 4
  %inc26 = add nsw i32 %23, 1
  store i32 %inc26, i32* %c, align 4
  br label %for.cond16

for.end27:                                        ; preds = %for.cond16
  %24 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine28 = getelementptr inbounds %struct.parent, %struct.parent* %24, i32 0, i32 5
  %25 = load i32, i32* %refine28, align 4
  %cmp29 = icmp eq i32 %25, 0
  br i1 %cmp29, label %if.then30, label %if.end58

if.then30:                                        ; preds = %for.end27
  store i32 0, i32* %c, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc55, %if.then30
  %26 = load i32, i32* %c, align 4
  %cmp32 = icmp slt i32 %26, 8
  br i1 %cmp32, label %for.body33, label %for.end57

for.body33:                                       ; preds = %for.cond31
  %27 = load %struct.parent*, %struct.parent** %pp, align 8
  %child34 = getelementptr inbounds %struct.parent, %struct.parent* %27, i32 0, i32 6
  %28 = load i32, i32* %c, align 4
  %idxprom35 = sext i32 %28 to i64
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* %child34, i64 0, i64 %idxprom35
  %29 = load i32, i32* %arrayidx36, align 4
  %cmp37 = icmp sge i32 %29, 0
  br i1 %cmp37, label %if.then38, label %if.end54

if.then38:                                        ; preds = %for.body33
  %30 = load %struct.block*, %struct.block** @blocks, align 8
  %31 = load %struct.parent*, %struct.parent** %pp, align 8
  %child39 = getelementptr inbounds %struct.parent, %struct.parent* %31, i32 0, i32 6
  %32 = load i32, i32* %c, align 4
  %idxprom40 = sext i32 %32 to i64
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* %child39, i64 0, i64 %idxprom40
  %33 = load i32, i32* %arrayidx41, align 4
  %idxprom42 = sext i32 %33 to i64
  %arrayidx43 = getelementptr inbounds %struct.block, %struct.block* %30, i64 %idxprom42
  %refine44 = getelementptr inbounds %struct.block, %struct.block* %arrayidx43, i32 0, i32 2
  %34 = load i32, i32* %refine44, align 8
  %cmp45 = icmp eq i32 %34, -1
  br i1 %cmp45, label %if.then46, label %if.end53

if.then46:                                        ; preds = %if.then38
  %35 = load %struct.block*, %struct.block** @blocks, align 8
  %36 = load %struct.parent*, %struct.parent** %pp, align 8
  %child47 = getelementptr inbounds %struct.parent, %struct.parent* %36, i32 0, i32 6
  %37 = load i32, i32* %c, align 4
  %idxprom48 = sext i32 %37 to i64
  %arrayidx49 = getelementptr inbounds [8 x i32], [8 x i32]* %child47, i64 0, i64 %idxprom48
  %38 = load i32, i32* %arrayidx49, align 4
  %idxprom50 = sext i32 %38 to i64
  %arrayidx51 = getelementptr inbounds %struct.block, %struct.block* %35, i64 %idxprom50
  %refine52 = getelementptr inbounds %struct.block, %struct.block* %arrayidx51, i32 0, i32 2
  store i32 0, i32* %refine52, align 8
  br label %if.end53

if.end53:                                         ; preds = %if.then46, %if.then38
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %for.body33
  br label %for.inc55

for.inc55:                                        ; preds = %if.end54
  %39 = load i32, i32* %c, align 4
  %inc56 = add nsw i32 %39, 1
  store i32 %inc56, i32* %c, align 4
  br label %for.cond31

for.end57:                                        ; preds = %for.cond31
  br label %if.end58

if.end58:                                         ; preds = %for.end57, %for.end27
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %for.body9
  br label %for.inc60

for.inc60:                                        ; preds = %if.end59
  %40 = load i32, i32* %n, align 4
  %inc61 = add nsw i32 %40, 1
  store i32 %inc61, i32* %n, align 4
  br label %for.cond7

for.end62:                                        ; preds = %for.cond7
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @refine_level() #0 {
entry:
  %level = alloca i32, align 4
  %nei = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %c1 = alloca i32, align 4
  %change = alloca i32, align 4
  %unrefine = alloca i32, align 4
  %sib = alloca i32, align 4
  %p = alloca i32, align 4
  %in = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %bp1 = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  %0 = load i32, i32* @cur_max_level, align 4
  store i32 %0, i32* %level, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc402, %entry
  %1 = load i32, i32* %level, align 4
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.end403

for.body:                                         ; preds = %for.cond
  br label %do.body

do.body:                                          ; preds = %do.cond, %for.body
  store i32 0, i32* %change, align 4
  %2 = load i32*, i32** @sorted_index, align 8
  %3 = load i32, i32* %level, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  store i32 %4, i32* %in, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc227, %do.body
  %5 = load i32, i32* %in, align 4
  %6 = load i32*, i32** @sorted_index, align 8
  %7 = load i32, i32* %level, align 4
  %add = add nsw i32 %7, 1
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %6, i64 %idxprom2
  %8 = load i32, i32* %arrayidx3, align 4
  %cmp4 = icmp slt i32 %5, %8
  br i1 %cmp4, label %for.body5, label %for.end229

for.body5:                                        ; preds = %for.cond1
  %9 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %10 = load i32, i32* %in, align 4
  %idxprom6 = sext i32 %10 to i64
  %arrayidx7 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %9, i64 %idxprom6
  %n8 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx7, i32 0, i32 1
  %11 = load i32, i32* %n8, align 4
  store i32 %11, i32* %n, align 4
  %12 = load %struct.block*, %struct.block** @blocks, align 8
  %13 = load i32, i32* %n, align 4
  %idxprom9 = sext i32 %13 to i64
  %arrayidx10 = getelementptr inbounds %struct.block, %struct.block* %12, i64 %idxprom9
  store %struct.block* %arrayidx10, %struct.block** %bp, align 8
  %14 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %14, i32 0, i32 0
  %15 = load i32, i32* %number, align 8
  %cmp11 = icmp sge i32 %15, 0
  br i1 %cmp11, label %land.lhs.true, label %if.end226

land.lhs.true:                                    ; preds = %for.body5
  %16 = load %struct.block*, %struct.block** %bp, align 8
  %level12 = getelementptr inbounds %struct.block, %struct.block* %16, i32 0, i32 1
  %17 = load i32, i32* %level12, align 4
  %18 = load i32, i32* %level, align 4
  %cmp13 = icmp eq i32 %17, %18
  br i1 %cmp13, label %if.then, label %if.end226

if.then:                                          ; preds = %land.lhs.true
  %19 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 2
  %20 = load i32, i32* %refine, align 8
  %cmp14 = icmp eq i32 %20, 1
  br i1 %cmp14, label %if.then15, label %if.else160

if.then15:                                        ; preds = %if.then
  %21 = load %struct.block*, %struct.block** %bp, align 8
  %parent = getelementptr inbounds %struct.block, %struct.block* %21, i32 0, i32 4
  %22 = load i32, i32* %parent, align 8
  %cmp16 = icmp ne i32 %22, -1
  br i1 %cmp16, label %land.lhs.true17, label %if.end55

land.lhs.true17:                                  ; preds = %if.then15
  %23 = load %struct.block*, %struct.block** %bp, align 8
  %parent_node = getelementptr inbounds %struct.block, %struct.block* %23, i32 0, i32 5
  %24 = load i32, i32* %parent_node, align 4
  %25 = load i32, i32* @my_pe, align 4
  %cmp18 = icmp eq i32 %24, %25
  br i1 %cmp18, label %if.then19, label %if.end55

if.then19:                                        ; preds = %land.lhs.true17
  %26 = load %struct.parent*, %struct.parent** @parents, align 8
  %27 = load %struct.block*, %struct.block** %bp, align 8
  %parent20 = getelementptr inbounds %struct.block, %struct.block* %27, i32 0, i32 4
  %28 = load i32, i32* %parent20, align 8
  %idxprom21 = sext i32 %28 to i64
  %arrayidx22 = getelementptr inbounds %struct.parent, %struct.parent* %26, i64 %idxprom21
  store %struct.parent* %arrayidx22, %struct.parent** %pp, align 8
  %29 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine23 = getelementptr inbounds %struct.parent, %struct.parent* %29, i32 0, i32 5
  %30 = load i32, i32* %refine23, align 4
  %cmp24 = icmp eq i32 %30, -1
  br i1 %cmp24, label %if.then25, label %if.end

if.then25:                                        ; preds = %if.then19
  %31 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine26 = getelementptr inbounds %struct.parent, %struct.parent* %31, i32 0, i32 5
  store i32 0, i32* %refine26, align 4
  br label %if.end

if.end:                                           ; preds = %if.then25, %if.then19
  store i32 0, i32* %b, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc, %if.end
  %32 = load i32, i32* %b, align 4
  %cmp28 = icmp slt i32 %32, 8
  br i1 %cmp28, label %for.body29, label %for.end

for.body29:                                       ; preds = %for.cond27
  %33 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node = getelementptr inbounds %struct.parent, %struct.parent* %33, i32 0, i32 7
  %34 = load i32, i32* %b, align 4
  %idxprom30 = sext i32 %34 to i64
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node, i64 0, i64 %idxprom30
  %35 = load i32, i32* %arrayidx31, align 4
  %36 = load i32, i32* @my_pe, align 4
  %cmp32 = icmp eq i32 %35, %36
  br i1 %cmp32, label %land.lhs.true33, label %if.end53

land.lhs.true33:                                  ; preds = %for.body29
  %37 = load %struct.parent*, %struct.parent** %pp, align 8
  %child = getelementptr inbounds %struct.parent, %struct.parent* %37, i32 0, i32 6
  %38 = load i32, i32* %b, align 4
  %idxprom34 = sext i32 %38 to i64
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom34
  %39 = load i32, i32* %arrayidx35, align 4
  %cmp36 = icmp sge i32 %39, 0
  br i1 %cmp36, label %if.then37, label %if.end53

if.then37:                                        ; preds = %land.lhs.true33
  %40 = load %struct.block*, %struct.block** @blocks, align 8
  %41 = load %struct.parent*, %struct.parent** %pp, align 8
  %child38 = getelementptr inbounds %struct.parent, %struct.parent* %41, i32 0, i32 6
  %42 = load i32, i32* %b, align 4
  %idxprom39 = sext i32 %42 to i64
  %arrayidx40 = getelementptr inbounds [8 x i32], [8 x i32]* %child38, i64 0, i64 %idxprom39
  %43 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = sext i32 %43 to i64
  %arrayidx42 = getelementptr inbounds %struct.block, %struct.block* %40, i64 %idxprom41
  %refine43 = getelementptr inbounds %struct.block, %struct.block* %arrayidx42, i32 0, i32 2
  %44 = load i32, i32* %refine43, align 8
  %cmp44 = icmp eq i32 %44, -1
  br i1 %cmp44, label %if.then45, label %if.end52

if.then45:                                        ; preds = %if.then37
  %45 = load %struct.block*, %struct.block** @blocks, align 8
  %46 = load %struct.parent*, %struct.parent** %pp, align 8
  %child46 = getelementptr inbounds %struct.parent, %struct.parent* %46, i32 0, i32 6
  %47 = load i32, i32* %b, align 4
  %idxprom47 = sext i32 %47 to i64
  %arrayidx48 = getelementptr inbounds [8 x i32], [8 x i32]* %child46, i64 0, i64 %idxprom47
  %48 = load i32, i32* %arrayidx48, align 4
  %idxprom49 = sext i32 %48 to i64
  %arrayidx50 = getelementptr inbounds %struct.block, %struct.block* %45, i64 %idxprom49
  %refine51 = getelementptr inbounds %struct.block, %struct.block* %arrayidx50, i32 0, i32 2
  store i32 0, i32* %refine51, align 8
  %49 = load i32, i32* %change, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %change, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.then45, %if.then37
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %land.lhs.true33, %for.body29
  br label %for.inc

for.inc:                                          ; preds = %if.end53
  %50 = load i32, i32* %b, align 4
  %inc54 = add nsw i32 %50, 1
  store i32 %inc54, i32* %b, align 4
  br label %for.cond27

for.end:                                          ; preds = %for.cond27
  br label %if.end55

if.end55:                                         ; preds = %for.end, %land.lhs.true17, %if.then15
  store i32 0, i32* %i, align 4
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc157, %if.end55
  %51 = load i32, i32* %i, align 4
  %cmp57 = icmp slt i32 %51, 6
  br i1 %cmp57, label %for.body58, label %for.end159

for.body58:                                       ; preds = %for.cond56
  %52 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %52, i32 0, i32 8
  %53 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %53 to i64
  %arrayidx60 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 %idxprom59
  %54 = load i32, i32* %arrayidx60, align 4
  %55 = load i32, i32* %level, align 4
  %cmp61 = icmp eq i32 %54, %55
  br i1 %cmp61, label %if.then62, label %if.else

if.then62:                                        ; preds = %for.body58
  %56 = load %struct.block*, %struct.block** %bp, align 8
  %nei63 = getelementptr inbounds %struct.block, %struct.block* %56, i32 0, i32 9
  %57 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %57 to i64
  %arrayidx65 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei63, i64 0, i64 %idxprom64
  %arrayidx66 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx65, i64 0, i64 0
  %arrayidx67 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx66, i64 0, i64 0
  %58 = load i32, i32* %arrayidx67, align 4
  store i32 %58, i32* %nei, align 4
  %cmp68 = icmp sge i32 %58, 0
  br i1 %cmp68, label %if.then69, label %if.end131

if.then69:                                        ; preds = %if.then62
  %59 = load %struct.block*, %struct.block** @blocks, align 8
  %60 = load i32, i32* %nei, align 4
  %idxprom70 = sext i32 %60 to i64
  %arrayidx71 = getelementptr inbounds %struct.block, %struct.block* %59, i64 %idxprom70
  %refine72 = getelementptr inbounds %struct.block, %struct.block* %arrayidx71, i32 0, i32 2
  %61 = load i32, i32* %refine72, align 8
  %cmp73 = icmp eq i32 %61, -1
  br i1 %cmp73, label %if.then74, label %if.end130

if.then74:                                        ; preds = %if.then69
  %62 = load %struct.block*, %struct.block** @blocks, align 8
  %63 = load i32, i32* %nei, align 4
  %idxprom75 = sext i32 %63 to i64
  %arrayidx76 = getelementptr inbounds %struct.block, %struct.block* %62, i64 %idxprom75
  %refine77 = getelementptr inbounds %struct.block, %struct.block* %arrayidx76, i32 0, i32 2
  store i32 0, i32* %refine77, align 8
  %64 = load i32, i32* %change, align 4
  %inc78 = add nsw i32 %64, 1
  store i32 %inc78, i32* %change, align 4
  %65 = load %struct.block*, %struct.block** @blocks, align 8
  %66 = load i32, i32* %nei, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds %struct.block, %struct.block* %65, i64 %idxprom79
  %parent81 = getelementptr inbounds %struct.block, %struct.block* %arrayidx80, i32 0, i32 4
  %67 = load i32, i32* %parent81, align 8
  store i32 %67, i32* %p, align 4
  %cmp82 = icmp ne i32 %67, -1
  br i1 %cmp82, label %land.lhs.true83, label %if.end129

land.lhs.true83:                                  ; preds = %if.then74
  %68 = load %struct.block*, %struct.block** @blocks, align 8
  %69 = load i32, i32* %nei, align 4
  %idxprom84 = sext i32 %69 to i64
  %arrayidx85 = getelementptr inbounds %struct.block, %struct.block* %68, i64 %idxprom84
  %parent_node86 = getelementptr inbounds %struct.block, %struct.block* %arrayidx85, i32 0, i32 5
  %70 = load i32, i32* %parent_node86, align 4
  %71 = load i32, i32* @my_pe, align 4
  %cmp87 = icmp eq i32 %70, %71
  br i1 %cmp87, label %if.then88, label %if.end129

if.then88:                                        ; preds = %land.lhs.true83
  %72 = load %struct.parent*, %struct.parent** @parents, align 8
  %73 = load i32, i32* %p, align 4
  %idxprom89 = sext i32 %73 to i64
  %arrayidx90 = getelementptr inbounds %struct.parent, %struct.parent* %72, i64 %idxprom89
  store %struct.parent* %arrayidx90, %struct.parent** %pp, align 8
  %refine91 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx90, i32 0, i32 5
  %74 = load i32, i32* %refine91, align 4
  %cmp92 = icmp eq i32 %74, -1
  br i1 %cmp92, label %if.then93, label %if.end95

if.then93:                                        ; preds = %if.then88
  %75 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine94 = getelementptr inbounds %struct.parent, %struct.parent* %75, i32 0, i32 5
  store i32 0, i32* %refine94, align 4
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %if.then88
  store i32 0, i32* %b, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc126, %if.end95
  %76 = load i32, i32* %b, align 4
  %cmp97 = icmp slt i32 %76, 8
  br i1 %cmp97, label %for.body98, label %for.end128

for.body98:                                       ; preds = %for.cond96
  %77 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node99 = getelementptr inbounds %struct.parent, %struct.parent* %77, i32 0, i32 7
  %78 = load i32, i32* %b, align 4
  %idxprom100 = sext i32 %78 to i64
  %arrayidx101 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node99, i64 0, i64 %idxprom100
  %79 = load i32, i32* %arrayidx101, align 4
  %80 = load i32, i32* @my_pe, align 4
  %cmp102 = icmp eq i32 %79, %80
  br i1 %cmp102, label %land.lhs.true103, label %if.end125

land.lhs.true103:                                 ; preds = %for.body98
  %81 = load %struct.parent*, %struct.parent** %pp, align 8
  %child104 = getelementptr inbounds %struct.parent, %struct.parent* %81, i32 0, i32 6
  %82 = load i32, i32* %b, align 4
  %idxprom105 = sext i32 %82 to i64
  %arrayidx106 = getelementptr inbounds [8 x i32], [8 x i32]* %child104, i64 0, i64 %idxprom105
  %83 = load i32, i32* %arrayidx106, align 4
  %cmp107 = icmp sge i32 %83, 0
  br i1 %cmp107, label %if.then108, label %if.end125

if.then108:                                       ; preds = %land.lhs.true103
  %84 = load %struct.block*, %struct.block** @blocks, align 8
  %85 = load %struct.parent*, %struct.parent** %pp, align 8
  %child109 = getelementptr inbounds %struct.parent, %struct.parent* %85, i32 0, i32 6
  %86 = load i32, i32* %b, align 4
  %idxprom110 = sext i32 %86 to i64
  %arrayidx111 = getelementptr inbounds [8 x i32], [8 x i32]* %child109, i64 0, i64 %idxprom110
  %87 = load i32, i32* %arrayidx111, align 4
  %idxprom112 = sext i32 %87 to i64
  %arrayidx113 = getelementptr inbounds %struct.block, %struct.block* %84, i64 %idxprom112
  %refine114 = getelementptr inbounds %struct.block, %struct.block* %arrayidx113, i32 0, i32 2
  %88 = load i32, i32* %refine114, align 8
  %cmp115 = icmp eq i32 %88, -1
  br i1 %cmp115, label %if.then116, label %if.end124

if.then116:                                       ; preds = %if.then108
  %89 = load %struct.block*, %struct.block** @blocks, align 8
  %90 = load %struct.parent*, %struct.parent** %pp, align 8
  %child117 = getelementptr inbounds %struct.parent, %struct.parent* %90, i32 0, i32 6
  %91 = load i32, i32* %b, align 4
  %idxprom118 = sext i32 %91 to i64
  %arrayidx119 = getelementptr inbounds [8 x i32], [8 x i32]* %child117, i64 0, i64 %idxprom118
  %92 = load i32, i32* %arrayidx119, align 4
  %idxprom120 = sext i32 %92 to i64
  %arrayidx121 = getelementptr inbounds %struct.block, %struct.block* %89, i64 %idxprom120
  %refine122 = getelementptr inbounds %struct.block, %struct.block* %arrayidx121, i32 0, i32 2
  store i32 0, i32* %refine122, align 8
  %93 = load i32, i32* %change, align 4
  %inc123 = add nsw i32 %93, 1
  store i32 %inc123, i32* %change, align 4
  br label %if.end124

if.end124:                                        ; preds = %if.then116, %if.then108
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %land.lhs.true103, %for.body98
  br label %for.inc126

for.inc126:                                       ; preds = %if.end125
  %94 = load i32, i32* %b, align 4
  %inc127 = add nsw i32 %94, 1
  store i32 %inc127, i32* %b, align 4
  br label %for.cond96

for.end128:                                       ; preds = %for.cond96
  br label %if.end129

if.end129:                                        ; preds = %for.end128, %land.lhs.true83, %if.then74
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then69
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then62
  br label %if.end156

if.else:                                          ; preds = %for.body58
  %95 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level132 = getelementptr inbounds %struct.block, %struct.block* %95, i32 0, i32 8
  %96 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %96 to i64
  %arrayidx134 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level132, i64 0, i64 %idxprom133
  %97 = load i32, i32* %arrayidx134, align 4
  %98 = load i32, i32* %level, align 4
  %sub = sub nsw i32 %98, 1
  %cmp135 = icmp eq i32 %97, %sub
  br i1 %cmp135, label %if.then136, label %if.end155

if.then136:                                       ; preds = %if.else
  %99 = load %struct.block*, %struct.block** %bp, align 8
  %nei137 = getelementptr inbounds %struct.block, %struct.block* %99, i32 0, i32 9
  %100 = load i32, i32* %i, align 4
  %idxprom138 = sext i32 %100 to i64
  %arrayidx139 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei137, i64 0, i64 %idxprom138
  %arrayidx140 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx139, i64 0, i64 0
  %arrayidx141 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx140, i64 0, i64 0
  %101 = load i32, i32* %arrayidx141, align 4
  store i32 %101, i32* %nei, align 4
  %cmp142 = icmp sge i32 %101, 0
  br i1 %cmp142, label %if.then143, label %if.end154

if.then143:                                       ; preds = %if.then136
  %102 = load %struct.block*, %struct.block** @blocks, align 8
  %103 = load i32, i32* %nei, align 4
  %idxprom144 = sext i32 %103 to i64
  %arrayidx145 = getelementptr inbounds %struct.block, %struct.block* %102, i64 %idxprom144
  %refine146 = getelementptr inbounds %struct.block, %struct.block* %arrayidx145, i32 0, i32 2
  %104 = load i32, i32* %refine146, align 8
  %cmp147 = icmp ne i32 %104, 1
  br i1 %cmp147, label %if.then148, label %if.end153

if.then148:                                       ; preds = %if.then143
  %105 = load %struct.block*, %struct.block** @blocks, align 8
  %106 = load i32, i32* %nei, align 4
  %idxprom149 = sext i32 %106 to i64
  %arrayidx150 = getelementptr inbounds %struct.block, %struct.block* %105, i64 %idxprom149
  %refine151 = getelementptr inbounds %struct.block, %struct.block* %arrayidx150, i32 0, i32 2
  store i32 1, i32* %refine151, align 8
  %107 = load i32, i32* %change, align 4
  %inc152 = add nsw i32 %107, 1
  store i32 %inc152, i32* %change, align 4
  br label %if.end153

if.end153:                                        ; preds = %if.then148, %if.then143
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then136
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.else
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end131
  br label %for.inc157

for.inc157:                                       ; preds = %if.end156
  %108 = load i32, i32* %i, align 4
  %inc158 = add nsw i32 %108, 1
  store i32 %inc158, i32* %i, align 4
  br label %for.cond56

for.end159:                                       ; preds = %for.cond56
  br label %if.end225

if.else160:                                       ; preds = %if.then
  %109 = load %struct.block*, %struct.block** %bp, align 8
  %refine161 = getelementptr inbounds %struct.block, %struct.block* %109, i32 0, i32 2
  %110 = load i32, i32* %refine161, align 8
  %cmp162 = icmp eq i32 %110, -1
  br i1 %cmp162, label %if.then163, label %if.end224

if.then163:                                       ; preds = %if.else160
  store i32 0, i32* %i, align 4
  br label %for.cond164

for.cond164:                                      ; preds = %for.inc221, %if.then163
  %111 = load i32, i32* %i, align 4
  %cmp165 = icmp slt i32 %111, 6
  br i1 %cmp165, label %for.body166, label %for.end223

for.body166:                                      ; preds = %for.cond164
  %112 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level167 = getelementptr inbounds %struct.block, %struct.block* %112, i32 0, i32 8
  %113 = load i32, i32* %i, align 4
  %idxprom168 = sext i32 %113 to i64
  %arrayidx169 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level167, i64 0, i64 %idxprom168
  %114 = load i32, i32* %arrayidx169, align 4
  %115 = load i32, i32* %level, align 4
  %add170 = add nsw i32 %115, 1
  %cmp171 = icmp eq i32 %114, %add170
  br i1 %cmp171, label %if.then172, label %if.end220

if.then172:                                       ; preds = %for.body166
  %116 = load %struct.block*, %struct.block** %bp, align 8
  %refine173 = getelementptr inbounds %struct.block, %struct.block* %116, i32 0, i32 2
  store i32 0, i32* %refine173, align 8
  %117 = load i32, i32* %change, align 4
  %inc174 = add nsw i32 %117, 1
  store i32 %inc174, i32* %change, align 4
  %118 = load %struct.block*, %struct.block** %bp, align 8
  %parent175 = getelementptr inbounds %struct.block, %struct.block* %118, i32 0, i32 4
  %119 = load i32, i32* %parent175, align 8
  store i32 %119, i32* %p, align 4
  %cmp176 = icmp ne i32 %119, -1
  br i1 %cmp176, label %land.lhs.true177, label %if.end219

land.lhs.true177:                                 ; preds = %if.then172
  %120 = load %struct.block*, %struct.block** %bp, align 8
  %parent_node178 = getelementptr inbounds %struct.block, %struct.block* %120, i32 0, i32 5
  %121 = load i32, i32* %parent_node178, align 4
  %122 = load i32, i32* @my_pe, align 4
  %cmp179 = icmp eq i32 %121, %122
  br i1 %cmp179, label %if.then180, label %if.end219

if.then180:                                       ; preds = %land.lhs.true177
  %123 = load %struct.parent*, %struct.parent** @parents, align 8
  %124 = load i32, i32* %p, align 4
  %idxprom181 = sext i32 %124 to i64
  %arrayidx182 = getelementptr inbounds %struct.parent, %struct.parent* %123, i64 %idxprom181
  store %struct.parent* %arrayidx182, %struct.parent** %pp, align 8
  %refine183 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx182, i32 0, i32 5
  %125 = load i32, i32* %refine183, align 4
  %cmp184 = icmp eq i32 %125, -1
  br i1 %cmp184, label %if.then185, label %if.end187

if.then185:                                       ; preds = %if.then180
  %126 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine186 = getelementptr inbounds %struct.parent, %struct.parent* %126, i32 0, i32 5
  store i32 0, i32* %refine186, align 4
  br label %if.end187

if.end187:                                        ; preds = %if.then185, %if.then180
  store i32 0, i32* %b, align 4
  br label %for.cond188

for.cond188:                                      ; preds = %for.inc216, %if.end187
  %127 = load i32, i32* %b, align 4
  %cmp189 = icmp slt i32 %127, 8
  br i1 %cmp189, label %for.body190, label %for.end218

for.body190:                                      ; preds = %for.cond188
  %128 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node191 = getelementptr inbounds %struct.parent, %struct.parent* %128, i32 0, i32 7
  %129 = load i32, i32* %b, align 4
  %idxprom192 = sext i32 %129 to i64
  %arrayidx193 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node191, i64 0, i64 %idxprom192
  %130 = load i32, i32* %arrayidx193, align 4
  %131 = load i32, i32* @my_pe, align 4
  %cmp194 = icmp eq i32 %130, %131
  br i1 %cmp194, label %land.lhs.true195, label %if.end215

land.lhs.true195:                                 ; preds = %for.body190
  %132 = load %struct.parent*, %struct.parent** %pp, align 8
  %child196 = getelementptr inbounds %struct.parent, %struct.parent* %132, i32 0, i32 6
  %133 = load i32, i32* %b, align 4
  %idxprom197 = sext i32 %133 to i64
  %arrayidx198 = getelementptr inbounds [8 x i32], [8 x i32]* %child196, i64 0, i64 %idxprom197
  %134 = load i32, i32* %arrayidx198, align 4
  %cmp199 = icmp sge i32 %134, 0
  br i1 %cmp199, label %land.lhs.true200, label %if.end215

land.lhs.true200:                                 ; preds = %land.lhs.true195
  %135 = load %struct.block*, %struct.block** @blocks, align 8
  %136 = load %struct.parent*, %struct.parent** %pp, align 8
  %child201 = getelementptr inbounds %struct.parent, %struct.parent* %136, i32 0, i32 6
  %137 = load i32, i32* %b, align 4
  %idxprom202 = sext i32 %137 to i64
  %arrayidx203 = getelementptr inbounds [8 x i32], [8 x i32]* %child201, i64 0, i64 %idxprom202
  %138 = load i32, i32* %arrayidx203, align 4
  %idxprom204 = sext i32 %138 to i64
  %arrayidx205 = getelementptr inbounds %struct.block, %struct.block* %135, i64 %idxprom204
  %refine206 = getelementptr inbounds %struct.block, %struct.block* %arrayidx205, i32 0, i32 2
  %139 = load i32, i32* %refine206, align 8
  %cmp207 = icmp eq i32 %139, -1
  br i1 %cmp207, label %if.then208, label %if.end215

if.then208:                                       ; preds = %land.lhs.true200
  %140 = load %struct.block*, %struct.block** @blocks, align 8
  %141 = load %struct.parent*, %struct.parent** %pp, align 8
  %child209 = getelementptr inbounds %struct.parent, %struct.parent* %141, i32 0, i32 6
  %142 = load i32, i32* %b, align 4
  %idxprom210 = sext i32 %142 to i64
  %arrayidx211 = getelementptr inbounds [8 x i32], [8 x i32]* %child209, i64 0, i64 %idxprom210
  %143 = load i32, i32* %arrayidx211, align 4
  %idxprom212 = sext i32 %143 to i64
  %arrayidx213 = getelementptr inbounds %struct.block, %struct.block* %140, i64 %idxprom212
  %refine214 = getelementptr inbounds %struct.block, %struct.block* %arrayidx213, i32 0, i32 2
  store i32 0, i32* %refine214, align 8
  br label %if.end215

if.end215:                                        ; preds = %if.then208, %land.lhs.true200, %land.lhs.true195, %for.body190
  br label %for.inc216

for.inc216:                                       ; preds = %if.end215
  %144 = load i32, i32* %b, align 4
  %inc217 = add nsw i32 %144, 1
  store i32 %inc217, i32* %b, align 4
  br label %for.cond188

for.end218:                                       ; preds = %for.cond188
  br label %if.end219

if.end219:                                        ; preds = %for.end218, %land.lhs.true177, %if.then172
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %for.body166
  br label %for.inc221

for.inc221:                                       ; preds = %if.end220
  %145 = load i32, i32* %i, align 4
  %inc222 = add nsw i32 %145, 1
  store i32 %inc222, i32* %i, align 4
  br label %for.cond164

for.end223:                                       ; preds = %for.cond164
  br label %if.end224

if.end224:                                        ; preds = %for.end223, %if.else160
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %for.end159
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %land.lhs.true, %for.body5
  br label %for.inc227

for.inc227:                                       ; preds = %if.end226
  %146 = load i32, i32* %in, align 4
  %inc228 = add nsw i32 %146, 1
  store i32 %inc228, i32* %in, align 4
  br label %for.cond1

for.end229:                                       ; preds = %for.cond1
  br label %do.cond

do.cond:                                          ; preds = %for.end229
  %147 = load i32, i32* %change, align 4
  %tobool = icmp ne i32 %147, 0
  br i1 %tobool, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %do.body230

do.body230:                                       ; preds = %do.cond399, %do.end
  store i32 0, i32* %change, align 4
  %148 = load i32*, i32** @sorted_index, align 8
  %149 = load i32, i32* %level, align 4
  %idxprom231 = sext i32 %149 to i64
  %arrayidx232 = getelementptr inbounds i32, i32* %148, i64 %idxprom231
  %150 = load i32, i32* %arrayidx232, align 4
  store i32 %150, i32* %in, align 4
  br label %for.cond233

for.cond233:                                      ; preds = %for.inc396, %do.body230
  %151 = load i32, i32* %in, align 4
  %152 = load i32*, i32** @sorted_index, align 8
  %153 = load i32, i32* %level, align 4
  %add234 = add nsw i32 %153, 1
  %idxprom235 = sext i32 %add234 to i64
  %arrayidx236 = getelementptr inbounds i32, i32* %152, i64 %idxprom235
  %154 = load i32, i32* %arrayidx236, align 4
  %cmp237 = icmp slt i32 %151, %154
  br i1 %cmp237, label %for.body238, label %for.end398

for.body238:                                      ; preds = %for.cond233
  %155 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %156 = load i32, i32* %in, align 4
  %idxprom239 = sext i32 %156 to i64
  %arrayidx240 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %155, i64 %idxprom239
  %n241 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx240, i32 0, i32 1
  %157 = load i32, i32* %n241, align 4
  store i32 %157, i32* %n, align 4
  %158 = load %struct.block*, %struct.block** @blocks, align 8
  %159 = load i32, i32* %n, align 4
  %idxprom242 = sext i32 %159 to i64
  %arrayidx243 = getelementptr inbounds %struct.block, %struct.block* %158, i64 %idxprom242
  store %struct.block* %arrayidx243, %struct.block** %bp, align 8
  %160 = load %struct.block*, %struct.block** %bp, align 8
  %number244 = getelementptr inbounds %struct.block, %struct.block* %160, i32 0, i32 0
  %161 = load i32, i32* %number244, align 8
  %cmp245 = icmp sge i32 %161, 0
  br i1 %cmp245, label %if.then246, label %if.end395

if.then246:                                       ; preds = %for.body238
  %162 = load %struct.block*, %struct.block** %bp, align 8
  %level247 = getelementptr inbounds %struct.block, %struct.block* %162, i32 0, i32 1
  %163 = load i32, i32* %level247, align 4
  %164 = load i32, i32* %level, align 4
  %cmp248 = icmp eq i32 %163, %164
  br i1 %cmp248, label %land.lhs.true249, label %if.end394

land.lhs.true249:                                 ; preds = %if.then246
  %165 = load %struct.block*, %struct.block** %bp, align 8
  %refine250 = getelementptr inbounds %struct.block, %struct.block* %165, i32 0, i32 2
  %166 = load i32, i32* %refine250, align 8
  %cmp251 = icmp eq i32 %166, 0
  br i1 %cmp251, label %if.then252, label %if.end394

if.then252:                                       ; preds = %land.lhs.true249
  store i32 0, i32* %c, align 4
  br label %for.cond253

for.cond253:                                      ; preds = %for.inc391, %if.then252
  %167 = load i32, i32* %c, align 4
  %cmp254 = icmp slt i32 %167, 6
  br i1 %cmp254, label %for.body255, label %for.end393

for.body255:                                      ; preds = %for.cond253
  %168 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level256 = getelementptr inbounds %struct.block, %struct.block* %168, i32 0, i32 8
  %169 = load i32, i32* %c, align 4
  %idxprom257 = sext i32 %169 to i64
  %arrayidx258 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level256, i64 0, i64 %idxprom257
  %170 = load i32, i32* %arrayidx258, align 4
  %171 = load i32, i32* %level, align 4
  %sub259 = sub nsw i32 %171, 1
  %cmp260 = icmp eq i32 %170, %sub259
  br i1 %cmp260, label %if.then261, label %if.else329

if.then261:                                       ; preds = %for.body255
  %172 = load %struct.block*, %struct.block** %bp, align 8
  %nei262 = getelementptr inbounds %struct.block, %struct.block* %172, i32 0, i32 9
  %173 = load i32, i32* %c, align 4
  %idxprom263 = sext i32 %173 to i64
  %arrayidx264 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei262, i64 0, i64 %idxprom263
  %arrayidx265 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx264, i64 0, i64 0
  %arrayidx266 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx265, i64 0, i64 0
  %174 = load i32, i32* %arrayidx266, align 4
  store i32 %174, i32* %nei, align 4
  %cmp267 = icmp sge i32 %174, 0
  br i1 %cmp267, label %if.then268, label %if.end328

if.then268:                                       ; preds = %if.then261
  %175 = load %struct.block*, %struct.block** @blocks, align 8
  %176 = load i32, i32* %nei, align 4
  %idxprom269 = sext i32 %176 to i64
  %arrayidx270 = getelementptr inbounds %struct.block, %struct.block* %175, i64 %idxprom269
  %refine271 = getelementptr inbounds %struct.block, %struct.block* %arrayidx270, i32 0, i32 2
  %177 = load i32, i32* %refine271, align 8
  %cmp272 = icmp eq i32 %177, -1
  br i1 %cmp272, label %if.then273, label %if.end327

if.then273:                                       ; preds = %if.then268
  %178 = load %struct.block*, %struct.block** @blocks, align 8
  %179 = load i32, i32* %nei, align 4
  %idxprom274 = sext i32 %179 to i64
  %arrayidx275 = getelementptr inbounds %struct.block, %struct.block* %178, i64 %idxprom274
  %refine276 = getelementptr inbounds %struct.block, %struct.block* %arrayidx275, i32 0, i32 2
  store i32 0, i32* %refine276, align 8
  %180 = load i32, i32* %change, align 4
  %inc277 = add nsw i32 %180, 1
  store i32 %inc277, i32* %change, align 4
  %181 = load %struct.block*, %struct.block** @blocks, align 8
  %182 = load i32, i32* %nei, align 4
  %idxprom278 = sext i32 %182 to i64
  %arrayidx279 = getelementptr inbounds %struct.block, %struct.block* %181, i64 %idxprom278
  %parent280 = getelementptr inbounds %struct.block, %struct.block* %arrayidx279, i32 0, i32 4
  %183 = load i32, i32* %parent280, align 8
  store i32 %183, i32* %p, align 4
  %cmp281 = icmp ne i32 %183, -1
  br i1 %cmp281, label %land.lhs.true282, label %if.end326

land.lhs.true282:                                 ; preds = %if.then273
  %184 = load %struct.block*, %struct.block** @blocks, align 8
  %185 = load i32, i32* %nei, align 4
  %idxprom283 = sext i32 %185 to i64
  %arrayidx284 = getelementptr inbounds %struct.block, %struct.block* %184, i64 %idxprom283
  %parent_node285 = getelementptr inbounds %struct.block, %struct.block* %arrayidx284, i32 0, i32 5
  %186 = load i32, i32* %parent_node285, align 4
  %187 = load i32, i32* @my_pe, align 4
  %cmp286 = icmp eq i32 %186, %187
  br i1 %cmp286, label %if.then287, label %if.end326

if.then287:                                       ; preds = %land.lhs.true282
  %188 = load %struct.parent*, %struct.parent** @parents, align 8
  %189 = load i32, i32* %p, align 4
  %idxprom288 = sext i32 %189 to i64
  %arrayidx289 = getelementptr inbounds %struct.parent, %struct.parent* %188, i64 %idxprom288
  store %struct.parent* %arrayidx289, %struct.parent** %pp, align 8
  %refine290 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx289, i32 0, i32 5
  %190 = load i32, i32* %refine290, align 4
  %cmp291 = icmp eq i32 %190, -1
  br i1 %cmp291, label %if.then292, label %if.end325

if.then292:                                       ; preds = %if.then287
  %191 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine293 = getelementptr inbounds %struct.parent, %struct.parent* %191, i32 0, i32 5
  store i32 0, i32* %refine293, align 4
  store i32 0, i32* %b, align 4
  br label %for.cond294

for.cond294:                                      ; preds = %for.inc322, %if.then292
  %192 = load i32, i32* %b, align 4
  %cmp295 = icmp slt i32 %192, 8
  br i1 %cmp295, label %for.body296, label %for.end324

for.body296:                                      ; preds = %for.cond294
  %193 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node297 = getelementptr inbounds %struct.parent, %struct.parent* %193, i32 0, i32 7
  %194 = load i32, i32* %b, align 4
  %idxprom298 = sext i32 %194 to i64
  %arrayidx299 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node297, i64 0, i64 %idxprom298
  %195 = load i32, i32* %arrayidx299, align 4
  %196 = load i32, i32* @my_pe, align 4
  %cmp300 = icmp eq i32 %195, %196
  br i1 %cmp300, label %land.lhs.true301, label %if.end321

land.lhs.true301:                                 ; preds = %for.body296
  %197 = load %struct.parent*, %struct.parent** %pp, align 8
  %child302 = getelementptr inbounds %struct.parent, %struct.parent* %197, i32 0, i32 6
  %198 = load i32, i32* %b, align 4
  %idxprom303 = sext i32 %198 to i64
  %arrayidx304 = getelementptr inbounds [8 x i32], [8 x i32]* %child302, i64 0, i64 %idxprom303
  %199 = load i32, i32* %arrayidx304, align 4
  %cmp305 = icmp sge i32 %199, 0
  br i1 %cmp305, label %land.lhs.true306, label %if.end321

land.lhs.true306:                                 ; preds = %land.lhs.true301
  %200 = load %struct.block*, %struct.block** @blocks, align 8
  %201 = load %struct.parent*, %struct.parent** %pp, align 8
  %child307 = getelementptr inbounds %struct.parent, %struct.parent* %201, i32 0, i32 6
  %202 = load i32, i32* %b, align 4
  %idxprom308 = sext i32 %202 to i64
  %arrayidx309 = getelementptr inbounds [8 x i32], [8 x i32]* %child307, i64 0, i64 %idxprom308
  %203 = load i32, i32* %arrayidx309, align 4
  %idxprom310 = sext i32 %203 to i64
  %arrayidx311 = getelementptr inbounds %struct.block, %struct.block* %200, i64 %idxprom310
  %refine312 = getelementptr inbounds %struct.block, %struct.block* %arrayidx311, i32 0, i32 2
  %204 = load i32, i32* %refine312, align 8
  %cmp313 = icmp eq i32 %204, -1
  br i1 %cmp313, label %if.then314, label %if.end321

if.then314:                                       ; preds = %land.lhs.true306
  %205 = load %struct.block*, %struct.block** @blocks, align 8
  %206 = load %struct.parent*, %struct.parent** %pp, align 8
  %child315 = getelementptr inbounds %struct.parent, %struct.parent* %206, i32 0, i32 6
  %207 = load i32, i32* %b, align 4
  %idxprom316 = sext i32 %207 to i64
  %arrayidx317 = getelementptr inbounds [8 x i32], [8 x i32]* %child315, i64 0, i64 %idxprom316
  %208 = load i32, i32* %arrayidx317, align 4
  %idxprom318 = sext i32 %208 to i64
  %arrayidx319 = getelementptr inbounds %struct.block, %struct.block* %205, i64 %idxprom318
  %refine320 = getelementptr inbounds %struct.block, %struct.block* %arrayidx319, i32 0, i32 2
  store i32 0, i32* %refine320, align 8
  br label %if.end321

if.end321:                                        ; preds = %if.then314, %land.lhs.true306, %land.lhs.true301, %for.body296
  br label %for.inc322

for.inc322:                                       ; preds = %if.end321
  %209 = load i32, i32* %b, align 4
  %inc323 = add nsw i32 %209, 1
  store i32 %inc323, i32* %b, align 4
  br label %for.cond294

for.end324:                                       ; preds = %for.cond294
  br label %if.end325

if.end325:                                        ; preds = %for.end324, %if.then287
  br label %if.end326

if.end326:                                        ; preds = %if.end325, %land.lhs.true282, %if.then273
  br label %if.end327

if.end327:                                        ; preds = %if.end326, %if.then268
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then261
  br label %if.end390

if.else329:                                       ; preds = %for.body255
  %210 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level330 = getelementptr inbounds %struct.block, %struct.block* %210, i32 0, i32 8
  %211 = load i32, i32* %c, align 4
  %idxprom331 = sext i32 %211 to i64
  %arrayidx332 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level330, i64 0, i64 %idxprom331
  %212 = load i32, i32* %arrayidx332, align 4
  %213 = load i32, i32* %level, align 4
  %cmp333 = icmp eq i32 %212, %213
  br i1 %cmp333, label %if.then334, label %if.else349

if.then334:                                       ; preds = %if.else329
  %214 = load %struct.block*, %struct.block** %bp, align 8
  %nei335 = getelementptr inbounds %struct.block, %struct.block* %214, i32 0, i32 9
  %215 = load i32, i32* %c, align 4
  %idxprom336 = sext i32 %215 to i64
  %arrayidx337 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei335, i64 0, i64 %idxprom336
  %arrayidx338 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx337, i64 0, i64 0
  %arrayidx339 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx338, i64 0, i64 0
  %216 = load i32, i32* %arrayidx339, align 4
  store i32 %216, i32* %nei, align 4
  %cmp340 = icmp sge i32 %216, 0
  br i1 %cmp340, label %if.then341, label %if.end348

if.then341:                                       ; preds = %if.then334
  %217 = load %struct.block*, %struct.block** @blocks, align 8
  %218 = load i32, i32* %nei, align 4
  %idxprom342 = sext i32 %218 to i64
  %arrayidx343 = getelementptr inbounds %struct.block, %struct.block* %217, i64 %idxprom342
  %nei_refine = getelementptr inbounds %struct.block, %struct.block* %arrayidx343, i32 0, i32 7
  %219 = load i32, i32* %c, align 4
  %div = sdiv i32 %219, 2
  %mul = mul nsw i32 %div, 2
  %220 = load i32, i32* %c, align 4
  %add344 = add nsw i32 %220, 1
  %rem = srem i32 %add344, 2
  %add345 = add nsw i32 %mul, %rem
  %idxprom346 = sext i32 %add345 to i64
  %arrayidx347 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine, i64 0, i64 %idxprom346
  store i32 0, i32* %arrayidx347, align 4
  br label %if.end348

if.end348:                                        ; preds = %if.then341, %if.then334
  br label %if.end389

if.else349:                                       ; preds = %if.else329
  %221 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level350 = getelementptr inbounds %struct.block, %struct.block* %221, i32 0, i32 8
  %222 = load i32, i32* %c, align 4
  %idxprom351 = sext i32 %222 to i64
  %arrayidx352 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level350, i64 0, i64 %idxprom351
  %223 = load i32, i32* %arrayidx352, align 4
  %224 = load i32, i32* %level, align 4
  %add353 = add nsw i32 %224, 1
  %cmp354 = icmp eq i32 %223, %add353
  br i1 %cmp354, label %if.then355, label %if.end388

if.then355:                                       ; preds = %if.else349
  %225 = load i32, i32* %c, align 4
  %div356 = sdiv i32 %225, 2
  %mul357 = mul nsw i32 %div356, 2
  %226 = load i32, i32* %c, align 4
  %add358 = add nsw i32 %226, 1
  %rem359 = srem i32 %add358, 2
  %add360 = add nsw i32 %mul357, %rem359
  store i32 %add360, i32* %c1, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond361

for.cond361:                                      ; preds = %for.inc385, %if.then355
  %227 = load i32, i32* %i, align 4
  %cmp362 = icmp slt i32 %227, 2
  br i1 %cmp362, label %for.body363, label %for.end387

for.body363:                                      ; preds = %for.cond361
  store i32 0, i32* %j, align 4
  br label %for.cond364

for.cond364:                                      ; preds = %for.inc382, %for.body363
  %228 = load i32, i32* %j, align 4
  %cmp365 = icmp slt i32 %228, 2
  br i1 %cmp365, label %for.body366, label %for.end384

for.body366:                                      ; preds = %for.cond364
  %229 = load %struct.block*, %struct.block** %bp, align 8
  %nei367 = getelementptr inbounds %struct.block, %struct.block* %229, i32 0, i32 9
  %230 = load i32, i32* %c, align 4
  %idxprom368 = sext i32 %230 to i64
  %arrayidx369 = getelementptr inbounds [6 x [2 x [2 x i32]]], [6 x [2 x [2 x i32]]]* %nei367, i64 0, i64 %idxprom368
  %231 = load i32, i32* %i, align 4
  %idxprom370 = sext i32 %231 to i64
  %arrayidx371 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %232 = load i32, i32* %j, align 4
  %idxprom372 = sext i32 %232 to i64
  %arrayidx373 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  %233 = load i32, i32* %arrayidx373, align 4
  store i32 %233, i32* %nei, align 4
  %cmp374 = icmp sge i32 %233, 0
  br i1 %cmp374, label %if.then375, label %if.end381

if.then375:                                       ; preds = %for.body366
  %234 = load %struct.block*, %struct.block** @blocks, align 8
  %235 = load i32, i32* %nei, align 4
  %idxprom376 = sext i32 %235 to i64
  %arrayidx377 = getelementptr inbounds %struct.block, %struct.block* %234, i64 %idxprom376
  %nei_refine378 = getelementptr inbounds %struct.block, %struct.block* %arrayidx377, i32 0, i32 7
  %236 = load i32, i32* %c1, align 4
  %idxprom379 = sext i32 %236 to i64
  %arrayidx380 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine378, i64 0, i64 %idxprom379
  store i32 0, i32* %arrayidx380, align 4
  br label %if.end381

if.end381:                                        ; preds = %if.then375, %for.body366
  br label %for.inc382

for.inc382:                                       ; preds = %if.end381
  %237 = load i32, i32* %j, align 4
  %inc383 = add nsw i32 %237, 1
  store i32 %inc383, i32* %j, align 4
  br label %for.cond364

for.end384:                                       ; preds = %for.cond364
  br label %for.inc385

for.inc385:                                       ; preds = %for.end384
  %238 = load i32, i32* %i, align 4
  %inc386 = add nsw i32 %238, 1
  store i32 %inc386, i32* %i, align 4
  br label %for.cond361

for.end387:                                       ; preds = %for.cond361
  br label %if.end388

if.end388:                                        ; preds = %for.end387, %if.else349
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end348
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end328
  br label %for.inc391

for.inc391:                                       ; preds = %if.end390
  %239 = load i32, i32* %c, align 4
  %inc392 = add nsw i32 %239, 1
  store i32 %inc392, i32* %c, align 4
  br label %for.cond253

for.end393:                                       ; preds = %for.cond253
  br label %if.end394

if.end394:                                        ; preds = %for.end393, %land.lhs.true249, %if.then246
  br label %if.end395

if.end395:                                        ; preds = %if.end394, %for.body238
  br label %for.inc396

for.inc396:                                       ; preds = %if.end395
  %240 = load i32, i32* %in, align 4
  %inc397 = add nsw i32 %240, 1
  store i32 %inc397, i32* %in, align 4
  br label %for.cond233

for.end398:                                       ; preds = %for.cond233
  br label %do.cond399

do.cond399:                                       ; preds = %for.end398
  %241 = load i32, i32* %change, align 4
  %tobool400 = icmp ne i32 %241, 0
  br i1 %tobool400, label %do.body230, label %do.end401

do.end401:                                        ; preds = %do.cond399
  br label %for.inc402

for.inc402:                                       ; preds = %do.end401
  %242 = load i32, i32* %level, align 4
  %dec = add nsw i32 %242, -1
  store i32 %dec, i32* %level, align 4
  br label %for.cond

for.end403:                                       ; preds = %for.cond
  store i32 0, i32* %in, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond404

for.cond404:                                      ; preds = %for.inc420, %for.end403
  %243 = load i32, i32* %in, align 4
  %244 = load i32*, i32** @sorted_index, align 8
  %245 = load i32, i32* @num_refine, align 4
  %add405 = add nsw i32 %245, 1
  %idxprom406 = sext i32 %add405 to i64
  %arrayidx407 = getelementptr inbounds i32, i32* %244, i64 %idxprom406
  %246 = load i32, i32* %arrayidx407, align 4
  %cmp408 = icmp slt i32 %243, %246
  br i1 %cmp408, label %for.body409, label %for.end422

for.body409:                                      ; preds = %for.cond404
  %247 = load %struct.block*, %struct.block** @blocks, align 8
  %248 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %249 = load i32, i32* %in, align 4
  %idxprom410 = sext i32 %249 to i64
  %arrayidx411 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %248, i64 %idxprom410
  %n412 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx411, i32 0, i32 1
  %250 = load i32, i32* %n412, align 4
  %idxprom413 = sext i32 %250 to i64
  %arrayidx414 = getelementptr inbounds %struct.block, %struct.block* %247, i64 %idxprom413
  %refine415 = getelementptr inbounds %struct.block, %struct.block* %arrayidx414, i32 0, i32 2
  %251 = load i32, i32* %refine415, align 8
  %cmp416 = icmp eq i32 %251, 1
  br i1 %cmp416, label %if.then417, label %if.end419

if.then417:                                       ; preds = %for.body409
  %252 = load i32, i32* %i, align 4
  %inc418 = add nsw i32 %252, 1
  store i32 %inc418, i32* %i, align 4
  br label %if.end419

if.end419:                                        ; preds = %if.then417, %for.body409
  br label %for.inc420

for.inc420:                                       ; preds = %if.end419
  %253 = load i32, i32* %in, align 4
  %inc421 = add nsw i32 %253, 1
  store i32 %inc421, i32* %in, align 4
  br label %for.cond404

for.end422:                                       ; preds = %for.cond404
  %254 = load i32, i32* %i, align 4
  ret i32 %254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @stencil_calc(i32 %var) #0 {
entry:
  %var.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %in = alloca i32, align 4
  %sb = alloca double, align 8
  %sm = alloca double, align 8
  %sf = alloca double, align 8
  %saved_stack = alloca i8*, align 8
  %__vla_expr0 = alloca i64, align 8
  %__vla_expr1 = alloca i64, align 8
  %__vla_expr2 = alloca i64, align 8
  %bp = alloca %struct.block*, align 8
  store i32 %var, i32* %var.addr, align 4
  %0 = load i32, i32* @x_block_size, align 4
  %add = add nsw i32 %0, 2
  %1 = zext i32 %add to i64
  %2 = load i32, i32* @y_block_size, align 4
  %add1 = add nsw i32 %2, 2
  %3 = zext i32 %add1 to i64
  %4 = load i32, i32* @z_block_size, align 4
  %add2 = add nsw i32 %4, 2
  %5 = zext i32 %add2 to i64
  %6 = call i8* @llvm.stacksave()
  store i8* %6, i8** %saved_stack, align 8
  %7 = mul nuw i64 %1, %3
  %8 = mul nuw i64 %7, %5
  %vla = alloca double, i64 %8, align 16
  store i64 %1, i64* %__vla_expr0, align 8
  store i64 %3, i64* %__vla_expr1, align 8
  store i64 %5, i64* %__vla_expr2, align 8
  %9 = load i32, i32* @stencil, align 4
  %cmp = icmp eq i32 %9, 7
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %in, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc139, %if.then
  %10 = load i32, i32* %in, align 4
  %11 = load i32*, i32** @sorted_index, align 8
  %12 = load i32, i32* @num_refine, align 4
  %add3 = add nsw i32 %12, 1
  %idxprom = sext i32 %add3 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %cmp4 = icmp slt i32 %10, %13
  br i1 %cmp4, label %for.body, label %for.end141

for.body:                                         ; preds = %for.cond
  %14 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %15 = load i32, i32* %in, align 4
  %idxprom5 = sext i32 %15 to i64
  %arrayidx6 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %14, i64 %idxprom5
  %n7 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx6, i32 0, i32 1
  %16 = load i32, i32* %n7, align 4
  store i32 %16, i32* %n, align 4
  %17 = load %struct.block*, %struct.block** @blocks, align 8
  %18 = load i32, i32* %n, align 4
  %idxprom8 = sext i32 %18 to i64
  %arrayidx9 = getelementptr inbounds %struct.block, %struct.block* %17, i64 %idxprom8
  store %struct.block* %arrayidx9, %struct.block** %bp, align 8
  %19 = load %struct.block*, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %19, i32 0, i32 0
  %20 = load i32, i32* %number, align 8
  %cmp10 = icmp sge i32 %20, 0
  br i1 %cmp10, label %if.then11, label %if.end

if.then11:                                        ; preds = %for.body
  store i32 1, i32* %i, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc103, %if.then11
  %21 = load i32, i32* %i, align 4
  %22 = load i32, i32* @x_block_size, align 4
  %cmp13 = icmp sle i32 %21, %22
  br i1 %cmp13, label %for.body14, label %for.end105

for.body14:                                       ; preds = %for.cond12
  store i32 1, i32* %j, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc100, %for.body14
  %23 = load i32, i32* %j, align 4
  %24 = load i32, i32* @y_block_size, align 4
  %cmp16 = icmp sle i32 %23, %24
  br i1 %cmp16, label %for.body17, label %for.end102

for.body17:                                       ; preds = %for.cond15
  store i32 1, i32* %k, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc, %for.body17
  %25 = load i32, i32* %k, align 4
  %26 = load i32, i32* @z_block_size, align 4
  %cmp19 = icmp sle i32 %25, %26
  br i1 %cmp19, label %for.body20, label %for.end

for.body20:                                       ; preds = %for.cond18
  %27 = load %struct.block*, %struct.block** %bp, align 8
  %array = getelementptr inbounds %struct.block, %struct.block* %27, i32 0, i32 11
  %28 = load double****, double***** %array, align 8
  %29 = load i32, i32* %var.addr, align 4
  %idxprom21 = sext i32 %29 to i64
  %arrayidx22 = getelementptr inbounds double***, double**** %28, i64 %idxprom21
  %30 = load double***, double**** %arrayidx22, align 8
  %31 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %31, 1
  %idxprom23 = sext i32 %sub to i64
  %arrayidx24 = getelementptr inbounds double**, double*** %30, i64 %idxprom23
  %32 = load double**, double*** %arrayidx24, align 8
  %33 = load i32, i32* %j, align 4
  %idxprom25 = sext i32 %33 to i64
  %arrayidx26 = getelementptr inbounds double*, double** %32, i64 %idxprom25
  %34 = load double*, double** %arrayidx26, align 8
  %35 = load i32, i32* %k, align 4
  %idxprom27 = sext i32 %35 to i64
  %arrayidx28 = getelementptr inbounds double, double* %34, i64 %idxprom27
  %36 = load double, double* %arrayidx28, align 8
  %37 = load %struct.block*, %struct.block** %bp, align 8
  %array29 = getelementptr inbounds %struct.block, %struct.block* %37, i32 0, i32 11
  %38 = load double****, double***** %array29, align 8
  %39 = load i32, i32* %var.addr, align 4
  %idxprom30 = sext i32 %39 to i64
  %arrayidx31 = getelementptr inbounds double***, double**** %38, i64 %idxprom30
  %40 = load double***, double**** %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds double**, double*** %40, i64 %idxprom32
  %42 = load double**, double*** %arrayidx33, align 8
  %43 = load i32, i32* %j, align 4
  %sub34 = sub nsw i32 %43, 1
  %idxprom35 = sext i32 %sub34 to i64
  %arrayidx36 = getelementptr inbounds double*, double** %42, i64 %idxprom35
  %44 = load double*, double** %arrayidx36, align 8
  %45 = load i32, i32* %k, align 4
  %idxprom37 = sext i32 %45 to i64
  %arrayidx38 = getelementptr inbounds double, double* %44, i64 %idxprom37
  %46 = load double, double* %arrayidx38, align 8
  %add39 = fadd double %36, %46
  %47 = load %struct.block*, %struct.block** %bp, align 8
  %array40 = getelementptr inbounds %struct.block, %struct.block* %47, i32 0, i32 11
  %48 = load double****, double***** %array40, align 8
  %49 = load i32, i32* %var.addr, align 4
  %idxprom41 = sext i32 %49 to i64
  %arrayidx42 = getelementptr inbounds double***, double**** %48, i64 %idxprom41
  %50 = load double***, double**** %arrayidx42, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom43 = sext i32 %51 to i64
  %arrayidx44 = getelementptr inbounds double**, double*** %50, i64 %idxprom43
  %52 = load double**, double*** %arrayidx44, align 8
  %53 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %53 to i64
  %arrayidx46 = getelementptr inbounds double*, double** %52, i64 %idxprom45
  %54 = load double*, double** %arrayidx46, align 8
  %55 = load i32, i32* %k, align 4
  %sub47 = sub nsw i32 %55, 1
  %idxprom48 = sext i32 %sub47 to i64
  %arrayidx49 = getelementptr inbounds double, double* %54, i64 %idxprom48
  %56 = load double, double* %arrayidx49, align 8
  %add50 = fadd double %add39, %56
  %57 = load %struct.block*, %struct.block** %bp, align 8
  %array51 = getelementptr inbounds %struct.block, %struct.block* %57, i32 0, i32 11
  %58 = load double****, double***** %array51, align 8
  %59 = load i32, i32* %var.addr, align 4
  %idxprom52 = sext i32 %59 to i64
  %arrayidx53 = getelementptr inbounds double***, double**** %58, i64 %idxprom52
  %60 = load double***, double**** %arrayidx53, align 8
  %61 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %61 to i64
  %arrayidx55 = getelementptr inbounds double**, double*** %60, i64 %idxprom54
  %62 = load double**, double*** %arrayidx55, align 8
  %63 = load i32, i32* %j, align 4
  %idxprom56 = sext i32 %63 to i64
  %arrayidx57 = getelementptr inbounds double*, double** %62, i64 %idxprom56
  %64 = load double*, double** %arrayidx57, align 8
  %65 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %65 to i64
  %arrayidx59 = getelementptr inbounds double, double* %64, i64 %idxprom58
  %66 = load double, double* %arrayidx59, align 8
  %add60 = fadd double %add50, %66
  %67 = load %struct.block*, %struct.block** %bp, align 8
  %array61 = getelementptr inbounds %struct.block, %struct.block* %67, i32 0, i32 11
  %68 = load double****, double***** %array61, align 8
  %69 = load i32, i32* %var.addr, align 4
  %idxprom62 = sext i32 %69 to i64
  %arrayidx63 = getelementptr inbounds double***, double**** %68, i64 %idxprom62
  %70 = load double***, double**** %arrayidx63, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %71 to i64
  %arrayidx65 = getelementptr inbounds double**, double*** %70, i64 %idxprom64
  %72 = load double**, double*** %arrayidx65, align 8
  %73 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %73 to i64
  %arrayidx67 = getelementptr inbounds double*, double** %72, i64 %idxprom66
  %74 = load double*, double** %arrayidx67, align 8
  %75 = load i32, i32* %k, align 4
  %add68 = add nsw i32 %75, 1
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds double, double* %74, i64 %idxprom69
  %76 = load double, double* %arrayidx70, align 8
  %add71 = fadd double %add60, %76
  %77 = load %struct.block*, %struct.block** %bp, align 8
  %array72 = getelementptr inbounds %struct.block, %struct.block* %77, i32 0, i32 11
  %78 = load double****, double***** %array72, align 8
  %79 = load i32, i32* %var.addr, align 4
  %idxprom73 = sext i32 %79 to i64
  %arrayidx74 = getelementptr inbounds double***, double**** %78, i64 %idxprom73
  %80 = load double***, double**** %arrayidx74, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom75 = sext i32 %81 to i64
  %arrayidx76 = getelementptr inbounds double**, double*** %80, i64 %idxprom75
  %82 = load double**, double*** %arrayidx76, align 8
  %83 = load i32, i32* %j, align 4
  %add77 = add nsw i32 %83, 1
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds double*, double** %82, i64 %idxprom78
  %84 = load double*, double** %arrayidx79, align 8
  %85 = load i32, i32* %k, align 4
  %idxprom80 = sext i32 %85 to i64
  %arrayidx81 = getelementptr inbounds double, double* %84, i64 %idxprom80
  %86 = load double, double* %arrayidx81, align 8
  %add82 = fadd double %add71, %86
  %87 = load %struct.block*, %struct.block** %bp, align 8
  %array83 = getelementptr inbounds %struct.block, %struct.block* %87, i32 0, i32 11
  %88 = load double****, double***** %array83, align 8
  %89 = load i32, i32* %var.addr, align 4
  %idxprom84 = sext i32 %89 to i64
  %arrayidx85 = getelementptr inbounds double***, double**** %88, i64 %idxprom84
  %90 = load double***, double**** %arrayidx85, align 8
  %91 = load i32, i32* %i, align 4
  %add86 = add nsw i32 %91, 1
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds double**, double*** %90, i64 %idxprom87
  %92 = load double**, double*** %arrayidx88, align 8
  %93 = load i32, i32* %j, align 4
  %idxprom89 = sext i32 %93 to i64
  %arrayidx90 = getelementptr inbounds double*, double** %92, i64 %idxprom89
  %94 = load double*, double** %arrayidx90, align 8
  %95 = load i32, i32* %k, align 4
  %idxprom91 = sext i32 %95 to i64
  %arrayidx92 = getelementptr inbounds double, double* %94, i64 %idxprom91
  %96 = load double, double* %arrayidx92, align 8
  %add93 = fadd double %add82, %96
  %div = fdiv double %add93, 7.000000e+00
  %97 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %97 to i64
  %98 = mul nuw i64 %3, %5
  %99 = mul nsw i64 %idxprom94, %98
  %arrayidx95 = getelementptr inbounds double, double* %vla, i64 %99
  %100 = load i32, i32* %j, align 4
  %idxprom96 = sext i32 %100 to i64
  %101 = mul nsw i64 %idxprom96, %5
  %arrayidx97 = getelementptr inbounds double, double* %arrayidx95, i64 %101
  %102 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %102 to i64
  %arrayidx99 = getelementptr inbounds double, double* %arrayidx97, i64 %idxprom98
  store double %div, double* %arrayidx99, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body20
  %103 = load i32, i32* %k, align 4
  %inc = add nsw i32 %103, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond18

for.end:                                          ; preds = %for.cond18
  br label %for.inc100

for.inc100:                                       ; preds = %for.end
  %104 = load i32, i32* %j, align 4
  %inc101 = add nsw i32 %104, 1
  store i32 %inc101, i32* %j, align 4
  br label %for.cond15

for.end102:                                       ; preds = %for.cond15
  br label %for.inc103

for.inc103:                                       ; preds = %for.end102
  %105 = load i32, i32* %i, align 4
  %inc104 = add nsw i32 %105, 1
  store i32 %inc104, i32* %i, align 4
  br label %for.cond12

for.end105:                                       ; preds = %for.cond12
  store i32 1, i32* %i, align 4
  br label %for.cond106

for.cond106:                                      ; preds = %for.inc136, %for.end105
  %106 = load i32, i32* %i, align 4
  %107 = load i32, i32* @x_block_size, align 4
  %cmp107 = icmp sle i32 %106, %107
  br i1 %cmp107, label %for.body108, label %for.end138

for.body108:                                      ; preds = %for.cond106
  store i32 1, i32* %j, align 4
  br label %for.cond109

for.cond109:                                      ; preds = %for.inc133, %for.body108
  %108 = load i32, i32* %j, align 4
  %109 = load i32, i32* @y_block_size, align 4
  %cmp110 = icmp sle i32 %108, %109
  br i1 %cmp110, label %for.body111, label %for.end135

for.body111:                                      ; preds = %for.cond109
  store i32 1, i32* %k, align 4
  br label %for.cond112

for.cond112:                                      ; preds = %for.inc130, %for.body111
  %110 = load i32, i32* %k, align 4
  %111 = load i32, i32* @z_block_size, align 4
  %cmp113 = icmp sle i32 %110, %111
  br i1 %cmp113, label %for.body114, label %for.end132

for.body114:                                      ; preds = %for.cond112
  %112 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %112 to i64
  %113 = mul nuw i64 %3, %5
  %114 = mul nsw i64 %idxprom115, %113
  %arrayidx116 = getelementptr inbounds double, double* %vla, i64 %114
  %115 = load i32, i32* %j, align 4
  %idxprom117 = sext i32 %115 to i64
  %116 = mul nsw i64 %idxprom117, %5
  %arrayidx118 = getelementptr inbounds double, double* %arrayidx116, i64 %116
  %117 = load i32, i32* %k, align 4
  %idxprom119 = sext i32 %117 to i64
  %arrayidx120 = getelementptr inbounds double, double* %arrayidx118, i64 %idxprom119
  %118 = load double, double* %arrayidx120, align 8
  %119 = load %struct.block*, %struct.block** %bp, align 8
  %array121 = getelementptr inbounds %struct.block, %struct.block* %119, i32 0, i32 11
  %120 = load double****, double***** %array121, align 8
  %121 = load i32, i32* %var.addr, align 4
  %idxprom122 = sext i32 %121 to i64
  %arrayidx123 = getelementptr inbounds double***, double**** %120, i64 %idxprom122
  %122 = load double***, double**** %arrayidx123, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom124 = sext i32 %123 to i64
  %arrayidx125 = getelementptr inbounds double**, double*** %122, i64 %idxprom124
  %124 = load double**, double*** %arrayidx125, align 8
  %125 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %125 to i64
  %arrayidx127 = getelementptr inbounds double*, double** %124, i64 %idxprom126
  %126 = load double*, double** %arrayidx127, align 8
  %127 = load i32, i32* %k, align 4
  %idxprom128 = sext i32 %127 to i64
  %arrayidx129 = getelementptr inbounds double, double* %126, i64 %idxprom128
  store double %118, double* %arrayidx129, align 8
  br label %for.inc130

for.inc130:                                       ; preds = %for.body114
  %128 = load i32, i32* %k, align 4
  %inc131 = add nsw i32 %128, 1
  store i32 %inc131, i32* %k, align 4
  br label %for.cond112

for.end132:                                       ; preds = %for.cond112
  br label %for.inc133

for.inc133:                                       ; preds = %for.end132
  %129 = load i32, i32* %j, align 4
  %inc134 = add nsw i32 %129, 1
  store i32 %inc134, i32* %j, align 4
  br label %for.cond109

for.end135:                                       ; preds = %for.cond109
  br label %for.inc136

for.inc136:                                       ; preds = %for.end135
  %130 = load i32, i32* %i, align 4
  %inc137 = add nsw i32 %130, 1
  store i32 %inc137, i32* %i, align 4
  br label %for.cond106

for.end138:                                       ; preds = %for.cond106
  br label %if.end

if.end:                                           ; preds = %for.end138, %for.body
  br label %for.inc139

for.inc139:                                       ; preds = %if.end
  %131 = load i32, i32* %in, align 4
  %inc140 = add nsw i32 %131, 1
  store i32 %inc140, i32* %in, align 4
  br label %for.cond

for.end141:                                       ; preds = %for.cond
  br label %if.end541

if.else:                                          ; preds = %entry
  store i32 0, i32* %in, align 4
  br label %for.cond142

for.cond142:                                      ; preds = %for.inc538, %if.else
  %132 = load i32, i32* %in, align 4
  %133 = load i32*, i32** @sorted_index, align 8
  %134 = load i32, i32* @num_refine, align 4
  %add143 = add nsw i32 %134, 1
  %idxprom144 = sext i32 %add143 to i64
  %arrayidx145 = getelementptr inbounds i32, i32* %133, i64 %idxprom144
  %135 = load i32, i32* %arrayidx145, align 4
  %cmp146 = icmp slt i32 %132, %135
  br i1 %cmp146, label %for.body147, label %for.end540

for.body147:                                      ; preds = %for.cond142
  %136 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %137 = load i32, i32* %in, align 4
  %idxprom148 = sext i32 %137 to i64
  %arrayidx149 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %136, i64 %idxprom148
  %n150 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx149, i32 0, i32 1
  %138 = load i32, i32* %n150, align 4
  store i32 %138, i32* %n, align 4
  %139 = load %struct.block*, %struct.block** @blocks, align 8
  %140 = load i32, i32* %n, align 4
  %idxprom151 = sext i32 %140 to i64
  %arrayidx152 = getelementptr inbounds %struct.block, %struct.block* %139, i64 %idxprom151
  store %struct.block* %arrayidx152, %struct.block** %bp, align 8
  %141 = load %struct.block*, %struct.block** %bp, align 8
  %number153 = getelementptr inbounds %struct.block, %struct.block* %141, i32 0, i32 0
  %142 = load i32, i32* %number153, align 8
  %cmp154 = icmp sge i32 %142, 0
  br i1 %cmp154, label %if.then155, label %if.end537

if.then155:                                       ; preds = %for.body147
  store i32 1, i32* %i, align 4
  br label %for.cond156

for.cond156:                                      ; preds = %for.inc501, %if.then155
  %143 = load i32, i32* %i, align 4
  %144 = load i32, i32* @x_block_size, align 4
  %cmp157 = icmp sle i32 %143, %144
  br i1 %cmp157, label %for.body158, label %for.end503

for.body158:                                      ; preds = %for.cond156
  store i32 1, i32* %j, align 4
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc498, %for.body158
  %145 = load i32, i32* %j, align 4
  %146 = load i32, i32* @y_block_size, align 4
  %cmp160 = icmp sle i32 %145, %146
  br i1 %cmp160, label %for.body161, label %for.end500

for.body161:                                      ; preds = %for.cond159
  store i32 1, i32* %k, align 4
  br label %for.cond162

for.cond162:                                      ; preds = %for.inc495, %for.body161
  %147 = load i32, i32* %k, align 4
  %148 = load i32, i32* @z_block_size, align 4
  %cmp163 = icmp sle i32 %147, %148
  br i1 %cmp163, label %for.body164, label %for.end497

for.body164:                                      ; preds = %for.cond162
  %149 = load %struct.block*, %struct.block** %bp, align 8
  %array165 = getelementptr inbounds %struct.block, %struct.block* %149, i32 0, i32 11
  %150 = load double****, double***** %array165, align 8
  %151 = load i32, i32* %var.addr, align 4
  %idxprom166 = sext i32 %151 to i64
  %arrayidx167 = getelementptr inbounds double***, double**** %150, i64 %idxprom166
  %152 = load double***, double**** %arrayidx167, align 8
  %153 = load i32, i32* %i, align 4
  %sub168 = sub nsw i32 %153, 1
  %idxprom169 = sext i32 %sub168 to i64
  %arrayidx170 = getelementptr inbounds double**, double*** %152, i64 %idxprom169
  %154 = load double**, double*** %arrayidx170, align 8
  %155 = load i32, i32* %j, align 4
  %sub171 = sub nsw i32 %155, 1
  %idxprom172 = sext i32 %sub171 to i64
  %arrayidx173 = getelementptr inbounds double*, double** %154, i64 %idxprom172
  %156 = load double*, double** %arrayidx173, align 8
  %157 = load i32, i32* %k, align 4
  %sub174 = sub nsw i32 %157, 1
  %idxprom175 = sext i32 %sub174 to i64
  %arrayidx176 = getelementptr inbounds double, double* %156, i64 %idxprom175
  %158 = load double, double* %arrayidx176, align 8
  %159 = load %struct.block*, %struct.block** %bp, align 8
  %array177 = getelementptr inbounds %struct.block, %struct.block* %159, i32 0, i32 11
  %160 = load double****, double***** %array177, align 8
  %161 = load i32, i32* %var.addr, align 4
  %idxprom178 = sext i32 %161 to i64
  %arrayidx179 = getelementptr inbounds double***, double**** %160, i64 %idxprom178
  %162 = load double***, double**** %arrayidx179, align 8
  %163 = load i32, i32* %i, align 4
  %sub180 = sub nsw i32 %163, 1
  %idxprom181 = sext i32 %sub180 to i64
  %arrayidx182 = getelementptr inbounds double**, double*** %162, i64 %idxprom181
  %164 = load double**, double*** %arrayidx182, align 8
  %165 = load i32, i32* %j, align 4
  %sub183 = sub nsw i32 %165, 1
  %idxprom184 = sext i32 %sub183 to i64
  %arrayidx185 = getelementptr inbounds double*, double** %164, i64 %idxprom184
  %166 = load double*, double** %arrayidx185, align 8
  %167 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %167 to i64
  %arrayidx187 = getelementptr inbounds double, double* %166, i64 %idxprom186
  %168 = load double, double* %arrayidx187, align 8
  %add188 = fadd double %158, %168
  %169 = load %struct.block*, %struct.block** %bp, align 8
  %array189 = getelementptr inbounds %struct.block, %struct.block* %169, i32 0, i32 11
  %170 = load double****, double***** %array189, align 8
  %171 = load i32, i32* %var.addr, align 4
  %idxprom190 = sext i32 %171 to i64
  %arrayidx191 = getelementptr inbounds double***, double**** %170, i64 %idxprom190
  %172 = load double***, double**** %arrayidx191, align 8
  %173 = load i32, i32* %i, align 4
  %sub192 = sub nsw i32 %173, 1
  %idxprom193 = sext i32 %sub192 to i64
  %arrayidx194 = getelementptr inbounds double**, double*** %172, i64 %idxprom193
  %174 = load double**, double*** %arrayidx194, align 8
  %175 = load i32, i32* %j, align 4
  %sub195 = sub nsw i32 %175, 1
  %idxprom196 = sext i32 %sub195 to i64
  %arrayidx197 = getelementptr inbounds double*, double** %174, i64 %idxprom196
  %176 = load double*, double** %arrayidx197, align 8
  %177 = load i32, i32* %k, align 4
  %add198 = add nsw i32 %177, 1
  %idxprom199 = sext i32 %add198 to i64
  %arrayidx200 = getelementptr inbounds double, double* %176, i64 %idxprom199
  %178 = load double, double* %arrayidx200, align 8
  %add201 = fadd double %add188, %178
  %179 = load %struct.block*, %struct.block** %bp, align 8
  %array202 = getelementptr inbounds %struct.block, %struct.block* %179, i32 0, i32 11
  %180 = load double****, double***** %array202, align 8
  %181 = load i32, i32* %var.addr, align 4
  %idxprom203 = sext i32 %181 to i64
  %arrayidx204 = getelementptr inbounds double***, double**** %180, i64 %idxprom203
  %182 = load double***, double**** %arrayidx204, align 8
  %183 = load i32, i32* %i, align 4
  %sub205 = sub nsw i32 %183, 1
  %idxprom206 = sext i32 %sub205 to i64
  %arrayidx207 = getelementptr inbounds double**, double*** %182, i64 %idxprom206
  %184 = load double**, double*** %arrayidx207, align 8
  %185 = load i32, i32* %j, align 4
  %idxprom208 = sext i32 %185 to i64
  %arrayidx209 = getelementptr inbounds double*, double** %184, i64 %idxprom208
  %186 = load double*, double** %arrayidx209, align 8
  %187 = load i32, i32* %k, align 4
  %sub210 = sub nsw i32 %187, 1
  %idxprom211 = sext i32 %sub210 to i64
  %arrayidx212 = getelementptr inbounds double, double* %186, i64 %idxprom211
  %188 = load double, double* %arrayidx212, align 8
  %add213 = fadd double %add201, %188
  %189 = load %struct.block*, %struct.block** %bp, align 8
  %array214 = getelementptr inbounds %struct.block, %struct.block* %189, i32 0, i32 11
  %190 = load double****, double***** %array214, align 8
  %191 = load i32, i32* %var.addr, align 4
  %idxprom215 = sext i32 %191 to i64
  %arrayidx216 = getelementptr inbounds double***, double**** %190, i64 %idxprom215
  %192 = load double***, double**** %arrayidx216, align 8
  %193 = load i32, i32* %i, align 4
  %sub217 = sub nsw i32 %193, 1
  %idxprom218 = sext i32 %sub217 to i64
  %arrayidx219 = getelementptr inbounds double**, double*** %192, i64 %idxprom218
  %194 = load double**, double*** %arrayidx219, align 8
  %195 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %195 to i64
  %arrayidx221 = getelementptr inbounds double*, double** %194, i64 %idxprom220
  %196 = load double*, double** %arrayidx221, align 8
  %197 = load i32, i32* %k, align 4
  %idxprom222 = sext i32 %197 to i64
  %arrayidx223 = getelementptr inbounds double, double* %196, i64 %idxprom222
  %198 = load double, double* %arrayidx223, align 8
  %add224 = fadd double %add213, %198
  %199 = load %struct.block*, %struct.block** %bp, align 8
  %array225 = getelementptr inbounds %struct.block, %struct.block* %199, i32 0, i32 11
  %200 = load double****, double***** %array225, align 8
  %201 = load i32, i32* %var.addr, align 4
  %idxprom226 = sext i32 %201 to i64
  %arrayidx227 = getelementptr inbounds double***, double**** %200, i64 %idxprom226
  %202 = load double***, double**** %arrayidx227, align 8
  %203 = load i32, i32* %i, align 4
  %sub228 = sub nsw i32 %203, 1
  %idxprom229 = sext i32 %sub228 to i64
  %arrayidx230 = getelementptr inbounds double**, double*** %202, i64 %idxprom229
  %204 = load double**, double*** %arrayidx230, align 8
  %205 = load i32, i32* %j, align 4
  %idxprom231 = sext i32 %205 to i64
  %arrayidx232 = getelementptr inbounds double*, double** %204, i64 %idxprom231
  %206 = load double*, double** %arrayidx232, align 8
  %207 = load i32, i32* %k, align 4
  %add233 = add nsw i32 %207, 1
  %idxprom234 = sext i32 %add233 to i64
  %arrayidx235 = getelementptr inbounds double, double* %206, i64 %idxprom234
  %208 = load double, double* %arrayidx235, align 8
  %add236 = fadd double %add224, %208
  %209 = load %struct.block*, %struct.block** %bp, align 8
  %array237 = getelementptr inbounds %struct.block, %struct.block* %209, i32 0, i32 11
  %210 = load double****, double***** %array237, align 8
  %211 = load i32, i32* %var.addr, align 4
  %idxprom238 = sext i32 %211 to i64
  %arrayidx239 = getelementptr inbounds double***, double**** %210, i64 %idxprom238
  %212 = load double***, double**** %arrayidx239, align 8
  %213 = load i32, i32* %i, align 4
  %sub240 = sub nsw i32 %213, 1
  %idxprom241 = sext i32 %sub240 to i64
  %arrayidx242 = getelementptr inbounds double**, double*** %212, i64 %idxprom241
  %214 = load double**, double*** %arrayidx242, align 8
  %215 = load i32, i32* %j, align 4
  %add243 = add nsw i32 %215, 1
  %idxprom244 = sext i32 %add243 to i64
  %arrayidx245 = getelementptr inbounds double*, double** %214, i64 %idxprom244
  %216 = load double*, double** %arrayidx245, align 8
  %217 = load i32, i32* %k, align 4
  %sub246 = sub nsw i32 %217, 1
  %idxprom247 = sext i32 %sub246 to i64
  %arrayidx248 = getelementptr inbounds double, double* %216, i64 %idxprom247
  %218 = load double, double* %arrayidx248, align 8
  %add249 = fadd double %add236, %218
  %219 = load %struct.block*, %struct.block** %bp, align 8
  %array250 = getelementptr inbounds %struct.block, %struct.block* %219, i32 0, i32 11
  %220 = load double****, double***** %array250, align 8
  %221 = load i32, i32* %var.addr, align 4
  %idxprom251 = sext i32 %221 to i64
  %arrayidx252 = getelementptr inbounds double***, double**** %220, i64 %idxprom251
  %222 = load double***, double**** %arrayidx252, align 8
  %223 = load i32, i32* %i, align 4
  %sub253 = sub nsw i32 %223, 1
  %idxprom254 = sext i32 %sub253 to i64
  %arrayidx255 = getelementptr inbounds double**, double*** %222, i64 %idxprom254
  %224 = load double**, double*** %arrayidx255, align 8
  %225 = load i32, i32* %j, align 4
  %add256 = add nsw i32 %225, 1
  %idxprom257 = sext i32 %add256 to i64
  %arrayidx258 = getelementptr inbounds double*, double** %224, i64 %idxprom257
  %226 = load double*, double** %arrayidx258, align 8
  %227 = load i32, i32* %k, align 4
  %idxprom259 = sext i32 %227 to i64
  %arrayidx260 = getelementptr inbounds double, double* %226, i64 %idxprom259
  %228 = load double, double* %arrayidx260, align 8
  %add261 = fadd double %add249, %228
  %229 = load %struct.block*, %struct.block** %bp, align 8
  %array262 = getelementptr inbounds %struct.block, %struct.block* %229, i32 0, i32 11
  %230 = load double****, double***** %array262, align 8
  %231 = load i32, i32* %var.addr, align 4
  %idxprom263 = sext i32 %231 to i64
  %arrayidx264 = getelementptr inbounds double***, double**** %230, i64 %idxprom263
  %232 = load double***, double**** %arrayidx264, align 8
  %233 = load i32, i32* %i, align 4
  %sub265 = sub nsw i32 %233, 1
  %idxprom266 = sext i32 %sub265 to i64
  %arrayidx267 = getelementptr inbounds double**, double*** %232, i64 %idxprom266
  %234 = load double**, double*** %arrayidx267, align 8
  %235 = load i32, i32* %j, align 4
  %add268 = add nsw i32 %235, 1
  %idxprom269 = sext i32 %add268 to i64
  %arrayidx270 = getelementptr inbounds double*, double** %234, i64 %idxprom269
  %236 = load double*, double** %arrayidx270, align 8
  %237 = load i32, i32* %k, align 4
  %add271 = add nsw i32 %237, 1
  %idxprom272 = sext i32 %add271 to i64
  %arrayidx273 = getelementptr inbounds double, double* %236, i64 %idxprom272
  %238 = load double, double* %arrayidx273, align 8
  %add274 = fadd double %add261, %238
  store double %add274, double* %sb, align 8
  %239 = load %struct.block*, %struct.block** %bp, align 8
  %array275 = getelementptr inbounds %struct.block, %struct.block* %239, i32 0, i32 11
  %240 = load double****, double***** %array275, align 8
  %241 = load i32, i32* %var.addr, align 4
  %idxprom276 = sext i32 %241 to i64
  %arrayidx277 = getelementptr inbounds double***, double**** %240, i64 %idxprom276
  %242 = load double***, double**** %arrayidx277, align 8
  %243 = load i32, i32* %i, align 4
  %idxprom278 = sext i32 %243 to i64
  %arrayidx279 = getelementptr inbounds double**, double*** %242, i64 %idxprom278
  %244 = load double**, double*** %arrayidx279, align 8
  %245 = load i32, i32* %j, align 4
  %sub280 = sub nsw i32 %245, 1
  %idxprom281 = sext i32 %sub280 to i64
  %arrayidx282 = getelementptr inbounds double*, double** %244, i64 %idxprom281
  %246 = load double*, double** %arrayidx282, align 8
  %247 = load i32, i32* %k, align 4
  %sub283 = sub nsw i32 %247, 1
  %idxprom284 = sext i32 %sub283 to i64
  %arrayidx285 = getelementptr inbounds double, double* %246, i64 %idxprom284
  %248 = load double, double* %arrayidx285, align 8
  %249 = load %struct.block*, %struct.block** %bp, align 8
  %array286 = getelementptr inbounds %struct.block, %struct.block* %249, i32 0, i32 11
  %250 = load double****, double***** %array286, align 8
  %251 = load i32, i32* %var.addr, align 4
  %idxprom287 = sext i32 %251 to i64
  %arrayidx288 = getelementptr inbounds double***, double**** %250, i64 %idxprom287
  %252 = load double***, double**** %arrayidx288, align 8
  %253 = load i32, i32* %i, align 4
  %idxprom289 = sext i32 %253 to i64
  %arrayidx290 = getelementptr inbounds double**, double*** %252, i64 %idxprom289
  %254 = load double**, double*** %arrayidx290, align 8
  %255 = load i32, i32* %j, align 4
  %sub291 = sub nsw i32 %255, 1
  %idxprom292 = sext i32 %sub291 to i64
  %arrayidx293 = getelementptr inbounds double*, double** %254, i64 %idxprom292
  %256 = load double*, double** %arrayidx293, align 8
  %257 = load i32, i32* %k, align 4
  %idxprom294 = sext i32 %257 to i64
  %arrayidx295 = getelementptr inbounds double, double* %256, i64 %idxprom294
  %258 = load double, double* %arrayidx295, align 8
  %add296 = fadd double %248, %258
  %259 = load %struct.block*, %struct.block** %bp, align 8
  %array297 = getelementptr inbounds %struct.block, %struct.block* %259, i32 0, i32 11
  %260 = load double****, double***** %array297, align 8
  %261 = load i32, i32* %var.addr, align 4
  %idxprom298 = sext i32 %261 to i64
  %arrayidx299 = getelementptr inbounds double***, double**** %260, i64 %idxprom298
  %262 = load double***, double**** %arrayidx299, align 8
  %263 = load i32, i32* %i, align 4
  %idxprom300 = sext i32 %263 to i64
  %arrayidx301 = getelementptr inbounds double**, double*** %262, i64 %idxprom300
  %264 = load double**, double*** %arrayidx301, align 8
  %265 = load i32, i32* %j, align 4
  %sub302 = sub nsw i32 %265, 1
  %idxprom303 = sext i32 %sub302 to i64
  %arrayidx304 = getelementptr inbounds double*, double** %264, i64 %idxprom303
  %266 = load double*, double** %arrayidx304, align 8
  %267 = load i32, i32* %k, align 4
  %add305 = add nsw i32 %267, 1
  %idxprom306 = sext i32 %add305 to i64
  %arrayidx307 = getelementptr inbounds double, double* %266, i64 %idxprom306
  %268 = load double, double* %arrayidx307, align 8
  %add308 = fadd double %add296, %268
  %269 = load %struct.block*, %struct.block** %bp, align 8
  %array309 = getelementptr inbounds %struct.block, %struct.block* %269, i32 0, i32 11
  %270 = load double****, double***** %array309, align 8
  %271 = load i32, i32* %var.addr, align 4
  %idxprom310 = sext i32 %271 to i64
  %arrayidx311 = getelementptr inbounds double***, double**** %270, i64 %idxprom310
  %272 = load double***, double**** %arrayidx311, align 8
  %273 = load i32, i32* %i, align 4
  %idxprom312 = sext i32 %273 to i64
  %arrayidx313 = getelementptr inbounds double**, double*** %272, i64 %idxprom312
  %274 = load double**, double*** %arrayidx313, align 8
  %275 = load i32, i32* %j, align 4
  %idxprom314 = sext i32 %275 to i64
  %arrayidx315 = getelementptr inbounds double*, double** %274, i64 %idxprom314
  %276 = load double*, double** %arrayidx315, align 8
  %277 = load i32, i32* %k, align 4
  %sub316 = sub nsw i32 %277, 1
  %idxprom317 = sext i32 %sub316 to i64
  %arrayidx318 = getelementptr inbounds double, double* %276, i64 %idxprom317
  %278 = load double, double* %arrayidx318, align 8
  %add319 = fadd double %add308, %278
  %279 = load %struct.block*, %struct.block** %bp, align 8
  %array320 = getelementptr inbounds %struct.block, %struct.block* %279, i32 0, i32 11
  %280 = load double****, double***** %array320, align 8
  %281 = load i32, i32* %var.addr, align 4
  %idxprom321 = sext i32 %281 to i64
  %arrayidx322 = getelementptr inbounds double***, double**** %280, i64 %idxprom321
  %282 = load double***, double**** %arrayidx322, align 8
  %283 = load i32, i32* %i, align 4
  %idxprom323 = sext i32 %283 to i64
  %arrayidx324 = getelementptr inbounds double**, double*** %282, i64 %idxprom323
  %284 = load double**, double*** %arrayidx324, align 8
  %285 = load i32, i32* %j, align 4
  %idxprom325 = sext i32 %285 to i64
  %arrayidx326 = getelementptr inbounds double*, double** %284, i64 %idxprom325
  %286 = load double*, double** %arrayidx326, align 8
  %287 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %287 to i64
  %arrayidx328 = getelementptr inbounds double, double* %286, i64 %idxprom327
  %288 = load double, double* %arrayidx328, align 8
  %add329 = fadd double %add319, %288
  %289 = load %struct.block*, %struct.block** %bp, align 8
  %array330 = getelementptr inbounds %struct.block, %struct.block* %289, i32 0, i32 11
  %290 = load double****, double***** %array330, align 8
  %291 = load i32, i32* %var.addr, align 4
  %idxprom331 = sext i32 %291 to i64
  %arrayidx332 = getelementptr inbounds double***, double**** %290, i64 %idxprom331
  %292 = load double***, double**** %arrayidx332, align 8
  %293 = load i32, i32* %i, align 4
  %idxprom333 = sext i32 %293 to i64
  %arrayidx334 = getelementptr inbounds double**, double*** %292, i64 %idxprom333
  %294 = load double**, double*** %arrayidx334, align 8
  %295 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %295 to i64
  %arrayidx336 = getelementptr inbounds double*, double** %294, i64 %idxprom335
  %296 = load double*, double** %arrayidx336, align 8
  %297 = load i32, i32* %k, align 4
  %add337 = add nsw i32 %297, 1
  %idxprom338 = sext i32 %add337 to i64
  %arrayidx339 = getelementptr inbounds double, double* %296, i64 %idxprom338
  %298 = load double, double* %arrayidx339, align 8
  %add340 = fadd double %add329, %298
  %299 = load %struct.block*, %struct.block** %bp, align 8
  %array341 = getelementptr inbounds %struct.block, %struct.block* %299, i32 0, i32 11
  %300 = load double****, double***** %array341, align 8
  %301 = load i32, i32* %var.addr, align 4
  %idxprom342 = sext i32 %301 to i64
  %arrayidx343 = getelementptr inbounds double***, double**** %300, i64 %idxprom342
  %302 = load double***, double**** %arrayidx343, align 8
  %303 = load i32, i32* %i, align 4
  %idxprom344 = sext i32 %303 to i64
  %arrayidx345 = getelementptr inbounds double**, double*** %302, i64 %idxprom344
  %304 = load double**, double*** %arrayidx345, align 8
  %305 = load i32, i32* %j, align 4
  %add346 = add nsw i32 %305, 1
  %idxprom347 = sext i32 %add346 to i64
  %arrayidx348 = getelementptr inbounds double*, double** %304, i64 %idxprom347
  %306 = load double*, double** %arrayidx348, align 8
  %307 = load i32, i32* %k, align 4
  %sub349 = sub nsw i32 %307, 1
  %idxprom350 = sext i32 %sub349 to i64
  %arrayidx351 = getelementptr inbounds double, double* %306, i64 %idxprom350
  %308 = load double, double* %arrayidx351, align 8
  %add352 = fadd double %add340, %308
  %309 = load %struct.block*, %struct.block** %bp, align 8
  %array353 = getelementptr inbounds %struct.block, %struct.block* %309, i32 0, i32 11
  %310 = load double****, double***** %array353, align 8
  %311 = load i32, i32* %var.addr, align 4
  %idxprom354 = sext i32 %311 to i64
  %arrayidx355 = getelementptr inbounds double***, double**** %310, i64 %idxprom354
  %312 = load double***, double**** %arrayidx355, align 8
  %313 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %313 to i64
  %arrayidx357 = getelementptr inbounds double**, double*** %312, i64 %idxprom356
  %314 = load double**, double*** %arrayidx357, align 8
  %315 = load i32, i32* %j, align 4
  %add358 = add nsw i32 %315, 1
  %idxprom359 = sext i32 %add358 to i64
  %arrayidx360 = getelementptr inbounds double*, double** %314, i64 %idxprom359
  %316 = load double*, double** %arrayidx360, align 8
  %317 = load i32, i32* %k, align 4
  %idxprom361 = sext i32 %317 to i64
  %arrayidx362 = getelementptr inbounds double, double* %316, i64 %idxprom361
  %318 = load double, double* %arrayidx362, align 8
  %add363 = fadd double %add352, %318
  %319 = load %struct.block*, %struct.block** %bp, align 8
  %array364 = getelementptr inbounds %struct.block, %struct.block* %319, i32 0, i32 11
  %320 = load double****, double***** %array364, align 8
  %321 = load i32, i32* %var.addr, align 4
  %idxprom365 = sext i32 %321 to i64
  %arrayidx366 = getelementptr inbounds double***, double**** %320, i64 %idxprom365
  %322 = load double***, double**** %arrayidx366, align 8
  %323 = load i32, i32* %i, align 4
  %idxprom367 = sext i32 %323 to i64
  %arrayidx368 = getelementptr inbounds double**, double*** %322, i64 %idxprom367
  %324 = load double**, double*** %arrayidx368, align 8
  %325 = load i32, i32* %j, align 4
  %add369 = add nsw i32 %325, 1
  %idxprom370 = sext i32 %add369 to i64
  %arrayidx371 = getelementptr inbounds double*, double** %324, i64 %idxprom370
  %326 = load double*, double** %arrayidx371, align 8
  %327 = load i32, i32* %k, align 4
  %add372 = add nsw i32 %327, 1
  %idxprom373 = sext i32 %add372 to i64
  %arrayidx374 = getelementptr inbounds double, double* %326, i64 %idxprom373
  %328 = load double, double* %arrayidx374, align 8
  %add375 = fadd double %add363, %328
  store double %add375, double* %sm, align 8
  %329 = load %struct.block*, %struct.block** %bp, align 8
  %array376 = getelementptr inbounds %struct.block, %struct.block* %329, i32 0, i32 11
  %330 = load double****, double***** %array376, align 8
  %331 = load i32, i32* %var.addr, align 4
  %idxprom377 = sext i32 %331 to i64
  %arrayidx378 = getelementptr inbounds double***, double**** %330, i64 %idxprom377
  %332 = load double***, double**** %arrayidx378, align 8
  %333 = load i32, i32* %i, align 4
  %add379 = add nsw i32 %333, 1
  %idxprom380 = sext i32 %add379 to i64
  %arrayidx381 = getelementptr inbounds double**, double*** %332, i64 %idxprom380
  %334 = load double**, double*** %arrayidx381, align 8
  %335 = load i32, i32* %j, align 4
  %sub382 = sub nsw i32 %335, 1
  %idxprom383 = sext i32 %sub382 to i64
  %arrayidx384 = getelementptr inbounds double*, double** %334, i64 %idxprom383
  %336 = load double*, double** %arrayidx384, align 8
  %337 = load i32, i32* %k, align 4
  %sub385 = sub nsw i32 %337, 1
  %idxprom386 = sext i32 %sub385 to i64
  %arrayidx387 = getelementptr inbounds double, double* %336, i64 %idxprom386
  %338 = load double, double* %arrayidx387, align 8
  %339 = load %struct.block*, %struct.block** %bp, align 8
  %array388 = getelementptr inbounds %struct.block, %struct.block* %339, i32 0, i32 11
  %340 = load double****, double***** %array388, align 8
  %341 = load i32, i32* %var.addr, align 4
  %idxprom389 = sext i32 %341 to i64
  %arrayidx390 = getelementptr inbounds double***, double**** %340, i64 %idxprom389
  %342 = load double***, double**** %arrayidx390, align 8
  %343 = load i32, i32* %i, align 4
  %add391 = add nsw i32 %343, 1
  %idxprom392 = sext i32 %add391 to i64
  %arrayidx393 = getelementptr inbounds double**, double*** %342, i64 %idxprom392
  %344 = load double**, double*** %arrayidx393, align 8
  %345 = load i32, i32* %j, align 4
  %sub394 = sub nsw i32 %345, 1
  %idxprom395 = sext i32 %sub394 to i64
  %arrayidx396 = getelementptr inbounds double*, double** %344, i64 %idxprom395
  %346 = load double*, double** %arrayidx396, align 8
  %347 = load i32, i32* %k, align 4
  %idxprom397 = sext i32 %347 to i64
  %arrayidx398 = getelementptr inbounds double, double* %346, i64 %idxprom397
  %348 = load double, double* %arrayidx398, align 8
  %add399 = fadd double %338, %348
  %349 = load %struct.block*, %struct.block** %bp, align 8
  %array400 = getelementptr inbounds %struct.block, %struct.block* %349, i32 0, i32 11
  %350 = load double****, double***** %array400, align 8
  %351 = load i32, i32* %var.addr, align 4
  %idxprom401 = sext i32 %351 to i64
  %arrayidx402 = getelementptr inbounds double***, double**** %350, i64 %idxprom401
  %352 = load double***, double**** %arrayidx402, align 8
  %353 = load i32, i32* %i, align 4
  %add403 = add nsw i32 %353, 1
  %idxprom404 = sext i32 %add403 to i64
  %arrayidx405 = getelementptr inbounds double**, double*** %352, i64 %idxprom404
  %354 = load double**, double*** %arrayidx405, align 8
  %355 = load i32, i32* %j, align 4
  %sub406 = sub nsw i32 %355, 1
  %idxprom407 = sext i32 %sub406 to i64
  %arrayidx408 = getelementptr inbounds double*, double** %354, i64 %idxprom407
  %356 = load double*, double** %arrayidx408, align 8
  %357 = load i32, i32* %k, align 4
  %add409 = add nsw i32 %357, 1
  %idxprom410 = sext i32 %add409 to i64
  %arrayidx411 = getelementptr inbounds double, double* %356, i64 %idxprom410
  %358 = load double, double* %arrayidx411, align 8
  %add412 = fadd double %add399, %358
  %359 = load %struct.block*, %struct.block** %bp, align 8
  %array413 = getelementptr inbounds %struct.block, %struct.block* %359, i32 0, i32 11
  %360 = load double****, double***** %array413, align 8
  %361 = load i32, i32* %var.addr, align 4
  %idxprom414 = sext i32 %361 to i64
  %arrayidx415 = getelementptr inbounds double***, double**** %360, i64 %idxprom414
  %362 = load double***, double**** %arrayidx415, align 8
  %363 = load i32, i32* %i, align 4
  %add416 = add nsw i32 %363, 1
  %idxprom417 = sext i32 %add416 to i64
  %arrayidx418 = getelementptr inbounds double**, double*** %362, i64 %idxprom417
  %364 = load double**, double*** %arrayidx418, align 8
  %365 = load i32, i32* %j, align 4
  %idxprom419 = sext i32 %365 to i64
  %arrayidx420 = getelementptr inbounds double*, double** %364, i64 %idxprom419
  %366 = load double*, double** %arrayidx420, align 8
  %367 = load i32, i32* %k, align 4
  %sub421 = sub nsw i32 %367, 1
  %idxprom422 = sext i32 %sub421 to i64
  %arrayidx423 = getelementptr inbounds double, double* %366, i64 %idxprom422
  %368 = load double, double* %arrayidx423, align 8
  %add424 = fadd double %add412, %368
  %369 = load %struct.block*, %struct.block** %bp, align 8
  %array425 = getelementptr inbounds %struct.block, %struct.block* %369, i32 0, i32 11
  %370 = load double****, double***** %array425, align 8
  %371 = load i32, i32* %var.addr, align 4
  %idxprom426 = sext i32 %371 to i64
  %arrayidx427 = getelementptr inbounds double***, double**** %370, i64 %idxprom426
  %372 = load double***, double**** %arrayidx427, align 8
  %373 = load i32, i32* %i, align 4
  %add428 = add nsw i32 %373, 1
  %idxprom429 = sext i32 %add428 to i64
  %arrayidx430 = getelementptr inbounds double**, double*** %372, i64 %idxprom429
  %374 = load double**, double*** %arrayidx430, align 8
  %375 = load i32, i32* %j, align 4
  %idxprom431 = sext i32 %375 to i64
  %arrayidx432 = getelementptr inbounds double*, double** %374, i64 %idxprom431
  %376 = load double*, double** %arrayidx432, align 8
  %377 = load i32, i32* %k, align 4
  %idxprom433 = sext i32 %377 to i64
  %arrayidx434 = getelementptr inbounds double, double* %376, i64 %idxprom433
  %378 = load double, double* %arrayidx434, align 8
  %add435 = fadd double %add424, %378
  %379 = load %struct.block*, %struct.block** %bp, align 8
  %array436 = getelementptr inbounds %struct.block, %struct.block* %379, i32 0, i32 11
  %380 = load double****, double***** %array436, align 8
  %381 = load i32, i32* %var.addr, align 4
  %idxprom437 = sext i32 %381 to i64
  %arrayidx438 = getelementptr inbounds double***, double**** %380, i64 %idxprom437
  %382 = load double***, double**** %arrayidx438, align 8
  %383 = load i32, i32* %i, align 4
  %add439 = add nsw i32 %383, 1
  %idxprom440 = sext i32 %add439 to i64
  %arrayidx441 = getelementptr inbounds double**, double*** %382, i64 %idxprom440
  %384 = load double**, double*** %arrayidx441, align 8
  %385 = load i32, i32* %j, align 4
  %idxprom442 = sext i32 %385 to i64
  %arrayidx443 = getelementptr inbounds double*, double** %384, i64 %idxprom442
  %386 = load double*, double** %arrayidx443, align 8
  %387 = load i32, i32* %k, align 4
  %add444 = add nsw i32 %387, 1
  %idxprom445 = sext i32 %add444 to i64
  %arrayidx446 = getelementptr inbounds double, double* %386, i64 %idxprom445
  %388 = load double, double* %arrayidx446, align 8
  %add447 = fadd double %add435, %388
  %389 = load %struct.block*, %struct.block** %bp, align 8
  %array448 = getelementptr inbounds %struct.block, %struct.block* %389, i32 0, i32 11
  %390 = load double****, double***** %array448, align 8
  %391 = load i32, i32* %var.addr, align 4
  %idxprom449 = sext i32 %391 to i64
  %arrayidx450 = getelementptr inbounds double***, double**** %390, i64 %idxprom449
  %392 = load double***, double**** %arrayidx450, align 8
  %393 = load i32, i32* %i, align 4
  %add451 = add nsw i32 %393, 1
  %idxprom452 = sext i32 %add451 to i64
  %arrayidx453 = getelementptr inbounds double**, double*** %392, i64 %idxprom452
  %394 = load double**, double*** %arrayidx453, align 8
  %395 = load i32, i32* %j, align 4
  %add454 = add nsw i32 %395, 1
  %idxprom455 = sext i32 %add454 to i64
  %arrayidx456 = getelementptr inbounds double*, double** %394, i64 %idxprom455
  %396 = load double*, double** %arrayidx456, align 8
  %397 = load i32, i32* %k, align 4
  %sub457 = sub nsw i32 %397, 1
  %idxprom458 = sext i32 %sub457 to i64
  %arrayidx459 = getelementptr inbounds double, double* %396, i64 %idxprom458
  %398 = load double, double* %arrayidx459, align 8
  %add460 = fadd double %add447, %398
  %399 = load %struct.block*, %struct.block** %bp, align 8
  %array461 = getelementptr inbounds %struct.block, %struct.block* %399, i32 0, i32 11
  %400 = load double****, double***** %array461, align 8
  %401 = load i32, i32* %var.addr, align 4
  %idxprom462 = sext i32 %401 to i64
  %arrayidx463 = getelementptr inbounds double***, double**** %400, i64 %idxprom462
  %402 = load double***, double**** %arrayidx463, align 8
  %403 = load i32, i32* %i, align 4
  %add464 = add nsw i32 %403, 1
  %idxprom465 = sext i32 %add464 to i64
  %arrayidx466 = getelementptr inbounds double**, double*** %402, i64 %idxprom465
  %404 = load double**, double*** %arrayidx466, align 8
  %405 = load i32, i32* %j, align 4
  %add467 = add nsw i32 %405, 1
  %idxprom468 = sext i32 %add467 to i64
  %arrayidx469 = getelementptr inbounds double*, double** %404, i64 %idxprom468
  %406 = load double*, double** %arrayidx469, align 8
  %407 = load i32, i32* %k, align 4
  %idxprom470 = sext i32 %407 to i64
  %arrayidx471 = getelementptr inbounds double, double* %406, i64 %idxprom470
  %408 = load double, double* %arrayidx471, align 8
  %add472 = fadd double %add460, %408
  %409 = load %struct.block*, %struct.block** %bp, align 8
  %array473 = getelementptr inbounds %struct.block, %struct.block* %409, i32 0, i32 11
  %410 = load double****, double***** %array473, align 8
  %411 = load i32, i32* %var.addr, align 4
  %idxprom474 = sext i32 %411 to i64
  %arrayidx475 = getelementptr inbounds double***, double**** %410, i64 %idxprom474
  %412 = load double***, double**** %arrayidx475, align 8
  %413 = load i32, i32* %i, align 4
  %add476 = add nsw i32 %413, 1
  %idxprom477 = sext i32 %add476 to i64
  %arrayidx478 = getelementptr inbounds double**, double*** %412, i64 %idxprom477
  %414 = load double**, double*** %arrayidx478, align 8
  %415 = load i32, i32* %j, align 4
  %add479 = add nsw i32 %415, 1
  %idxprom480 = sext i32 %add479 to i64
  %arrayidx481 = getelementptr inbounds double*, double** %414, i64 %idxprom480
  %416 = load double*, double** %arrayidx481, align 8
  %417 = load i32, i32* %k, align 4
  %add482 = add nsw i32 %417, 1
  %idxprom483 = sext i32 %add482 to i64
  %arrayidx484 = getelementptr inbounds double, double* %416, i64 %idxprom483
  %418 = load double, double* %arrayidx484, align 8
  %add485 = fadd double %add472, %418
  store double %add485, double* %sf, align 8
  %419 = load double, double* %sb, align 8
  %420 = load double, double* %sm, align 8
  %add486 = fadd double %419, %420
  %421 = load double, double* %sf, align 8
  %add487 = fadd double %add486, %421
  %div488 = fdiv double %add487, 2.700000e+01
  %422 = load i32, i32* %i, align 4
  %idxprom489 = sext i32 %422 to i64
  %423 = mul nuw i64 %3, %5
  %424 = mul nsw i64 %idxprom489, %423
  %arrayidx490 = getelementptr inbounds double, double* %vla, i64 %424
  %425 = load i32, i32* %j, align 4
  %idxprom491 = sext i32 %425 to i64
  %426 = mul nsw i64 %idxprom491, %5
  %arrayidx492 = getelementptr inbounds double, double* %arrayidx490, i64 %426
  %427 = load i32, i32* %k, align 4
  %idxprom493 = sext i32 %427 to i64
  %arrayidx494 = getelementptr inbounds double, double* %arrayidx492, i64 %idxprom493
  store double %div488, double* %arrayidx494, align 8
  br label %for.inc495

for.inc495:                                       ; preds = %for.body164
  %428 = load i32, i32* %k, align 4
  %inc496 = add nsw i32 %428, 1
  store i32 %inc496, i32* %k, align 4
  br label %for.cond162

for.end497:                                       ; preds = %for.cond162
  br label %for.inc498

for.inc498:                                       ; preds = %for.end497
  %429 = load i32, i32* %j, align 4
  %inc499 = add nsw i32 %429, 1
  store i32 %inc499, i32* %j, align 4
  br label %for.cond159

for.end500:                                       ; preds = %for.cond159
  br label %for.inc501

for.inc501:                                       ; preds = %for.end500
  %430 = load i32, i32* %i, align 4
  %inc502 = add nsw i32 %430, 1
  store i32 %inc502, i32* %i, align 4
  br label %for.cond156

for.end503:                                       ; preds = %for.cond156
  store i32 1, i32* %i, align 4
  br label %for.cond504

for.cond504:                                      ; preds = %for.inc534, %for.end503
  %431 = load i32, i32* %i, align 4
  %432 = load i32, i32* @x_block_size, align 4
  %cmp505 = icmp sle i32 %431, %432
  br i1 %cmp505, label %for.body506, label %for.end536

for.body506:                                      ; preds = %for.cond504
  store i32 1, i32* %j, align 4
  br label %for.cond507

for.cond507:                                      ; preds = %for.inc531, %for.body506
  %433 = load i32, i32* %j, align 4
  %434 = load i32, i32* @y_block_size, align 4
  %cmp508 = icmp sle i32 %433, %434
  br i1 %cmp508, label %for.body509, label %for.end533

for.body509:                                      ; preds = %for.cond507
  store i32 1, i32* %k, align 4
  br label %for.cond510

for.cond510:                                      ; preds = %for.inc528, %for.body509
  %435 = load i32, i32* %k, align 4
  %436 = load i32, i32* @z_block_size, align 4
  %cmp511 = icmp sle i32 %435, %436
  br i1 %cmp511, label %for.body512, label %for.end530

for.body512:                                      ; preds = %for.cond510
  %437 = load i32, i32* %i, align 4
  %idxprom513 = sext i32 %437 to i64
  %438 = mul nuw i64 %3, %5
  %439 = mul nsw i64 %idxprom513, %438
  %arrayidx514 = getelementptr inbounds double, double* %vla, i64 %439
  %440 = load i32, i32* %j, align 4
  %idxprom515 = sext i32 %440 to i64
  %441 = mul nsw i64 %idxprom515, %5
  %arrayidx516 = getelementptr inbounds double, double* %arrayidx514, i64 %441
  %442 = load i32, i32* %k, align 4
  %idxprom517 = sext i32 %442 to i64
  %arrayidx518 = getelementptr inbounds double, double* %arrayidx516, i64 %idxprom517
  %443 = load double, double* %arrayidx518, align 8
  %444 = load %struct.block*, %struct.block** %bp, align 8
  %array519 = getelementptr inbounds %struct.block, %struct.block* %444, i32 0, i32 11
  %445 = load double****, double***** %array519, align 8
  %446 = load i32, i32* %var.addr, align 4
  %idxprom520 = sext i32 %446 to i64
  %arrayidx521 = getelementptr inbounds double***, double**** %445, i64 %idxprom520
  %447 = load double***, double**** %arrayidx521, align 8
  %448 = load i32, i32* %i, align 4
  %idxprom522 = sext i32 %448 to i64
  %arrayidx523 = getelementptr inbounds double**, double*** %447, i64 %idxprom522
  %449 = load double**, double*** %arrayidx523, align 8
  %450 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %450 to i64
  %arrayidx525 = getelementptr inbounds double*, double** %449, i64 %idxprom524
  %451 = load double*, double** %arrayidx525, align 8
  %452 = load i32, i32* %k, align 4
  %idxprom526 = sext i32 %452 to i64
  %arrayidx527 = getelementptr inbounds double, double* %451, i64 %idxprom526
  store double %443, double* %arrayidx527, align 8
  br label %for.inc528

for.inc528:                                       ; preds = %for.body512
  %453 = load i32, i32* %k, align 4
  %inc529 = add nsw i32 %453, 1
  store i32 %inc529, i32* %k, align 4
  br label %for.cond510

for.end530:                                       ; preds = %for.cond510
  br label %for.inc531

for.inc531:                                       ; preds = %for.end530
  %454 = load i32, i32* %j, align 4
  %inc532 = add nsw i32 %454, 1
  store i32 %inc532, i32* %j, align 4
  br label %for.cond507

for.end533:                                       ; preds = %for.cond507
  br label %for.inc534

for.inc534:                                       ; preds = %for.end533
  %455 = load i32, i32* %i, align 4
  %inc535 = add nsw i32 %455, 1
  store i32 %inc535, i32* %i, align 4
  br label %for.cond504

for.end536:                                       ; preds = %for.cond504
  br label %if.end537

if.end537:                                        ; preds = %for.end536, %for.body147
  br label %for.inc538

for.inc538:                                       ; preds = %if.end537
  %456 = load i32, i32* %in, align 4
  %inc539 = add nsw i32 %456, 1
  store i32 %inc539, i32* %in, align 4
  br label %for.cond142

for.end540:                                       ; preds = %for.cond142
  br label %if.end541

if.end541:                                        ; preds = %for.end540, %for.end141
  %457 = load i8*, i8** %saved_stack, align 8
  call void @llvm.stackrestore(i8* %457)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @reduce_blocks() #0 {
entry:
  %l = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %p = alloca i32, align 4
  %c = alloca i32, align 4
  %num_comb = alloca i32, align 4
  %comb = alloca i32, align 4
  %num_parents = alloca i32, align 4
  %nm_t = alloca i32, align 4
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %pp = alloca %struct.parent*, align 8
  store i32 0, i32* %nm_t, align 4
  store double 0.000000e+00, double* %t3, align 8
  %call = call double @timer()
  store double %call, double* %t1, align 8
  call void @zero_refine()
  %0 = load i32, i32* @target_active, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @global_active, align 4
  %2 = load i32, i32* @num_pes, align 4
  %3 = load i32, i32* @target_active, align 4
  %mul = mul nsw i32 %2, %3
  %sub = sub nsw i32 %1, %mul
  %add = add nsw i32 %sub, 3
  %div = sdiv i32 %add, 7
  store i32 %div, i32* %num_comb, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load i32, i32* @global_active, align 4
  %5 = load i32, i32* @num_pes, align 4
  %6 = load i32, i32* @target_active, align 4
  %mul1 = mul nsw i32 %5, %6
  %sub2 = sub nsw i32 %4, %mul1
  %div3 = sdiv i32 %sub2, 7
  store i32 %div3, i32* %num_comb, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %comb, align 4
  %7 = load i32, i32* @num_refine, align 4
  %sub4 = sub nsw i32 %7, 1
  store i32 %sub4, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc58, %if.end
  %8 = load i32, i32* %comb, align 4
  %9 = load i32, i32* %num_comb, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end59

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %p, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %p, align 4
  %11 = load i32, i32* @max_active_parent, align 4
  %cmp6 = icmp slt i32 %10, %11
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %12 = load %struct.parent*, %struct.parent** @parents, align 8
  %13 = load i32, i32* %p, align 4
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr inbounds %struct.parent, %struct.parent* %12, i64 %idxprom
  store %struct.parent* %arrayidx, %struct.parent** %pp, align 8
  %number = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx, i32 0, i32 0
  %14 = load i32, i32* %number, align 4
  %cmp8 = icmp sge i32 %14, 0
  br i1 %cmp8, label %if.then9, label %if.end13

if.then9:                                         ; preds = %for.body7
  %15 = load %struct.parent*, %struct.parent** %pp, align 8
  %level = getelementptr inbounds %struct.parent, %struct.parent* %15, i32 0, i32 1
  %16 = load i32, i32* %level, align 4
  %17 = load i32, i32* %l, align 4
  %cmp10 = icmp eq i32 %16, %17
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.then9
  %18 = load i32, i32* %num_parents, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %num_parents, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.then9
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %for.body7
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %19 = load i32, i32* %p, align 4
  %inc14 = add nsw i32 %19, 1
  store i32 %inc14, i32* %p, align 4
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  store i32 0, i32* %p, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc50, %for.end
  %20 = load i32, i32* %p, align 4
  %21 = load i32, i32* @max_active_parent, align 4
  %cmp16 = icmp slt i32 %20, %21
  br i1 %cmp16, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond15
  %22 = load i32, i32* %comb, align 4
  %23 = load i32, i32* %num_comb, align 4
  %cmp17 = icmp slt i32 %22, %23
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond15
  %24 = phi i1 [ false, %for.cond15 ], [ %cmp17, %land.rhs ]
  br i1 %24, label %for.body18, label %for.end52

for.body18:                                       ; preds = %land.end
  %25 = load %struct.parent*, %struct.parent** @parents, align 8
  %26 = load i32, i32* %p, align 4
  %idxprom19 = sext i32 %26 to i64
  %arrayidx20 = getelementptr inbounds %struct.parent, %struct.parent* %25, i64 %idxprom19
  store %struct.parent* %arrayidx20, %struct.parent** %pp, align 8
  %number21 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx20, i32 0, i32 0
  %27 = load i32, i32* %number21, align 4
  %cmp22 = icmp sge i32 %27, 0
  br i1 %cmp22, label %if.then23, label %if.end49

if.then23:                                        ; preds = %for.body18
  %28 = load %struct.parent*, %struct.parent** %pp, align 8
  %level24 = getelementptr inbounds %struct.parent, %struct.parent* %28, i32 0, i32 1
  %29 = load i32, i32* %level24, align 4
  %30 = load i32, i32* %l, align 4
  %cmp25 = icmp eq i32 %29, %30
  br i1 %cmp25, label %if.then26, label %if.end48

if.then26:                                        ; preds = %if.then23
  %31 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine = getelementptr inbounds %struct.parent, %struct.parent* %31, i32 0, i32 5
  store i32 -1, i32* %refine, align 4
  %32 = load i32, i32* %comb, align 4
  %inc27 = add nsw i32 %32, 1
  store i32 %inc27, i32* %comb, align 4
  store i32 0, i32* %c, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc45, %if.then26
  %33 = load i32, i32* %c, align 4
  %cmp29 = icmp slt i32 %33, 8
  br i1 %cmp29, label %for.body30, label %for.end47

for.body30:                                       ; preds = %for.cond28
  %34 = load %struct.parent*, %struct.parent** %pp, align 8
  %child_node = getelementptr inbounds %struct.parent, %struct.parent* %34, i32 0, i32 7
  %35 = load i32, i32* %c, align 4
  %idxprom31 = sext i32 %35 to i64
  %arrayidx32 = getelementptr inbounds [8 x i32], [8 x i32]* %child_node, i64 0, i64 %idxprom31
  %36 = load i32, i32* %arrayidx32, align 4
  %37 = load i32, i32* @my_pe, align 4
  %cmp33 = icmp eq i32 %36, %37
  br i1 %cmp33, label %land.lhs.true, label %if.end44

land.lhs.true:                                    ; preds = %for.body30
  %38 = load %struct.parent*, %struct.parent** %pp, align 8
  %child = getelementptr inbounds %struct.parent, %struct.parent* %38, i32 0, i32 6
  %39 = load i32, i32* %c, align 4
  %idxprom34 = sext i32 %39 to i64
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %child, i64 0, i64 %idxprom34
  %40 = load i32, i32* %arrayidx35, align 4
  %cmp36 = icmp sge i32 %40, 0
  br i1 %cmp36, label %if.then37, label %if.end44

if.then37:                                        ; preds = %land.lhs.true
  %41 = load %struct.block*, %struct.block** @blocks, align 8
  %42 = load %struct.parent*, %struct.parent** %pp, align 8
  %child38 = getelementptr inbounds %struct.parent, %struct.parent* %42, i32 0, i32 6
  %43 = load i32, i32* %c, align 4
  %idxprom39 = sext i32 %43 to i64
  %arrayidx40 = getelementptr inbounds [8 x i32], [8 x i32]* %child38, i64 0, i64 %idxprom39
  %44 = load i32, i32* %arrayidx40, align 4
  %idxprom41 = sext i32 %44 to i64
  %arrayidx42 = getelementptr inbounds %struct.block, %struct.block* %41, i64 %idxprom41
  %refine43 = getelementptr inbounds %struct.block, %struct.block* %arrayidx42, i32 0, i32 2
  store i32 -1, i32* %refine43, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then37, %land.lhs.true, %for.body30
  br label %for.inc45

for.inc45:                                        ; preds = %if.end44
  %45 = load i32, i32* %c, align 4
  %inc46 = add nsw i32 %45, 1
  store i32 %inc46, i32* %c, align 4
  br label %for.cond28

for.end47:                                        ; preds = %for.cond28
  br label %if.end48

if.end48:                                         ; preds = %for.end47, %if.then23
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %for.body18
  br label %for.inc50

for.inc50:                                        ; preds = %if.end49
  %46 = load i32, i32* %p, align 4
  %inc51 = add nsw i32 %46, 1
  store i32 %inc51, i32* %p, align 4
  br label %for.cond15

for.end52:                                        ; preds = %land.end
  %call53 = call double @timer()
  %47 = load double, double* %t2, align 8
  %sub54 = fsub double %call53, %47
  store double %sub54, double* %t2, align 8
  call void @consolidate_blocks()
  %call55 = call double @timer()
  %48 = load double, double* %t2, align 8
  %sub56 = fsub double %call55, %48
  %49 = load double, double* %t3, align 8
  %add57 = fadd double %49, %sub56
  store double %add57, double* %t3, align 8
  br label %for.inc58

for.inc58:                                        ; preds = %for.end52
  %50 = load i32, i32* %l, align 4
  %dec = add nsw i32 %50, -1
  store i32 %dec, i32* %l, align 4
  br label %for.cond

for.end59:                                        ; preds = %for.cond
  %call60 = call double @timer()
  %51 = load double, double* %t1, align 8
  %sub61 = fsub double %call60, %51
  %52 = load double, double* @timer_target_rb, align 8
  %add62 = fadd double %52, %sub61
  store double %add62, double* @timer_target_rb, align 8
  %call63 = call double @timer()
  %53 = load double, double* %t1, align 8
  %sub64 = fsub double %call63, %53
  %54 = load double, double* %t3, align 8
  %sub65 = fsub double %sub64, %54
  %55 = load double, double* @timer_target_dc, align 8
  %add66 = fadd double %55, %sub65
  store double %add66, double* @timer_target_dc, align 8
  %56 = load double, double* %t3, align 8
  %57 = load double, double* @timer_target_cb, align 8
  %add67 = fadd double %57, %56
  store double %add67, double* @timer_target_cb, align 8
  %58 = load i32, i32* %nm_t, align 4
  ret i32 %58
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @zero_refine() #0 {
entry:
  %n = alloca i32, align 4
  %c = alloca i32, align 4
  %in = alloca i32, align 4
  %bp = alloca %struct.block*, align 8
  %pp = alloca %struct.parent*, align 8
  store i32 0, i32* %in, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %0 = load i32, i32* %in, align 4
  %1 = load i32*, i32** @sorted_index, align 8
  %2 = load i32, i32* @num_refine, align 4
  %add = add nsw i32 %2, 1
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %cmp = icmp slt i32 %0, %3
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %4 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %5 = load i32, i32* %in, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %4, i64 %idxprom1
  %n3 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx2, i32 0, i32 1
  %6 = load i32, i32* %n3, align 4
  store i32 %6, i32* %n, align 4
  %7 = load %struct.block*, %struct.block** @blocks, align 8
  %8 = load i32, i32* %n, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds %struct.block, %struct.block* %7, i64 %idxprom4
  store %struct.block* %arrayidx5, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx5, i32 0, i32 0
  %9 = load i32, i32* %number, align 8
  %cmp6 = icmp sge i32 %9, 0
  br i1 %cmp6, label %if.then, label %if.end16

if.then:                                          ; preds = %for.body
  %10 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %10, i32 0, i32 2
  store i32 0, i32* %refine, align 8
  store i32 0, i32* %c, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then
  %11 = load i32, i32* %c, align 4
  %cmp8 = icmp slt i32 %11, 6
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %12 = load %struct.block*, %struct.block** %bp, align 8
  %nei_level = getelementptr inbounds %struct.block, %struct.block* %12, i32 0, i32 8
  %13 = load i32, i32* %c, align 4
  %idxprom10 = sext i32 %13 to i64
  %arrayidx11 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_level, i64 0, i64 %idxprom10
  %14 = load i32, i32* %arrayidx11, align 4
  %cmp12 = icmp sge i32 %14, 0
  br i1 %cmp12, label %if.then13, label %if.end

if.then13:                                        ; preds = %for.body9
  %15 = load %struct.block*, %struct.block** %bp, align 8
  %nei_refine = getelementptr inbounds %struct.block, %struct.block* %15, i32 0, i32 7
  %16 = load i32, i32* %c, align 4
  %idxprom14 = sext i32 %16 to i64
  %arrayidx15 = getelementptr inbounds [6 x i32], [6 x i32]* %nei_refine, i64 0, i64 %idxprom14
  store i32 0, i32* %arrayidx15, align 4
  br label %if.end

if.end:                                           ; preds = %if.then13, %for.body9
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %c, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %c, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %if.end16

if.end16:                                         ; preds = %for.end, %for.body
  br label %for.inc17

for.inc17:                                        ; preds = %if.end16
  %18 = load i32, i32* %in, align 4
  %inc18 = add nsw i32 %18, 1
  store i32 %inc18, i32* %in, align 4
  br label %for.cond

for.end19:                                        ; preds = %for.cond
  store i32 0, i32* %n, align 4
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc30, %for.end19
  %19 = load i32, i32* %n, align 4
  %20 = load i32, i32* @max_active_parent, align 4
  %cmp21 = icmp slt i32 %19, %20
  br i1 %cmp21, label %for.body22, label %for.end32

for.body22:                                       ; preds = %for.cond20
  %21 = load %struct.parent*, %struct.parent** @parents, align 8
  %22 = load i32, i32* %n, align 4
  %idxprom23 = sext i32 %22 to i64
  %arrayidx24 = getelementptr inbounds %struct.parent, %struct.parent* %21, i64 %idxprom23
  store %struct.parent* %arrayidx24, %struct.parent** %pp, align 8
  %number25 = getelementptr inbounds %struct.parent, %struct.parent* %arrayidx24, i32 0, i32 0
  %23 = load i32, i32* %number25, align 4
  %cmp26 = icmp sge i32 %23, 0
  br i1 %cmp26, label %if.then27, label %if.end29

if.then27:                                        ; preds = %for.body22
  %24 = load %struct.parent*, %struct.parent** %pp, align 8
  %refine28 = getelementptr inbounds %struct.parent, %struct.parent* %24, i32 0, i32 5
  store i32 0, i32* %refine28, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %for.body22
  br label %for.inc30

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %n, align 4
  %inc31 = add nsw i32 %25, 1
  store i32 %inc31, i32* %n, align 4
  br label %for.cond20

for.end32:                                        ; preds = %for.cond20
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @add_blocks() #0 {
entry:
  %l = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n = alloca i32, align 4
  %in = alloca i32, align 4
  %num_split = alloca i32, align 4
  %split = alloca i32, align 4
  %t1 = alloca double, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %bp = alloca %struct.block*, align 8
  store double 0.000000e+00, double* %t3, align 8
  %call = call double @timer()
  store double %call, double* %t1, align 8
  %0 = load i32, i32* @target_active, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32, i32* @num_pes, align 4
  %2 = load i32, i32* @target_active, align 4
  %mul = mul nsw i32 %1, %2
  %add = add nsw i32 %mul, 3
  %3 = load i32, i32* @global_active, align 4
  %sub = sub nsw i32 %add, %3
  %div = sdiv i32 %sub, 7
  store i32 %div, i32* %num_split, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %4 = load i32, i32* @num_pes, align 4
  %5 = load i32, i32* @target_active, align 4
  %mul1 = mul nsw i32 %4, %5
  %6 = load i32, i32* @global_active, align 4
  %sub2 = sub nsw i32 %mul1, %6
  %div3 = sdiv i32 %sub2, 7
  store i32 %div3, i32* %num_split, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  store i32 0, i32* %l, align 4
  store i32 0, i32* %split, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc35, %if.end
  %7 = load i32, i32* %split, align 4
  %8 = load i32, i32* %num_split, align 4
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end37

for.body:                                         ; preds = %for.cond
  call void @zero_refine()
  %9 = load i32, i32* @num_refine, align 4
  store i32 %9, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %j, align 4
  %cmp5 = icmp sge i32 %10, 0
  br i1 %cmp5, label %for.body6, label %for.end

for.body6:                                        ; preds = %for.cond4
  %11 = load i32*, i32** @num_blocks, align 8
  %12 = load i32, i32* %j, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds i32, i32* %11, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4
  %tobool7 = icmp ne i32 %13, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %for.body6
  %14 = load i32, i32* %j, align 4
  store i32 %14, i32* @cur_max_level, align 4
  br label %for.end

if.end9:                                          ; preds = %for.body6
  br label %for.inc

for.inc:                                          ; preds = %if.end9
  %15 = load i32, i32* %j, align 4
  %dec = add nsw i32 %15, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond4

for.end:                                          ; preds = %if.then8, %for.cond4
  store i32 0, i32* %in, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc28, %for.end
  %16 = load i32, i32* %split, align 4
  %17 = load i32, i32* %num_split, align 4
  %cmp11 = icmp slt i32 %16, %17
  br i1 %cmp11, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond10
  %18 = load i32, i32* %in, align 4
  %19 = load i32*, i32** @sorted_index, align 8
  %20 = load i32, i32* @num_refine, align 4
  %add12 = add nsw i32 %20, 1
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %19, i64 %idxprom13
  %21 = load i32, i32* %arrayidx14, align 4
  %cmp15 = icmp slt i32 %18, %21
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond10
  %22 = phi i1 [ false, %for.cond10 ], [ %cmp15, %land.rhs ]
  br i1 %22, label %for.body16, label %for.end30

for.body16:                                       ; preds = %land.end
  %23 = load %struct.sorted_block*, %struct.sorted_block** @sorted_list, align 8
  %24 = load i32, i32* %in, align 4
  %idxprom17 = sext i32 %24 to i64
  %arrayidx18 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %23, i64 %idxprom17
  %n19 = getelementptr inbounds %struct.sorted_block, %struct.sorted_block* %arrayidx18, i32 0, i32 1
  %25 = load i32, i32* %n19, align 4
  store i32 %25, i32* %n, align 4
  %26 = load %struct.block*, %struct.block** @blocks, align 8
  %27 = load i32, i32* %n, align 4
  %idxprom20 = sext i32 %27 to i64
  %arrayidx21 = getelementptr inbounds %struct.block, %struct.block* %26, i64 %idxprom20
  store %struct.block* %arrayidx21, %struct.block** %bp, align 8
  %number = getelementptr inbounds %struct.block, %struct.block* %arrayidx21, i32 0, i32 0
  %28 = load i32, i32* %number, align 8
  %cmp22 = icmp sge i32 %28, 0
  br i1 %cmp22, label %if.then23, label %if.end27

if.then23:                                        ; preds = %for.body16
  %29 = load %struct.block*, %struct.block** %bp, align 8
  %level = getelementptr inbounds %struct.block, %struct.block* %29, i32 0, i32 1
  %30 = load i32, i32* %level, align 4
  %31 = load i32, i32* %l, align 4
  %cmp24 = icmp eq i32 %30, %31
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %if.then23
  %32 = load %struct.block*, %struct.block** %bp, align 8
  %refine = getelementptr inbounds %struct.block, %struct.block* %32, i32 0, i32 2
  store i32 1, i32* %refine, align 8
  %33 = load i32, i32* %split, align 4
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %split, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.then23
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %for.body16
  br label %for.inc28

for.inc28:                                        ; preds = %if.end27
  %34 = load i32, i32* %in, align 4
  %inc29 = add nsw i32 %34, 1
  store i32 %inc29, i32* %in, align 4
  br label %for.cond10

for.end30:                                        ; preds = %land.end
  %call31 = call double @timer()
  store double %call31, double* %t2, align 8
  call void @split_blocks()
  %call32 = call double @timer()
  %35 = load double, double* %t2, align 8
  %sub33 = fsub double %call32, %35
  %36 = load double, double* %t3, align 8
  %add34 = fadd double %36, %sub33
  store double %add34, double* %t3, align 8
  br label %for.inc35

for.inc35:                                        ; preds = %for.end30
  %37 = load i32, i32* %l, align 4
  %inc36 = add nsw i32 %37, 1
  store i32 %inc36, i32* %l, align 4
  br label %for.cond

for.end37:                                        ; preds = %for.cond
  %call38 = call double @timer()
  %38 = load double, double* %t1, align 8
  %sub39 = fsub double %call38, %38
  %39 = load double, double* @timer_target_ab, align 8
  %add40 = fadd double %39, %sub39
  store double %add40, double* @timer_target_ab, align 8
  %call41 = call double @timer()
  %40 = load double, double* %t1, align 8
  %sub42 = fsub double %call41, %40
  %41 = load double, double* %t3, align 8
  %sub43 = fsub double %sub42, %41
  %42 = load double, double* @timer_target_da, align 8
  %add44 = fadd double %42, %sub43
  store double %add44, double* @timer_target_da, align 8
  %43 = load double, double* %t3, align 8
  %44 = load double, double* @timer_target_sb, align 8
  %add45 = fadd double %44, %43
  store double %add45, double* @timer_target_sb, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @timer() #0 {
entry:
  %call = call i64 @clock() #5
  %conv = sitofp i64 %call to double
  %div = fdiv double %conv, 1.000000e+06
  ret double %div
}

; Function Attrs: nounwind
declare dso_local i64 @clock() #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @ma_malloc(i64 %size, i8* %file, i32 %line) #0 {
entry:
  %size.addr = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %file, i8** %file.addr, align 8
  store i32 %line, i32* %line.addr, align 4
  %0 = load i64, i64* %size.addr, align 8
  %call = call noalias i8* @malloc(i64 %0) #5
  store i8* %call, i8** %ptr, align 8
  %1 = load i8*, i8** %ptr, align 8
  %cmp = icmp eq i8* %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %file.addr, align 8
  %3 = load i32, i32* %line.addr, align 4
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.214, i64 0, i64 0), i8* %2, i32 %3)
  call void @exit(i32 -1) #8
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i32, i32* @counter_malloc, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* @counter_malloc, align 4
  %5 = load i64, i64* %size.addr, align 8
  %conv = uitofp i64 %5 to double
  %6 = load double, double* @size_malloc, align 8
  %add = fadd double %6, %conv
  store double %add, double* @size_malloc, align 8
  %7 = load i8*, i8** %ptr, align 8
  ret i8* %7
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #6

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 9.0.0 (https://github.com/llvm/llvm-project.git 5917097ca4f32811a55cc637ad8556143497c1e6)"}
!1 = !{i32 1, !"wchar_size", i32 4}
